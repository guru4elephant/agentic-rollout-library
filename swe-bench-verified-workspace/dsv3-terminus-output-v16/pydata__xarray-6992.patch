diff --git a/debug_drop_variables.py b/debug_drop_variables.py
new file mode 100644
index 00000000..a66404ee
--- /dev/null
+++ b/debug_drop_variables.py
@@ -0,0 +1,26 @@
+import xarray as xr
+
+print("Debugging drop_variables...")
+
+# Create the dataset
+ds = xr.Dataset(coords={"a": ("x", [1, 2, 3]), "b": ("x", ['a', 'b', 'c'])})
+ds_indexed = ds.set_index(z=['a', 'b'])
+
+print("Before reset_index:")
+print(f"  _variables keys: {list(ds_indexed._variables.keys())}")
+print(f"  _coord_names: {ds_indexed._coord_names}")
+
+# Let's monkey patch to see what drop_variables contains
+original_reset_index = ds_indexed.reset_index
+
+def debug_reset_index(*args, **kwargs):
+    result = original_reset_index(*args, **kwargs)
+    print(f"drop_variables: {kwargs.get('drop_variables', 'not found')}")
+    return result
+
+ds_indexed.reset_index = debug_reset_index
+
+try:
+    ds_reset = ds_indexed.reset_index("z", drop=True)
+except Exception as e:
+    print(f"Error: {e}")
\ No newline at end of file
diff --git a/debug_issue.py b/debug_issue.py
new file mode 100644
index 00000000..d43e0469
--- /dev/null
+++ b/debug_issue.py
@@ -0,0 +1,33 @@
+import xarray as xr
+
+print("Debugging the issue step by step...")
+
+# Step 1: Create the dataset
+ds = xr.Dataset(coords={"a": ("x", [1, 2, 3]), "b": ("x", ['a', 'b', 'c'])})
+print("Original dataset:")
+print(f"  _variables keys: {list(ds._variables.keys())}")
+print(f"  _coord_names: {ds._coord_names}")
+print(f"  data_vars len: {len(ds.data_vars)}")
+
+# Step 2: Set index
+ds_indexed = ds.set_index(z=['a', 'b'])
+print("\nAfter set_index:")
+print(f"  _variables keys: {list(ds_indexed._variables.keys())}")
+print(f"  _coord_names: {ds_indexed._coord_names}")
+print(f"  data_vars len: {len(ds_indexed.data_vars)}")
+
+# Step 3: Reset index with drop=True
+ds_reset = ds_indexed.reset_index("z", drop=True)
+print("\nAfter reset_index with drop=True:")
+print(f"  _variables keys: {list(ds_reset._variables.keys())}")
+print(f"  _coord_names: {ds_reset._coord_names}")
+print(f"  data_vars len: {len(ds_reset.data_vars)}")
+
+# This should trigger the error
+try:
+    print("\nTrying to print the dataset (should trigger error):")
+    print(ds_reset)
+except Exception as e:
+    print(f"Error: {e}")
+    import traceback
+    traceback.print_exc()
\ No newline at end of file
diff --git a/final_test.py b/final_test.py
new file mode 100644
index 00000000..ed82a1da
--- /dev/null
+++ b/final_test.py
@@ -0,0 +1,49 @@
+import xarray as xr
+
+print("Final comprehensive test...")
+
+# Test 1: Original issue from GitHub
+print("\n=== Test 1: Original GitHub Issue ===")
+ds = xr.Dataset(coords={"a": ("x", [1, 2, 3]), "b": ("x", ['a', 'b', 'c'])})
+result = ds.set_index(z=['a', 'b']).reset_index("z", drop=True)
+print(f"Success! data_vars len: {len(result.data_vars)}")
+print(result)
+
+# Test 2: Multiple coordinate operations
+print("\n=== Test 2: Multiple Operations ===")
+ds2 = xr.Dataset(
+    coords={"a": ("x", [1, 2, 3]), "b": ("x", ['a', 'b', 'c']), "c": ("x", [0.1, 0.2, 0.3])},
+    data_vars={"temp": ("x", [20, 21, 22])}
+)
+result2 = ds2.set_index(z=['a', 'b']).reset_index("z", drop=True)
+print(f"Success! data_vars len: {len(result2.data_vars)}")
+print(f"data_vars keys: {list(result2.data_vars.keys())}")
+print(result2)
+
+# Test 3: No drop (should work as before)
+print("\n=== Test 3: Reset without drop ===")
+ds3 = xr.Dataset(coords={"a": ("x", [1, 2, 3]), "b": ("x", ['a', 'b', 'c'])})
+result3 = ds3.set_index(z=['a', 'b']).reset_index("z", drop=False)
+print(f"Success! data_vars len: {len(result3.data_vars)}")
+print(result3)
+
+# Test 4: Empty dataset edge case
+print("\n=== Test 4: Empty dataset ===")
+ds4 = xr.Dataset()
+try:
+    result4 = ds4.reset_index("nonexistent", drop=True)
+    print("Unexpected success with empty dataset")
+except Exception as e:
+    print(f"Expected error: {e}")
+
+# Test 5: Verify coordinate names are properly filtered
+print("\n=== Test 5: Coordinate names validation ===")
+ds5 = xr.Dataset(coords={"a": ("x", [1, 2, 3]), "b": ("x", ['a', 'b', 'c'])})
+ds5_indexed = ds5.set_index(z=['a', 'b'])
+print(f"Before reset_index: _coord_names={ds5_indexed._coord_names}, _variables={list(ds5_indexed._variables.keys())}")
+
+ds5_reset = ds5_indexed.reset_index("z", drop=True)
+print(f"After reset_index: _coord_names={ds5_reset._coord_names}, _variables={list(ds5_reset._variables.keys())}")
+print(f"data_vars len calculation: {len(ds5_reset._variables)} - {len(ds5_reset._coord_names)} = {len(ds5_reset.data_vars)}")
+
+print("\n=== All tests completed successfully! ===")
\ No newline at end of file
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 00000000..aa35dd17
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,12 @@
+import xarray as xr
+
+print("Reproducing the issue...")
+try:
+    ds = xr.Dataset(coords={"a": ("x", [1, 2, 3]), "b": ("x", ['a', 'b', 'c'])})
+    result = ds.set_index(z=['a', 'b']).reset_index("z", drop=True)
+    print("Success! No error occurred.")
+    print(result)
+except Exception as e:
+    print(f"Error occurred: {type(e).__name__}: {e}")
+    import traceback
+    traceback.print_exc()
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 00000000..8df1f2d2
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,34 @@
+import xarray as xr
+
+print("Testing edge cases...")
+
+# Test case 1: Multiple indexes, drop some
+print("\nTest 1: Multiple indexes, drop some")
+ds1 = xr.Dataset(coords={"a": ("x", [1, 2, 3]), "b": ("x", ['a', 'b', 'c']), "c": ("x", [0.1, 0.2, 0.3])})
+ds1_indexed = ds1.set_index(z=['a', 'b']).set_index(w=['c'])
+print(f"Before reset_index: _coord_names={ds1_indexed._coord_names}, _variables={list(ds1_indexed._variables.keys())}")
+ds1_reset = ds1_indexed.reset_index("z", drop=True)
+print(f"After reset_index: _coord_names={ds1_reset._coord_names}, _variables={list(ds1_reset._variables.keys())}")
+print(f"data_vars len: {len(ds1_reset.data_vars)}")
+print(ds1_reset)
+
+# Test case 2: Reset without drop (should not change coord_names)
+print("\nTest 2: Reset without drop")
+ds2 = xr.Dataset(coords={"a": ("x", [1, 2, 3]), "b": ("x", ['a', 'b', 'c'])})
+ds2_indexed = ds2.set_index(z=['a', 'b'])
+print(f"Before reset_index: _coord_names={ds2_indexed._coord_names}, _variables={list(ds2_indexed._variables.keys())}")
+ds2_reset = ds2_indexed.reset_index("z", drop=False)
+print(f"After reset_index: _coord_names={ds2_reset._coord_names}, _variables={list(ds2_reset._variables.keys())}")
+print(f"data_vars len: {len(ds2_reset.data_vars)}")
+print(ds2_reset)
+
+# Test case 3: Empty dataset
+print("\nTest 3: Empty dataset")
+ds3 = xr.Dataset()
+try:
+    ds3_reset = ds3.reset_index("nonexistent", drop=True)
+    print("Empty dataset reset_index worked")
+except Exception as e:
+    print(f"Expected error for empty dataset: {e}")
+
+print("\nAll edge cases completed!")
\ No newline at end of file
diff --git a/test_simple_edge_cases.py b/test_simple_edge_cases.py
new file mode 100644
index 00000000..22911748
--- /dev/null
+++ b/test_simple_edge_cases.py
@@ -0,0 +1,26 @@
+import xarray as xr
+
+print("Testing simple edge cases...")
+
+# Test case 1: Original issue reproduction
+print("\nTest 1: Original issue")
+ds = xr.Dataset(coords={"a": ("x", [1, 2, 3]), "b": ("x", ['a', 'b', 'c'])})
+result = ds.set_index(z=['a', 'b']).reset_index("z", drop=True)
+print(f"Success! data_vars len: {len(result.data_vars)}")
+print(result)
+
+# Test case 2: Reset without drop (should work as before)
+print("\nTest 2: Reset without drop")
+ds2 = xr.Dataset(coords={"a": ("x", [1, 2, 3]), "b": ("x", ['a', 'b', 'c'])})
+result2 = ds2.set_index(z=['a', 'b']).reset_index("z", drop=False)
+print(f"Success! data_vars len: {len(result2.data_vars)}")
+print(result2)
+
+# Test case 3: Multiple reset_index operations
+print("\nTest 3: Multiple reset_index operations")
+ds3 = xr.Dataset(coords={"a": ("x", [1, 2, 3]), "b": ("x", ['a', 'b', 'c'])})
+result3 = ds3.set_index(z=['a', 'b']).reset_index("z", drop=True).reset_index("z", drop=True)
+print(f"Success! data_vars len: {len(result3.data_vars)}")
+print(result3)
+
+print("\nAll edge cases completed!")
\ No newline at end of file
diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py
index 620f32f8..d7311f12 100644
--- a/xarray/core/dataset.py
+++ b/xarray/core/dataset.py
@@ -4177,7 +4177,7 @@ class Dataset(
         }
         variables.update(new_variables)
 
-        coord_names = set(new_variables) | self._coord_names
+        coord_names = set(new_variables) | (self._coord_names - set(drop_variables))
 
         return self._replace(variables, coord_names=coord_names, indexes=indexes)