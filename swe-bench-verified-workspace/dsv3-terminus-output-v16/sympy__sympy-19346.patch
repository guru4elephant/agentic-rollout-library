diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..48761bb86d
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,20 @@
+#!/usr/bin/env python3
+
+from sympy import srepr
+from sympy.abc import x, y
+
+print("Testing srepr with list:")
+print(srepr([x, y]))
+
+print("\nTesting srepr with tuple:")
+print(srepr((x, y)))
+
+print("\nTesting srepr with set:")
+print(srepr({x, y}))
+
+print("\nTesting srepr with dict:")
+print(srepr({x: y}))
+
+print("\nExpected behavior:")
+print("srepr({x, y}) should return something like: set([Symbol('x'), Symbol('y')])")
+print("srepr({x: y}) should return something like: {Symbol('x'): Symbol('y')}")
\ No newline at end of file
diff --git a/sympy/printing/repr.py b/sympy/printing/repr.py
index c936a692c0..fe4cbe1c93 100644
--- a/sympy/printing/repr.py
+++ b/sympy/printing/repr.py
@@ -250,6 +250,24 @@ def _print_tuple(self, expr):
         else:
             return "(%s)" % self.reprify(expr, ", ")
 
+    def _print_set(self, expr):
+        if len(expr) == 0:
+            return "set()"
+        return "{%s}" % self.reprify(expr, ", ")
+
+    def _print_frozenset(self, expr):
+        if len(expr) == 0:
+            return "frozenset()"
+        return "frozenset({%s})" % self.reprify(expr, ", ")
+
+    def _print_dict(self, expr):
+        if len(expr) == 0:
+            return "{}"
+        items = []
+        for key, value in expr.items():
+            items.append("%s: %s" % (self._print(key), self._print(value)))
+        return "{%s}" % ", ".join(items)
+
     def _print_WildFunction(self, expr):
         return "%s('%s')" % (expr.__class__.__name__, expr.name)
 
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..1b1930a9b7
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,29 @@
+#!/usr/bin/env python3
+
+from sympy import srepr
+from sympy.abc import x, y, z
+
+print("Testing edge cases for srepr:")
+
+print("\n1. Empty set:")
+print(srepr(set()))
+
+print("\n2. Empty dict:")
+print(srepr({}))
+
+print("\n3. Set with one element:")
+print(srepr({x}))
+
+print("\n4. Dict with one element:")
+print(srepr({x: y}))
+
+print("\n5. Set with multiple elements:")
+print(srepr({x, y, z}))
+
+print("\n6. Dict with multiple elements:")
+print(srepr({x: y, y: z, z: x}))
+
+print("\n7. Nested structures:")
+print("Nested tuple in set:", srepr({(x, y)}))
+print("Nested tuple in dict:", srepr({(x, y): z}))
+print("Nested dict in dict:", srepr({'nested': {x: y}}))
\ No newline at end of file