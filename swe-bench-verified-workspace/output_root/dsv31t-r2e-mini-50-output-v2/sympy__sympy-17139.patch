diff --git a/comprehensive_test.py b/comprehensive_test.py
new file mode 100644
index 0000000000..acad16d356
--- /dev/null
+++ b/comprehensive_test.py
@@ -0,0 +1,72 @@
+#!/usr/bin/env python3
+
+from sympy import *
+from sympy.simplify.fu import TR5, TR6
+x = Symbol('x')
+
+print("Testing the original issue:")
+try:
+    result = simplify(cos(x)**I)
+    print(f"✓ simplify(cos(x)**I) = {result}")
+except Exception as e:
+    print(f"✗ simplify(cos(x)**I) failed: {e}")
+
+print("\nTesting TR5 and TR6 functions directly:")
+# Test TR5 with real exponents
+try:
+    result = TR5(sin(x)**2)
+    print(f"✓ TR5(sin(x)**2) = {result}")
+except Exception as e:
+    print(f"✗ TR5(sin(x)**2) failed: {e}")
+
+try:
+    result = TR5(cos(x)**2)
+    print(f"✓ TR5(cos(x)**2) = {result}")
+except Exception as e:
+    print(f"✗ TR5(cos(x)**2) failed: {e}")
+
+# Test TR6 with real exponents
+try:
+    result = TR6(sin(x)**2)
+    print(f"✓ TR6(sin(x)**2) = {result}")
+except Exception as e:
+    print(f"✗ TR6(sin(x)**2) failed: {e}")
+
+try:
+    result = TR6(cos(x)**2)
+    print(f"✓ TR6(cos(x)**2) = {result}")
+except Exception as e:
+    print(f"✗ TR6(cos(x)**2) failed: {e}")
+
+# Test TR5 and TR6 with complex exponents (should return unchanged)
+try:
+    result = TR5(sin(x)**I)
+    print(f"✓ TR5(sin(x)**I) = {result}")
+except Exception as e:
+    print(f"✗ TR5(sin(x)**I) failed: {e}")
+
+try:
+    result = TR6(cos(x)**I)
+    print(f"✓ TR6(cos(x)**I) = {result}")
+except Exception as e:
+    print(f"✗ TR6(cos(x)**I) failed: {e}")
+
+print("\nTesting various complex exponent combinations:")
+test_cases = [
+    cos(x)**I,
+    sin(x)**I,
+    cos(x)**(2*I),
+    sin(x)**(1 + I),
+    cos(x)**(-I),
+    sin(x)**(I/2),
+    cos(x)**(3 + 4*I)
+]
+
+for i, expr in enumerate(test_cases):
+    try:
+        result = simplify(expr)
+        print(f"✓ Case {i+1}: {expr} -> {result}")
+    except Exception as e:
+        print(f"✗ Case {i+1}: {expr} failed: {e}")
+
+print("\nAll tests completed!")
\ No newline at end of file
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..51b05a7152
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,5 @@
+#!/usr/bin/env python3
+
+from sympy import *
+x = Symbol('x')
+print(simplify(cos(x)**I))
\ No newline at end of file
diff --git a/sympy/simplify/fu.py b/sympy/simplify/fu.py
index ad1130ef96..c8f8f4c773 100644
--- a/sympy/simplify/fu.py
+++ b/sympy/simplify/fu.py
@@ -501,6 +501,8 @@ def _f(rv):
         if not (rv.is_Pow and rv.base.func == f):
             return rv
 
+        if not rv.exp.is_real:
+            return rv
         if (rv.exp < 0) == True:
             return rv
         if (rv.exp > max) == True:
diff --git a/test_complex_exponents.py b/test_complex_exponents.py
new file mode 100644
index 0000000000..c5b7bf1251
--- /dev/null
+++ b/test_complex_exponents.py
@@ -0,0 +1,22 @@
+#!/usr/bin/env python3
+
+from sympy import *
+x = Symbol('x')
+
+# Test various complex exponents
+test_cases = [
+    cos(x)**I,
+    sin(x)**I,
+    cos(x)**(2*I),
+    sin(x)**(1 + I),
+    cos(x)**(-I),
+    sin(x)**(I/2)
+]
+
+print("Testing complex exponents with simplify:")
+for i, expr in enumerate(test_cases):
+    try:
+        result = simplify(expr)
+        print(f"Case {i+1}: {expr} -> {result}")
+    except Exception as e:
+        print(f"Case {i+1}: {expr} -> ERROR: {e}")
\ No newline at end of file
diff --git a/test_real_exponents.py b/test_real_exponents.py
new file mode 100644
index 0000000000..f2fc1a7bb1
--- /dev/null
+++ b/test_real_exponents.py
@@ -0,0 +1,22 @@
+#!/usr/bin/env python3
+
+from sympy import *
+x = Symbol('x')
+
+# Test real exponents to ensure existing functionality still works
+test_cases = [
+    cos(x)**2,
+    sin(x)**3,
+    cos(x)**4,
+    sin(x)**(-1),
+    cos(x)**0,
+    sin(x)**1
+]
+
+print("Testing real exponents with simplify:")
+for i, expr in enumerate(test_cases):
+    try:
+        result = simplify(expr)
+        print(f"Case {i+1}: {expr} -> {result}")
+    except Exception as e:
+        print(f"Case {i+1}: {expr} -> ERROR: {e}")
\ No newline at end of file
diff --git a/test_trigsimp.py b/test_trigsimp.py
new file mode 100644
index 0000000000..06387137bf
--- /dev/null
+++ b/test_trigsimp.py
@@ -0,0 +1,30 @@
+#!/usr/bin/env python3
+
+from sympy import *
+from sympy.simplify import trigsimp
+x = Symbol('x')
+
+# Test with trigsimp specifically
+test_cases = [
+    cos(x)**2,
+    sin(x)**2,
+    cos(x)**2 + sin(x)**2,
+    cos(x)**4,
+    sin(x)**4,
+]
+
+print("Testing with trigsimp:")
+for i, expr in enumerate(test_cases):
+    try:
+        result = trigsimp(expr)
+        print(f"Case {i+1}: {expr} -> {result}")
+    except Exception as e:
+        print(f"Case {i+1}: {expr} -> ERROR: {e}")
+
+print("\nTesting with simplify:")
+for i, expr in enumerate(test_cases):
+    try:
+        result = simplify(expr)
+        print(f"Case {i+1}: {expr} -> {result}")
+    except Exception as e:
+        print(f"Case {i+1}: {expr} -> ERROR: {e}")
\ No newline at end of file