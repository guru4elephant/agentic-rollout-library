diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..206441859d
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,9 @@
+from sympy import *
+A = MatrixSymbol('A', 2, 2)
+B = MatrixSymbol('B', 2, 2)
+print("str:")
+print(A - A*B - B)
+print("\npretty:")
+pprint(A - A*B - B)
+print("\nlatex:")
+print(latex(A - A*B - B))
\ No newline at end of file
diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py
index 8253b2f682..13f3aa8933 100644
--- a/sympy/printing/latex.py
+++ b/sympy/printing/latex.py
@@ -1477,9 +1477,23 @@ def _print_Adjoint(self, expr):
             return r"%s^\dagger" % self._print(mat)
 
     def _print_MatAdd(self, expr):
-        terms = list(expr.args)
-        tex = " + ".join(map(self._print, terms))
-        return tex
+        PREC = precedence(expr)
+        l = []
+        for term in expr.args:
+            t = self._print(term)
+            if t.startswith('-'):
+                sign = "-"
+                t = t[1:]
+            else:
+                sign = "+"
+            if precedence(term) < PREC:
+                l.extend([sign, r"\left(%s\right)" % t])
+            else:
+                l.extend([sign, t])
+        sign = l.pop(0)
+        if sign == '+':
+            sign = ""
+        return sign + ' '.join(l)
 
     def _print_MatMul(self, expr):
         from sympy import Add, MatAdd, HadamardProduct
diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py
index db24f4c612..13853d6be9 100644
--- a/sympy/printing/pretty/pretty.py
+++ b/sympy/printing/pretty/pretty.py
@@ -819,7 +819,25 @@ def _print_BlockMatrix(self, B):
         return self._print(B.blocks)
 
     def _print_MatAdd(self, expr):
-        return self._print_seq(expr.args, None, None, ' + ')
+        PREC = precedence(expr)
+        s = []
+        for term in expr.args:
+            pform = self._print(term)
+            if pform.__str__().startswith('-'):
+                sign = "-"
+                # Remove the minus sign from the pretty form
+                pform = prettyForm(pform.__str__()[1:])
+            else:
+                sign = "+"
+            if precedence(term) < PREC:
+                pform = prettyForm(*pform.parens())
+            s.extend([sign, pform])
+        sign = s.pop(0)
+        if sign == '+':
+            sign = ""
+        else:
+            sign = prettyForm(sign)
+        return prettyForm.__add__(sign, *s)
 
     def _print_MatMul(self, expr):
         args = list(expr.args)
diff --git a/sympy/printing/str.py b/sympy/printing/str.py
index 0baefe0f7f..78f8bec577 100644
--- a/sympy/printing/str.py
+++ b/sympy/printing/str.py
@@ -312,8 +312,23 @@ def _print_HadamardProduct(self, expr):
             for arg in expr.args])
 
     def _print_MatAdd(self, expr):
-        return ' + '.join([self.parenthesize(arg, precedence(expr))
-            for arg in expr.args])
+        PREC = precedence(expr)
+        l = []
+        for term in expr.args:
+            t = self._print(term)
+            if t.startswith('-'):
+                sign = "-"
+                t = t[1:]
+            else:
+                sign = "+"
+            if precedence(term) < PREC:
+                l.extend([sign, "(%s)" % t])
+            else:
+                l.extend([sign, t])
+        sign = l.pop(0)
+        if sign == '+':
+            sign = ""
+        return sign + ' '.join(l)
 
     def _print_NaN(self, expr):
         return 'nan'