diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..b71e64f2de
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,12 @@
+from sympy import *
+from sympy.abc import a
+
+f = lambda n: det(Matrix([[i + a*j for i in range(n)] for j in range(n)]))
+
+print("Testing matrix determinant with symbolic entries:")
+for n in range(1, 7):
+    try:
+        result = f(n)
+        print(f"f({n}) = {result}")
+    except Exception as e:
+        print(f"f({n}) = ERROR: {e}")
\ No newline at end of file
diff --git a/sympy/matrices/matrices.py b/sympy/matrices/matrices.py
index 97cde62e26..534e9a52b6 100644
--- a/sympy/matrices/matrices.py
+++ b/sympy/matrices/matrices.py
@@ -423,6 +423,10 @@ def det(self, method="bareiss"):
                    - self[0, 1] * self[1, 0] * self[2, 2])
 
         if method == "bareiss":
+            # For symbolic matrices, Bareiss algorithm can fail with NaN comparisons
+            # Use Berkowitz algorithm instead for symbolic matrices
+            if self.is_symbolic():
+                return self._eval_det_berkowitz()
             return self._eval_det_bareiss()
         elif method == "berkowitz":
             return self._eval_det_berkowitz()
diff --git a/test_fix.py b/test_fix.py
new file mode 100644
index 0000000000..c0e8aaecb2
--- /dev/null
+++ b/test_fix.py
@@ -0,0 +1,27 @@
+from sympy import *
+from sympy.abc import a
+
+# Test the specific cases mentioned in the issue
+f = lambda n: det(Matrix([[i + a*j for i in range(n)] for j in range(n)]))
+
+print("Testing the fix:")
+print("f(1) =", f(1))
+print("f(2) =", f(2)) 
+print("f(3) =", f(3))
+print("f(4) =", f(4))
+print("f(5) =", f(5))
+print("f(6) =", f(6))
+
+# Test that the fix doesn't break non-symbolic matrices
+print("\nTesting non-symbolic matrices:")
+M = Matrix([[1, 2], [3, 4]])
+print("det([[1, 2], [3, 4]]) =", M.det())
+
+# Test that we can still use bareiss explicitly for non-symbolic matrices
+print("det([[1, 2], [3, 4]], method='bareiss') =", M.det(method='bareiss'))
+
+# Test that berkowitz method still works for symbolic matrices
+print("\nTesting explicit method selection:")
+M_sym = Matrix([[a, 1], [1, a]])
+print("det([[a, 1], [1, a]], method='berkowitz') =", M_sym.det(method='berkowitz'))
+print("det([[a, 1], [1, a]], method='bareiss') =", M_sym.det(method='bareiss'))
\ No newline at end of file