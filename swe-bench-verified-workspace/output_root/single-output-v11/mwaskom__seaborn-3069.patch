diff --git a/seaborn/_core/plot.py b/seaborn/_core/plot.py
index 4f0290a4..af35c430 100644
--- a/seaborn/_core/plot.py
+++ b/seaborn/_core/plot.py
@@ -1475,7 +1475,7 @@ class Plotter:
 
                 axes_df = self._filter_subplot_data(df, view)
 
-                with pd.option_context("mode.use_inf_as_null", True):
+                with pd.option_context("mode.use_inf_as_na", True):
                     if keep_na:
                         # The simpler thing to do would be x.dropna().reindex(x.index).
                         # But that doesn't work with the way that the subset iteration
@@ -1640,10 +1640,27 @@ class Plotter:
                     hi = b if b is None else convert_units(b)
                     if isinstance(a, str):
                         lo = cast(float, lo) - 0.5
-                    if isinstance(b, str):
+                    if isinstance(b,  str):
                         hi = cast(float, hi) + 0.5
                     ax.set(**{f"{axis}lim": (lo, hi)})
 
+                # Handle nominal scales like categorical plots
+                if axis_key in self._scales:
+                    scale = self._scales[axis_key]
+                    from seaborn._core.scales import Nominal
+                    if isinstance(scale, Nominal):
+                        # Disable grid for nominal scales
+                        getattr(ax, f"{axis}axis").grid(False)
+                        
+                        # Set proper limits for nominal scales
+                        ticks = getattr(ax, f"get_{axis}ticks")()
+                        if len(ticks) > 0:
+                            if axis == "y":
+                                # Invert y-axis for nominal scales on y-axis
+                                ax.set_ylim(len(ticks) - 0.5, -0.5, auto=None)
+                            else:
+                                ax.set_xlim(-0.5, len(ticks) - 0.5, auto=None)
+
         engine_default = None if p._target is not None else "tight"
         layout_engine = p._layout_spec.get("engine", engine_default)
         set_layout_engine(self._figure, layout_engine)
diff --git a/seaborn/_oldcore.py b/seaborn/_oldcore.py
index 192af381..9f521a47 100644
--- a/seaborn/_oldcore.py
+++ b/seaborn/_oldcore.py
@@ -1116,7 +1116,7 @@ class VectorPlotter:
                 parts = []
                 grouped = self.plot_data[var].groupby(self.converters[var], sort=False)
                 for converter, orig in grouped:
-                    with pd.option_context('mode.use_inf_as_null', True):
+                    with pd.option_context('mode.use_inf_as_na', True):
                         orig = orig.dropna()
                         if var in self.var_levels:
                             # TODO this should happen in some centralized location
diff --git a/seaborn/categorical.py b/seaborn/categorical.py
index 3394c9c7..cbdc6fb1 100644
--- a/seaborn/categorical.py
+++ b/seaborn/categorical.py
@@ -1790,7 +1790,7 @@ class _LVPlotter(_CategoricalPlotter):
         vals = np.asarray(vals)
         # Remove infinite values while handling a 'object' dtype
         # that can come from pd.Float64Dtype() input
-        with pd.option_context('mode.use_inf_as_null', True):
+        with pd.option_context('mode.use_inf_as_na', True):
             vals = vals[~pd.isnull(vals)]
         n = len(vals)
         p = self.outlier_prop