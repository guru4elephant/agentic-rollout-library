diff --git a/before_fix.png b/before_fix.png
new file mode 100644
index 0000000000..a23a6d92f0
Binary files /dev/null and b/before_fix.png differ
diff --git a/lib/matplotlib/axis.py b/lib/matplotlib/axis.py
index c0e706e2b3..0920063693 100644
--- a/lib/matplotlib/axis.py
+++ b/lib/matplotlib/axis.py
@@ -2255,7 +2255,7 @@ class XAxis(Axis):
             transform=mtransforms.blended_transform_factory(
                 self.axes.transAxes, mtransforms.IdentityTransform()),
             fontsize=mpl.rcParams['xtick.labelsize'],
-            color=mpl.rcParams['xtick.color'],
+            color=mpl.rcParams['xtick.color'] if mpl.rcParams['xtick.labelcolor']=='inherit' else mpl.rcParams['xtick.labelcolor'],
         )
         self.offset_text_position = 'bottom'
 
@@ -2515,7 +2515,7 @@ class YAxis(Axis):
             transform=mtransforms.blended_transform_factory(
                 self.axes.transAxes, mtransforms.IdentityTransform()),
             fontsize=mpl.rcParams['ytick.labelsize'],
-            color=mpl.rcParams['ytick.color'],
+            color=mpl.rcParams['ytick.color'] if mpl.rcParams['ytick.labelcolor']=='inherit' else mpl.rcParams['ytick.labelcolor'],
         )
         self.offset_text_position = 'left'
 
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..71937ba0d3
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,8 @@
+import matplotlib.pyplot as plt
+
+plt.rcParams.update({'ytick.labelcolor': 'red'})
+fig = plt.figure()
+ax = fig.add_subplot(1,1,1)
+ax.plot([1.01e9,1.02e9,1.03e9])
+plt.savefig('before_fix.png')
+plt.show()
\ No newline at end of file
diff --git a/test1_y_red.png b/test1_y_red.png
new file mode 100644
index 0000000000..a23a6d92f0
Binary files /dev/null and b/test1_y_red.png differ
diff --git a/test2_x_blue.png b/test2_x_blue.png
new file mode 100644
index 0000000000..e86cff0279
Binary files /dev/null and b/test2_x_blue.png differ
diff --git a/test3_both_colors.png b/test3_both_colors.png
new file mode 100644
index 0000000000..e8a9b208b5
Binary files /dev/null and b/test3_both_colors.png differ
diff --git a/test4_inherit.png b/test4_inherit.png
new file mode 100644
index 0000000000..94c2c616b5
Binary files /dev/null and b/test4_inherit.png differ
diff --git a/test_fix.py b/test_fix.py
new file mode 100644
index 0000000000..846326ce72
--- /dev/null
+++ b/test_fix.py
@@ -0,0 +1,39 @@
+import matplotlib.pyplot as plt
+
+# Test 1: Y-axis labelcolor set to red (original issue)
+print("Test 1: Y-axis labelcolor set to red")
+plt.rcParams.update({'ytick.labelcolor': 'red'})
+fig = plt.figure()
+ax = fig.add_subplot(1,1,1)
+ax.plot([1.01e9,1.02e9,1.03e9])
+plt.savefig('test1_y_red.png')
+plt.close()
+
+# Test 2: X-axis labelcolor set to blue
+print("Test 2: X-axis labelcolor set to blue")
+plt.rcParams.update({'xtick.labelcolor': 'blue'})
+fig = plt.figure()
+ax = fig.add_subplot(1,1,1)
+ax.plot([1.01e9,1.02e9,1.03e9])
+plt.savefig('test2_x_blue.png')
+plt.close()
+
+# Test 3: Both axes with different colors
+print("Test 3: Both axes with different colors")
+plt.rcParams.update({'xtick.labelcolor': 'green', 'ytick.labelcolor': 'purple'})
+fig = plt.figure()
+ax = fig.add_subplot(1,1,1)
+ax.plot([1.01e9,1.02e9,1.03e9])
+plt.savefig('test3_both_colors.png')
+plt.close()
+
+# Test 4: Inherit behavior (should use tick color)
+print("Test 4: Inherit behavior")
+plt.rcParams.update({'xtick.labelcolor': 'inherit', 'ytick.labelcolor': 'inherit', 'xtick.color': 'orange', 'ytick.color': 'brown'})
+fig = plt.figure()
+ax = fig.add_subplot(1,1,1)
+ax.plot([1.01e9,1.02e9,1.03e9])
+plt.savefig('test4_inherit.png')
+plt.close()
+
+print("All tests completed. Check the generated PNG files.")
\ No newline at end of file
diff --git a/verify_fix.py b/verify_fix.py
new file mode 100644
index 0000000000..0a0b0fe988
--- /dev/null
+++ b/verify_fix.py
@@ -0,0 +1,32 @@
+import matplotlib.pyplot as plt
+
+# Test the fix by checking the actual color property of offsetText
+plt.rcParams.update({'ytick.labelcolor': 'red'})
+fig = plt.figure()
+ax = fig.add_subplot(1,1,1)
+ax.plot([1.01e9,1.02e9,1.03e9])
+
+# Get the offset text and check its color
+offset_text = ax.yaxis.get_offset_text()
+print(f"Y-axis offset text color: {offset_text.get_color()}")
+
+# Reset and test with different color
+plt.rcParams.update({'ytick.labelcolor': 'blue'})
+fig2 = plt.figure()
+ax2 = fig2.add_subplot(1,1,1)
+ax2.plot([1.01e9,1.02e9,1.03e9])
+
+offset_text2 = ax2.yaxis.get_offset_text()
+print(f"Y-axis offset text color (blue): {offset_text2.get_color()}")
+
+# Test inherit behavior
+plt.rcParams.update({'ytick.labelcolor': 'inherit', 'ytick.color': 'green'})
+fig3 = plt.figure()
+ax3 = fig3.add_subplot(1,1,1)
+ax3.plot([1.01e9,1.02e9,1.03e9])
+
+offset_text3 = ax3.yaxis.get_offset_text()
+print(f"Y-axis offset text color (inherit, tick color green): {offset_text3.get_color()}")
+
+plt.close('all')
+print("Verification completed.")
\ No newline at end of file
diff --git a/verify_xaxis_fix.py b/verify_xaxis_fix.py
new file mode 100644
index 0000000000..2101fb2aaa
--- /dev/null
+++ b/verify_xaxis_fix.py
@@ -0,0 +1,32 @@
+import matplotlib.pyplot as plt
+
+# Test X-axis fix
+plt.rcParams.update({'xtick.labelcolor': 'red'})
+fig = plt.figure()
+ax = fig.add_subplot(1,1,1)
+ax.plot([1000, 2000, 3000], [1.01e9,1.02e9,1.03e9])  # Add X values to get X ticks
+
+# Get the offset text and check its color
+offset_text = ax.xaxis.get_offset_text()
+print(f"X-axis offset text color: {offset_text.get_color()}")
+
+# Reset and test with different color
+plt.rcParams.update({'xtick.labelcolor': 'blue'})
+fig2 = plt.figure()
+ax2 = fig2.add_subplot(1,1,1)
+ax2.plot([1000, 2000, 3000], [1.01e9,1.02e9,1.03e9])
+
+offset_text2 = ax2.xaxis.get_offset_text()
+print(f"X-axis offset text color (blue): {offset_text2.get_color()}")
+
+# Test inherit behavior
+plt.rcParams.update({'xtick.labelcolor': 'inherit', 'xtick.color': 'green'})
+fig3 = plt.figure()
+ax3 = fig3.add_subplot(1,1,1)
+ax3.plot([1000, 2000, 3000], [1.01e9,1.02e9,1.03e9])
+
+offset_text3 = ax3.xaxis.get_offset_text()
+print(f"X2-axis offset text color (inherit, tick color green): {offset_text3.get_color()}")
+
+plt.close('all')
+print("X-axis verification completed.")
\ No newline at end of file