diff --git a/debug_assign.py b/debug_assign.py
new file mode 100644
index 000000000..c1946f068
--- /dev/null
+++ b/debug_assign.py
@@ -0,0 +1,18 @@
+import astroid
+
+code = '''
+X = ...  # type: abc.ABC
+Y = ...  # type: ABC
+'''
+
+module = astroid.parse(code)
+for node in module.nodes_of_class(astroid.Assign):
+    print(f"Node: {node}")
+    print(f"Line: {node.lineno}")
+    if hasattr(node, 'end_lineno'):
+        print(f"End line: {node.end_lineno}")
+    print(f"Col offset: {node.col_offset}")
+    if hasattr(node, 'end_col_offset'):
+        print(f"End col offset: {node.end_col_offset}")
+    print(f"Parent: {node.parent}")
+    print("---")
\ No newline at end of file
diff --git a/debug_type_comment.py b/debug_type_comment.py
new file mode 100644
index 000000000..ddc07f64d
--- /dev/null
+++ b/debug_type_comment.py
@@ -0,0 +1,14 @@
+import astroid
+
+code = '''
+X = ...  # type: abc.ABC
+Y = ...  # type: ABC
+'''
+
+module = astroid.parse(code)
+for node in module.nodes_of_class(astroid.Assign):
+    print(f"Node: {node}")
+    print(f"Type comment: {getattr(node, 'type_comment', 'None')}")
+    print(f"Targets: {node.targets}")
+    print(f"Value: {node.value}")
+    print("---")
\ No newline at end of file
diff --git a/debug_type_comment2.py b/debug_type_comment2.py
new file mode 100644
index 000000000..e1ec456e4
--- /dev/null
+++ b/debug_type_comment2.py
@@ -0,0 +1,15 @@
+import astroid
+
+code = '''
+X = ...  # type: abc.ABC
+Y = ...  # type: ABC
+'''
+
+module = astroid.parse(code)
+print("All nodes and their attributes:")
+for node in module.nodes_of_class(astroid.NodeNG):
+    print(f"Node type: {type(node).__name__}")
+    print(f"Node: {node}")
+    if hasattr(node, 'type_comment'):
+        print(f"Type comment: {node.type_comment}")
+    print("---")
\ No newline at end of file
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 000000000..ba4ac30f5
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,7 @@
+"""Docstring."""
+
+import abc
+from abc import ABC
+
+X = ...  # type: abc.ABC
+Y = ...  # type: ABC
\ No newline at end of file