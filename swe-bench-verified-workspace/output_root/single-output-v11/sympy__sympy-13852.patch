diff --git a/final_test.py b/final_test.py
new file mode 100644
index 0000000000..e8a8e0a717
--- /dev/null
+++ b/final_test.py
@@ -0,0 +1,34 @@
+#!/usr/bin/env python3
+
+from sympy import polylog, expand_func, Rational, symbols, log, pi, nsimplify
+
+print("Final comprehensive test:")
+print("=" * 50)
+
+# Test the specific case from GitHub issue
+z = Rational(1, 2)
+result = polylog(2, z)
+expanded = expand_func(result)
+expected = -log(2)**2/2 + pi**2/12
+
+print(f"polylog(2, {z}) = {result}")
+print(f"expand_func(polylog(2, {z})) = {expanded}")
+print(f"Expected: -log(2)**2/2 + pi**2/12 = {expected}")
+print(f"nsimplify result: {nsimplify(expanded, [pi**2, log(2)**2])}")
+
+# Test polylog(1, z) expansion (the main fix)
+z_sym = symbols('z')
+result1 = polylog(1, z_sym)
+expanded1 = expand_func(result1)
+print(f"\npolylog(1, z) = {result1}")
+print(f"expand_func(polylog(1, z)) = {expanded1}")
+print(f"Expected: -log(1 - z) = {-log(1 - z_sym)}")
+print(f"Match: {expanded1 == -log(1 - z_sym)}")
+
+# Test that no exp_polar is present
+from sympy import exp_polar
+print(f"exp_polar in result: {expanded1.has(exp_polar)}")
+
+# Test other polylog expansions still work
+print(f"\npolylog(0, z) expands to: {expand_func(polylog(0, z_sym))}")
+print(f"polylog(-1, z) expands to: {expand_func(polylog(-1, z_sym))}")
\ No newline at end of file
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..c594df68af
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,38 @@
+#!/usr/bin/env python3
+
+from sympy import polylog, Rational, expand_func, nsimplify, pi, log
+from sympy import init_printing
+
+init_printing()
+
+print("Testing polylog expansion issue:")
+print("=" * 50)
+
+# Test case 1: polylog(2, 1/2) should expand to -log(2)**2/2 + pi**2/12
+z = Rational(1, 2)
+result1 = polylog(2, z)
+print(f"polylog(2, {z}) = {result1}")
+
+expanded1 = expand_func(result1)
+print(f"expand_func(polylog(2, {z})) = {expanded1}")
+
+# Test case 2: polylog(1, z) should expand to -log(1-z) without exp_polar
+z_val = 0.5  # Test with a simple value
+result2 = polylog(1, z_val)
+print(f"\npolylog(1, {z_val}) = {result2}")
+
+expanded2 = expand_func(result2)
+print(f"expand_func(polylog(1, {z_val})) = {expanded2}")
+
+# What it should be according to the issue
+expected = -log(1 - z_val)
+print(f"Expected: -log(1 - {z_val}) = {expected}")
+
+# Test case 3: Check if derivatives match (issue mentions this problem)
+from sympy import diff, symbols
+z_sym = symbols('z')
+expr1 = polylog(1, z_sym)
+expr2 = expand_func(polylog(1, z_sym))
+diff_result = diff(expr1 - expr2, z_sym)
+print(f"\nDerivative test: diff(polylog(1,z) - expand_func(polylog(1,z)), z) = {diff_result}")
+print(f"Should be 0: {diff_result.simplify()}")
\ No newline at end of file
diff --git a/sympy/functions/special/zeta_functions.py b/sympy/functions/special/zeta_functions.py
index b8e2b66195..7dfdf9ce6e 100644
--- a/sympy/functions/special/zeta_functions.py
+++ b/sympy/functions/special/zeta_functions.py
@@ -288,10 +288,10 @@ def _eval_rewrite_as_lerchphi(self, s, z):
         return z*lerchphi(z, s, 1)
 
     def _eval_expand_func(self, **hints):
-        from sympy import log, expand_mul, Dummy, exp_polar, I
+        from sympy import log, expand_mul, Dummy
         s, z = self.args
         if s == 1:
-            return -log(1 + exp_polar(-I*pi)*z)
+            return -log(1 - z)
         if s.is_Integer and s <= 0:
             u = Dummy('u')
             start = u/(1 - u)
diff --git a/test_comprehensive.py b/test_comprehensive.py
new file mode 100644
index 0000000000..4e91e1f04e
--- /dev/null
+++ b/test_comprehensive.py
@@ -0,0 +1,32 @@
+#!/usr/bin/env python3
+
+from sympy import polylog, expand_func, symbols, log, I, pi, exp_polar
+
+print("Comprehensive test of polylog expansion:")
+print("=" * 50)
+
+z = symbols('z')
+
+# Test polylog(1, z) expansion
+result1 = polylog(1, z)
+expanded1 = expand_func(result1)
+print(f"polylog(1, z) = {result1}")
+print(f"expand_func(polylog(1, z)) = {expanded1}")
+print(f"Expected: -log(1 - z) = {-log(1 - z)}")
+print(f"Match: {expanded1 == -log(1 - z)}")
+
+# Test with specific values
+print("\nTesting with specific values:")
+for test_val in [0.2, 0.5, 0.8]:
+    result_val = polylog(1, test_val)
+    expanded_val = expand_func(result_val)
+    expected_val = -log(1 - test_val)
+    print(f"polylog(1, {test_val}) = {result_val}")
+    print(f"expand_func(polylog(1, {test_val})) = {expanded_val}")
+    print(f"Expected: -log(1 - {test_val}) = {expected_val}")
+    print(f"Match: {abs(expanded_val - expected_val) < 1e-10}")
+    print()
+
+# Test that we don't have exp_polar in the result
+print("Checking for exp_polar in expansion:")
+print(f"exp_polar in result: {expanded1.has(exp_polar)}")
\ No newline at end of file
diff --git a/test_derivative.py b/test_derivative.py
new file mode 100644
index 0000000000..f31a39c109
--- /dev/null
+++ b/test_derivative.py
@@ -0,0 +1,26 @@
+#!/usr/bin/env python3
+
+from sympy import polylog, expand_func, symbols, diff, simplify
+
+print("Testing derivative consistency after fix:")
+print("=" * 50)
+
+z = symbols('z')
+
+# Test that polylog(1, z) and its expansion have the same derivative
+expr1 = polylog(1, z)
+expr2 = expand_func(polylog(1, z))
+
+print(f"polylog(1, z) = {expr1}")
+print(f"expand_func(polylog(1, z)) = {expr2}")
+
+# Calculate derivatives
+diff1 = diff(expr1, z)
+diff2 = diff(expr2, z)
+
+print(f"\ndiff(polylog(1, z), z) = {diff1}")
+print(f"diff(expand_func(polylog(1, z)), z) = {diff2}")
+
+# Check if they are equal
+print(f"\nDerivatives are equal: {simplify(diff1 - diff2) == 0}")
+print(f"Simplified difference: {simplify(diff1 - diff2)}")
\ No newline at end of file
diff --git a/test_derivative_detail.py b/test_derivative_detail.py
new file mode 100644
index 0000000000..c81bb16ae6
--- /dev/null
+++ b/test_derivative_detail.py
@@ -0,0 +1,23 @@
+#!/usr/bin/env python3
+
+from sympy import polylog, expand_func, symbols, diff, simplify
+
+print("Testing derivative consistency in detail:")
+print("=" * 50)
+
+z = symbols('z')
+
+# Check what polylog(0, z) expands to
+print(f"polylog(0, z) = {polylog(0, z)}")
+print(f"expand_func(polylog(0, z)) = {expand_func(polylog(0, z))}")
+print(f"z/(1-z) = {z/(1-z)}")
+
+# The derivative of polylog(1, z) is polylog(0, z)/z
+# The derivative of -log(1-z) is 1/(1-z)
+# So they should be equal if polylog(0, z) = z/(1-z)
+
+print(f"\npolylog(0, z)/z = {polylog(0, z)/z}")
+print(f"expand_func(polylog(0, z))/z = {expand_func(polylog(0, z))/z}")
+print(f"1/(1-z) = {1/(1-z)}")
+
+print(f"\nAre they equal? {expand_func(polylog(0, z))/z == 1/(1-z)}")
\ No newline at end of file
diff --git a/test_polylog0.py b/test_polylog0.py
new file mode 100644
index 0000000000..02de066388
--- /dev/null
+++ b/test_polylog0.py
@@ -0,0 +1,8 @@
+#!/usr/bin/env python3
+
+from sympy import polylog, expand_func, symbols
+
+z = symbols('z')
+print("polylog(0, z) =", polylog(0, z))
+print("expand_func(polylog(0, z)) =", expand_func(polylog(0, z)))
+print("z/(1-z) =", z/(1-z))
\ No newline at end of file
diff --git a/test_polylog2.py b/test_polylog2.py
new file mode 100644
index 0000000000..a8f6146d74
--- /dev/null
+++ b/test_polylog2.py
@@ -0,0 +1,20 @@
+#!/usr/bin/env python3
+
+from sympy import polylog, Rational, expand_func, nsimplify, pi, log
+
+print("Testing polylog(2, 1/2) case from GitHub issue:")
+print("=" * 50)
+
+z = Rational(1, 2)
+result = polylog(2, z)
+print(f"polylog(2, {z}) = {result}")
+
+expanded = expand_func(result)
+print(f"expand_func(polylog(2, {z})) = {expanded}")
+
+# What it should be according to the issue
+expected = -log(2)**2/2 + pi**2/12
+print(f"Expected: -log(2)**2/2 + pi**2/12 = {expected}")
+
+# Test nsimplify approach mentioned in the issue
+print(f"\nnsimplify approach: {nsimplify(expanded, [pi**2, log(2)**2])}")
\ No newline at end of file