diff --git a/debug_issue.py b/debug_issue.py
new file mode 100644
index 0000000000..de0d30cc1d
--- /dev/null
+++ b/debug_issue.py
@@ -0,0 +1,38 @@
+import matplotlib.pyplot as plt
+import numpy as np
+from matplotlib import units
+import warnings
+
+# Let's debug what happens with empty arrays
+print("Testing empty array behavior:")
+
+# Create empty array
+empty_arr = np.array([], dtype=np.float64)
+print(f"Empty array: {empty_arr}")
+print(f"Empty array type: {type(empty_arr)}")
+print(f"Empty array dtype: {empty_arr.dtype}")
+print(f"Is natively supported: {units._is_natively_supported(empty_arr)}")
+
+# Test the is_numlike logic from category.py
+from matplotlib.units import ConversionInterface
+
+values = np.atleast_1d(np.array([], dtype=object))
+print(f"Values after processing: {values}")
+print(f"Values shape: {values.shape}")
+print(f"Values len: {len(values)}")
+
+# Test the is_numlike condition
+is_numlike = all(ConversionInterface.is_numlike(v)
+                 and not isinstance(v, (str, bytes))
+                 for v in values)
+print(f"is_numlike result: {is_numlike}")
+
+print("\nNow testing the actual issue:")
+f, ax = plt.subplots()
+ax.xaxis.update_units(["a", "b"])
+
+try:
+    result = ax.plot([], [])
+    print("Plot succeeded")
+except Exception as e:
+    print(f"Error: {e}")
\ No newline at end of file
diff --git a/lib/matplotlib/category.py b/lib/matplotlib/category.py
index c823b68fd9..72114b1ce7 100644
--- a/lib/matplotlib/category.py
+++ b/lib/matplotlib/category.py
@@ -53,6 +53,9 @@ class StrCategoryConverter(units.ConversionInterface):
         StrCategoryConverter._validate_unit(unit)
         # dtype = object preserves numerical pass throughs
         values = np.atleast_1d(np.array(value, dtype=object))
+        # Handle empty arrays - no conversion needed
+        if values.size == 0:
+            return np.asarray(values, dtype=float)
         # pass through sequence of non binary numbers
         with _api.suppress_matplotlib_deprecation_warning():
             is_numlike = all(units.ConversionInterface.is_numlike(v)
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..430808872a
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,15 @@
+import matplotlib.pyplot as plt
+import warnings
+
+# Capture warnings to see the full output
+warnings.filterwarnings("error", category=DeprecationWarning)
+
+f, ax = plt.subplots()
+ax.xaxis.update_units(["a", "b"])
+
+try:
+    ax.plot([], [])
+    print("Plot succeeded")
+except Exception as e:
+    print(f"Error: {e}")
+    print(f"Error type: {type(e)}")
\ No newline at end of file
diff --git a/test_convert_xunits.py b/test_convert_xunits.py
new file mode 100644
index 0000000000..cf5dc28083
--- /dev/null
+++ b/test_convert_xunits.py
@@ -0,0 +1,15 @@
+import matplotlib.pyplot as plt
+import warnings
+
+# Capture warnings to see the full output
+warnings.filterwarnings("error", category=DeprecationWarning)
+
+f, ax = plt.subplots()
+ax.xaxis.update_units(["a", "b"])
+
+try:
+    result = ax.convert_xunits([])
+    print(f"convert_xunits succeeded: {result}")
+except Exception as e:
+    print(f"Error: {e}")
+    print(f"Error type: {type(e)}")
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..78122f7fc0
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,35 @@
+import matplotlib.pyplot as plt
+import numpy as np
+import warnings
+
+# Test various edge cases
+warnings.filterwarnings("error", category=DeprecationWarning)
+
+f, ax = plt.subplots()
+ax.xaxis.update_units(["a", "b"])
+
+test_cases = [
+    ([], []),  # Empty lists
+    ([], [1, 2, 3]),  # Empty x, non-empty y
+    ([1, 2, 3], []),  # Non-empty x, empty y
+    (np.array([]), np.array([])),  # Empty numpy arrays
+    (np.array([]), [1, 2, 3]),  # Empty numpy x, list y
+    ([1, 2, 3], np.array([])),  # List x, empty numpy y
+]
+
+for i, (x, y) in enumerate(test_cases):
+    try:
+        result = ax.plot(x, y)
+        print(f"Test case {i+1}: plot({x}, {y}) succeeded")
+    except Exception as e:
+        print(f"Test case {i+1}: plot({x}, {y}) failed with {type(e).__name__}: {e}")
+
+# Test convert_xunits with various empty inputs
+empty_inputs = [[], np.array([]), ()]
+
+for i, input_data in enumerate(empty_inputs):
+    try:
+        result = ax.convert_xunits(input_data)
+        print(f"convert_xunits test {i+1}: {input_data} -> {result}")
+    except Exception as e:
+        print(f"convert_xunits test {i+1}: {input_data} failed with {type(e).__name__}: {e}")
\ No newline at end of file
diff --git a/test_normal_functionality.py b/test_normal_functionality.py
new file mode 100644
index 0000000000..4c91367fd7
--- /dev/null
+++ b/test_normal_functionality.py
@@ -0,0 +1,30 @@
+import matplotlib.pyplot as plt
+import numpy as np
+import warnings
+
+# Test that normal functionality still works
+warnings.filterwarnings("error", category=DeprecationWarning)
+
+f, ax = plt.subplots()
+ax.xaxis.update_units(["a", "b", "c"])
+
+# Test normal categorical plotting
+try:
+    result = ax.plot(["a", "b", "c"], [1, 2, 3])
+    print("Normal categorical plotting succeeded")
+except Exception as e:
+    print(f"Normal categorical plotting failed: {e}")
+
+# Test numeric data (should still show deprecation warning)
+try:
+    result = ax.plot([1, 2, 3], [1, 2, 3])
+    print("Numeric plotting succeeded")
+except Exception as e:
+    print(f"Numeric plotting failed: {e}")
+
+# Test mixed data
+try:
+    result = ax.plot(["a", "b", 3], [1, 2, 3])
+    print("Mixed data plotting succeeded")
+except Exception as e:
+    print(f"Mixed data plotting failed: {e}")
\ No newline at end of file
diff --git a/test_normal_functionality_no_error.py b/test_normal_functionality_no_error.py
new file mode 100644
index 0000000000..8793974dc1
--- /dev/null
+++ b/test_normal_functionality_no_error.py
@@ -0,0 +1,21 @@
+import matplotlib.pyplot as plt
+import numpy as np
+import warnings
+
+# Test that normal functionality still works
+# Don't convert warnings to errors, just show them
+
+f, ax = plt.subplots()
+ax.xaxis.update_units(["a", "b", "c"])
+
+print("Testing normal categorical plotting:")
+result = ax.plot(["a", "b", "c"], [1, 2, 3])
+print("Succeeded")
+
+print("Testing numeric data (should show deprecation warning):")
+result = ax.plot([1, 2, 3], [1, 2, 3])
+print("Succeeded")
+
+print("Testing mixed data:")
+result = ax.plot(["a", "b", 3], [1, 2, 3])
+print("Succeeded")
\ No newline at end of file