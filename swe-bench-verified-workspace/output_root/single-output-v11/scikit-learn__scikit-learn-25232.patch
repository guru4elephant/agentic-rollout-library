diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 000000000..6ed20fa38
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,35 @@
+#!/usr/bin/env python3
+"""Script to reproduce the IterativeImputer fill_value issue."""
+
+import numpy as np
+from sklearn.experimental import enable_iterative_imputer
+from sklearn.impute import IterativeImputer
+
+# Create test data with missing values
+X = np.array([[1, 2, 3], 
+              [4, np.nan, 6], 
+              [7, 8, 9]])
+
+print("Original data:")
+print(X)
+
+# Try to use IterativeImputer with initial_strategy="constant" and fill_value
+try:
+    imputer = IterativeImputer(
+        initial_strategy="constant",
+        fill_value=999  # This should work but currently doesn't
+    )
+    X_imputed = imputer.fit_transform(X)
+    print("\nImputed data:")
+    print(X_imputed)
+except Exception as e:
+    print(f"\nError: {e}")
+    print("This confirms the issue - fill_value parameter is not accepted")
+
+# Test with SimpleImputer to show it works there
+from sklearn.impute import SimpleImputer
+
+print("\nTesting SimpleImputer with fill_value:")
+simple_imputer = SimpleImputer(strategy="constant", fill_value=999)
+X_simple_imputed = simple_imputer.fit_transform(X)
+print(X_simple_imputed)
\ No newline at end of file
diff --git a/sklearn/impute/_iterative.py b/sklearn/impute/_iterative.py
index 1d918bc0c..2de5fe67f 100644
--- a/sklearn/impute/_iterative.py
+++ b/sklearn/impute/_iterative.py
@@ -281,6 +281,7 @@ class IterativeImputer(_BaseImputer):
         "initial_strategy": [
             StrOptions({"mean", "median", "most_frequent", "constant"})
         ],
+        "fill_value": "no_validation",  # any object is valid
         "imputation_order": [
             StrOptions({"ascending", "descending", "roman", "arabic", "random"})
         ],
@@ -301,6 +302,7 @@ class IterativeImputer(_BaseImputer):
         tol=1e-3,
         n_nearest_features=None,
         initial_strategy="mean",
+        fill_value=None,
         imputation_order="ascending",
         skip_complete=False,
         min_value=-np.inf,