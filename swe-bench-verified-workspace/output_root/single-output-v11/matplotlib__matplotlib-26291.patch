diff --git a/lib/mpl_toolkits/axes_grid1/inset_locator.py b/lib/mpl_toolkits/axes_grid1/inset_locator.py
index 9d35051074..362904ac45 100644
--- a/lib/mpl_toolkits/axes_grid1/inset_locator.py
+++ b/lib/mpl_toolkits/axes_grid1/inset_locator.py
@@ -70,6 +70,14 @@ class AnchoredLocatorBase(AnchoredOffsetbox):
 
     def __call__(self, ax, renderer):
         self.axes = ax
+        # If renderer is None, try to get it from the figure
+        if renderer is None and self.figure is not None:
+            try:
+                renderer = self.figure._get_renderer()
+            except (AttributeError, RuntimeError):
+                # If we can't get a renderer, create a minimal one for bbox calculation
+                from matplotlib.backend_bases import RendererBase
+                renderer = RendererBase()
         bbox = self.get_window_extent(renderer)
         px, py = self.get_offset(bbox.width, bbox.height, 0, 0, renderer)
         bbox_canvas = Bbox.from_bounds(px, py, bbox.width, bbox.height)
@@ -284,6 +292,8 @@ def _add_inset_axes(parent_axes, axes_class, axes_kwargs, axes_locator):
         axes_class = HostAxes
     if axes_kwargs is None:
         axes_kwargs = {}
+    # Set the figure on the locator to avoid AttributeError when accessing renderer
+    axes_locator.figure = parent_axes.figure
     inset_axes = axes_class(
         parent_axes.figure, parent_axes.get_position(),
         **{"navigate": False, **axes_kwargs, "axes_locator": axes_locator})
diff --git a/original_issue_test.png b/original_issue_test.png
new file mode 100644
index 0000000000..d9640bdad0
Binary files /dev/null and b/original_issue_test.png differ