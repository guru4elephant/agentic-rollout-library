diff --git a/example.svg b/example.svg
new file mode 100644
index 0000000000..47879d34db
Binary files /dev/null and b/example.svg differ
diff --git a/lib/matplotlib/offsetbox.py b/lib/matplotlib/offsetbox.py
index efa34dd078..9b83cd347c 100644
--- a/lib/matplotlib/offsetbox.py
+++ b/lib/matplotlib/offsetbox.py
@@ -1452,6 +1452,7 @@ or callable, default: value of *xycoords*
             self._renderer = renderer
         if not self.get_visible() or not self._check_xy(renderer):
             return
+        renderer.open_group('annotation', gid=self.get_gid())
         self.update_positions(renderer)
         if self.arrow_patch is not None:
             if self.arrow_patch.figure is None and self.figure is not None:
@@ -1459,6 +1460,7 @@ or callable, default: value of *xycoords*
             self.arrow_patch.draw(renderer)
         self.patch.draw(renderer)
         self.offsetbox.draw(renderer)
+        renderer.close_group('annotation')
         self.stale = False
 
 
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..e81c44135c
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,37 @@
+import matplotlib.pyplot as plt
+from matplotlib.offsetbox import (OffsetImage, AnnotationBbox)
+
+fig, ax = plt.subplots()
+
+# Create a simple test image instead of loading from file
+import numpy as np
+arr_img = np.random.rand(100, 100, 3)  # Random RGB image
+
+xy = [0.3, 0.55]
+
+imagebox = OffsetImage(arr_img, zoom=0.1)
+imagebox.image.axes = ax
+
+ab = AnnotationBbox(imagebox, xy,
+                    xybox=(120., -80.),
+                    xycoords='data',
+                    boxcoords="offset points",
+                    pad=0.5,
+                    arrowprops=dict(
+                        arrowstyle="->",
+                        connectionstyle="angle,angleA=0,angleB=90,rad=3")
+                    )
+ab.set_gid('My_label')
+ax.add_artist(ab)
+
+print(f"GID = {ab.get_gid()}")
+
+fig.savefig("example.svg", format="svg")
+
+# Let's also check if the gid is in the SVG file
+with open("example.svg", "r") as f:
+    svg_content = f.read()
+    if 'My_label' in svg_content:
+        print("SUCCESS: GID found in SVG")
+    else:
+        print("FAILURE: GID NOT found in SVG")
\ No newline at end of file
diff --git a/test1.svg b/test1.svg
new file mode 100644
index 0000000000..fb33a423b9
Binary files /dev/null and b/test1.svg differ
diff --git a/test2.svg b/test2.svg
new file mode 100644
index 0000000000..0bd3ed623a
Binary files /dev/null and b/test2.svg differ
diff --git a/test3.svg b/test3.svg
new file mode 100644
index 0000000000..b135775290
Binary files /dev/null and b/test3.svg differ
diff --git a/test_comprehensive.py b/test_comprehensive.py
new file mode 100644
index 0000000000..30603c5c4f
--- /dev/null
+++ b/test_comprehensive.py
@@ -0,0 +1,44 @@
+import matplotlib.pyplot as plt
+from matplotlib.offsetbox import (OffsetImage, AnnotationBbox)
+import numpy as np
+
+# Test 1: Basic AnnotationBbox with gid
+fig, ax = plt.subplots()
+arr_img1 = np.random.rand(100, 100, 3)
+xy = [0.3, 0.55]
+imagebox1 = OffsetImage(arr_img1, zoom=0.1)
+ab = AnnotationBbox(imagebox1, xy, xybox=(120., -80.), xycoords='data', boxcoords="offset points")
+ab.set_gid('test_gid_1')
+ax.add_artist(ab)
+fig.savefig("test1.svg", format="svg")
+
+# Test 2: AnnotationBbox with arrowprops
+fig, ax = plt.subplots()
+arr_img2 = np.random.rand(100, 100, 3)
+imagebox2 = OffsetImage(arr_img2, zoom=0.1)
+ab2 = AnnotationBbox(imagebox2, xy, xybox=(120., -80.), xycoords='data', boxcoords="offset points",
+                    arrowprops=dict(arrowstyle="->", connectionstyle="angle,angleA=0,angleB=90,rad=3"))
+ab2.set_gid('test_gid_2')
+ax.add_artist(ab2)
+fig.savefig("test2.svg", format="svg")
+
+# Test 3: Multiple AnnotationBbox with different gids
+fig, ax = plt.subplots()
+arr_img3 = np.random.rand(100, 100, 3)
+imagebox3 = OffsetImage(arr_img3, zoom=0.1)
+ab3 = AnnotationBbox(imagebox3, [0.2, 0.4], xybox=(50., -40.), xycoords='data', boxcoords="offset points")
+ab3.set_gid('test_gid_3')
+ab4 = AnnotationBbox(imagebox3, [0.6, 0.8], xybox=(-50., 40.), xycoords='data', boxcoords="offset points")
+ab4.set_gid('test_gid_4')
+ax.add_artist(ab3)
+ax.add_artist(ab4)
+fig.savefig("test3.svg", format="svg")
+
+# Verify all gids are present
+for i in range(1, 4):
+    with open(f"test{i}.svg", "r") as f:
+        content = f.read()
+        if f'test_gid_{i}' in content:
+            print(f"SUCCESS: test_gid_{i} found in SVG")
+        else:
+            print(f"FAILURE: test_gid_{i} NOT found in SVG")
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..8c666c61f0
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,51 @@
+import matplotlib.pyplot as plt
+from matplotlib.offsetbox import (OffsetImage, AnnotationBbox)
+import numpy as np
+
+# Test 1: AnnotationBbox with no gid set (should not have gid in SVG)
+fig, ax = plt.subplots()
+arr_img1 = np.random.rand(100, 100, 3)
+imagebox1 = OffsetImage(arr_img1, zoom=0.1)
+ab = AnnotationBbox(imagebox1, [0.3, 0.55], xybox=(120., -80.), xycoords='data', boxcoords="offset points")
+ax.add_artist(ab)
+fig.savefig("test_no_gid.svg", format="svg")
+
+# Test 2: AnnotationBbox with empty gid
+fig, ax = plt.subplots()
+arr_img2 = np.random.rand(100, 100, 3)
+imagebox2 = OffsetImage(arr_img2, zoom=0.1)
+ab2 = AnnotationBbox(imagebox2, [0.3, 0.55], xybox=(120., -80.), xycoords='data', boxcoords="offset points")
+ab2.set_gid('')
+ax.add_artist(ab2)
+fig.savefig("test_empty_gid.svg", format="svg")
+
+# Test 3: AnnotationBbox with None gid
+fig, ax = plt.subplots()
+arr_img3 = np.random.rand(100, 100, 3)
+imagebox3 = OffsetImage(arr_img3, zoom=0.1)
+ab3 = AnnotationBbox(imagebox3, [0.3, 0.55], xybox=(120., -80.), xycoords='data', boxcoords="offset points")
+ab3.set_gid(None)
+ax.add_artist(ab3)
+fig.savefig("test_none_gid.svg", format="svg")
+
+# Verify results
+with open("test_no_gid.svg", "r") as f:
+    content = f.read()
+    if 'id="' in content and 'annotation_' in content:
+        print("SUCCESS: No gid set - using default annotation group id")
+    else:
+        print("FAILURE: No gid set - not using default annotation group id")
+
+with open("test_empty_gid.svg", "r") as f:
+    content = f.read()
+    if 'id=""' not in content:
+        print("SUCCESS: Empty gid - not included in SVG")
+    else:
+        print("FAILURE: Empty gid - incorrectly included in SVG")
+
+with open("test_none_gid.svg", "r") as f:
+    content = f.read()
+    if 'id="None"' not in content:
+        print("SUCCESS: None gid - not included in SVG")
+    else:
+        print("FAILURE: None gid - incorrectly included in SVG")
\ No newline at end of file
diff --git a/test_empty_gid.svg b/test_empty_gid.svg
new file mode 100644
index 0000000000..63cbd893fa
Binary files /dev/null and b/test_empty_gid.svg differ
diff --git a/test_no_gid.svg b/test_no_gid.svg
new file mode 100644
index 0000000000..81106e5f12
Binary files /dev/null and b/test_no_gid.svg differ
diff --git a/test_none_gid.svg b/test_none_gid.svg
new file mode 100644
index 0000000000..61e1c1c4e5
Binary files /dev/null and b/test_none_gid.svg differ
diff --git a/test_original_issue.py b/test_original_issue.py
new file mode 100644
index 0000000000..77a75e8ec0
--- /dev/null
+++ b/test_original_issue.py
@@ -0,0 +1,43 @@
+import matplotlib.pyplot as plt
+from matplotlib.offsetbox import (OffsetImage, AnnotationBbox)
+import numpy as np
+
+# Recreate the exact example from the GitHub issue
+fig, ax = plt.subplots()
+
+# Create a simple test image instead of loading from file
+arr_img = np.random.rand(100, 100, 3)  # Random RGB image
+
+xy = [0.3, 0.55]
+
+imagebox = OffsetImage(arr_img, zoom=0.1)
+imagebox.image.axes = ax
+
+ab = AnnotationBbox(imagebox, xy,
+                    xybox=(120., -80.),
+                    xycoords='data',
+                    boxcoords="offset points",
+                    pad=0.5,
+                    arrowprops=dict(
+                        arrowstyle="->",
+                        connectionstyle="angle,angleA=0,angleB=90,rad=3")
+                    )
+ab.set_gid('My_label')
+ax.add_artist(ab)
+
+print(f"GID = {ab.get_gid()}")
+
+fig.savefig("example.svg", format="svg")
+
+# Check if the gid is in the SVG file
+with open("example.svg", "r") as f:
+    svg_content = f.read()
+    if 'My_label' in svg_content:
+        print("SUCCESS: GID found in SVG")
+        # Also verify it's in the proper format
+        if 'id="My_label"' in svg_content:
+            print("SUCCESS: GID is properly formatted in SVG")
+        else:
+            print("WARNING: GID found but not in expected format")
+    else:
+        print("FAILURE: GID NOT found in SVG")
\ No newline at end of file