diff --git a/before_fix.png b/before_fix.png
new file mode 100644
index 0000000000..50d9a65d2e
Binary files /dev/null and b/before_fix.png differ
diff --git a/debug_shared_axes.py b/debug_shared_axes.py
new file mode 100644
index 0000000000..54f1737823
--- /dev/null
+++ b/debug_shared_axes.py
@@ -0,0 +1,37 @@
+import numpy as np
+import matplotlib.pyplot as plt
+
+# Create shared axes
+fig, axes = plt.subplots(2, 2, sharex=True, sharey=True)
+
+print("Before clear:")
+for i, ax in enumerate(axes.flatten()):
+    print(f"Axes {i}:")
+    print(f"  xaxis visible: {ax.xaxis.get_visible()}")
+    print(f"  yaxis visible: {ax.yaxis.get_visible()}")
+    if hasattr(ax.xaxis, '_major_tick_kw'):
+        print(f"  xaxis label1On: {ax.xaxis._major_tick_kw.get('label1On', 'Not set')}")
+        print(f"  xaxis label2On: {ax.xaxis._major_tick_kw.get('label2On', 'Not set')}")
+    if hasattr(ax.yaxis, '_major_tick_kw'):
+        print(f"  yaxis label1On: {ax.yaxis._major_tick_kw.get('label1On', 'Not set')}")
+        print(f"  yaxis label2On: {ax.yaxis._major_tick_kw.get('label2On', 'Not set')}")
+    print()
+
+# Clear the axes
+for ax in axes.flatten():
+    ax.clear()
+
+print("After clear:")
+for i, ax in enumerate(axes.flatten()):
+    print(f"Axes {i}:")
+    print(f"  xaxis visible: {ax.xaxis.get_visible()}")
+    print(f"  yaxis visible: {ax.yaxis.get_visible()}")
+    if hasattr(ax.xaxis, '_major_tick_kw'):
+        print(f"  xaxis label1On: {ax.xaxis._major_tick_kw.get('label1On', 'Not set')}")
+        print(f"  xaxis label2On: {ax.xaxis._major_tick_kw.get('label2On', 'Not set')}")
+    if hasattr(ax.yaxis, '_major_tick_kw'):
+        print(f"  yaxis label1On: {ax.yaxis._major_tick_kw.get('label1On', 'Not set')}")
+        print(f"  yaxis label2On: {ax.yaxis._major_tick_kw.get('label2On', 'Not set')}")
+    print()
+
+plt.close(fig)
\ No newline at end of file
diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py
index 802fd3c997..2a5753717a 100644
--- a/lib/matplotlib/axes/_base.py
+++ b/lib/matplotlib/axes/_base.py
@@ -1156,6 +1156,9 @@ class _AxesBase(martist.Artist):
         self._sharex = other
         self.xaxis.major = other.xaxis.major  # Ticker instances holding
         self.xaxis.minor = other.xaxis.minor  # locator and formatter.
+        # Copy tick parameters to maintain shared axis label visibility
+        self.xaxis._major_tick_kw.update(other.xaxis._major_tick_kw)
+        self.xaxis._minor_tick_kw.update(other.xaxis._minor_tick_kw)
         x0, x1 = other.get_xlim()
         self.set_xlim(x0, x1, emit=False, auto=other.get_autoscalex_on())
         self.xaxis._scale = other.xaxis._scale
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..757d93c1a3
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,14 @@
+import numpy as np
+import matplotlib.pyplot as plt
+
+fig, axes = plt.subplots(2, 2, sharex=True, sharey=True)
+
+x = np.arange(0.0, 2*np.pi, 0.01)
+y = np.sin(x)
+
+for ax in axes.flatten():
+    ax.clear()
+    ax.plot(x, y)
+
+plt.savefig('before_fix.png')
+plt.show()
\ No newline at end of file