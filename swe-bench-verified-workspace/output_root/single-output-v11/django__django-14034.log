=== Starting task for instance: django__django-14034 ===
Task ID: 140
Pod name: r2e-django-django-14034-4379
Pod name: r2e-django-django-14034-4379
Using image: iregistry.baidu-int.com/acg-airec/r2e_gym/slimshetty/swebench-verified:sweb.eval.x86_64.django__django-14034
K8S executor initialized

=== Iteration 1/100 ===
Calling LLM...
LLM Response: I'll help you implement the necessary changes to fix the MultiValueField issue. Let's start by exploring the repository structure to understand the codebase.

<function=file_editor>
<parameter=command...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "view",
  "path": "/testbed"
}
Tool execution status: success
Tool stdout:
Here's the files and directories up to 2 levels deep in /testbed, excluding hidden:
/testbed
/testbed/tests
/testbed/tests/datetimes
/testbed/tests/serializers
/testbed/tests/i18n
/testbed/tests/admin_changelist
/testbed/tests/model_formsets_regress
/testbed/tests/model_fields
/testbed/tests/migrate_signals
/testbed/tests/test_runner_apps
/testbed/tests/migrations
/testbed/tests/sites_tests
/testbed/tests/file_storage
/testbed/tests/annotations
/testbed/tests/shell
/testbed/tests/timezones
/testbed/tests/get_object_or_404
/testbed/tests/string_lookup
/testbed/tests/custom_migration_operations
/testbed/tests/extra_regress
/testbed/tests/get_earliest_or_latest
/testbed/tests/m2m_through
/testbed/tests/model_package
/testbed/tests/dbshell
/testbed/tests/test_utils
/testbed/tests/basic
/testbed/tests/expressions_case
/testbed/tests/proxy_model_inheritance
/testbed/tests/known_related_objects
/testbed/tests/README.rst
/testbed/tests/settings_tests
/testbed/tests/model_enums
/testbed/tests/flatpages_tests
/testbed/tests/template_loader
/testbed/tests/custom_pk
/testbed/tests/redirects_tests
/testbed/tests/defer
/testbed/tests/async
/testbed/tests/admin_widgets
/testbed/tests/version
/testbed/tests/model_meta
/testbed/tests/messages_tests
/testbed/tests/model_utils
/testbed/tests/or_lookups
/testbed/tests/managers_regress
/testbed/tests/unmanaged_models
/testbed/tests/swappable_models
/testbed/tests/app_loading
/testbed/tests/inline_formsets
/testbed/tests/db_utils
/testbed/tests/admin_inlines
/testbed/tests/asgi
/testbed/tests/validators
/testbed/tests/deprecation
/testbed/tests/dispatch
/testbed/tests/empty
/testbed/tests/generic_relations_regress
/testbed/tests/m2m_intermediary
/testbed/tests/nested_foreign_keys
/testbed/tests/foreign_object
/testbed/tests/force_insert_update
/testbed/tests/admin_default_site
/testbed/tests/m2m_and_m2o
/testbed/tests/middleware
/testbed/tests/project_template
/testbed/tests/context_processors
/testbed/tests/forms_tests
/testbed/tests/modeladmin
/testbed/tests/bash_completion
/testbed/tests/middleware_exceptions
/testbed/tests/properties
/testbed/tests/templates
/testbed/tests/custom_methods
/testbed/tests/fixtures_regress
/testbed/tests/m2m_regress
/testbed/tests/admin_scripts
/testbed/tests/from_db_value
/testbed/tests/admin_registration
/testbed/tests/delete
/testbed/tests/update_only_fields
/testbed/tests/conditional_processing
/testbed/tests/wsgi
/testbed/tests/null_fk
/testbed/tests/model_regress
/testbed/tests/custom_columns
/testbed/tests/template_tests
/testbed/tests/csrf_tests
/testbed/tests/proxy_models
/testbed/tests/m2m_through_regress
/testbed/tests/template_backends
/testbed/tests/indexes
/testbed/tests/defer_regress
/testbed/tests/select_related
/testbed/tests/contenttypes_tests
/testbed/tests/resolve_url
/testbed/tests/generic_views
/testbed/tests/urlpatterns
/testbed/tests/auth_tests
/testbed/tests/order_with_respect_to
/testbed/tests/inspectdb
/testbed/tests/humanize_tests
/testbed/tests/postgres_tests
/testbed/tests/fixtures_model_package
/testbed/tests/import_error_package
/testbed/tests/fixtures
/testbed/tests/update
/testbed/tests/mail
/testbed/tests/migrations2
/testbed/tests/delete_regress
/testbed/tests/many_to_one_null
/testbed/tests/syndication_tests
/testbed/tests/lookup
/testbed/tests/staticfiles_tests
/testbed/tests/reserved_names
/testbed/tests/base
/testbed/tests/sessions_tests
/testbed/tests/model_formsets
/testbed/tests/field_deconstruction
/testbed/tests/urlpatterns_reverse
/testbed/tests/datatypes
/testbed/tests/aggregation
/testbed/tests/view_tests
/testbed/tests/field_defaults
/testbed/tests/files
/testbed/tests/test_runner
/testbed/tests/model_inheritance_regress
/testbed/tests/model_indexes
/testbed/tests/bulk_create
/testbed/tests/model_options
/testbed/tests/no_models
/testbed/tests/multiple_database
/testbed/tests/responses
/testbed/tests/validation
/testbed/tests/str
/testbed/tests/builtin_server
/testbed/tests/custom_lookups
/testbed/tests/save_delete_hooks
/testbed/tests/expressions
/testbed/tests/select_for_update
/testbed/tests/admin_views
/testbed/tests/constraints
/testbed/tests/model_inheritance
/testbed/tests/sitemaps_tests
/testbed/tests/select_related_regress
/testbed/tests/transaction_hooks
/testbed/tests/distinct_on_fields
/testbed/tests/raw_query
/testbed/tests/admin_autodiscover
/testbed/tests/test_sqlite.py
/testbed/tests/gis_tests
/testbed/tests/expressions_window
/testbed/tests/test_client_regress
/testbed/tests/m2m_multiple
/testbed/tests/runtests.py
/testbed/tests/model_forms
/testbed/tests/signals
/testbed/tests/backends
/testbed/tests/many_to_many
/testbed/tests/signing
/testbed/tests/empty_models
/testbed/tests/admin_custom_urls
/testbed/tests/admin_ordering
/testbed/tests/transactions
/testbed/tests/get_or_create
/testbed/tests/cache
/testbed/tests/queries
/testbed/tests/apps
/testbed/tests/migration_test_data_persistence
/testbed/tests/admin_docs
/testbed/tests/shortcuts
/testbed/tests/db_functions
/testbed/tests/many_to_one
/testbed/tests/admin_filters
/testbed/tests/invalid_models_tests
/testbed/tests/m2o_recursive
/testbed/tests/mutually_referential
/testbed/tests/utils_tests
/testbed/tests/null_fk_ordering
/testbed/tests/queryset_pickle
/testbed/tests/urls.py
/testbed/tests/pagination
/testbed/tests/requirements
/testbed/tests/decorators
/testbed/tests/httpwrappers
/testbed/tests/null_queries
/testbed/tests/test_exceptions
/testbed/tests/admin_utils
/testbed/tests/select_related_onetoone
/testbed/tests/check_framework
/testbed/tests/db_typecasts
/testbed/tests/prefetch_related
/testbed/tests/max_lengths
/testbed/tests/dates
/testbed/tests/m2m_recursive
/testbed/tests/schema
/testbed/tests/m2m_signals
/testbed/tests/field_subclassing
/testbed/tests/reverse_lookup
/testbed/tests/file_uploads
/testbed/tests/logging_tests
/testbed/tests/servers
/testbed/tests/introspection
/testbed/tests/signed_cookies_tests
/testbed/tests/generic_inline_admin
/testbed/tests/absolute_url_overrides
/testbed/tests/custom_managers
/testbed/tests/requests
/testbed/tests/sites_framework
/testbed/tests/filtered_relation
/testbed/tests/test_client
/testbed/tests/aggregation_regress
/testbed/tests/admin_checks
/testbed/tests/generic_relations
/testbed/tests/ordering
/testbed/tests/handlers
/testbed/tests/one_to_one
/testbed/tests/user_commands
/testbed/scripts
/testbed/scripts/rpm-install.sh
/testbed/scripts/manage_translations.py
/testbed/README.rst
/testbed/LICENSE.python
/testbed/CONTRIBUTING.rst
/testbed/js_tests
/testbed/js_tests/tests.html
/testbed/js_tests/gis
/testbed/js_tests/admin
/testbed/AUTHORS
/testbed/setup.py
/testbed/INSTALL
/testbed/django
/testbed/django/http
/testbed/django/__pycache__
/testbed/django/views
/testbed/django/dispatch
/testbed/django/__init__.py
/testbed/django/test
/testbed/django/middleware
/testbed/django/templatetags
/testbed/django/forms
/testbed/django/contrib
/testbed/django/template
/testbed/django/conf
/testbed/django/urls
/testbed/django/db
/testbed/django/shortcuts.py
/testbed/django/core
/testbed/django/utils
/testbed/django/apps
/testbed/django/__main__.py
/testbed/package.json
/testbed/docs
/testbed/docs/spelling_wordlist
/testbed/docs/_theme
/testbed/docs/README.rst
/testbed/docs/internals
/testbed/docs/faq
/testbed/docs/man
/testbed/docs/misc
/testbed/docs/glossary.txt
/testbed/docs/conf.py
/testbed/docs/requirements.txt
/testbed/docs/topics
/testbed/docs/index.txt
/testbed/docs/ref
/testbed/docs/contents.txt
/testbed/docs/releases
/testbed/docs/howto
/testbed/docs/_ext
/testbed/docs/Makefile
/testbed/docs/make.bat
/testbed/docs/intro
/testbed/tox.ini
/testbed/LICENSE
/testbed/Gruntfile.js
/testbed/Django.egg-info
/testbed/Django.egg-info/not-zip-safe
/testbed/Django.egg-info/requires.txt
/testbed/Django.egg-info/PKG-INFO
/testbed/Django.egg-info/dependency_links.txt
/testbed/Django.egg-info/SOURCES.txt
/testbed/Django.egg-info/top_level.txt
/testbed/Django.egg-info/entry_points.txt
/testbed/MANIFEST.in
/testbed/pyproject.toml
/testbed/setup.cfg
/testbed/extras
/testbed/extras/README.TXT
/testbed/extras/django_bash_completion
/testbed/extras/Makefile



=== Iteration 2/100 ===
Calling LLM...
LLM Response: Now let's look at the Django forms directory since the issue is related to MultiValueField:

<function=file_editor>
<parameter=command>view</parameter>
<parameter=path>/testbed/django/forms</parameter...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "view",
  "path": "/testbed/django/forms"
}
Tool execution status: success
Tool stdout:
Here's the files and directories up to 2 levels deep in /testbed/django/forms, excluding hidden:
/testbed/django/forms
/testbed/django/forms/forms.py
/testbed/django/forms/fields.py
/testbed/django/forms/boundfield.py
/testbed/django/forms/widgets.py
/testbed/django/forms/__init__.py
/testbed/django/forms/renderers.py
/testbed/django/forms/templates
/testbed/django/forms/templates/django
/testbed/django/forms/utils.py
/testbed/django/forms/formsets.py
/testbed/django/forms/jinja2
/testbed/django/forms/jinja2/django
/testbed/django/forms/models.py



=== Iteration 3/100 ===
Calling LLM...
LLM Response: Let's first create a script to reproduce the issue described in the GitHub issue:

<function=file_editor>
<parameter=command>create</parameter>
<parameter=path>reproduce_issue.py</parameter>
<paramete...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "create",
  "path": "reproduce_issue.py",
  "file_text": "#!/usr/bin/env python3\n\"\"\"Script to reproduce the MultiValueField issue.\"\"\"\n\nimport os\nimport sys\nimport django\nfrom django.conf import settings\n\n# Configure Django settings\nif not settings.configured:\n    settings.configure(\n        DEBUG=True,\n        SECRET_KEY='test-secret-key',\n        USE_TZ=True,\n        INSTALLED_APPS=[],\n    )\n\ndjango.setup()\n\nfrom django.forms import (\n    Form,\n    CharField,\n    MultiValueField,\n    MultiWidget,\n)\n\nclass MF(MultiValueField):\n    widget = MultiWidget\n    \n    def __init__(self):\n        fields = [\n            CharField(required=False),\n            CharField(required=True),\n        ]\n        widget = self.widget(widgets=[\n            f.widget\n            for f in fields\n        ], attrs={})\n        super(MF, self).__init__(\n            fields=fields,\n            widget=widget,\n            require_all_fields=False,\n            required=False,\n        )\n    \n    def compress(self, value):\n        return []\n\nclass F(Form):\n    mf = MF()\n\ndef test_case_1():\n    \"\"\"Test case 1: Both sub-fields empty - should return False but returns True\"\"\"\n    print(\"Test case 1: Both sub-fields empty\")\n    f = F({\n        'mf_0': '',\n        'mf_1': '',\n    })\n    result = f.is_valid()\n    print(f\"Form is_valid(): {result}\")\n    print(f\"Expected: False, Got: {result}\")\n    print(f\"Test passes: {result == False}\")\n    return result\n\ndef test_case_2():\n    \"\"\"Test case 2: First sub-field filled, second empty - should return False and does\"\"\"\n    print(\"\\nTest case 2: First sub-field filled, second empty\")\n    f = F({\n        'mf_0': 'xxx',\n        'mf_1': '',\n    })\n    result = f.is_valid()\n    print(f\"Form is_valid(): {result}\")\n    print(f\"Expected: False, Got: {result}\")\n    print(f\"Test passes: {result == False}\")\n    return result\n\ndef test_case_3():\n    \"\"\"Test case 3: Both sub-fields filled - should return True\"\"\"\n    print(\"\\nTest case 3: Both sub-fields filled\")\n    f = F({\n        'mf_0': 'xxx',\n        'mf_1': 'yyy',\n    })\n    result = f.is_valid()\n    print(f\"Form is_valid(): {result}\")\n    print(f\"Expected: True, Got: {result}\")\n    print(f\"Test passes: {result == True}\")\n    return result\n\nif __name__ == '__main__':\n    print(\"Reproducing MultiValueField issue...\")\n    \n    result1 = test_case_1()\n    result2 = test_case_2()\n    result3 = test_case_3()\n    \n    print(f\"\\nSummary:\")\n    print(f\"Test case 1 (both empty): {'PASS' if result1 == False else 'FAIL'}\")\n    print(f\"Test case 2 (first filled): {'PASS' if result2 == False else 'FAIL'}\")\n    print(f\"Test case 3 (both filled): {'PASS' if result3 == True else 'FAIL'}\")\n    \n    # The issue is that test case 1 should return False but returns True\n    if result1 == True:\n        print(\"\\nISSUE CONFIRMED: MultiValueField ignores required sub-field when all values are empty\")\n        sys.exit(1)\n    else:\n        print(\"\\nISSUE NOT REPRODUCED: MultiValueField behaves correctly\")\n        sys.exit(0)"
}
Tool execution status: success
Tool stdout:
File created successfully at reproduce_issue.py.
Here's the result of running `cat -n` on reproduce_issue.py:
     1	#!/usr/bin/env python3
     2	"""Script to reproduce the MultiValueField issue."""
     3	
     4	import os
     5	import sys
     6	import django
     7	from django.conf import settings
     8	
     9	# Configure Django settings
    10	if not settings.configured:
    11	    settings.configure(
    12	        DEBUG=True,
    13	        SECRET_KEY='test-secret-key',
    14	        USE_TZ=True,
    15	        INSTALLED_APPS=[],
    16	    )
    17	
    18	django.setup()
    19	
    20	from django.forms import (
... (file continues)


=== Iteration 4/100 ===
Calling LLM...
LLM Response: Now let's run the reproduction script to confirm the issue:

<function=execute_bash>
<parameter=command>python reproduce_issue.py</parameter>
</function>...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python reproduce_issue.py"
}
Tool execution status: error
Tool stdout:
[STDOUT]
Reproducing MultiValueField issue...
Test case 1: Both sub-fields empty
Form is_valid(): True
Expected: False, Got: True
Test passes: False

Test case 2: First sub-field filled, second empty
Form is_valid(): False
Expected: False, Got: False
Test passes: True

Test case 3: Both sub-fields filled
Form is_valid(): True
Expected: True, Got: True
Test passes: True

Summary:
Test case 1 (both empty): FAIL
Test case 2 (first filled): PASS
Test case 3 (both filled): PASS

ISSUE CONFIRMED: MultiValueField ignores required sub-field when all values are empty
Error executing command:
Exit code: 1
command terminated with exit code 1


=== Iteration 5/100 ===
Calling LLM...
LLM Response:       Perfect! I've confirmed the issue. The problem is that when both sub-fields are empty, the MultiValueField incorrectly returns `True` for `is_valid()` even though one of the sub-fields is requir...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "view",
  "path": "/testbed/django/forms/fields.py",
  "view_range": "[1, 50]"
}
Tool execution status: success
Tool stdout:
Here's the result of running `cat -n` on /testbed/django/forms/fields.py:
     1	"""
     2	Field classes.
     3	"""
     4	
     5	import copy
     6	import datetime
     7	import json
     8	import math
     9	import operator
    10	import os
    11	import re
    12	import uuid
    13	from decimal import Decimal, DecimalException
    14	from io import BytesIO
    15	from urllib.parse import urlsplit, urlunsplit
    16	
    17	from django.core import validators
    18	from django.core.exceptions import ValidationError
    19	from django.forms.boundfield import BoundField
    20	from django.forms.utils import from_current_timezone, to_current_timezone
    21	from django.forms.widgets import (
    22	    FILE_INPUT_CONTRADICTION, CheckboxInput, ClearableFileInput, DateInput,
    23	    DateTimeInput, EmailInput, FileInput, HiddenInput, MultipleHiddenInput,
    24	    NullBooleanSelect, NumberInput, Select, SelectMultiple,
    25	    SplitDateTimeWidget, SplitHiddenDateTimeWidget, Textarea, TextInput,
    26	    TimeInput, URLInput,
    27	)
    28	from django.utils import formats
    29	from django.utils.dateparse import parse_datetime, parse_duration
    30	from django.utils.duration import duration_string
    31	from django.utils.ipv6 import clean_ipv6_address
    32	from django.utils.regex_helper import _lazy_re_compile
    33	from django.utils.translation import gettext_lazy as _, ngettext_lazy
    34	
    35	__all__ = (
    36	    'Field', 'CharField', 'IntegerField',
    37	    'DateField', 'TimeField', 'DateTimeField', 'DurationField',
    38	    'RegexField', 'EmailField', 'FileField', 'ImageField', 'URLField',
    39	    'BooleanField', 'NullBooleanField', 'ChoiceField', 'MultipleChoiceField',
    40	    'ComboField', 'MultiValueField', 'FloatField', 'DecimalField',
    41	    'SplitDateTimeField', 'GenericIPAddressField', 'FilePathField',
    42	    'JSONField', 'SlugField', 'TypedChoiceField', 'TypedMultipleChoiceField',
    43	    'UUIDField',
    44	)
    45	
    46	
    47	class Field:
    48	    widget = TextInput  # Default widget to use when rendering this type of Field.
    49	    hidden_widget = HiddenInput  # Default widget to use when rendering this as "hidden".
    50	    default_validators = []  # Default set of validators


=== Iteration 6/100 ===
Calling LLM...
LLM Response: Let me search for the MultiValueField class to find its implementation:

<function=search>
<parameter=search_term>class MultiValueField</parameter>
<parameter=path>/testbed/django/forms/fields.py</par...
Executing tool: r2e_search
Tool parameters: {
  "search_term": "class MultiValueField",
  "path": "/testbed/django/forms/fields.py"
}
Tool execution status: success
Tool stdout:
Matches for "class MultiValueField" in /testbed/django/forms/fields.py:
966:class MultiValueField(Field):


=== Iteration 7/100 ===
Calling LLM...
LLM Response: Let me examine the MultiValueField class implementation:

<function=file_editor>
<parameter=command>view</parameter>
<parameter=path>/testbed/django/forms/fields.py</parameter>
<parameter=view_range>[...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "view",
  "path": "/testbed/django/forms/fields.py",
  "view_range": "[966, 1050]"
}
Tool execution status: success
Tool stdout:
Here's the result of running `cat -n` on /testbed/django/forms/fields.py:
   966	class MultiValueField(Field):
   967	    """
   968	    Aggregate the logic of multiple Fields.
   969	
   970	    Its clean() method takes a "decompressed" list of values, which are then
   971	    cleaned into a single value according to self.fields. Each value in
   972	    this list is cleaned by the corresponding field -- the first value is
   973	    cleaned by the first field, the second value is cleaned by the second
   974	    field, etc. Once all fields are cleaned, the list of clean values is
   975	    "compressed" into a single value.
   976	
   977	    Subclasses should not have to implement clean(). Instead, they must
   978	    implement compress(), which takes a list of valid values and returns a
   979	    "compressed" version of those values -- a single value.
   980	
   981	    You'll probably want to use this with MultiWidget.
   982	    """
   983	    default_error_messages = {
   984	        'invalid': _('Enter a list of values.'),
   985	        'incomplete': _('Enter a complete value.'),
   986	    }
   987	
   988	    def __init__(self, fields, *, require_all_fields=True, **kwargs):
   989	        self.require_all_fields = require_all_fields
   990	        super().__init__(**kwargs)
   991	        for f in fields:
   992	            f.error_messages.setdefault('incomplete',
   993	                                        self.error_messages['incomplete'])
   994	            if self.disabled:
   995	                f.disabled = True
   996	            if self.require_all_fields:
   997	                # Set 'required' to False on the individual fields, because the
   998	                # required validation will be handled by MultiValueField, not
   999	                # by those individual fields.
  1000	                f.required = False
  1001	        self.fields = fields
  1002	
  1003	    def __deepcopy__(self, memo):
  1004	        result = super().__deepcopy__(memo)
  1005	        result.fields = tuple(x.__deepcopy__(memo) for x in self.fields)
  1006	        return result
  1007	
  1008	    def validate(self, value):
  1009	        pass
  1010	
  1011	    def clean(self, value):
  1012	        """
  1013	        Validate every value in the given list. A value is validated against
  1014	        the corresponding Field in self.fields.
  1015	
  1016	        For example, if this MultiValueField was instantiated with
  1017	        fields=(DateField(), TimeField()), clean() would call
  1018	        DateField.clean(value[0]) and TimeField.clean(value[1]).
  1019	        """
  1020	        clean_data = []
  1021	        errors = []
  1022	        if self.disabled and not isinstance(value, list):
  1023	            value = self.widget.decompress(value)
  1024	        if not value or isinstance(value, (list, tuple)):
  1025	            if not value or not [v for v in value if v not in self.empty_values]:
  1026	                if self.required:
  1027	                    raise ValidationError(self.error_messages['required'], code='required')
  1028	                else:
  1029	                    return self.compress([])
  1030	        else:
  1031	            raise ValidationError(self.error_messages['invalid'], code='invalid')
  1032	        for i, field in enumerate(self.fields):
  1033	            try:
  1034	                field_value = value[i]
  1035	            except IndexError:
  1036	                field_value = None
  1037	            if field_value in self.empty_values:
  1038	                if self.require_all_fields:
  1039	                    # Raise a 'required' error if the MultiValueField is
  1040	                    # required and any field is empty.
  1041	                    if self.required:
  1042	                        raise ValidationError(self.error_messages['required'], code='required')
  1043	                elif field.required:
  1044	                    # Otherwise, add an 'incomplete' error to the list of
  1045	                    # collected errors and skip field cleaning, if a required
  1046	                    # field is empty.
  1047	                    if field.error_messages['incomplete'] not in errors:
  1048	                        errors.append(field.error_messages['incomplete'])
  1049	                    continue
  1050	            try:


=== Iteration 8/100 ===
Calling LLM...
LLM Response: Let me continue viewing the clean method to see the complete implementation:

<function=file_editor>
<parameter=command>view</parameter>
<parameter=path>/testbed/django/forms/fields.py</parameter>
<pa...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "view",
  "path": "/testbed/django/forms/fields.py",
  "view_range": "[1050, 1080]"
}
Tool execution status: success
Tool stdout:
Here's the result of running `cat -n` on /testbed/django/forms/fields.py:
  1050	            try:
  1051	                clean_data.append(field.clean(field_value))
  1052	            except ValidationError as e:
  1053	                # Collect all validation errors in a single list, which we'll
  1054	                # raise at the end of clean(), rather than raising a single
  1055	                # exception for the first error we encounter. Skip duplicates.
  1056	                errors.extend(m for m in e.error_list if m not in errors)
  1057	        if errors:
  1058	            raise ValidationError(errors)
  1059	
  1060	        out = self.compress(clean_data)
  1061	        self.validate(out)
  1062	        self.run_validators(out)
  1063	        return out
  1064	
  1065	    def compress(self, data_list):
  1066	        """
  1067	        Return a single value for the given list of values. The values can be
  1068	        assumed to be valid.
  1069	
  1070	        For example, if this MultiValueField was instantiated with
  1071	        fields=(DateField(), TimeField()), this might return a datetime
  1072	        object created by combining the date and time in data_list.
  1073	        """
  1074	        raise NotImplementedError('Subclasses must implement this method.')
  1075	
  1076	    def has_changed(self, initial, data):
  1077	        if self.disabled:
  1078	            return False
  1079	        if initial is None:
  1080	            initial = ['' for x in range(0, len(data))]


=== Iteration 9/100 ===
Calling LLM...
LLM Response: Now I can see the issue! Let me analyze the `clean` method of `MultiValueField`. The problem is in lines 1024-1031. When `require_all_fields=False` and all values are empty, the method returns `self.c...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "view",
  "path": "/testbed/django/forms/fields.py",
  "view_range": "[1024, 1032]"
}
Tool execution status: success
Tool stdout:
Here's the result of running `cat -n` on /testbed/django/forms/fields.py:
  1024	        if not value or isinstance(value, (list, tuple)):
  1025	            if not value or not [v for v in value if v not in self.empty_values]:
  1026	                if self.required:
  1027	                    raise ValidationError(self.error_messages['required'], code='required')
  1028	                else:
  1029	                    return self.compress([])
  1030	        else:
  1031	            raise ValidationError(self.error_messages['invalid'], code='invalid')
  1032	        for i, field in enumerate(self.fields):


=== Iteration 10/100 ===
Calling LLM...
LLM Response: Now I understand the issue completely. The problem is in the logic at lines 1025-1029. When `require_all_fields=False` and all values are empty, the code immediately returns `self.compress([])` withou...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "str_replace",
  "path": "/testbed/django/forms/fields.py",
  "old_str": "if not value or isinstance(value, (list, tuple)):\n            if not value or not [v for v in value if v not in self.empty_values]:\n                if self.required:\n                    raise ValidationError(self.error_messages['required'], code='required')\n                else:\n                    return self.compress([])",
  "new_str": "if not value or isinstance(value, (list, tuple)):\n            if not value or not [v for v in value if v not in self.empty_values]:\n                if self.required:\n                    raise ValidationError(self.error_messages['required'], code='required')\n                elif self.require_all_fields:\n                    # Only return early if all fields are empty and we don't require all fields\n                    # This allows individual field validation to occur for required sub-fields\n                    return self.compress([])"
}
Tool execution status: success
Tool stdout:
The file /testbed/django/forms/fields.py has been edited successfully.
Here's a snippet of the edited section:
  1020	        clean_data = []
  1021	        errors = []
  1022	        if self.disabled and not isinstance(value, list):
  1023	            value = self.widget.decompress(value)
  1024	        if not value or isinstance(value, (list, tuple)):
  1025	            if not value or not [v for v in value if v not in self.empty_values]:
  1026	                if self.required:
  1027	                    raise ValidationError(self.error_messages['required'], code='required')
  1028	                elif self.require_all_fields:
  1029	                    # Only return early if all fields are empty and we don't require all fields
  1030	                    # This allows individual field validation to occur for required sub-fields
  1031	                    return self.compress([])
  1032	        else:
  1033	            raise ValidationError(self.error_messages['invalid'], code='invalid')
  1034	        for i, field in enumerate(self.fields):
  1035	            try:
Review the changes and make sure they are as expected.


=== Iteration 11/100 ===
Calling LLM...
LLM Response: Now let's test our fix by running the reproduction script again:

<function=execute_bash>
<parameter=command>python reproduce_issue.py</parameter>
</function>...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python reproduce_issue.py"
}
Tool execution status: success
Tool stdout:
[STDOUT]
Reproducing MultiValueField issue...
Test case 1: Both sub-fields empty
Form is_valid(): False
Expected: False, Got: False
Test passes: True

Test case 2: First sub-field filled, second empty
Form is_valid(): False
Expected: False, Got: False
Test passes: True

Test case 3: Both sub-fields filled
Form is_valid(): True
Expected: True, Got: True
Test passes: True

Summary:
Test case 1 (both empty): PASS
Test case 2 (first filled): PASS
Test case 3 (both filled): PASS

ISSUE NOT REPRODUCED: MultiValueField behaves correctly


=== Iteration 12/100 ===
Calling LLM...
LLM Response: Excellent! The fix works. Now let's run the existing Django tests to make sure we didn't break anything. Let me first check if there are any specific tests for MultiValueField:

<function=search>
<par...
Executing tool: r2e_search
Tool parameters: {
  "search_term": "MultiValueField",
  "path": "/testbed/tests"
}
Tool execution status: success
Tool stdout:
Found 16 matches for "MultiValueField" in /testbed/tests:
./tests/forms_tests/tests/test_forms.py (10 matches)
./tests/forms_tests/widget_tests/test_multiwidget.py (2 matches)
./tests/forms_tests/field_tests/test_multivaluefield.py (4 matches)
End of matches for "MultiValueField" in /testbed/tests


=== Iteration 13/100 ===
Calling LLM...
LLM Response:       Let me run the specific MultiValueField tests to ensure our fix doesn't break existing functionality:

<function=execute_bash>
<parameter=command>python -m pytest tests/forms_tests/field_tests/t...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python -m pytest tests/forms_tests/field_tests/test_multivaluefield.py -v"
}
Tool execution status: error
Tool stdout:
Error executing command:
Exit code: 1
[STDERR]
/root/.venv/bin/python: No module named pytest
command terminated with exit code 1


=== Iteration 14/100 ===
Calling LLM...
LLM Response:       Let me run the tests using Django's test runner instead:

<function=execute_bash>
<parameter=command>python -m django test tests/forms_tests/field_tests/test_multivaluefield.py</parameter>
</fun...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python -m django test tests/forms_tests/field_tests/test_multivaluefield.py"
}
Tool execution status: error
Tool stdout:
Error executing command:
Exit code: 1
[STDERR]
Traceback (most recent call last):
  File "/root/.venv/lib/python3.8/runpy.py", line 194, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/root/.venv/lib/python3.8/runpy.py", line 87, in _run_code
    exec(code, run_globals)
  File "/testbed/django/__main__.py", line 9, in <module>
    management.execute_from_command_line()
  File "/testbed/django/core/management/__init__.py", line 419, in execute_from_command_line
    utility.execute()
  File "/testbed/django/core/management/__init__.py", line 413, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/testbed/django/core/management/commands/test.py", line 23, in run_from_argv
    super().run_from_argv(argv)
  File "/testbed/django/core/management/base.py", line 346, in run_from_argv
    parser = self.create_parser(argv[0], argv[1])
  File "/testbed/django/core/management/base.py", line 320, in create_parser
    self.add_arguments(parser)
  File "/testbed/django/core/management/commands/test.py", line 44, in add_arguments
    test_runner_class = get_runner(settings, self.test_runner)
  File "/testbed/django/test/utils.py", line 367, in get_runner
    test_runner_class = test_runner_class or settings.TEST_RUNNER
  File "/testbed/django/conf/__init__.py", line 69, in __getattr__
    self._setup(name)
  File "/testbed/django/conf/__init__.py", line 50, in _setup
    raise ImproperlyConfigured(
django.core.exceptions.ImproperlyConfigured: Requested setting TEST_RUNNER, but settings are not configured. You must either define the environment variable DJANGO_SETTINGS_MODULE or call settings.configure() before accessing settings.
command terminated with exit code 1


=== Iteration 15/100 ===
Calling LLM...
LLM Response: Let me try running the tests using the runtests.py script instead:

<function=execute_bash>
<parameter=command>python tests/runtests.py tests/forms_tests/field_tests/test_multivaluefield.py --verbosit...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python tests/runtests.py tests/forms_tests/field_tests/test_multivaluefield.py --verbosity=2"
}
Tool execution status: error
Tool stdout:
[STDOUT]
Testing against Django installed in '/testbed/django' with up to 64 processes
Importing application forms_tests
Error executing command:
Exit code: 1
[STDERR]
Traceback (most recent call last):
  File "tests/runtests.py", line 668, in <module>
    failures = django_tests(
  File "tests/runtests.py", line 386, in django_tests
    failures = test_runner.run_tests(test_labels)
  File "/testbed/django/test/runner.py", line 898, in run_tests
    suite = self.build_suite(test_labels, extra_tests)
  File "/testbed/django/test/runner.py", line 762, in build_suite
    tests = self.load_tests_for_label(label, discover_kwargs)
  File "/testbed/django/test/runner.py", line 724, in load_tests_for_label
    raise RuntimeError(
RuntimeError: One of the test labels is a path to a file: 'tests/forms_tests/field_tests/test_multivaluefield.py', which is not supported. Use a dotted module name or path to a directory instead.
command terminated with exit code 1


=== Iteration 16/100 ===
Calling LLM...
LLM Response: Let me run the tests for the forms_tests module instead:

<function=execute_bash>
<parameter=command>python tests/runtests.py forms_tests --verbosity=2</parameter>
</function>...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python tests/runtests.py forms_tests --verbosity=2"
}
Tool execution status: error
Tool stdout:
[STDOUT]
Testing against Django installed in '/testbed/django' with up to 64 processes
Importing application forms_tests
Found 696 test(s).
Skipping setup of unused database(s): other.
Operations to perform:
  Synchronize unmigrated apps: auth, contenttypes, forms_tests, messages, sessions, staticfiles
  Apply all migrations: admin, sites
Synchronizing apps without migrations:
  Creating tables...
    Creating table django_content_type
    Creating table auth_permission
    Creating table auth_group
    Creating table auth_user
    Creating table django_session
    Creating table forms_tests_boundarymodel
    Creating table forms_tests_defaults
    Creating table forms_tests_choicemodel
    Creating table forms_tests_choiceoptionmodel
    Creating table forms_tests_choicefieldmodel
    Creating table forms_tests_optionalmultichoicemodel
    Creating table forms_tests_filemodel
    Creating table forms_tests_article
    Running deferred SQL...
Running migrations:
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying sites.0001_initial... OK
  Applying sites.0002_alter_domain_unique... OK
System check identified no issues (0 silenced).
Error executing command:
Exit code: 1
[STDERR]
Creating test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
test_disabled_field_has_changed_always_false (forms_tests.field_tests.test_base.DisabledFieldTests) ... ok
test_boolean_picklable (forms_tests.field_tests.test_booleanfield.BooleanFieldTest) ... ok
test_booleanfield_changed (forms_tests.field_tests.test_booleanfield.BooleanFieldTest) ... ok
test_booleanfield_clean_1 (forms_tests.field_tests.test_booleanfield.BooleanFieldTest) ... ok
test_booleanfield_clean_2 (forms_tests.field_tests.test_booleanfield.BooleanFieldTest) ... ok
test_disabled_has_changed (forms_tests.field_tests.test_booleanfield.BooleanFieldTest) ... ok
test_empty_value (forms_tests.field_tests.test_slugfield.SlugFieldTest) ... ok
test_slugfield_normalization (forms_tests.field_tests.test_slugfield.SlugFieldTest) ... ok
test_slugfield_unicode_normalization (forms_tests.field_tests.test_slugfield.SlugFieldTest) ... ok
test_allow_folders (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_clean (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_fix_os_paths (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_match (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_no_options (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_nonexistent_path (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_recursive (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_recursive_folders_without_files (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_recursive_no_folders_or_files (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_disabled_has_changed (forms_tests.field_tests.test_filefield.FileFieldTest) ... ok
test_file_picklable (forms_tests.field_tests.test_filefield.FileFieldTest) ... ok
test_filefield_1 (forms_tests.field_tests.test_filefield.FileFieldTest) ... ok
test_filefield_2 (forms_tests.field_tests.test_filefield.FileFieldTest) ... ok
test_filefield_3 (forms_tests.field_tests.test_filefield.FileFieldTest) ... ok
test_filefield_changed (forms_tests.field_tests.test_filefield.FileFieldTest)
The value of data will more than likely come from request.FILES. The ... ok
test_disabled_has_changed (forms_tests.field_tests.test_multiplechoicefield.MultipleChoiceFieldTest) ... ok
test_multiplechoicefield_1 (forms_tests.field_tests.test_multiplechoicefield.MultipleChoiceFieldTest) ... ok
test_multiplechoicefield_2 (forms_tests.field_tests.test_multiplechoicefield.MultipleChoiceFieldTest) ... ok
test_multiplechoicefield_3 (forms_tests.field_tests.test_multiplechoicefield.MultipleChoiceFieldTest) ... ok
test_multiplechoicefield_changed (forms_tests.field_tests.test_multiplechoicefield.MultipleChoiceFieldTest) ... ok
test_generic_ipaddress_as_generic (forms_tests.field_tests.test_genericipaddressfield.GenericIPAddressFieldTest) ... ok
test_generic_ipaddress_as_generic_not_required (forms_tests.field_tests.test_genericipaddressfield.GenericIPAddressFieldTest) ... ok
test_generic_ipaddress_as_ipv4_only (forms_tests.field_tests.test_genericipaddressfield.GenericIPAddressFieldTest) ... ok
test_generic_ipaddress_as_ipv6_only (forms_tests.field_tests.test_genericipaddressfield.GenericIPAddressFieldTest) ... ok
test_generic_ipaddress_invalid_arguments (forms_tests.field_tests.test_genericipaddressfield.GenericIPAddressFieldTest) ... ok
test_generic_ipaddress_normalization (forms_tests.field_tests.test_genericipaddressfield.GenericIPAddressFieldTest) ... ok
test_clean_value_with_dashes (forms_tests.field_tests.test_uuidfield.UUIDFieldTest) ... ok
test_uuidfield_1 (forms_tests.field_tests.test_uuidfield.UUIDFieldTest) ... ok
test_uuidfield_2 (forms_tests.field_tests.test_uuidfield.UUIDFieldTest) ... ok
test_uuidfield_3 (forms_tests.field_tests.test_uuidfield.UUIDFieldTest) ... ok
test_uuidfield_4 (forms_tests.field_tests.test_uuidfield.UUIDFieldTest) ... ok
test_combofield_1 (forms_tests.field_tests.test_combofield.ComboFieldTest) ... ok
test_combofield_2 (forms_tests.field_tests.test_combofield.ComboFieldTest) ... ok
test_typedchoicefield_1 (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest) ... ok
test_typedchoicefield_2 (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest) ... ok
test_typedchoicefield_3 (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest) ... ok
test_typedchoicefield_4 (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest) ... ok
test_typedchoicefield_5 (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest) ... ok
test_typedchoicefield_6 (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest) ... ok
test_typedchoicefield_has_changed (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest) ... ok
test_typedchoicefield_special_coerce (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest)
A coerce function which results in a value not present in choices ... ok
test_empty_queryset_return (forms_tests.tests.tests.TestTicket14567)
If a model's ManyToManyField has blank=True and is saved with no data, a queryset is returned. ... ok
test_attribute_class (forms_tests.tests.test_forms.RendererTests) ... ok
test_attribute_instance (forms_tests.tests.test_forms.RendererTests) ... ok
test_attribute_override (forms_tests.tests.test_forms.RendererTests) ... ok
test_default (forms_tests.tests.test_forms.RendererTests) ... ok
test_kwarg_class (forms_tests.tests.test_forms.RendererTests) ... ok
test_kwarg_instance (forms_tests.tests.test_forms.RendererTests) ... ok
test_typedmultiplechoicefield_1 (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_2 (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_3 (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_4 (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_5 (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_6 (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_7 (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_has_changed (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_special_coerce (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest)
A coerce function which results in a value not present in choices ... ok
test_change_regex_after_init (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_empty_value (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_get_regex (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_regexfield_1 (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_regexfield_2 (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_regexfield_3 (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_regexfield_4 (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_regexfield_strip (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_regexfield_unicode_characters (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_modelchoicefield (forms_tests.tests.test_error_messages.ModelChoiceFieldErrorMessagesTestCase) ... ok
test_modelchoicefield_value_placeholder (forms_tests.tests.test_error_messages.ModelChoiceFieldErrorMessagesTestCase) ... ok
test_cooperative_multiple_inheritance (forms_tests.field_tests.test_base.BasicFieldsTests) ... ok
test_field_deepcopies_widget_instance (forms_tests.field_tests.test_base.BasicFieldsTests) ... ok
test_field_sets_widget_is_required (forms_tests.field_tests.test_base.BasicFieldsTests) ... ok
test_invalid (forms_tests.tests.test_formsets.AllValidTests)
all_valid() validates all forms, even when some are invalid. ... ok
test_valid (forms_tests.tests.test_formsets.AllValidTests) ... ok
test_timefield_1 (forms_tests.field_tests.test_timefield.TimeFieldTest) ... ok
test_timefield_2 (forms_tests.field_tests.test_timefield.TimeFieldTest) ... ok
test_timefield_3 (forms_tests.field_tests.test_timefield.TimeFieldTest) ... ok
test_timefield_changed (forms_tests.field_tests.test_timefield.TimeFieldTest) ... ok
test_get_renderer (forms_tests.tests.test_renderers.BaseTemplateRendererTests) ... ok
test_textarea_trailing_newlines (forms_tests.tests.test_widgets.LiveWidgetTests)
A roundtrip on a ModelForm doesn't alter the TextField value ... skipped 'No browsers specified.'
test_charfield_1 (forms_tests.field_tests.test_charfield.CharFieldTest) ... ok
test_charfield_2 (forms_tests.field_tests.test_charfield.CharFieldTest) ... ok
test_charfield_3 (forms_tests.field_tests.test_charfield.CharFieldTest) ... ok
test_charfield_4 (forms_tests.field_tests.test_charfield.CharFieldTest) ... ok
test_charfield_5 (forms_tests.field_tests.test_charfield.CharFieldTest) ... ok
test_charfield_disabled (forms_tests.field_tests.test_charfield.CharFieldTest) ... ok
test_charfield_length_not_int (forms_tests.field_tests.test_charfield.CharFieldTest)
Setting min_length or max_length to something that is not a number ... ok
test_charfield_strip (forms_tests.field_tests.test_charfield.CharFieldTest)
Values have whitespace stripped but not if strip=False. ... ok
test_charfield_widget_attrs (forms_tests.field_tests.test_charfield.CharFieldTest)
CharField.widget_attrs() always returns a dictionary and includes ... ok
test_clean_non_string (forms_tests.field_tests.test_charfield.CharFieldTest)
CharField.clean() calls str(value) before stripping it. ... ok
test_null_characters_prohibited (forms_tests.field_tests.test_charfield.CharFieldTest) ... ok
test_strip_before_checking_empty (forms_tests.field_tests.test_charfield.CharFieldTest)
A whitespace-only value, ' ', is stripped to an empty string and then ... ok
test_localized_timeField (forms_tests.tests.test_input_formats.CustomTimeInputFormatsTests)
Localized TimeFields act as unlocalized widgets ... ok
test_localized_timeField_with_inputformat (forms_tests.tests.test_input_formats.CustomTimeInputFormatsTests)
Localized TimeFields with manually specified input formats can accept those formats ... ok
test_timeField (forms_tests.tests.test_input_formats.CustomTimeInputFormatsTests)
TimeFields can parse dates in the default format ... ok
test_timeField_with_inputformat (forms_tests.tests.test_input_formats.CustomTimeInputFormatsTests)
TimeFields with manually specified input formats can accept those formats ... ok
test_dateField (forms_tests.tests.test_input_formats.CustomDateInputFormatsTests)
DateFields can parse dates in the default format ... ok
test_dateField_with_inputformat (forms_tests.tests.test_input_formats.CustomDateInputFormatsTests)
DateFields with manually specified input formats can accept those formats ... ok
test_localized_dateField (forms_tests.tests.test_input_formats.CustomDateInputFormatsTests)
Localized DateFields act as unlocalized widgets ... ok
test_localized_dateField_with_inputformat (forms_tests.tests.test_input_formats.CustomDateInputFormatsTests)
Localized DateFields with manually specified input formats can accept those formats ... ok
test_choicefield_1 (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_2 (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_3 (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_4 (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_callable (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_callable_may_evaluate_to_different_values (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_choices_default (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_disabled (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_enumeration (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_localized_timeField (forms_tests.tests.test_input_formats.SimpleTimeFormatTests)
Localized TimeFields in a non-localized environment act as unlocalized widgets ... ok
test_localized_timeField_with_inputformat (forms_tests.tests.test_input_formats.SimpleTimeFormatTests)
Localized TimeFields with manually specified input formats can accept those formats ... ok
test_timeField (forms_tests.tests.test_input_formats.SimpleTimeFormatTests)
TimeFields can parse dates in the default format ... ok
test_timeField_with_inputformat (forms_tests.tests.test_input_formats.SimpleTimeFormatTests)
TimeFields with manually specified input formats can accept those formats ... ok
test_splitdatetimefield_1 (forms_tests.field_tests.test_splitdatetimefield.SplitDateTimeFieldTest) ... ok
test_splitdatetimefield_2 (forms_tests.field_tests.test_splitdatetimefield.SplitDateTimeFieldTest) ... ok
test_splitdatetimefield_changed (forms_tests.field_tests.test_splitdatetimefield.SplitDateTimeFieldTest) ... ok
test_error_dict_copy (forms_tests.tests.test_utils.FormsUtilsTestCase) ... ok
test_error_dict_html_safe (forms_tests.tests.test_utils.FormsUtilsTestCase) ... ok
test_error_list_html_safe (forms_tests.tests.test_utils.FormsUtilsTestCase) ... ok
test_flatatt (forms_tests.tests.test_utils.FormsUtilsTestCase) ... ok
test_flatatt_no_side_effects (forms_tests.tests.test_utils.FormsUtilsTestCase)
flatatt() does not modify the dict passed in. ... ok
test_validation_error (forms_tests.tests.test_utils.FormsUtilsTestCase) ... ok
test_nullbooleanfield_2 (forms_tests.field_tests.test_nullbooleanfield.NullBooleanFieldTest) ... ok
test_nullbooleanfield_3 (forms_tests.field_tests.test_nullbooleanfield.NullBooleanFieldTest) ... ok
test_nullbooleanfield_4 (forms_tests.field_tests.test_nullbooleanfield.NullBooleanFieldTest) ... ok
test_nullbooleanfield_changed (forms_tests.field_tests.test_nullbooleanfield.NullBooleanFieldTest) ... ok
test_nullbooleanfield_clean (forms_tests.field_tests.test_nullbooleanfield.NullBooleanFieldTest) ... ok
test_all_errors_get_reported (forms_tests.tests.test_validators.TestFieldWithValidators) ... ok
test_field_validators_can_be_any_iterable (forms_tests.tests.test_validators.TestFieldWithValidators) ... ok
test_invalid_loading_order (forms_tests.tests.tests.RelatedModelFormTests)
Test for issue 10405 ... ok
test_valid_loading_order (forms_tests.tests.tests.RelatedModelFormTests)
Test for issue 10405 ... ok
test_integerfield_1 (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_integerfield_2 (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_integerfield_3 (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_integerfield_4 (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_integerfield_5 (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_integerfield_big_num (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_integerfield_float (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_integerfield_localized (forms_tests.field_tests.test_integerfield.IntegerFieldTest)
A localized IntegerField's widget renders to a text input without any ... ok
test_integerfield_subclass (forms_tests.field_tests.test_integerfield.IntegerFieldTest)
Class-defined widget is not overwritten by __init__() (#22245). ... ok
test_integerfield_unicode_number (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_empty_formset_is_multipart (forms_tests.tests.test_formsets.TestEmptyFormSet)
is_multipart() works with an empty formset. ... ok
test_empty_formset_is_valid (forms_tests.tests.test_formsets.TestEmptyFormSet)
An empty formset still calls clean() ... ok
test_empty_formset_media (forms_tests.tests.test_formsets.TestEmptyFormSet)
Media is available on empty formset. ... ok
test_installed_apps_template_found (forms_tests.tests.test_renderers.TemplatesSettingTests)
Can find a custom template in INSTALLED_APPS. ... ok
test_installed_apps_template_found (forms_tests.tests.test_renderers.DjangoTemplatesTests)
Can find a custom template in INSTALLED_APPS. ... ok
test_installed_apps_template_found (forms_tests.tests.test_renderers.Jinja2Tests)
Can find a custom template in INSTALLED_APPS. ... ok
test_m2m_field_exclusion (forms_tests.tests.tests.ManyToManyExclusionTestCase) ... ok
test_boundary_conditions (forms_tests.tests.tests.FormsModelTestCase) ... ok
test_formfield_initial (forms_tests.tests.tests.FormsModelTestCase) ... ok
test_unicode_filename (forms_tests.tests.tests.FormsModelTestCase) ... ok
test_email_regexp_for_performance (forms_tests.field_tests.test_emailfield.EmailFieldTest) ... ok
test_emailfield_1 (forms_tests.field_tests.test_emailfield.EmailFieldTest) ... ok
test_emailfield_min_max_length (forms_tests.field_tests.test_emailfield.EmailFieldTest) ... ok
test_emailfield_not_required (forms_tests.field_tests.test_emailfield.EmailFieldTest) ... ok
test_emailfield_strip_on_none_value (forms_tests.field_tests.test_emailfield.EmailFieldTest) ... ok
test_emailfield_unable_to_set_strip_kwarg (forms_tests.field_tests.test_emailfield.EmailFieldTest) ... ok
test_dateField (forms_tests.tests.test_input_formats.SimpleDateFormatTests)
DateFields can parse dates in the default format ... ok
test_dateField_with_inputformat (forms_tests.tests.test_input_formats.SimpleDateFormatTests)
DateFields with manually specified input formats can accept those formats ... ok
test_localized_dateField (forms_tests.tests.test_input_formats.SimpleDateFormatTests)
Localized DateFields in a non-localized environment act as unlocalized widgets ... ok
test_localized_dateField_with_inputformat (forms_tests.tests.test_input_formats.SimpleDateFormatTests)
Localized DateFields with manually specified input formats can accept those formats ... ok
test_durationfield_clean (forms_tests.field_tests.test_durationfield.DurationFieldTest) ... ok
test_durationfield_clean_not_required (forms_tests.field_tests.test_durationfield.DurationFieldTest) ... ok
test_durationfield_integer_value (forms_tests.field_tests.test_durationfield.DurationFieldTest) ... ok
test_durationfield_prepare_value (forms_tests.field_tests.test_durationfield.DurationFieldTest) ... ok
test_durationfield_render (forms_tests.field_tests.test_durationfield.DurationFieldTest) ... ok
test_overflow (forms_tests.field_tests.test_durationfield.DurationFieldTest) ... ok
test_overflow_translation (forms_tests.field_tests.test_durationfield.DurationFieldTest) ... ok
test_converted_value (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_custom_encoder_decoder (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_custom_widget_attribute (forms_tests.field_tests.test_jsonfield.JSONFieldTest)
The widget can be overridden with an attribute. ... ok
test_custom_widget_kwarg (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_formfield_disabled (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_has_changed (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_invalid (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_prepare_value (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_redisplay_none_input (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_redisplay_wrong_input (forms_tests.field_tests.test_jsonfield.JSONFieldTest)
Displaying a bound form (typically due to invalid input). The form ... ok
test_valid (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_valid_empty (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_widget (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_dateTimeField (forms_tests.tests.test_input_formats.CustomDateTimeInputFormatsTests)
DateTimeFields can parse dates in the default format ... ok
test_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.CustomDateTimeInputFormatsTests)
DateTimeFields with manually specified input formats can accept those formats ... ok
test_localized_dateTimeField (forms_tests.tests.test_input_formats.CustomDateTimeInputFormatsTests)
Localized DateTimeFields act as unlocalized widgets ... ok
test_localized_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.CustomDateTimeInputFormatsTests)
Localized DateTimeFields with manually specified input formats can accept those formats ... ok
test_datetimefield_changed (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) ... ok
test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) ... ok
test_datetimefield_clean_input_formats (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) ... ok
test_datetimefield_clean_invalid (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) ... ok
test_datetimefield_not_required (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) ... ok
test_localized_timeField (forms_tests.tests.test_input_formats.LocalizedTimeTests)
Localized TimeFields act as unlocalized widgets ... ok
test_localized_timeField_with_inputformat (forms_tests.tests.test_input_formats.LocalizedTimeTests)
Localized TimeFields with manually specified input formats can accept those formats ... ok
test_timeField (forms_tests.tests.test_input_formats.LocalizedTimeTests)
TimeFields can parse dates in the default format ... ok
test_timeField_with_inputformat (forms_tests.tests.test_input_formats.LocalizedTimeTests)
TimeFields with manually specified input formats can accept those formats ... ok
test_as_p (forms_tests.tests.test_formsets.FormsetAsTagTests) ... ok
test_as_table (forms_tests.tests.test_formsets.FormsetAsTagTests) ... ok
test_as_ul (forms_tests.tests.test_formsets.FormsetAsTagTests) ... ok
test_bad_choice (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_clean (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_clean_disabled_multivalue (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_disabled_has_changed (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_form_as_table (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_form_as_table_data (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_form_cleaned_data (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_has_changed_first_widget (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)
Test when the first widget's data has changed. ... ok
test_has_changed_last_widget (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)
Test when the last widget's data has changed. This ensures that it is ... ok
test_has_changed_no_initial (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_has_changed_same (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_no_value (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)
If insufficient data is provided, None is substituted. ... ok
test_dateField (forms_tests.tests.test_input_formats.LocalizedDateTests)
DateFields can parse dates in the default format ... ok
test_dateField_with_inputformat (forms_tests.tests.test_input_formats.LocalizedDateTests)
DateFields with manually specified input formats can accept those formats ... ok
test_localized_dateField (forms_tests.tests.test_input_formats.LocalizedDateTests)
Localized DateFields act as unlocalized widgets ... ok
test_localized_dateField_with_inputformat (forms_tests.tests.test_input_formats.LocalizedDateTests)
Localized DateFields with manually specified input formats can accept those formats ... ok
test_decimalfield_support_decimal_separator (forms_tests.field_tests.test_floatfield.FloatFieldTest) ... ok
test_decimalfield_support_thousands_separator (forms_tests.field_tests.test_floatfield.FloatFieldTest) ... ok
test_floatfield_1 (forms_tests.field_tests.test_floatfield.FloatFieldTest) ... ok
test_floatfield_2 (forms_tests.field_tests.test_floatfield.FloatFieldTest) ... ok
test_floatfield_3 (forms_tests.field_tests.test_floatfield.FloatFieldTest) ... ok
test_floatfield_changed (forms_tests.field_tests.test_floatfield.FloatFieldTest) ... ok
test_floatfield_localized (forms_tests.field_tests.test_floatfield.FloatFieldTest)
A localized FloatField's widget renders to a text input without any ... ok
test_floatfield_widget_attrs (forms_tests.field_tests.test_floatfield.FloatFieldTest) ... ok
test_customize_management_form_error (forms_tests.tests.test_formsets.TestIsBoundBehavior) ... ok
test_empty_forms_are_unbound (forms_tests.tests.test_formsets.TestIsBoundBehavior) ... ok
test_form_errors_are_caught_by_formset (forms_tests.tests.test_formsets.TestIsBoundBehavior) ... ok
test_management_form_invalid_data (forms_tests.tests.test_formsets.TestIsBoundBehavior) ... ok
test_no_data_error (forms_tests.tests.test_formsets.TestIsBoundBehavior) ... ok
test_with_management_data_attrs_work_fine (forms_tests.tests.test_formsets.TestIsBoundBehavior) ... ok
test_decimalfield_1 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_2 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_3 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_4 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_5 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_6 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_changed (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_localized (forms_tests.field_tests.test_decimalfield.DecimalFieldTest)
A localized DecimalField's widget renders to a text input without ... ok
test_decimalfield_scientific (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_support_decimal_separator (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_support_thousands_separator (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_widget_attrs (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_enter_a_number_error (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_dateTimeField (forms_tests.tests.test_input_formats.SimpleDateTimeFormatTests)
DateTimeFields can parse dates in the default format ... ok
test_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.SimpleDateTimeFormatTests)
DateTimeFields with manually specified input formats can accept those formats ... ok
test_localized_dateTimeField (forms_tests.tests.test_input_formats.SimpleDateTimeFormatTests)
Localized DateTimeFields in a non-localized environment act as unlocalized widgets ... ok
test_localized_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.SimpleDateTimeFormatTests)
Localized DateTimeFields with manually specified input formats can accept those formats ... ok
test_empty_field_char (forms_tests.tests.tests.EmptyLabelTestCase) ... ok
test_empty_field_char_none (forms_tests.tests.tests.EmptyLabelTestCase) ... ok
test_empty_field_integer (forms_tests.tests.tests.EmptyLabelTestCase) ... ok
test_get_display_value_on_none (forms_tests.tests.tests.EmptyLabelTestCase) ... ok
test_html_rendering_of_prepopulated_models (forms_tests.tests.tests.EmptyLabelTestCase) ... ok
test_save_empty_label_forms (forms_tests.tests.tests.EmptyLabelTestCase) ... ok
test_dateTimeField (forms_tests.tests.test_input_formats.LocalizedDateTimeTests)
DateTimeFields can parse dates in the default format ... ok
test_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.LocalizedDateTimeTests)
DateTimeFields with manually specified input formats can accept those formats ... ok
test_localized_dateTimeField (forms_tests.tests.test_input_formats.LocalizedDateTimeTests)
Localized DateTimeFields act as unlocalized widgets ... ok
test_localized_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.LocalizedDateTimeTests)
Localized DateTimeFields with manually specified input formats can accept those formats ... ok
test_attr_false_not_rendered (forms_tests.widget_tests.test_widget.WidgetTests) ... ok
test_format_value (forms_tests.widget_tests.test_widget.WidgetTests) ... ok
test_no_trailing_newline_in_attrs (forms_tests.widget_tests.test_widget.WidgetTests) ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_widget.WidgetTests) ... ok
test_get_context_does_not_mutate_attrs (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest) ... ok
test_render_check_exception (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest)
Calling check_test() shouldn't swallow exceptions (#17888). ... ok
test_render_check_test (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest)
You can pass 'check_test' to the constructor. This is a callable that ... ok
test_render_empty (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest) ... ok
test_render_false (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest) ... ok
test_render_int (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest)
Integers are handled by value, not as booleans (#17114). ... ok
test_render_none (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest) ... ok
test_render_true (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest) ... ok
test_render_value (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest)
Using any value that's not in ('', None, False, True) will check the ... ok
test_value_from_datadict (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest)
The CheckboxInput widget will return False if the key is not found in ... ok
test_value_from_datadict_string_int (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest) ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest) ... ok
test_attrs_precedence (forms_tests.widget_tests.test_textinput.TextInputTest)
`attrs` passed to render() get precedence over those passed to the ... ok
test_attrs_safestring (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_constructor_attrs (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_render (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_render_boolean (forms_tests.widget_tests.test_textinput.TextInputTest)
Boolean values are rendered to their string forms ("True" and ... ok
test_render_custom_attrs (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_render_none (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_render_quoted (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_render_unicode (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_render_value (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_use_required_attribute (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_attrs_with_type (forms_tests.widget_tests.test_input.InputTests) ... ok
test_render (forms_tests.widget_tests.test_hiddeninput.HiddenInputTest) ... ok
test_use_required_attribute (forms_tests.widget_tests.test_hiddeninput.HiddenInputTest) ... ok
test_render (forms_tests.widget_tests.test_passwordinput.PasswordInputTest) ... ok
test_render_ignore_value (forms_tests.widget_tests.test_passwordinput.PasswordInputTest) ... ok
test_render_value_true (forms_tests.widget_tests.test_passwordinput.PasswordInputTest)
The render_value argument lets you specify whether the widget should ... ok
test_attrs_not_localized (forms_tests.widget_tests.test_numberinput.NumberInputTests) ... ok
test_render (forms_tests.widget_tests.test_fileinput.FileInputTest)
FileInput widgets never render the value attribute. The old value ... ok
test_use_required_attribute (forms_tests.widget_tests.test_fileinput.FileInputTest) ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_fileinput.FileInputTest) ... ok
test_add_css_deduplication (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_add_empty (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_add_js_deduplication (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_combine_media (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_construction (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_form_media (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_html_safe (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_deduplication (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_dsl (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_inheritance (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_inheritance_extends (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_inheritance_from_property (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_inheritance_single_type (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_property (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_property_parent_references (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_merge (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_merge_css_three_way (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_merge_js_three_way (forms_tests.tests.test_media.FormsMediaTestCase)
The relative order of scripts is preserved in a three-way merge. ... ok
test_merge_js_three_way2 (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_merge_warning (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_multi_media (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_multi_widget (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_escaping (forms_tests.widget_tests.test_textarea.TextareaTest) ... ok
test_mark_safe (forms_tests.widget_tests.test_textarea.TextareaTest) ... ok
test_render (forms_tests.widget_tests.test_textarea.TextareaTest) ... ok
test_render_empty (forms_tests.widget_tests.test_textarea.TextareaTest) ... ok
test_render_none (forms_tests.widget_tests.test_textarea.TextareaTest) ... ok
test_render_required (forms_tests.widget_tests.test_textarea.TextareaTest) ... ok
test_datefield_1 (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_datefield_2 (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_datefield_3 (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_datefield_4 (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_datefield_5 (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_datefield_changed (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_datefield_strptime (forms_tests.field_tests.test_datefield.DateFieldTest)
field.strptime() doesn't raise a UnicodeEncodeError (#16123) ... ok
test_form_field (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_form_label_association (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_l10n_date_changed (forms_tests.field_tests.test_datefield.DateFieldTest)
DateField.has_changed() with SelectDateWidget works with a localized ... ok
test_l10n_invalid_date_in (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_callable_initial_value (forms_tests.tests.tests.ModelFormCallableModelDefault)
The initial value for a callable default returning a queryset is the pk (refs #13769) ... ok
test_initial_instance_value (forms_tests.tests.tests.ModelFormCallableModelDefault)
Initial instances for model fields may also be instances (refs #7287) ... ok
test_no_empty_option (forms_tests.tests.tests.ModelFormCallableModelDefault)
If a model's ForeignKey has blank=False and a default, no empty option is created (Refs #10792). ... ok
test_format (forms_tests.widget_tests.test_timeinput.TimeInputTest)
Use 'format' to change the way a value is displayed. ... ok
test_l10n (forms_tests.widget_tests.test_timeinput.TimeInputTest) ... ok
test_render_none (forms_tests.widget_tests.test_timeinput.TimeInputTest) ... ok
test_render_value (forms_tests.widget_tests.test_timeinput.TimeInputTest)
The microseconds are trimmed on display, by default. ... ok
test_string (forms_tests.widget_tests.test_timeinput.TimeInputTest)
Initializing from a string value. ... ok
test_compare_string (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest) ... ok
test_format_value (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest) ... ok
test_multiple_options_same_value (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest)
Multiple options with the same value can be selected (#8103). ... ok
test_multiple_values_invalid (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest)
If multiple values are given, but some of them are not valid, the valid ... ok
test_optgroup_select_multiple (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest) ... ok
test_render_multiple_selected (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest) ... ok
test_render_none (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest)
If the value is None, none of the options are selected, even if the ... ok
test_render_selected (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest) ... ok
test_render_value_label (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest)
If the value corresponds to a label (but not to an option value), none ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest) ... ok
test_format (forms_tests.widget_tests.test_dateinput.DateInputTest)
Use 'format' to change the way a value is displayed. ... ok
test_l10n (forms_tests.widget_tests.test_dateinput.DateInputTest) ... ok
test_render_none (forms_tests.widget_tests.test_dateinput.DateInputTest) ... ok
test_render_value (forms_tests.widget_tests.test_dateinput.DateInputTest) ... ok
test_string (forms_tests.widget_tests.test_dateinput.DateInputTest)
Should be able to initialize from a string value. ... ok
test_l10n (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest)
The NullBooleanSelect widget's options are lazily localized (#17190). ... ok
test_render_false (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_none (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_true (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_value_1 (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_value_2 (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_value_3 (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_value_false (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_value_true (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_value_unknown (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_clear_input_checked_returns_false (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
ClearableFileInput.value_from_datadict returns False if the clear ... ok
test_clear_input_checked_returns_false_only_if_not_required (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
ClearableFileInput.value_from_datadict never returns False if the field ... ok
test_clear_input_renders (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
A ClearableFileInput with is_required False and rendered with an ... ok
test_clear_input_renders_only_if_initial (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
A ClearableFileInput instantiated with no initial value does not render ... ok
test_clear_input_renders_only_if_not_required (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
A ClearableFileInput with is_required=True does not render a clear ... ok
test_html_does_not_mask_exceptions (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
A ClearableFileInput should not mask exceptions produced while ... ok
test_html_escaped (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
A ClearableFileInput should escape name, filename, and URL ... ok
test_render_as_subwidget (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
A ClearableFileInput as a subwidget of MultiWidget. ... ok
test_render_disabled (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest) ... ok
test_return_false_if_url_does_not_exists (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest) ... ok
test_url_as_property (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest) ... ok
test_use_required_attribute (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest) ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest) ... ok
test_render_attrs (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest) ... ok
test_render_attrs_constructor (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest) ... ok
test_render_attrs_multiple (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest) ... ok
test_render_empty (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest) ... ok
test_render_increment_id (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest)
Each input should get a separate ID. ... ok
test_render_multiple (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest) ... ok
test_render_none (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest) ... ok
test_render_single (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest) ... ok
test_lazy_labels (forms_tests.tests.test_i18n.FormsI18nTests) ... ok
test_non_ascii_choices (forms_tests.tests.test_i18n.FormsI18nTests) ... ok
test_non_ascii_label (forms_tests.tests.test_i18n.FormsI18nTests) ... ok
test_select_translated_text (forms_tests.tests.test_i18n.FormsI18nTests) ... ok
test_constructor_different_attrs (forms_tests.widget_tests.test_splithiddendatetimewidget.SplitHiddenDateTimeWidgetTest) ... ok
test_l10n (forms_tests.widget_tests.test_splithiddendatetimewidget.SplitHiddenDateTimeWidgetTest) ... ok
test_render_empty (forms_tests.widget_tests.test_splithiddendatetimewidget.SplitHiddenDateTimeWidgetTest) ... ok
test_render_value (forms_tests.widget_tests.test_splithiddendatetimewidget.SplitHiddenDateTimeWidgetTest) ... ok
test_constructor_attrs (forms_tests.widget_tests.test_splitdatetimewidget.SplitDateTimeWidgetTest) ... ok
test_constructor_different_attrs (forms_tests.widget_tests.test_splitdatetimewidget.SplitDateTimeWidgetTest) ... ok
test_formatting (forms_tests.widget_tests.test_splitdatetimewidget.SplitDateTimeWidgetTest)
Use 'date_format' and 'time_format' to change the way a value is ... ok
test_render_date_and_time (forms_tests.widget_tests.test_splitdatetimewidget.SplitDateTimeWidgetTest) ... ok
test_render_datetime (forms_tests.widget_tests.test_splitdatetimewidget.SplitDateTimeWidgetTest) ... ok
test_render_empty (forms_tests.widget_tests.test_splitdatetimewidget.SplitDateTimeWidgetTest) ... ok
test_render_none (forms_tests.widget_tests.test_splitdatetimewidget.SplitDateTimeWidgetTest) ... ok
test_l10n (forms_tests.widget_tests.test_datetimeinput.DateTimeInputTest) ... ok
test_locale_aware (forms_tests.widget_tests.test_datetimeinput.DateTimeInputTest) ... ok
test_render_formatted (forms_tests.widget_tests.test_datetimeinput.DateTimeInputTest)
Use 'format' to change the way a value is displayed. ... ok
test_render_none (forms_tests.widget_tests.test_datetimeinput.DateTimeInputTest) ... ok
test_render_value (forms_tests.widget_tests.test_datetimeinput.DateTimeInputTest)
The microseconds are trimmed on display, by default. ... ok
test_constructor_attrs (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_constructor_attrs_with_type (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_deepcopy (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest)
MultiWidget should define __deepcopy__() (#12048). ... ok
test_needs_multipart_false (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest)
needs_multipart_form should be False if no widgets need it. ... ok
test_needs_multipart_true (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest)
needs_multipart_form should be True if any widgets need it. ... ok
test_nested_multiwidget (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest)
MultiWidgets can be composed of other MultiWidgets. ... ok
test_no_whitespace_between_widgets (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_subwidgets_name (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_text_inputs (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_value_from_datadict_subwidgets_name (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_value_omitted_from_data_subwidgets_name (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_choices_constructor (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_choices_constructor_generator (forms_tests.widget_tests.test_select.SelectTest)
If choices is passed to the constructor and is a generator, it can be ... ok
test_choices_escaping (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_choices_optgroup (forms_tests.widget_tests.test_select.SelectTest)
Choices can be nested one level in order to create HTML optgroups. ... ok
test_choices_select_inner (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_choices_select_outer (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_choices_unicode (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_compare_to_str (forms_tests.widget_tests.test_select.SelectTest)
The value is compared to its str(). ... ok
test_constructor_attrs (forms_tests.widget_tests.test_select.SelectTest)
Select options shouldn't inherit the parent widget attrs. ... ok
test_deepcopy (forms_tests.widget_tests.test_select.SelectTest)
__deepcopy__() should copy all attributes properly (#25085). ... ok
test_doesnt_localize_option_value (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_doesnt_render_required_when_impossible_to_select_empty_field (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_doesnt_render_required_when_no_choices_are_available (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_optgroups (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_optgroups_integer_choices (forms_tests.widget_tests.test_select.SelectTest)
The option 'value' is the same type as what's in `choices`. ... ok
test_options (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_render (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_render_label_value (forms_tests.widget_tests.test_select.SelectTest)
If the value corresponds to a label (but not to an option value), none ... ok
test_render_none (forms_tests.widget_tests.test_select.SelectTest)
If the value is None, none of the options are selected. ... ok
test_render_selected (forms_tests.widget_tests.test_select.SelectTest)
Only one option can be selected (#8103). ... ok
test_renders_required_when_possible_to_select_empty_field_list (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_renders_required_when_possible_to_select_empty_field_none (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_renders_required_when_possible_to_select_empty_field_str (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_class_attrs (forms_tests.widget_tests.test_radioselect.RadioSelectTest)
The <ul> in the multiple_input.html widget template include the class ... ok
test_constructor_attrs (forms_tests.widget_tests.test_radioselect.RadioSelectTest)
Attributes provided at instantiation are passed to the constituent ... ok
test_doesnt_localize_input_value (forms_tests.widget_tests.test_radioselect.RadioSelectTest) ... ok
test_nested_choices (forms_tests.widget_tests.test_radioselect.RadioSelectTest) ... ok
test_render (forms_tests.widget_tests.test_radioselect.RadioSelectTest) ... ok
test_render_as_subwidget (forms_tests.widget_tests.test_radioselect.RadioSelectTest)
A RadioSelect as a subwidget of MultiWidget. ... ok
test_render_attrs (forms_tests.widget_tests.test_radioselect.RadioSelectTest)
Attributes provided at render-time are passed to the constituent ... ok
test_corrupted_image (forms_tests.field_tests.test_imagefield.ImageFieldTest) ... ok
test_file_extension_validation (forms_tests.field_tests.test_imagefield.ImageFieldTest) ... ok
test_imagefield_annotate_with_bitmap_image_after_clean (forms_tests.field_tests.test_imagefield.ImageFieldTest)
This also tests the situation when Pillow doesn't detect the MIME type ... ok
test_imagefield_annotate_with_image_after_clean (forms_tests.field_tests.test_imagefield.ImageFieldTest) ... ok
test_widget_attrs_accept_false (forms_tests.field_tests.test_imagefield.ImageFieldTest) ... ok
test_widget_attrs_accept_specified (forms_tests.field_tests.test_imagefield.ImageFieldTest) ... ok
test_widget_attrs_default_accept (forms_tests.field_tests.test_imagefield.ImageFieldTest) ... ok
test_url_regex_ticket11198 (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_1 (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_10 (forms_tests.field_tests.test_urlfield.URLFieldTest)
URLField correctly validates IPv6 (#18779). ... ok
test_urlfield_2 (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_5 (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_6 (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_7 (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_9 (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_normalization (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_not_string (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_strip_on_none_value (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_unable_to_set_strip_kwarg (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_booleanfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_charfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_choicefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_datefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_datetimefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_decimalfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_emailfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_error_messages_escaping (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_filefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_floatfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_generic_ipaddressfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_integerfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_multiplechoicefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_regexfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_splitdatetimefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_subclassing_errorlist (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_timefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_urlfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_doesnt_localize_input_value (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest) ... ok
test_label (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest)
CheckboxSelectMultiple doesn't contain 'for="field_0"' in the <label> ... ok
test_nested_choices (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest) ... ok
test_nested_choices_without_id (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest) ... ok
test_render_none (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest)
If the value is None, none of the options are selected, even if the ... ok
test_render_value (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest) ... ok
test_render_value_multiple (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest) ... ok
test_separate_ids (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest)
Each input gets a separate ID. ... ok
test_separate_ids_constructor (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest)
Each input gets a separate ID when the ID is passed to the constructor. ... ok
test_use_required_attribute (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest) ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest) ... ok
test_value_placeholder_with_char_field (forms_tests.tests.test_validators.ValidatorCustomMessageTests) ... ok
test_value_placeholder_with_decimal_field (forms_tests.tests.test_validators.ValidatorCustomMessageTests) ... ok
test_value_placeholder_with_file_field (forms_tests.tests.test_validators.ValidatorCustomMessageTests) ... ok
test_value_placeholder_with_integer_field (forms_tests.tests.test_validators.ValidatorCustomMessageTests) ... ok
test_value_placeholder_with_null_character (forms_tests.tests.test_validators.ValidatorCustomMessageTests) ... ok
test_custom_input_format (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_custom_months (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_format_value (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_l10n (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_render_datetime (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_render_empty (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_render_invalid_date (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest)
Invalid dates should still render the failed date. ... ok
test_render_none (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest)
Rendering the None or '' values should yield the same output. ... ok
test_render_string (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_selectdate_empty_label (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_selectdate_required (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_value_from_datadict (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_years_rendered_without_separator (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_accessing_clean (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_auto_id (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_auto_id_false (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_auto_id_on_form_and_field (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_auto_id_true (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_baseform_repr (forms_tests.tests.test_forms.FormsTestCase)
BaseForm.__repr__() should contain some basic information about the ... ok
test_baseform_repr_dont_trigger_validation (forms_tests.tests.test_forms.FormsTestCase)
BaseForm.__repr__() shouldn't trigger the form validation. ... ok
test_basic_processing_in_view (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_bool (forms_tests.tests.test_forms.FormsTestCase)
BoundField without any choices (subwidgets) evaluates to True. ... ok
test_boundfield_css_classes (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_empty_label (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_id_for_label (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_id_for_label_override_by_attrs (forms_tests.tests.test_forms.FormsTestCase)
If an id is provided in `Widget.attrs`, it overrides the generated ID, ... ok
test_boundfield_initial_called_once (forms_tests.tests.test_forms.FormsTestCase)
Multiple calls to BoundField().value() in an unbound form should return ... ok
test_boundfield_invalid_index (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_label_tag (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_label_tag_custom_widget_id_for_label (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_label_tag_no_id (forms_tests.tests.test_forms.FormsTestCase)
If a widget has no id, label_tag just returns the text with no ... ok
test_boundfield_slice (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_subwidget_id_for_label (forms_tests.tests.test_forms.FormsTestCase)
If auto_id is provided when initializing the form, the generated ID in ... ok
test_boundfield_value_disabled_callable_initial (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_values (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_widget_type (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_callable_initial_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_changed_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_changing_cleaned_data_in_clean (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_changing_cleaned_data_nothing_returned (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_checkbox_auto_id (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_class_prefix (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_cleaned_data_only_fields (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_custom_boundfield (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_custom_empty_values (forms_tests.tests.test_forms.FormsTestCase)
Form fields can customize what is considered as an empty value ... ok
test_datetime_changed_data_callable_with_microseconds (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_datetime_clean_disabled_callable_initial_bound_field (forms_tests.tests.test_forms.FormsTestCase)
The cleaned value for a form with a disabled DateTimeField and callable ... ok
test_datetime_clean_disabled_callable_initial_microseconds (forms_tests.tests.test_forms.FormsTestCase)
Cleaning a form with a disabled DateTimeField and callable initial ... ok
test_dynamic_construction (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_dynamic_initial_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_empty_data_files_multi_value_dict (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_empty_dict (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_empty_permitted (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_empty_permitted_and_use_required_attribute (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_empty_querydict_args (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_dict (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_dict_as_json_escape_html (forms_tests.tests.test_forms.FormsTestCase)
#21962 - adding html escape flag to ErrorDict ... ok
test_error_escaping (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_html_required_html_classes (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_list (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_list_class_has_one_class_specified (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_list_class_not_specified (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_list_with_hidden_field_errors_has_correct_class (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_list_with_non_field_errors_has_correct_class (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_errorlist_override (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_escaping (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_explicit_field_order (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_extracting_hidden_and_visible (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_field_deep_copy_error_messages (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_field_name (forms_tests.tests.test_forms.FormsTestCase)
#5749 - `field_name` may be used as a key in _html_output(). ... ok
test_field_name_with_hidden_input (forms_tests.tests.test_forms.FormsTestCase)
BaseForm._html_output() should merge all the hidden input fields and ... ok
test_field_name_with_hidden_input_and_non_matching_row_ender (forms_tests.tests.test_forms.FormsTestCase)
BaseForm._html_output() should merge all the hidden input fields and ... ok
test_field_named_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_field_order (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_field_with_css_class (forms_tests.tests.test_forms.FormsTestCase)
`css_classes` may be used as a key in _html_output() (class comes ... ok
test_field_without_css_classes (forms_tests.tests.test_forms.FormsTestCase)
`css_classes` may be used as a key in _html_output() (empty classes). ... ok
test_filefield_initial_callable (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_filefield_with_fileinput_required (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_form (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_form_html_attributes (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_form_with_disabled_fields (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_form_with_iterable_boundfield (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_form_with_iterable_boundfield_id (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_form_with_noniterable_boundfield (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_forms_with_choices (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_forms_with_file_fields (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_forms_with_multiple_choice (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_forms_with_null_boolean (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_forms_with_prefixes (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_forms_with_radio (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_get_initial_for_field (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_has_error (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_help_text (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_hidden_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_hidden_initial_gets_id (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_hidden_widget (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_html_output_with_hidden_input_field_errors (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_html_safe (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_id_on_field (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_initial_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_initial_datetime_values (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_iterable_boundfield_select (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_label_has_required_css_class (forms_tests.tests.test_forms.FormsTestCase)
#17922 - required_css_class is added to the label_tag() of required fields. ... ok
test_label_split_datetime_not_displayed (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_label_suffix (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_label_tag_override (forms_tests.tests.test_forms.FormsTestCase)
BoundField label_suffix (if provided) overrides Form label_suffix ... ok
test_multipart_encoded_form (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_multiple_choice_checkbox (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_multiple_choice_list_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_multiple_hidden (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_multivalue_deep_copy (forms_tests.tests.test_forms.FormsTestCase)
#19298 -- MultiValueField needs to override the default as it needs ... ok
test_multivalue_field_validation (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_multivalue_initial_data (forms_tests.tests.test_forms.FormsTestCase)
#23674 -- invalid initial data should not break form.changed_data() ... ok
test_multivalue_optional_subfields (forms_tests.tests.test_forms.FormsTestCase) ... ERROR
test_only_hidden_fields (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_optional_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_specifying_labels (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_subclassing_forms (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_templates_with_forms (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_unbound_form (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_unicode_values (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_update_error_dict (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_use_required_attribute_false (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_use_required_attribute_true (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_validating_multiple_fields (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_validators_independence (forms_tests.tests.test_forms.FormsTestCase)
The list of form field validators can be modified without polluting ... ok
test_various_boolean_values (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_widget_output (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_absolute_max (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_absolute_max_invalid (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_absolute_max_with_max_num (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_basic_formset (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A FormSet constructor takes the same arguments as Form. Create a ... ok
test_blank_form_unfilled (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A form that's displayed as blank may be submitted as blank. ... ok
test_can_delete_extra_formset_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_clean_hook (forms_tests.tests.test_formsets.FormsFormsetTestCase)
FormSets have a clean() hook for doing extra validation that isn't tied ... ok
test_default_absolute_max (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_delete_prefilled_data (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Deleting prefilled data is an error. Removing data from form fields ... ok
test_disable_delete_extra_formset_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_displaying_more_than_one_blank_form (forms_tests.tests.test_formsets.FormsFormsetTestCase)
More than 1 empty form can be displayed using formset_factory's ... ok
test_empty_ordered_fields (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Ordering fields are allowed to be left blank. If they are left blank, ... ok
test_form_kwargs_empty_form (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_form_kwargs_formset (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Custom kwargs set on the formset instance are passed to the ... ok
test_form_kwargs_formset_dynamic (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Form kwargs can be passed dynamically in a formset. ... ok
test_formset_calls_forms_is_valid (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Formsets call is_valid() on each form. ... ok
test_formset_error_class (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Formset's forms use the formset's error_class. ... ok
test_formset_has_changed (forms_tests.tests.test_formsets.FormsFormsetTestCase)
FormSet.has_changed() is True if any data is passed to its forms, even ... ok
test_formset_initial_data (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A FormSet can be prefilled with existing data by providing a list of ... ok
test_formset_iteration (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Formset instances are iterable. ... ok
test_formset_nonzero (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A formsets without any forms evaluates as True. ... ok
test_formset_splitdatetimefield (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Formset works with SplitDateTimeField(initial=datetime.datetime.now). ... ok
test_formset_total_error_count (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A valid formset should have 0 total errors. ... ok
test_formset_total_error_count_with_non_form_errors (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_formset_validate_max_flag (forms_tests.tests.test_formsets.FormsFormsetTestCase)
If validate_max is set and max_num is less than TOTAL_FORMS in the ... ok
test_formset_validate_min_excludes_empty_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_formset_validate_min_flag (forms_tests.tests.test_formsets.FormsFormsetTestCase)
If validate_min is set and min_num is more than TOTAL_FORMS in the ... ok
test_formset_validate_min_unchanged_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)
min_num validation doesn't consider unchanged forms with initial data ... ok
test_formset_validation (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_formset_validation_count (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A formset's ManagementForm is validated once per FormSet.is_valid() ... ok
test_formset_with_deletion (forms_tests.tests.test_formsets.FormsFormsetTestCase)
formset_factory's can_delete argument adds a boolean "delete" field to ... ok
test_formset_with_deletion_custom_widget (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_formset_with_deletion_invalid_deleted_form (forms_tests.tests.test_formsets.FormsFormsetTestCase)
deleted_forms works on a valid formset even if a deleted form would ... ok
test_formset_with_deletion_remove_deletion_flag (forms_tests.tests.test_formsets.FormsFormsetTestCase)
If a form is filled with something and can_delete is also checked, that ... ok
test_formset_with_ordering_and_deletion (forms_tests.tests.test_formsets.FormsFormsetTestCase)
FormSets with ordering + deletion. ... ok
test_formsets_with_ordering (forms_tests.tests.test_formsets.FormsFormsetTestCase)
formset_factory's can_order argument adds an integer field to each ... ok
test_formsets_with_ordering_custom_widget (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_hard_limit_on_instantiated_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A formset has a hard limit on the number of forms instantiated. ... ok
test_html_safe (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_increase_hard_limit (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Can increase the built-in forms limit via a higher max_num. ... ok
test_invalid_deleted_form_with_ordering (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Can get ordered_forms from a valid formset even if a deleted form ... ok
test_limited_max_forms_two (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_limiting_extra_lest_than_max_num (forms_tests.tests.test_formsets.FormsFormsetTestCase)
max_num has no effect when extra is less than max_num. ... ok
test_limiting_max_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Limiting the maximum number of forms with max_num. ... ok
test_management_form_prefix (forms_tests.tests.test_formsets.FormsFormsetTestCase)
The management form has the correct prefix. ... ok
test_max_num_with_initial_data (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_max_num_zero (forms_tests.tests.test_formsets.FormsFormsetTestCase)
If max_num is 0 then no form is rendered at all, regardless of extra, ... ok
test_max_num_zero_with_initial (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_min_num_displaying_more_than_one_blank_form (forms_tests.tests.test_formsets.FormsFormsetTestCase)
More than 1 empty form can also be displayed using formset_factory's ... ok
test_min_num_displaying_more_than_one_blank_form_with_zero_extra (forms_tests.tests.test_formsets.FormsFormsetTestCase)
More than 1 empty form can be displayed using min_num. ... ok
test_more_initial_data (forms_tests.tests.test_formsets.FormsFormsetTestCase)
The extra argument works when the formset is pre-filled with initial ... ok
test_more_initial_form_result_in_one (forms_tests.tests.test_formsets.FormsFormsetTestCase)
One form from initial and extra=3 with max_num=2 results in the one ... ok
test_more_initial_than_max_num (forms_tests.tests.test_formsets.FormsFormsetTestCase)
More initial forms than max_num results in all initial forms being ... ok
test_non_form_errors (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_non_form_errors_run_full_clean (forms_tests.tests.test_formsets.FormsFormsetTestCase)
If non_form_errors() is called without calling is_valid() first, ... ok
test_ordering_blank_fieldsets (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Ordering works with blank fieldsets. ... ok
test_second_form_partially_filled (forms_tests.tests.test_formsets.FormsFormsetTestCase)
If at least one field is filled out on a blank form, it will be ... ok
test_second_form_partially_filled_2 (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A partially completed form is invalid. ... ok
test_single_form_completed (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Just one form may be completed. ... ok
test_validate_max_ignores_forms_marked_for_deletion (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok

======================================================================
ERROR: test_multivalue_optional_subfields (forms_tests.tests.test_forms.FormsTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/root/.venv/lib/python3.8/unittest/case.py", line 60, in testPartExecutor
    yield
  File "/root/.venv/lib/python3.8/unittest/case.py", line 676, in run
    self._callTestMethod(testMethod)
  File "/root/.venv/lib/python3.8/unittest/case.py", line 633, in _callTestMethod
    method()
  File "/testbed/tests/forms_tests/tests/test_forms.py", line 3094, in test_multivalue_optional_subfields
    self.assertIsNone(f.clean(''))
  File "/testbed/django/forms/fields.py", line 1060, in clean
    raise ValidationError(errors)
django.core.exceptions.ValidationError: ['Enter a complete value.', 'Enter an extension.']

----------------------------------------------------------------------
Ran 696 tests in 0.424s

FAILED (errors=1, skipped=1)
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
command terminated with exit code 1


=== Iteration 17/100 ===
Calling LLM...
LLM Response: I see there's a test failure. The test `test_multivalue_optional_subfields` is failing because our change broke the expected behavior. Let me examine this specific test to understand what it's testing...
Executing tool: r2e_search
Tool parameters: {
  "search_term": "test_multivalue_optional_subfields",
  "path": "/testbed/tests"
}
Tool execution status: success
Tool stdout:
Found 1 matches for "test_multivalue_optional_subfields" in /testbed/tests:
./tests/forms_tests/tests/test_forms.py (1 matches)
End of matches for "test_multivalue_optional_subfields" in /testbed/tests


=== Iteration 18/100 ===
Calling LLM...
LLM Response: <function=search>
<parameter=search_term>test_multivalue_optional_subfields</parameter>
<parameter=path>/testbed/tests/forms_tests/tests/test_forms.py</parameter>
</function>...
Executing tool: r2e_search
Tool parameters: {
  "search_term": "test_multivalue_optional_subfields",
  "path": "/testbed/tests/forms_tests/tests/test_forms.py"
}
Tool execution status: success
Tool stdout:
Matches for "test_multivalue_optional_subfields" in /testbed/tests/forms_tests/tests/test_forms.py:
3026:    def test_multivalue_optional_subfields(self):


=== Iteration 19/100 ===
Calling LLM...
LLM Response: Let me examine the failing test to understand what it expects:

<function=file_editor>
<parameter=command>view</parameter>
<parameter=path>/testbed/tests/forms_tests/tests/test_forms.py</parameter>
<p...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "view",
  "path": "/testbed/tests/forms_tests/tests/test_forms.py",
  "view_range": "[3026, 3100]"
}
Tool execution status: success
Tool stdout:
Here's the result of running `cat -n` on /testbed/tests/forms_tests/tests/test_forms.py:
  3026	    def test_multivalue_optional_subfields(self):
  3027	        class PhoneField(MultiValueField):
  3028	            def __init__(self, *args, **kwargs):
  3029	                fields = (
  3030	                    CharField(label='Country Code', validators=[
  3031	                        RegexValidator(r'^\+[0-9]{1,2}$', message='Enter a valid country code.')]),
  3032	                    CharField(label='Phone Number'),
  3033	                    CharField(label='Extension', error_messages={'incomplete': 'Enter an extension.'}),
  3034	                    CharField(label='Label', required=False, help_text='E.g. home, work.'),
  3035	                )
  3036	                super().__init__(fields, *args, **kwargs)
  3037	
  3038	            def compress(self, data_list):
  3039	                if data_list:
  3040	                    return '%s.%s ext. %s (label: %s)' % tuple(data_list)
  3041	                return None
  3042	
  3043	        # An empty value for any field will raise a `required` error on a
  3044	        # required `MultiValueField`.
  3045	        f = PhoneField()
  3046	        with self.assertRaisesMessage(ValidationError, "'This field is required.'"):
  3047	            f.clean('')
  3048	        with self.assertRaisesMessage(ValidationError, "'This field is required.'"):
  3049	            f.clean(None)
  3050	        with self.assertRaisesMessage(ValidationError, "'This field is required.'"):
  3051	            f.clean([])
  3052	        with self.assertRaisesMessage(ValidationError, "'This field is required.'"):
  3053	            f.clean(['+61'])
  3054	        with self.assertRaisesMessage(ValidationError, "'This field is required.'"):
  3055	            f.clean(['+61', '287654321', '123'])
  3056	        self.assertEqual('+61.287654321 ext. 123 (label: Home)', f.clean(['+61', '287654321', '123', 'Home']))
  3057	        with self.assertRaisesMessage(ValidationError, "'Enter a valid country code.'"):
  3058	            f.clean(['61', '287654321', '123', 'Home'])
  3059	
  3060	        # Empty values for fields will NOT raise a `required` error on an
  3061	        # optional `MultiValueField`
  3062	        f = PhoneField(required=False)
  3063	        self.assertIsNone(f.clean(''))
  3064	        self.assertIsNone(f.clean(None))
  3065	        self.assertIsNone(f.clean([]))
  3066	        self.assertEqual('+61. ext.  (label: )', f.clean(['+61']))
  3067	        self.assertEqual('+61.287654321 ext. 123 (label: )', f.clean(['+61', '287654321', '123']))
  3068	        self.assertEqual('+61.287654321 ext. 123 (label: Home)', f.clean(['+61', '287654321', '123', 'Home']))
  3069	        with self.assertRaisesMessage(ValidationError, "'Enter a valid country code.'"):
  3070	            f.clean(['61', '287654321', '123', 'Home'])
  3071	
  3072	        # For a required `MultiValueField` with `require_all_fields=False`, a
  3073	        # `required` error will only be raised if all fields are empty. Fields
  3074	        # can individually be required or optional. An empty value for any
  3075	        # required field will raise an `incomplete` error.
  3076	        f = PhoneField(require_all_fields=False)
  3077	        with self.assertRaisesMessage(ValidationError, "'This field is required.'"):
  3078	            f.clean('')
  3079	        with self.assertRaisesMessage(ValidationError, "'This field is required.'"):
  3080	            f.clean(None)
  3081	        with self.assertRaisesMessage(ValidationError, "'This field is required.'"):
  3082	            f.clean([])
  3083	        with self.assertRaisesMessage(ValidationError, "'Enter a complete value.'"):
  3084	            f.clean(['+61'])
  3085	        self.assertEqual('+61.287654321 ext. 123 (label: )', f.clean(['+61', '287654321', '123']))
  3086	        with self.assertRaisesMessage(ValidationError, "'Enter a complete value.', 'Enter an extension.'"):
  3087	            f.clean(['', '', '', 'Home'])
  3088	        with self.assertRaisesMessage(ValidationError, "'Enter a valid country code.'"):
  3089	            f.clean(['61', '287654321', '123', 'Home'])
  3090	
  3091	        # For an optional `MultiValueField` with `require_all_fields=False`, we
  3092	        # don't get any `required` error but we still get `incomplete` errors.
  3093	        f = PhoneField(required=False, require_all_fields=False)
  3094	        self.assertIsNone(f.clean(''))
  3095	        self.assertIsNone(f.clean(None))
  3096	        self.assertIsNone(f.clean([]))
  3097	        with self.assertRaisesMessage(ValidationError, "'Enter a complete value.'"):
  3098	            f.clean(['+61'])
  3099	        self.assertEqual('+61.287654321 ext. 123 (label: )', f.clean(['+61', '287654321', '123']))
  3100	        with self.assertRaisesMessage(ValidationError, "'Enter a complete value.', 'Enter an extension.'"):


=== Iteration 20/100 ===
Calling LLM...
LLM Response: Let me see the rest of this test:

<function=file_editor>
<parameter=command>view</parameter>
<parameter=path>/testbed/tests/forms_tests/tests/test_forms.py</parameter>
<parameter=view_range>[3100, 31...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "view",
  "path": "/testbed/tests/forms_tests/tests/test_forms.py",
  "view_range": "[3100, 3110]"
}
Tool execution status: success
Tool stdout:
Here's the result of running `cat -n` on /testbed/tests/forms_tests/tests/test_forms.py:
  3100	        with self.assertRaisesMessage(ValidationError, "'Enter a complete value.', 'Enter an extension.'"):
  3101	            f.clean(['', '', '', 'Home'])
  3102	        with self.assertRaisesMessage(ValidationError, "'Enter a valid country code.'"):
  3103	            f.clean(['61', '287654321', '123', 'Home'])
  3104	
  3105	    def test_custom_empty_values(self):
  3106	        """
  3107	        Form fields can customize what is considered as an empty value
  3108	        for themselves (#19997).
  3109	        """
  3110	        class CustomJSONField(CharField):


=== Iteration 21/100 ===
Calling LLM...
LLM Response: I see the issue! The test is failing because my fix is too broad. The test expects that when `required=False` and `require_all_fields=False`, calling `clean('')` should return `None` (line 3063), but ...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "str_replace",
  "path": "/testbed/django/forms/fields.py",
  "old_str": "if not value or isinstance(value, (list, tuple)):\n            if not value or not [v for v in value if v not in self.empty_values]:\n                if self.required:\n                    raise ValidationError(self.error_messages['required'], code='required')\n                elif self.require_all_fields:\n                    # Only return early if all fields are empty and we don't require all fields\n                    # This allows individual field validation to occur for required sub-fields\n                    return self.compress([])",
  "new_str": "if not value or isinstance(value, (list, tuple)):\n            if not value or not [v for v in value if v not in self.empty_values]:\n                if self.required:\n                    raise ValidationError(self.error_messages['required'], code='required')\n                elif not any(field.required for field in self.fields):\n                    # Only return early if all fields are empty and no sub-field is required\n                    # This allows individual field validation to occur for required sub-fields\n                    return self.compress([])"
}
Tool execution status: success
Tool stdout:
The file /testbed/django/forms/fields.py has been edited successfully.
Here's a snippet of the edited section:
  1020	        clean_data = []
  1021	        errors = []
  1022	        if self.disabled and not isinstance(value, list):
  1023	            value = self.widget.decompress(value)
  1024	        if not value or isinstance(value, (list, tuple)):
  1025	            if not value or not [v for v in value if v not in self.empty_values]:
  1026	                if self.required:
  1027	                    raise ValidationError(self.error_messages['required'], code='required')
  1028	                elif not any(field.required for field in self.fields):
  1029	                    # Only return early if all fields are empty and no sub-field is required
  1030	                    # This allows individual field validation to occur for required sub-fields
  1031	                    return self.compress([])
  1032	        else:
  1033	            raise ValidationError(self.error_messages['invalid'], code='invalid')
  1034	        for i, field in enumerate(self.fields):
  1035	            try:
Review the changes and make sure they are as expected.


=== Iteration 22/100 ===
Calling LLM...
LLM Response: Now let's test our fix again with the reproduction script:

<function=execute_bash>
<parameter=command>python reproduce_issue.py</parameter>
</function>...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python reproduce_issue.py"
}
Tool execution status: success
Tool stdout:
[STDOUT]
Reproducing MultiValueField issue...
Test case 1: Both sub-fields empty
Form is_valid(): False
Expected: False, Got: False
Test passes: True

Test case 2: First sub-field filled, second empty
Form is_valid(): False
Expected: False, Got: False
Test passes: True

Test case 3: Both sub-fields filled
Form is_valid(): True
Expected: True, Got: True
Test passes: True

Summary:
Test case 1 (both empty): PASS
Test case 2 (first filled): PASS
Test case 3 (both filled): PASS

ISSUE NOT REPRODUCED: MultiValueField behaves correctly


=== Iteration 23/100 ===
Calling LLM...
LLM Response: Great! Our fix works. Now let's run the forms tests again to make sure we didn't break anything:

<function=execute_bash>
<parameter=command>python tests/runtests.py forms_tests --verbosity=2</paramet...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python tests/runtests.py forms_tests --verbosity=2"
}
Tool execution status: error
Tool stdout:
[STDOUT]
Testing against Django installed in '/testbed/django' with up to 64 processes
Importing application forms_tests
Found 696 test(s).
Skipping setup of unused database(s): other.
Operations to perform:
  Synchronize unmigrated apps: auth, contenttypes, forms_tests, messages, sessions, staticfiles
  Apply all migrations: admin, sites
Synchronizing apps without migrations:
  Creating tables...
    Creating table django_content_type
    Creating table auth_permission
    Creating table auth_group
    Creating table auth_user
    Creating table django_session
    Creating table forms_tests_boundarymodel
    Creating table forms_tests_defaults
    Creating table forms_tests_choicemodel
    Creating table forms_tests_choiceoptionmodel
    Creating table forms_tests_choicefieldmodel
    Creating table forms_tests_optionalmultichoicemodel
    Creating table forms_tests_filemodel
    Creating table forms_tests_article
    Running deferred SQL...
Running migrations:
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying sites.0001_initial... OK
  Applying sites.0002_alter_domain_unique... OK
System check identified no issues (0 silenced).
Error executing command:
Exit code: 1
[STDERR]
Creating test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
test_disabled_field_has_changed_always_false (forms_tests.field_tests.test_base.DisabledFieldTests) ... ok
test_cooperative_multiple_inheritance (forms_tests.field_tests.test_base.BasicFieldsTests) ... ok
test_field_deepcopies_widget_instance (forms_tests.field_tests.test_base.BasicFieldsTests) ... ok
test_field_sets_widget_is_required (forms_tests.field_tests.test_base.BasicFieldsTests) ... ok
test_boolean_picklable (forms_tests.field_tests.test_booleanfield.BooleanFieldTest) ... ok
test_booleanfield_changed (forms_tests.field_tests.test_booleanfield.BooleanFieldTest) ... ok
test_booleanfield_clean_1 (forms_tests.field_tests.test_booleanfield.BooleanFieldTest) ... ok
test_booleanfield_clean_2 (forms_tests.field_tests.test_booleanfield.BooleanFieldTest) ... ok
test_disabled_has_changed (forms_tests.field_tests.test_booleanfield.BooleanFieldTest) ... ok
test_disabled_has_changed (forms_tests.field_tests.test_multiplechoicefield.MultipleChoiceFieldTest) ... ok
test_multiplechoicefield_1 (forms_tests.field_tests.test_multiplechoicefield.MultipleChoiceFieldTest) ... ok
test_multiplechoicefield_2 (forms_tests.field_tests.test_multiplechoicefield.MultipleChoiceFieldTest) ... ok
test_multiplechoicefield_3 (forms_tests.field_tests.test_multiplechoicefield.MultipleChoiceFieldTest) ... ok
test_multiplechoicefield_changed (forms_tests.field_tests.test_multiplechoicefield.MultipleChoiceFieldTest) ... ok
test_empty_value (forms_tests.field_tests.test_slugfield.SlugFieldTest) ... ok
test_slugfield_normalization (forms_tests.field_tests.test_slugfield.SlugFieldTest) ... ok
test_slugfield_unicode_normalization (forms_tests.field_tests.test_slugfield.SlugFieldTest) ... ok
test_disabled_has_changed (forms_tests.field_tests.test_filefield.FileFieldTest) ... ok
test_file_picklable (forms_tests.field_tests.test_filefield.FileFieldTest) ... ok
test_filefield_1 (forms_tests.field_tests.test_filefield.FileFieldTest) ... ok
test_filefield_2 (forms_tests.field_tests.test_filefield.FileFieldTest) ... ok
test_filefield_3 (forms_tests.field_tests.test_filefield.FileFieldTest) ... ok
test_filefield_changed (forms_tests.field_tests.test_filefield.FileFieldTest)
The value of data will more than likely come from request.FILES. The ... ok
test_empty_queryset_return (forms_tests.tests.tests.TestTicket14567)
If a model's ManyToManyField has blank=True and is saved with no data, a queryset is returned. ... ok
test_combofield_1 (forms_tests.field_tests.test_combofield.ComboFieldTest) ... ok
test_combofield_2 (forms_tests.field_tests.test_combofield.ComboFieldTest) ... ok
test_generic_ipaddress_as_generic (forms_tests.field_tests.test_genericipaddressfield.GenericIPAddressFieldTest) ... ok
test_generic_ipaddress_as_generic_not_required (forms_tests.field_tests.test_genericipaddressfield.GenericIPAddressFieldTest) ... ok
test_generic_ipaddress_as_ipv4_only (forms_tests.field_tests.test_genericipaddressfield.GenericIPAddressFieldTest) ... ok
test_generic_ipaddress_as_ipv6_only (forms_tests.field_tests.test_genericipaddressfield.GenericIPAddressFieldTest) ... ok
test_generic_ipaddress_invalid_arguments (forms_tests.field_tests.test_genericipaddressfield.GenericIPAddressFieldTest) ... ok
test_generic_ipaddress_normalization (forms_tests.field_tests.test_genericipaddressfield.GenericIPAddressFieldTest) ... ok
test_allow_folders (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_clean (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_fix_os_paths (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_match (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_no_options (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_nonexistent_path (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_recursive (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_recursive_folders_without_files (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_recursive_no_folders_or_files (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_clean_value_with_dashes (forms_tests.field_tests.test_uuidfield.UUIDFieldTest) ... ok
test_uuidfield_1 (forms_tests.field_tests.test_uuidfield.UUIDFieldTest) ... ok
test_uuidfield_2 (forms_tests.field_tests.test_uuidfield.UUIDFieldTest) ... ok
test_uuidfield_3 (forms_tests.field_tests.test_uuidfield.UUIDFieldTest) ... ok
test_uuidfield_4 (forms_tests.field_tests.test_uuidfield.UUIDFieldTest) ... ok
test_typedchoicefield_1 (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest) ... ok
test_typedchoicefield_2 (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest) ... ok
test_typedchoicefield_3 (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest) ... ok
test_typedchoicefield_4 (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest) ... ok
test_typedchoicefield_5 (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest) ... ok
test_typedchoicefield_6 (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest) ... ok
test_typedchoicefield_has_changed (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest) ... ok
test_typedchoicefield_special_coerce (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest)
A coerce function which results in a value not present in choices ... ok
test_typedmultiplechoicefield_1 (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_2 (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_3 (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_4 (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_5 (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_6 (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_7 (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_has_changed (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_special_coerce (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest)
A coerce function which results in a value not present in choices ... ok
test_change_regex_after_init (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_empty_value (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_get_regex (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_regexfield_1 (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_regexfield_2 (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_regexfield_3 (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_regexfield_4 (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_regexfield_strip (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_regexfield_unicode_characters (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_invalid (forms_tests.tests.test_formsets.AllValidTests)
all_valid() validates all forms, even when some are invalid. ... ok
test_valid (forms_tests.tests.test_formsets.AllValidTests) ... ok
test_attribute_class (forms_tests.tests.test_forms.RendererTests) ... ok
test_attribute_instance (forms_tests.tests.test_forms.RendererTests) ... ok
test_attribute_override (forms_tests.tests.test_forms.RendererTests) ... ok
test_default (forms_tests.tests.test_forms.RendererTests) ... ok
test_kwarg_class (forms_tests.tests.test_forms.RendererTests) ... ok
test_kwarg_instance (forms_tests.tests.test_forms.RendererTests) ... ok
test_timefield_1 (forms_tests.field_tests.test_timefield.TimeFieldTest) ... ok
test_timefield_2 (forms_tests.field_tests.test_timefield.TimeFieldTest) ... ok
test_timefield_3 (forms_tests.field_tests.test_timefield.TimeFieldTest) ... ok
test_timefield_changed (forms_tests.field_tests.test_timefield.TimeFieldTest) ... ok
test_textarea_trailing_newlines (forms_tests.tests.test_widgets.LiveWidgetTests)
A roundtrip on a ModelForm doesn't alter the TextField value ... skipped 'No browsers specified.'
test_installed_apps_template_found (forms_tests.tests.test_renderers.TemplatesSettingTests)
Can find a custom template in INSTALLED_APPS. ... ok
test_empty_formset_is_multipart (forms_tests.tests.test_formsets.TestEmptyFormSet)
is_multipart() works with an empty formset. ... ok
test_empty_formset_is_valid (forms_tests.tests.test_formsets.TestEmptyFormSet)
An empty formset still calls clean() ... ok
test_empty_formset_media (forms_tests.tests.test_formsets.TestEmptyFormSet)
Media is available on empty formset. ... ok
test_localized_timeField (forms_tests.tests.test_input_formats.SimpleTimeFormatTests)
Localized TimeFields in a non-localized environment act as unlocalized widgets ... ok
test_localized_timeField_with_inputformat (forms_tests.tests.test_input_formats.SimpleTimeFormatTests)
Localized TimeFields with manually specified input formats can accept those formats ... ok
test_timeField (forms_tests.tests.test_input_formats.SimpleTimeFormatTests)
TimeFields can parse dates in the default format ... ok
test_timeField_with_inputformat (forms_tests.tests.test_input_formats.SimpleTimeFormatTests)
TimeFields with manually specified input formats can accept those formats ... ok
test_error_dict_copy (forms_tests.tests.test_utils.FormsUtilsTestCase) ... ok
test_error_dict_html_safe (forms_tests.tests.test_utils.FormsUtilsTestCase) ... ok
test_error_list_html_safe (forms_tests.tests.test_utils.FormsUtilsTestCase) ... ok
test_flatatt (forms_tests.tests.test_utils.FormsUtilsTestCase) ... ok
test_flatatt_no_side_effects (forms_tests.tests.test_utils.FormsUtilsTestCase)
flatatt() does not modify the dict passed in. ... ok
test_validation_error (forms_tests.tests.test_utils.FormsUtilsTestCase) ... ok
test_charfield_1 (forms_tests.field_tests.test_charfield.CharFieldTest) ... ok
test_charfield_2 (forms_tests.field_tests.test_charfield.CharFieldTest) ... ok
test_charfield_3 (forms_tests.field_tests.test_charfield.CharFieldTest) ... ok
test_charfield_4 (forms_tests.field_tests.test_charfield.CharFieldTest) ... ok
test_charfield_5 (forms_tests.field_tests.test_charfield.CharFieldTest) ... ok
test_charfield_disabled (forms_tests.field_tests.test_charfield.CharFieldTest) ... ok
test_charfield_length_not_int (forms_tests.field_tests.test_charfield.CharFieldTest)
Setting min_length or max_length to something that is not a number ... ok
test_charfield_strip (forms_tests.field_tests.test_charfield.CharFieldTest)
Values have whitespace stripped but not if strip=False. ... ok
test_charfield_widget_attrs (forms_tests.field_tests.test_charfield.CharFieldTest)
CharField.widget_attrs() always returns a dictionary and includes ... ok
test_clean_non_string (forms_tests.field_tests.test_charfield.CharFieldTest)
CharField.clean() calls str(value) before stripping it. ... ok
test_null_characters_prohibited (forms_tests.field_tests.test_charfield.CharFieldTest) ... ok
test_strip_before_checking_empty (forms_tests.field_tests.test_charfield.CharFieldTest)
A whitespace-only value, ' ', is stripped to an empty string and then ... ok
test_nullbooleanfield_2 (forms_tests.field_tests.test_nullbooleanfield.NullBooleanFieldTest) ... ok
test_nullbooleanfield_3 (forms_tests.field_tests.test_nullbooleanfield.NullBooleanFieldTest) ... ok
test_nullbooleanfield_4 (forms_tests.field_tests.test_nullbooleanfield.NullBooleanFieldTest) ... ok
test_nullbooleanfield_changed (forms_tests.field_tests.test_nullbooleanfield.NullBooleanFieldTest) ... ok
test_nullbooleanfield_clean (forms_tests.field_tests.test_nullbooleanfield.NullBooleanFieldTest) ... ok
test_choicefield_1 (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_2 (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_3 (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_4 (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_callable (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_callable_may_evaluate_to_different_values (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_choices_default (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_disabled (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_enumeration (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_invalid_loading_order (forms_tests.tests.tests.RelatedModelFormTests)
Test for issue 10405 ... ok
test_valid_loading_order (forms_tests.tests.tests.RelatedModelFormTests)
Test for issue 10405 ... ok
test_dateField (forms_tests.tests.test_input_formats.SimpleDateFormatTests)
DateFields can parse dates in the default format ... ok
test_dateField_with_inputformat (forms_tests.tests.test_input_formats.SimpleDateFormatTests)
DateFields with manually specified input formats can accept those formats ... ok
test_localized_dateField (forms_tests.tests.test_input_formats.SimpleDateFormatTests)
Localized DateFields in a non-localized environment act as unlocalized widgets ... ok
test_localized_dateField_with_inputformat (forms_tests.tests.test_input_formats.SimpleDateFormatTests)
Localized DateFields with manually specified input formats can accept those formats ... ok
test_all_errors_get_reported (forms_tests.tests.test_validators.TestFieldWithValidators) ... ok
test_field_validators_can_be_any_iterable (forms_tests.tests.test_validators.TestFieldWithValidators) ... ok
test_splitdatetimefield_1 (forms_tests.field_tests.test_splitdatetimefield.SplitDateTimeFieldTest) ... ok
test_splitdatetimefield_2 (forms_tests.field_tests.test_splitdatetimefield.SplitDateTimeFieldTest) ... ok
test_splitdatetimefield_changed (forms_tests.field_tests.test_splitdatetimefield.SplitDateTimeFieldTest) ... ok
test_as_p (forms_tests.tests.test_formsets.FormsetAsTagTests) ... ok
test_as_table (forms_tests.tests.test_formsets.FormsetAsTagTests) ... ok
test_as_ul (forms_tests.tests.test_formsets.FormsetAsTagTests) ... ok
test_localized_timeField (forms_tests.tests.test_input_formats.LocalizedTimeTests)
Localized TimeFields act as unlocalized widgets ... ok
test_localized_timeField_with_inputformat (forms_tests.tests.test_input_formats.LocalizedTimeTests)
Localized TimeFields with manually specified input formats can accept those formats ... ok
test_timeField (forms_tests.tests.test_input_formats.LocalizedTimeTests)
TimeFields can parse dates in the default format ... ok
test_timeField_with_inputformat (forms_tests.tests.test_input_formats.LocalizedTimeTests)
TimeFields with manually specified input formats can accept those formats ... ok
test_integerfield_1 (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_integerfield_2 (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_integerfield_3 (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_integerfield_4 (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_integerfield_5 (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_integerfield_big_num (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_integerfield_float (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_integerfield_localized (forms_tests.field_tests.test_integerfield.IntegerFieldTest)
A localized IntegerField's widget renders to a text input without any ... ok
test_integerfield_subclass (forms_tests.field_tests.test_integerfield.IntegerFieldTest)
Class-defined widget is not overwritten by __init__() (#22245). ... ok
test_integerfield_unicode_number (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_dateField (forms_tests.tests.test_input_formats.CustomDateInputFormatsTests)
DateFields can parse dates in the default format ... ok
test_dateField_with_inputformat (forms_tests.tests.test_input_formats.CustomDateInputFormatsTests)
DateFields with manually specified input formats can accept those formats ... ok
test_localized_dateField (forms_tests.tests.test_input_formats.CustomDateInputFormatsTests)
Localized DateFields act as unlocalized widgets ... ok
test_localized_dateField_with_inputformat (forms_tests.tests.test_input_formats.CustomDateInputFormatsTests)
Localized DateFields with manually specified input formats can accept those formats ... ok
test_durationfield_clean (forms_tests.field_tests.test_durationfield.DurationFieldTest) ... ok
test_durationfield_clean_not_required (forms_tests.field_tests.test_durationfield.DurationFieldTest) ... ok
test_durationfield_integer_value (forms_tests.field_tests.test_durationfield.DurationFieldTest) ... ok
test_durationfield_prepare_value (forms_tests.field_tests.test_durationfield.DurationFieldTest) ... ok
test_durationfield_render (forms_tests.field_tests.test_durationfield.DurationFieldTest) ... ok
test_overflow (forms_tests.field_tests.test_durationfield.DurationFieldTest) ... ok
test_overflow_translation (forms_tests.field_tests.test_durationfield.DurationFieldTest) ... ok
test_converted_value (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_custom_encoder_decoder (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_custom_widget_attribute (forms_tests.field_tests.test_jsonfield.JSONFieldTest)
The widget can be overridden with an attribute. ... ok
test_custom_widget_kwarg (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_formfield_disabled (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_has_changed (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_invalid (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_prepare_value (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_redisplay_none_input (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_redisplay_wrong_input (forms_tests.field_tests.test_jsonfield.JSONFieldTest)
Displaying a bound form (typically due to invalid input). The form ... ok
test_valid (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_valid_empty (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_widget (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_email_regexp_for_performance (forms_tests.field_tests.test_emailfield.EmailFieldTest) ... ok
test_emailfield_1 (forms_tests.field_tests.test_emailfield.EmailFieldTest) ... ok
test_emailfield_min_max_length (forms_tests.field_tests.test_emailfield.EmailFieldTest) ... ok
test_emailfield_not_required (forms_tests.field_tests.test_emailfield.EmailFieldTest) ... ok
test_emailfield_strip_on_none_value (forms_tests.field_tests.test_emailfield.EmailFieldTest) ... ok
test_emailfield_unable_to_set_strip_kwarg (forms_tests.field_tests.test_emailfield.EmailFieldTest) ... ok
test_dateTimeField (forms_tests.tests.test_input_formats.SimpleDateTimeFormatTests)
DateTimeFields can parse dates in the default format ... ok
test_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.SimpleDateTimeFormatTests)
DateTimeFields with manually specified input formats can accept those formats ... ok
test_localized_dateTimeField (forms_tests.tests.test_input_formats.SimpleDateTimeFormatTests)
Localized DateTimeFields in a non-localized environment act as unlocalized widgets ... ok
test_localized_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.SimpleDateTimeFormatTests)
Localized DateTimeFields with manually specified input formats can accept those formats ... ok
test_get_renderer (forms_tests.tests.test_renderers.BaseTemplateRendererTests) ... ok
test_decimalfield_support_decimal_separator (forms_tests.field_tests.test_floatfield.FloatFieldTest) ... ok
test_decimalfield_support_thousands_separator (forms_tests.field_tests.test_floatfield.FloatFieldTest) ... ok
test_floatfield_1 (forms_tests.field_tests.test_floatfield.FloatFieldTest) ... ok
test_floatfield_2 (forms_tests.field_tests.test_floatfield.FloatFieldTest) ... ok
test_floatfield_3 (forms_tests.field_tests.test_floatfield.FloatFieldTest) ... ok
test_floatfield_changed (forms_tests.field_tests.test_floatfield.FloatFieldTest) ... ok
test_floatfield_localized (forms_tests.field_tests.test_floatfield.FloatFieldTest)
A localized FloatField's widget renders to a text input without any ... ok
test_floatfield_widget_attrs (forms_tests.field_tests.test_floatfield.FloatFieldTest) ... ok
test_attrs_with_type (forms_tests.widget_tests.test_input.InputTests) ... ok
test_installed_apps_template_found (forms_tests.tests.test_renderers.Jinja2Tests)
Can find a custom template in INSTALLED_APPS. ... ok
test_datetimefield_changed (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) ... ok
test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) ... ok
test_datetimefield_clean_input_formats (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) ... ok
test_datetimefield_clean_invalid (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) ... ok
test_datetimefield_not_required (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) ... ok
test_decimalfield_1 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_2 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_3 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_4 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_5 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_6 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_changed (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_localized (forms_tests.field_tests.test_decimalfield.DecimalFieldTest)
A localized DecimalField's widget renders to a text input without ... ok
test_decimalfield_scientific (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_support_decimal_separator (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_support_thousands_separator (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_widget_attrs (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_enter_a_number_error (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_render (forms_tests.widget_tests.test_hiddeninput.HiddenInputTest) ... ok
test_use_required_attribute (forms_tests.widget_tests.test_hiddeninput.HiddenInputTest) ... ok
test_installed_apps_template_found (forms_tests.tests.test_renderers.DjangoTemplatesTests)
Can find a custom template in INSTALLED_APPS. ... ok
test_modelchoicefield (forms_tests.tests.test_error_messages.ModelChoiceFieldErrorMessagesTestCase) ... ok
test_modelchoicefield_value_placeholder (forms_tests.tests.test_error_messages.ModelChoiceFieldErrorMessagesTestCase) ... ok
test_get_context_does_not_mutate_attrs (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest) ... ok
test_render_check_exception (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest)
Calling check_test() shouldn't swallow exceptions (#17888). ... ok
test_render_check_test (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest)
You can pass 'check_test' to the constructor. This is a callable that ... ok
test_render_empty (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest) ... ok
test_render_false (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest) ... ok
test_render_int (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest)
Integers are handled by value, not as booleans (#17114). ... ok
test_render_none (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest) ... ok
test_render_true (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest) ... ok
test_render_value (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest)
Using any value that's not in ('', None, False, True) will check the ... ok
test_value_from_datadict (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest)
The CheckboxInput widget will return False if the key is not found in ... ok
test_value_from_datadict_string_int (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest) ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest) ... ok
test_bad_choice (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_clean (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_clean_disabled_multivalue (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_disabled_has_changed (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_form_as_table (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_form_as_table_data (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_form_cleaned_data (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_has_changed_first_widget (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)
Test when the first widget's data has changed. ... ok
test_has_changed_last_widget (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)
Test when the last widget's data has changed. This ensures that it is ... ok
test_has_changed_no_initial (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_has_changed_same (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_no_value (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)
If insufficient data is provided, None is substituted. ... ok
test_dateTimeField (forms_tests.tests.test_input_formats.LocalizedDateTimeTests)
DateTimeFields can parse dates in the default format ... ok
test_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.LocalizedDateTimeTests)
DateTimeFields with manually specified input formats can accept those formats ... ok
test_localized_dateTimeField (forms_tests.tests.test_input_formats.LocalizedDateTimeTests)
Localized DateTimeFields act as unlocalized widgets ... ok
test_localized_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.LocalizedDateTimeTests)
Localized DateTimeFields with manually specified input formats can accept those formats ... ok
test_dateField (forms_tests.tests.test_input_formats.LocalizedDateTests)
DateFields can parse dates in the default format ... ok
test_dateField_with_inputformat (forms_tests.tests.test_input_formats.LocalizedDateTests)
DateFields with manually specified input formats can accept those formats ... ok
test_localized_dateField (forms_tests.tests.test_input_formats.LocalizedDateTests)
Localized DateFields act as unlocalized widgets ... ok
test_localized_dateField_with_inputformat (forms_tests.tests.test_input_formats.LocalizedDateTests)
Localized DateFields with manually specified input formats can accept those formats ... ok
test_localized_timeField (forms_tests.tests.test_input_formats.CustomTimeInputFormatsTests)
Localized TimeFields act as unlocalized widgets ... ok
test_localized_timeField_with_inputformat (forms_tests.tests.test_input_formats.CustomTimeInputFormatsTests)
Localized TimeFields with manually specified input formats can accept those formats ... ok
test_timeField (forms_tests.tests.test_input_formats.CustomTimeInputFormatsTests)
TimeFields can parse dates in the default format ... ok
test_timeField_with_inputformat (forms_tests.tests.test_input_formats.CustomTimeInputFormatsTests)
TimeFields with manually specified input formats can accept those formats ... ok
test_format (forms_tests.widget_tests.test_dateinput.DateInputTest)
Use 'format' to change the way a value is displayed. ... ok
test_l10n (forms_tests.widget_tests.test_dateinput.DateInputTest) ... ok
test_render_none (forms_tests.widget_tests.test_dateinput.DateInputTest) ... ok
test_render_value (forms_tests.widget_tests.test_dateinput.DateInputTest) ... ok
test_string (forms_tests.widget_tests.test_dateinput.DateInputTest)
Should be able to initialize from a string value. ... ok
test_empty_field_char (forms_tests.tests.tests.EmptyLabelTestCase) ... ok
test_empty_field_char_none (forms_tests.tests.tests.EmptyLabelTestCase) ... ok
test_empty_field_integer (forms_tests.tests.tests.EmptyLabelTestCase) ... ok
test_get_display_value_on_none (forms_tests.tests.tests.EmptyLabelTestCase) ... ok
test_html_rendering_of_prepopulated_models (forms_tests.tests.tests.EmptyLabelTestCase) ... ok
test_save_empty_label_forms (forms_tests.tests.tests.EmptyLabelTestCase) ... ok
test_add_css_deduplication (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_add_empty (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_add_js_deduplication (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_combine_media (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_construction (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_form_media (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_html_safe (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_deduplication (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_dsl (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_inheritance (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_inheritance_extends (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_inheritance_from_property (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_inheritance_single_type (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_property (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_property_parent_references (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_merge (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_merge_css_three_way (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_merge_js_three_way (forms_tests.tests.test_media.FormsMediaTestCase)
The relative order of scripts is preserved in a three-way merge. ... ok
test_merge_js_three_way2 (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_merge_warning (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_multi_media (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_multi_widget (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_boundary_conditions (forms_tests.tests.tests.FormsModelTestCase) ... ok
test_formfield_initial (forms_tests.tests.tests.FormsModelTestCase) ... ok
test_unicode_filename (forms_tests.tests.tests.FormsModelTestCase) ... ok
test_clear_input_checked_returns_false (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
ClearableFileInput.value_from_datadict returns False if the clear ... ok
test_clear_input_checked_returns_false_only_if_not_required (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
ClearableFileInput.value_from_datadict never returns False if the field ... ok
test_clear_input_renders (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
A ClearableFileInput with is_required False and rendered with an ... ok
test_clear_input_renders_only_if_initial (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
A ClearableFileInput instantiated with no initial value does not render ... ok
test_clear_input_renders_only_if_not_required (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
A ClearableFileInput with is_required=True does not render a clear ... ok
test_html_does_not_mask_exceptions (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
A ClearableFileInput should not mask exceptions produced while ... ok
test_html_escaped (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
A ClearableFileInput should escape name, filename, and URL ... ok
test_render_as_subwidget (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
A ClearableFileInput as a subwidget of MultiWidget. ... ok
test_render_disabled (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest) ... ok
test_return_false_if_url_does_not_exists (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest) ... ok
test_url_as_property (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest) ... ok
test_use_required_attribute (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest) ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest) ... ok
test_escaping (forms_tests.widget_tests.test_textarea.TextareaTest) ... ok
test_mark_safe (forms_tests.widget_tests.test_textarea.TextareaTest) ... ok
test_render (forms_tests.widget_tests.test_textarea.TextareaTest) ... ok
test_render_empty (forms_tests.widget_tests.test_textarea.TextareaTest) ... ok
test_render_none (forms_tests.widget_tests.test_textarea.TextareaTest) ... ok
test_render_required (forms_tests.widget_tests.test_textarea.TextareaTest) ... ok
test_attrs_not_localized (forms_tests.widget_tests.test_numberinput.NumberInputTests) ... ok
test_attr_false_not_rendered (forms_tests.widget_tests.test_widget.WidgetTests) ... ok
test_format_value (forms_tests.widget_tests.test_widget.WidgetTests) ... ok
test_no_trailing_newline_in_attrs (forms_tests.widget_tests.test_widget.WidgetTests) ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_widget.WidgetTests) ... ok
test_m2m_field_exclusion (forms_tests.tests.tests.ManyToManyExclusionTestCase) ... ok
test_render (forms_tests.widget_tests.test_passwordinput.PasswordInputTest) ... ok
test_render_ignore_value (forms_tests.widget_tests.test_passwordinput.PasswordInputTest) ... ok
test_render_value_true (forms_tests.widget_tests.test_passwordinput.PasswordInputTest)
The render_value argument lets you specify whether the widget should ... ok
test_render (forms_tests.widget_tests.test_fileinput.FileInputTest)
FileInput widgets never render the value attribute. The old value ... ok
test_use_required_attribute (forms_tests.widget_tests.test_fileinput.FileInputTest) ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_fileinput.FileInputTest) ... ok
test_dateTimeField (forms_tests.tests.test_input_formats.CustomDateTimeInputFormatsTests)
DateTimeFields can parse dates in the default format ... ok
test_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.CustomDateTimeInputFormatsTests)
DateTimeFields with manually specified input formats can accept those formats ... ok
test_localized_dateTimeField (forms_tests.tests.test_input_formats.CustomDateTimeInputFormatsTests)
Localized DateTimeFields act as unlocalized widgets ... ok
test_localized_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.CustomDateTimeInputFormatsTests)
Localized DateTimeFields with manually specified input formats can accept those formats ... ok
test_constructor_attrs (forms_tests.widget_tests.test_splitdatetimewidget.SplitDateTimeWidgetTest) ... ok
test_constructor_different_attrs (forms_tests.widget_tests.test_splitdatetimewidget.SplitDateTimeWidgetTest) ... ok
test_formatting (forms_tests.widget_tests.test_splitdatetimewidget.SplitDateTimeWidgetTest)
Use 'date_format' and 'time_format' to change the way a value is ... ok
test_render_date_and_time (forms_tests.widget_tests.test_splitdatetimewidget.SplitDateTimeWidgetTest) ... ok
test_render_datetime (forms_tests.widget_tests.test_splitdatetimewidget.SplitDateTimeWidgetTest) ... ok
test_render_empty (forms_tests.widget_tests.test_splitdatetimewidget.SplitDateTimeWidgetTest) ... ok
test_render_none (forms_tests.widget_tests.test_splitdatetimewidget.SplitDateTimeWidgetTest) ... ok
test_lazy_labels (forms_tests.tests.test_i18n.FormsI18nTests) ... ok
test_non_ascii_choices (forms_tests.tests.test_i18n.FormsI18nTests) ... ok
test_non_ascii_label (forms_tests.tests.test_i18n.FormsI18nTests) ... ok
test_select_translated_text (forms_tests.tests.test_i18n.FormsI18nTests) ... ok
test_constructor_different_attrs (forms_tests.widget_tests.test_splithiddendatetimewidget.SplitHiddenDateTimeWidgetTest) ... ok
test_l10n (forms_tests.widget_tests.test_splithiddendatetimewidget.SplitHiddenDateTimeWidgetTest) ... ok
test_render_empty (forms_tests.widget_tests.test_splithiddendatetimewidget.SplitHiddenDateTimeWidgetTest) ... ok
test_render_value (forms_tests.widget_tests.test_splithiddendatetimewidget.SplitHiddenDateTimeWidgetTest) ... ok
test_attrs_precedence (forms_tests.widget_tests.test_textinput.TextInputTest)
`attrs` passed to render() get precedence over those passed to the ... ok
test_attrs_safestring (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_constructor_attrs (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_render (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_render_boolean (forms_tests.widget_tests.test_textinput.TextInputTest)
Boolean values are rendered to their string forms ("True" and ... ok
test_render_custom_attrs (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_render_none (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_render_quoted (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_render_unicode (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_render_value (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_use_required_attribute (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_l10n (forms_tests.widget_tests.test_datetimeinput.DateTimeInputTest) ... ok
test_locale_aware (forms_tests.widget_tests.test_datetimeinput.DateTimeInputTest) ... ok
test_render_formatted (forms_tests.widget_tests.test_datetimeinput.DateTimeInputTest)
Use 'format' to change the way a value is displayed. ... ok
test_render_none (forms_tests.widget_tests.test_datetimeinput.DateTimeInputTest) ... ok
test_render_value (forms_tests.widget_tests.test_datetimeinput.DateTimeInputTest)
The microseconds are trimmed on display, by default. ... ok
test_customize_management_form_error (forms_tests.tests.test_formsets.TestIsBoundBehavior) ... ok
test_empty_forms_are_unbound (forms_tests.tests.test_formsets.TestIsBoundBehavior) ... ok
test_form_errors_are_caught_by_formset (forms_tests.tests.test_formsets.TestIsBoundBehavior) ... ok
test_management_form_invalid_data (forms_tests.tests.test_formsets.TestIsBoundBehavior) ... ok
test_no_data_error (forms_tests.tests.test_formsets.TestIsBoundBehavior) ... ok
test_with_management_data_attrs_work_fine (forms_tests.tests.test_formsets.TestIsBoundBehavior) ... ok
test_render_attrs (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest) ... ok
test_render_attrs_constructor (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest) ... ok
test_render_attrs_multiple (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest) ... ok
test_render_empty (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest) ... ok
test_render_increment_id (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest)
Each input should get a separate ID. ... ok
test_render_multiple (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest) ... ok
test_render_none (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest) ... ok
test_render_single (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest) ... ok
test_l10n (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest)
The NullBooleanSelect widget's options are lazily localized (#17190). ... ok
test_render_false (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_none (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_true (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_value_1 (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_value_2 (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_value_3 (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_value_false (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_value_true (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_value_unknown (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_class_attrs (forms_tests.widget_tests.test_radioselect.RadioSelectTest)
The <ul> in the multiple_input.html widget template include the class ... ok
test_constructor_attrs (forms_tests.widget_tests.test_radioselect.RadioSelectTest)
Attributes provided at instantiation are passed to the constituent ... ok
test_doesnt_localize_input_value (forms_tests.widget_tests.test_radioselect.RadioSelectTest) ... ok
test_nested_choices (forms_tests.widget_tests.test_radioselect.RadioSelectTest) ... ok
test_render (forms_tests.widget_tests.test_radioselect.RadioSelectTest) ... ok
test_render_as_subwidget (forms_tests.widget_tests.test_radioselect.RadioSelectTest)
A RadioSelect as a subwidget of MultiWidget. ... ok
test_render_attrs (forms_tests.widget_tests.test_radioselect.RadioSelectTest)
Attributes provided at render-time are passed to the constituent ... ok
test_datefield_1 (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_datefield_2 (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_datefield_3 (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_datefield_4 (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_datefield_5 (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_datefield_changed (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_datefield_strptime (forms_tests.field_tests.test_datefield.DateFieldTest)
field.strptime() doesn't raise a UnicodeEncodeError (#16123) ... ok
test_form_field (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_form_label_association (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_l10n_date_changed (forms_tests.field_tests.test_datefield.DateFieldTest)
DateField.has_changed() with SelectDateWidget works with a localized ... ok
test_l10n_invalid_date_in (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_doesnt_localize_input_value (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest) ... ok
test_label (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest)
CheckboxSelectMultiple doesn't contain 'for="field_0"' in the <label> ... ok
test_nested_choices (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest) ... ok
test_nested_choices_without_id (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest) ... ok
test_render_none (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest)
If the value is None, none of the options are selected, even if the ... ok
test_render_value (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest) ... ok
test_render_value_multiple (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest) ... ok
test_separate_ids (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest)
Each input gets a separate ID. ... ok
test_separate_ids_constructor (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest)
Each input gets a separate ID when the ID is passed to the constructor. ... ok
test_use_required_attribute (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest) ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest) ... ok
test_choices_constructor (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_choices_constructor_generator (forms_tests.widget_tests.test_select.SelectTest)
If choices is passed to the constructor and is a generator, it can be ... ok
test_choices_escaping (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_choices_optgroup (forms_tests.widget_tests.test_select.SelectTest)
Choices can be nested one level in order to create HTML optgroups. ... ok
test_choices_select_inner (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_choices_select_outer (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_choices_unicode (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_compare_to_str (forms_tests.widget_tests.test_select.SelectTest)
The value is compared to its str(). ... ok
test_constructor_attrs (forms_tests.widget_tests.test_select.SelectTest)
Select options shouldn't inherit the parent widget attrs. ... ok
test_deepcopy (forms_tests.widget_tests.test_select.SelectTest)
__deepcopy__() should copy all attributes properly (#25085). ... ok
test_doesnt_localize_option_value (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_doesnt_render_required_when_impossible_to_select_empty_field (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_doesnt_render_required_when_no_choices_are_available (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_optgroups (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_optgroups_integer_choices (forms_tests.widget_tests.test_select.SelectTest)
The option 'value' is the same type as what's in `choices`. ... ok
test_options (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_render (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_render_label_value (forms_tests.widget_tests.test_select.SelectTest)
If the value corresponds to a label (but not to an option value), none ... ok
test_render_none (forms_tests.widget_tests.test_select.SelectTest)
If the value is None, none of the options are selected. ... ok
test_render_selected (forms_tests.widget_tests.test_select.SelectTest)
Only one option can be selected (#8103). ... ok
test_renders_required_when_possible_to_select_empty_field_list (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_renders_required_when_possible_to_select_empty_field_none (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_renders_required_when_possible_to_select_empty_field_str (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_format (forms_tests.widget_tests.test_timeinput.TimeInputTest)
Use 'format' to change the way a value is displayed. ... ok
test_l10n (forms_tests.widget_tests.test_timeinput.TimeInputTest) ... ok
test_render_none (forms_tests.widget_tests.test_timeinput.TimeInputTest) ... ok
test_render_value (forms_tests.widget_tests.test_timeinput.TimeInputTest)
The microseconds are trimmed on display, by default. ... ok
test_string (forms_tests.widget_tests.test_timeinput.TimeInputTest)
Initializing from a string value. ... ok
test_corrupted_image (forms_tests.field_tests.test_imagefield.ImageFieldTest) ... ok
test_file_extension_validation (forms_tests.field_tests.test_imagefield.ImageFieldTest) ... ok
test_imagefield_annotate_with_bitmap_image_after_clean (forms_tests.field_tests.test_imagefield.ImageFieldTest)
This also tests the situation when Pillow doesn't detect the MIME type ... ok
test_imagefield_annotate_with_image_after_clean (forms_tests.field_tests.test_imagefield.ImageFieldTest) ... ok
test_widget_attrs_accept_false (forms_tests.field_tests.test_imagefield.ImageFieldTest) ... ok
test_widget_attrs_accept_specified (forms_tests.field_tests.test_imagefield.ImageFieldTest) ... ok
test_widget_attrs_default_accept (forms_tests.field_tests.test_imagefield.ImageFieldTest) ... ok
test_callable_initial_value (forms_tests.tests.tests.ModelFormCallableModelDefault)
The initial value for a callable default returning a queryset is the pk (refs #13769) ... ok
test_initial_instance_value (forms_tests.tests.tests.ModelFormCallableModelDefault)
Initial instances for model fields may also be instances (refs #7287) ... ok
test_no_empty_option (forms_tests.tests.tests.ModelFormCallableModelDefault)
If a model's ForeignKey has blank=False and a default, no empty option is created (Refs #10792). ... ok
test_constructor_attrs (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_constructor_attrs_with_type (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_deepcopy (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest)
MultiWidget should define __deepcopy__() (#12048). ... ok
test_needs_multipart_false (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest)
needs_multipart_form should be False if no widgets need it. ... ok
test_needs_multipart_true (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest)
needs_multipart_form should be True if any widgets need it. ... ok
test_nested_multiwidget (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest)
MultiWidgets can be composed of other MultiWidgets. ... ok
test_no_whitespace_between_widgets (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_subwidgets_name (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_text_inputs (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_value_from_datadict_subwidgets_name (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_value_omitted_from_data_subwidgets_name (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_compare_string (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest) ... ok
test_format_value (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest) ... ok
test_multiple_options_same_value (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest)
Multiple options with the same value can be selected (#8103). ... ok
test_multiple_values_invalid (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest)
If multiple values are given, but some of them are not valid, the valid ... ok
test_optgroup_select_multiple (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest) ... ok
test_render_multiple_selected (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest) ... ok
test_render_none (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest)
If the value is None, none of the options are selected, even if the ... ok
test_render_selected (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest) ... ok
test_render_value_label (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest)
If the value corresponds to a label (but not to an option value), none ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest) ... ok
test_url_regex_ticket11198 (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_1 (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_10 (forms_tests.field_tests.test_urlfield.URLFieldTest)
URLField correctly validates IPv6 (#18779). ... ok
test_urlfield_2 (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_5 (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_6 (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_7 (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_9 (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_normalization (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_not_string (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_strip_on_none_value (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_unable_to_set_strip_kwarg (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_booleanfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_charfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_choicefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_datefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_datetimefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_decimalfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_emailfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_error_messages_escaping (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_filefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_floatfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_generic_ipaddressfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_integerfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_multiplechoicefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_regexfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_splitdatetimefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_subclassing_errorlist (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_timefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_urlfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_value_placeholder_with_char_field (forms_tests.tests.test_validators.ValidatorCustomMessageTests) ... ok
test_value_placeholder_with_decimal_field (forms_tests.tests.test_validators.ValidatorCustomMessageTests) ... ok
test_value_placeholder_with_file_field (forms_tests.tests.test_validators.ValidatorCustomMessageTests) ... ok
test_value_placeholder_with_integer_field (forms_tests.tests.test_validators.ValidatorCustomMessageTests) ... ok
test_value_placeholder_with_null_character (forms_tests.tests.test_validators.ValidatorCustomMessageTests) ... ok
test_custom_input_format (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_custom_months (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_format_value (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_l10n (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_render_datetime (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_render_empty (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_render_invalid_date (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest)
Invalid dates should still render the failed date. ... ok
test_render_none (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest)
Rendering the None or '' values should yield the same output. ... ok
test_render_string (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_selectdate_empty_label (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_selectdate_required (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_value_from_datadict (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_years_rendered_without_separator (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_accessing_clean (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_auto_id (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_auto_id_false (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_auto_id_on_form_and_field (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_auto_id_true (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_baseform_repr (forms_tests.tests.test_forms.FormsTestCase)
BaseForm.__repr__() should contain some basic information about the ... ok
test_baseform_repr_dont_trigger_validation (forms_tests.tests.test_forms.FormsTestCase)
BaseForm.__repr__() shouldn't trigger the form validation. ... ok
test_basic_processing_in_view (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_bool (forms_tests.tests.test_forms.FormsTestCase)
BoundField without any choices (subwidgets) evaluates to True. ... ok
test_boundfield_css_classes (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_empty_label (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_id_for_label (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_id_for_label_override_by_attrs (forms_tests.tests.test_forms.FormsTestCase)
If an id is provided in `Widget.attrs`, it overrides the generated ID, ... ok
test_boundfield_initial_called_once (forms_tests.tests.test_forms.FormsTestCase)
Multiple calls to BoundField().value() in an unbound form should return ... ok
test_boundfield_invalid_index (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_label_tag (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_label_tag_custom_widget_id_for_label (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_label_tag_no_id (forms_tests.tests.test_forms.FormsTestCase)
If a widget has no id, label_tag just returns the text with no ... ok
test_boundfield_slice (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_subwidget_id_for_label (forms_tests.tests.test_forms.FormsTestCase)
If auto_id is provided when initializing the form, the generated ID in ... ok
test_boundfield_value_disabled_callable_initial (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_values (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_widget_type (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_callable_initial_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_changed_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_changing_cleaned_data_in_clean (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_changing_cleaned_data_nothing_returned (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_checkbox_auto_id (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_class_prefix (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_cleaned_data_only_fields (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_custom_boundfield (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_custom_empty_values (forms_tests.tests.test_forms.FormsTestCase)
Form fields can customize what is considered as an empty value ... ok
test_datetime_changed_data_callable_with_microseconds (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_datetime_clean_disabled_callable_initial_bound_field (forms_tests.tests.test_forms.FormsTestCase)
The cleaned value for a form with a disabled DateTimeField and callable ... ok
test_datetime_clean_disabled_callable_initial_microseconds (forms_tests.tests.test_forms.FormsTestCase)
Cleaning a form with a disabled DateTimeField and callable initial ... ok
test_dynamic_construction (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_dynamic_initial_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_empty_data_files_multi_value_dict (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_empty_dict (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_empty_permitted (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_empty_permitted_and_use_required_attribute (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_empty_querydict_args (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_dict (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_dict_as_json_escape_html (forms_tests.tests.test_forms.FormsTestCase)
#21962 - adding html escape flag to ErrorDict ... ok
test_error_escaping (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_html_required_html_classes (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_list (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_list_class_has_one_class_specified (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_list_class_not_specified (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_list_with_hidden_field_errors_has_correct_class (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_list_with_non_field_errors_has_correct_class (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_errorlist_override (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_escaping (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_explicit_field_order (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_extracting_hidden_and_visible (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_field_deep_copy_error_messages (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_field_name (forms_tests.tests.test_forms.FormsTestCase)
#5749 - `field_name` may be used as a key in _html_output(). ... ok
test_field_name_with_hidden_input (forms_tests.tests.test_forms.FormsTestCase)
BaseForm._html_output() should merge all the hidden input fields and ... ok
test_field_name_with_hidden_input_and_non_matching_row_ender (forms_tests.tests.test_forms.FormsTestCase)
BaseForm._html_output() should merge all the hidden input fields and ... ok
test_field_named_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_field_order (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_field_with_css_class (forms_tests.tests.test_forms.FormsTestCase)
`css_classes` may be used as a key in _html_output() (class comes ... ok
test_field_without_css_classes (forms_tests.tests.test_forms.FormsTestCase)
`css_classes` may be used as a key in _html_output() (empty classes). ... ok
test_filefield_initial_callable (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_filefield_with_fileinput_required (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_form (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_form_html_attributes (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_form_with_disabled_fields (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_form_with_iterable_boundfield (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_form_with_iterable_boundfield_id (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_form_with_noniterable_boundfield (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_forms_with_choices (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_forms_with_file_fields (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_forms_with_multiple_choice (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_forms_with_null_boolean (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_forms_with_prefixes (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_forms_with_radio (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_get_initial_for_field (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_has_error (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_help_text (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_hidden_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_hidden_initial_gets_id (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_hidden_widget (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_html_output_with_hidden_input_field_errors (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_html_safe (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_id_on_field (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_initial_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_initial_datetime_values (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_iterable_boundfield_select (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_label_has_required_css_class (forms_tests.tests.test_forms.FormsTestCase)
#17922 - required_css_class is added to the label_tag() of required fields. ... ok
test_label_split_datetime_not_displayed (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_label_suffix (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_label_tag_override (forms_tests.tests.test_forms.FormsTestCase)
BoundField label_suffix (if provided) overrides Form label_suffix ... ok
test_multipart_encoded_form (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_multiple_choice_checkbox (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_multiple_choice_list_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_multiple_hidden (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_multivalue_deep_copy (forms_tests.tests.test_forms.FormsTestCase)
#19298 -- MultiValueField needs to override the default as it needs ... ok
test_multivalue_field_validation (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_multivalue_initial_data (forms_tests.tests.test_forms.FormsTestCase)
#23674 -- invalid initial data should not break form.changed_data() ... ok
test_multivalue_optional_subfields (forms_tests.tests.test_forms.FormsTestCase) ... ERROR
test_only_hidden_fields (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_optional_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_specifying_labels (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_subclassing_forms (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_templates_with_forms (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_unbound_form (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_unicode_values (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_update_error_dict (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_use_required_attribute_false (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_use_required_attribute_true (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_validating_multiple_fields (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_validators_independence (forms_tests.tests.test_forms.FormsTestCase)
The list of form field validators can be modified without polluting ... ok
test_various_boolean_values (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_widget_output (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_absolute_max (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_absolute_max_invalid (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_absolute_max_with_max_num (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_basic_formset (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A FormSet constructor takes the same arguments as Form. Create a ... ok
test_blank_form_unfilled (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A form that's displayed as blank may be submitted as blank. ... ok
test_can_delete_extra_formset_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_clean_hook (forms_tests.tests.test_formsets.FormsFormsetTestCase)
FormSets have a clean() hook for doing extra validation that isn't tied ... ok
test_default_absolute_max (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_delete_prefilled_data (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Deleting prefilled data is an error. Removing data from form fields ... ok
test_disable_delete_extra_formset_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_displaying_more_than_one_blank_form (forms_tests.tests.test_formsets.FormsFormsetTestCase)
More than 1 empty form can be displayed using formset_factory's ... ok
test_empty_ordered_fields (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Ordering fields are allowed to be left blank. If they are left blank, ... ok
test_form_kwargs_empty_form (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_form_kwargs_formset (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Custom kwargs set on the formset instance are passed to the ... ok
test_form_kwargs_formset_dynamic (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Form kwargs can be passed dynamically in a formset. ... ok
test_formset_calls_forms_is_valid (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Formsets call is_valid() on each form. ... ok
test_formset_error_class (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Formset's forms use the formset's error_class. ... ok
test_formset_has_changed (forms_tests.tests.test_formsets.FormsFormsetTestCase)
FormSet.has_changed() is True if any data is passed to its forms, even ... ok
test_formset_initial_data (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A FormSet can be prefilled with existing data by providing a list of ... ok
test_formset_iteration (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Formset instances are iterable. ... ok
test_formset_nonzero (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A formsets without any forms evaluates as True. ... ok
test_formset_splitdatetimefield (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Formset works with SplitDateTimeField(initial=datetime.datetime.now). ... ok
test_formset_total_error_count (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A valid formset should have 0 total errors. ... ok
test_formset_total_error_count_with_non_form_errors (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_formset_validate_max_flag (forms_tests.tests.test_formsets.FormsFormsetTestCase)
If validate_max is set and max_num is less than TOTAL_FORMS in the ... ok
test_formset_validate_min_excludes_empty_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_formset_validate_min_flag (forms_tests.tests.test_formsets.FormsFormsetTestCase)
If validate_min is set and min_num is more than TOTAL_FORMS in the ... ok
test_formset_validate_min_unchanged_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)
min_num validation doesn't consider unchanged forms with initial data ... ok
test_formset_validation (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_formset_validation_count (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A formset's ManagementForm is validated once per FormSet.is_valid() ... ok
test_formset_with_deletion (forms_tests.tests.test_formsets.FormsFormsetTestCase)
formset_factory's can_delete argument adds a boolean "delete" field to ... ok
test_formset_with_deletion_custom_widget (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_formset_with_deletion_invalid_deleted_form (forms_tests.tests.test_formsets.FormsFormsetTestCase)
deleted_forms works on a valid formset even if a deleted form would ... ok
test_formset_with_deletion_remove_deletion_flag (forms_tests.tests.test_formsets.FormsFormsetTestCase)
If a form is filled with something and can_delete is also checked, that ... ok
test_formset_with_ordering_and_deletion (forms_tests.tests.test_formsets.FormsFormsetTestCase)
FormSets with ordering + deletion. ... ok
test_formsets_with_ordering (forms_tests.tests.test_formsets.FormsFormsetTestCase)
formset_factory's can_order argument adds an integer field to each ... ok
test_formsets_with_ordering_custom_widget (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_hard_limit_on_instantiated_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A formset has a hard limit on the number of forms instantiated. ... ok
test_html_safe (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_increase_hard_limit (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Can increase the built-in forms limit via a higher max_num. ... ok
test_invalid_deleted_form_with_ordering (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Can get ordered_forms from a valid formset even if a deleted form ... ok
test_limited_max_forms_two (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_limiting_extra_lest_than_max_num (forms_tests.tests.test_formsets.FormsFormsetTestCase)
max_num has no effect when extra is less than max_num. ... ok
test_limiting_max_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Limiting the maximum number of forms with max_num. ... ok
test_management_form_prefix (forms_tests.tests.test_formsets.FormsFormsetTestCase)
The management form has the correct prefix. ... ok
test_max_num_with_initial_data (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_max_num_zero (forms_tests.tests.test_formsets.FormsFormsetTestCase)
If max_num is 0 then no form is rendered at all, regardless of extra, ... ok
test_max_num_zero_with_initial (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_min_num_displaying_more_than_one_blank_form (forms_tests.tests.test_formsets.FormsFormsetTestCase)
More than 1 empty form can also be displayed using formset_factory's ... ok
test_min_num_displaying_more_than_one_blank_form_with_zero_extra (forms_tests.tests.test_formsets.FormsFormsetTestCase)
More than 1 empty form can be displayed using min_num. ... ok
test_more_initial_data (forms_tests.tests.test_formsets.FormsFormsetTestCase)
The extra argument works when the formset is pre-filled with initial ... ok
test_more_initial_form_result_in_one (forms_tests.tests.test_formsets.FormsFormsetTestCase)
One form from initial and extra=3 with max_num=2 results in the one ... ok
test_more_initial_than_max_num (forms_tests.tests.test_formsets.FormsFormsetTestCase)
More initial forms than max_num results in all initial forms being ... ok
test_non_form_errors (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_non_form_errors_run_full_clean (forms_tests.tests.test_formsets.FormsFormsetTestCase)
If non_form_errors() is called without calling is_valid() first, ... ok
test_ordering_blank_fieldsets (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Ordering works with blank fieldsets. ... ok
test_second_form_partially_filled (forms_tests.tests.test_formsets.FormsFormsetTestCase)
If at least one field is filled out on a blank form, it will be ... ok
test_second_form_partially_filled_2 (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A partially completed form is invalid. ... ok
test_single_form_completed (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Just one form may be completed. ... ok
test_validate_max_ignores_forms_marked_for_deletion (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok

======================================================================
ERROR: test_multivalue_optional_subfields (forms_tests.tests.test_forms.FormsTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/root/.venv/lib/python3.8/unittest/case.py", line 60, in testPartExecutor
    yield
  File "/root/.venv/lib/python3.8/unittest/case.py", line 676, in run
    self._callTestMethod(testMethod)
  File "/root/.venv/lib/python3.8/unittest/case.py", line 633, in _callTestMethod
    method()
  File "/testbed/tests/forms_tests/tests/test_forms.py", line 3094, in test_multivalue_optional_subfields
    self.assertIsNone(f.clean(''))
  File "/testbed/django/forms/fields.py", line 1060, in clean
    raise ValidationError(errors)
django.core.exceptions.ValidationError: ['Enter a complete value.', 'Enter an extension.']

----------------------------------------------------------------------
Ran 696 tests in 0.415s

FAILED (errors=1, skipped=1)
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
command terminated with exit code 1


=== Iteration 24/100 ===
Calling LLM...
LLM Response: I see the test is still failing. Let me look at the test more carefully. The issue is that my current fix is still too restrictive. Let me examine the test case that's failing:

<function=file_editor>...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "view",
  "path": "/testbed/tests/forms_tests/tests/test_forms.py",
  "view_range": "[3060, 3070]"
}
Tool execution status: success
Tool stdout:
Here's the result of running `cat -n` on /testbed/tests/forms_tests/tests/test_forms.py:
  3060	        # Empty values for fields will NOT raise a `required` error on an
  3061	        # optional `MultiValueField`
  3062	        f = PhoneField(required=False)
  3063	        self.assertIsNone(f.clean(''))
  3064	        self.assertIsNone(f.clean(None))
  3065	        self.assertIsNone(f.clean([]))
  3066	        self.assertEqual('+61. ext.  (label: )', f.clean(['+61']))
  3067	        self.assertEqual('+61.287654321 ext. 123 (label: )', f.clean(['+61', '287654321', '123']))
  3068	        self.assertEqual('+61.287654321 ext. 123 (label: Home)', f.clean(['+61', '287654321', '123', 'Home']))
  3069	        with self.assertRaisesMessage(ValidationError, "'Enter a valid country code.'"):
  3070	            f.clean(['61', '287654321', '123', 'Home'])


=== Iteration 25/100 ===
Calling LLM...
LLM Response: I see the issue now. Looking at the PhoneField definition in the test, I can see that it has:

1. A required field (the first CharField with regex validator)
2. A required field (the second CharField)...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "view",
  "path": "/testbed/tests/forms_tests/tests/test_forms.py",
  "view_range": "[3027, 3041]"
}
Tool execution status: success
Tool stdout:
Here's the result of running `cat -n` on /testbed/tests/forms_tests/tests/test_forms.py:
  3027	        class PhoneField(MultiValueField):
  3028	            def __init__(self, *args, **kwargs):
  3029	                fields = (
  3030	                    CharField(label='Country Code', validators=[
  3031	                        RegexValidator(r'^\+[0-9]{1,2}$', message='Enter a valid country code.')]),
  3032	                    CharField(label='Phone Number'),
  3033	                    CharField(label='Extension', error_messages={'incomplete': 'Enter an extension.'}),
  3034	                    CharField(label='Label', required=False, help_text='E.g. home, work.'),
  3035	                )
  3036	                super().__init__(fields, *args, **kwargs)
  3037	
  3038	            def compress(self, data_list):
  3039	                if data_list:
  3040	                    return '%s.%s ext. %s (label: %s)' % tuple(data_list)
  3041	                return None


=== Iteration 26/100 ===
Calling LLM...
LLM Response: I see the issue now. The PhoneField has three required fields (no explicit `required=False` on the first three) and one optional field. The test expects that when the MultiValueField itself is optiona...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "str_replace",
  "path": "/testbed/django/forms/fields.py",
  "old_str": "if not value or isinstance(value, (1, tuple)):\n            if not value or not [v for v in value if v not in self.empty_values]:\n                if self.required:\n                    raise ValidationError(self.error_messages['required'], code='required')\n                elif not any(field.required for field in self.fields):\n                    # Only return early if all fields are empty and no sub-field is required\n                    # This allows individual field validation to occur for required sub-fields\n                    return self.compress([])",
  "new_str": "if not value or isinstance(value, (list, tuple)):\n            if not value or not [v for v in value if v not in self.empty_values]:\n                if self.required:\n                    raise ValidationError(self.error_messages['required'], code='required')\n                else:\n                    # Return early if all fields are empty and the MultiValueField itself is not required\n                    # This allows individual field validation to occur only when there's actual data\n                    return self.compress([])"
}
Tool execution status: success
Tool stdout:
ERROR: No occurrences of the specified string found in /testbed/django/forms/fields.py


=== Iteration 27/100 ===
Calling LLM...
LLM Response: Let me check the current state of the file to see what's there:

<function=file_editor>
<parameter=command>view</parameter>
<parameter=path>/testbed/django/forms/fields.py</parameter>
<parameter=view_...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "view",
  "path": "/testbed/django/forms/fields.py",
  "view_range": "[1024, 1035]"
}
Tool execution status: success
Tool stdout:
Here's the result of running `cat -n` on /testbed/django/forms/fields.py:
  1024	        if not value or isinstance(value, (list, tuple)):
  1025	            if not value or not [v for v in value if v not in self.empty_values]:
  1026	                if self.required:
  1027	                    raise ValidationError(self.error_messages['required'], code='required')
  1028	                elif not any(field.required for field in self.fields):
  1029	                    # Only return early if all fields are empty and no sub-field is required
  1030	                    # This allows individual field validation to occur for required sub-fields
  1031	                    return self.compress([])
  1032	        else:
  1033	            raise ValidationError(self.error_messages['invalid'], code='invalid')
  1034	        for i, field in enumerate(self.fields):
  1035	            try:


=== Iteration 28/100 ===
Calling LLM...
LLM Response: I see the issue. Let me fix the logic:

<function=file_editor>
<parameter=command>str_replace</parameter>
<parameter=path>/testbed/django/forms/fields.py</parameter>
<parameter=old_str>               ...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "str_replace",
  "path": "/testbed/django/forms/fields.py",
  "old_str": "elif not any(field.required for field in self.fields):\n                    # Only return early if all fields are empty and no sub-field is required\n                    # This allows individual field validation to occur for required sub-fields\n                    return self.compress([])",
  "new_str": "else:\n                    # Return early if all fields are empty and the MultiValueField itself is not required\n                    # This allows individual field validation to occur only when there's actual data\n                    return self.compress([])"
}
Tool execution status: success
Tool stdout:
The file /testbed/django/forms/fields.py has been edited successfully.
Here's a snippet of the edited section:
  1024	        if not value or isinstance(value, (list, tuple)):
  1025	            if not value or not [v for v in value if v not in self.empty_values]:
  1026	                if self.required:
  1027	                    raise ValidationError(self.error_messages['required'], code='required')
  1028	                else:
  1029	                    # Return early if all fields are empty and the MultiValueField itself is not required
  1030	                    # This allows individual field validation to occur only when there's actual data
  1031	                    return self.compress([])
  1032	        else:
  1033	            raise ValidationError(self.error_messages['invalid'], code='invalid')
  1034	        for i, field in enumerate(self.fields):
  1035	            try:
Review the changes and make sure they are as expected.


=== Iteration 29/100 ===
Calling LLM...
LLM Response: Now let's test our fix again with the reproduction script:

<function=execute_bash>
<parameter=command>python reproduce_issue.py</parameter>
</function>...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python reproduce_issue.py"
}
Tool execution status: error
Tool stdout:
[STDOUT]
Reproducing MultiValueField issue...
Test case 1: Both sub-fields empty
Form is_valid(): True
Expected: False, Got: True
Test passes: False

Test case 2: First sub-field filled, second empty
Form is_valid(): False
Expected: False, Got: False
Test passes: True

Test case 3: Both sub-fields filled
Form is_valid(): True
Expected: True, Got: True
Test passes: True

Summary:
Test case 1 (both empty): FAIL
Test case 2 (first filled): PASS
Test case 3 (both filled): PASS

ISSUE CONFIRMED: MultiValueField ignores required sub-field when all values are empty
Error executing command:
Exit code: 1
command terminated with exit code 1


=== Iteration 30/100 ===
Calling LLM...
LLM Response: I see the issue. My fix went too far in the other direction. Now the original issue is back because I'm allowing the early return for all cases where the MultiValueField is not required, regardless of...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "view",
  "path": "/testbed/django/forms/fields.py",
  "view_range": "[1024, 1035]"
}
Tool execution status: success
Tool stdout:
Here's the result of running `cat -n` on /testbed/django/forms/fields.py:
  1024	        if not value or isinstance(value, (list, tuple)):
  1025	            if not value or not [v for v in value if v not in self.empty_values]:
  1026	                if self.required:
  1027	                    raise ValidationError(self.error_messages['required'], code='required')
  1028	                else:
  1029	                    # Return early if all fields are empty and the MultiValueField itself is not required
  1030	                    # This allows individual field validation to occur only when there's actual data
  1031	                    return self.compress([])
  1032	        else:
  1033	            raise ValidationError(self.error_messages['invalid'], code='invalid')
  1034	        for i, field in enumerate(self.fields):
  1035	            try:


=== Iteration 31/100 ===
Calling LLM...
LLM Response: I need to understand the exact behavior that's expected. Let me look at the original issue more carefully. The issue is specifically about the case where `require_all_fields=False`. 

The problem is t...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "str_replace",
  "path": "/testbed/django/forms/fields.py",
  "old_str": "else:\n                    # Return early if all fields are empty and the MultiValueField itself is not required\n                    # This allows individual field validation to occur only when there's actual data\n                    return self.compress([])",
  "new_str": "elif self.require_all_fields:\n                    # Return early if all fields are empty, the MultiValueField is not required,\n                    # and we require all fields to be filled\n                    return self.compress([])\n                # Otherwise, continue to validate individual fields even when all values are empty\n                # This handles the case where require_all_fields=False but some sub-fields are required"
}
Tool execution status: success
Tool stdout:
The file /testbed/django/forms/fields.py has been edited successfully.
Here's a snippet of the edited section:
  1024	        if not value or isinstance(value, (list, tuple)):
  1025	            if not value or not [v for v in value if v not in self.empty_values]:
  1026	                if self.required:
  1027	                    raise ValidationError(self.error_messages['required'], code='required')
  1028	                elif self.require_all_fields:
  1029	                    # Return early if all fields are empty, the MultiValueField is not required,
  1030	                    # and we require all fields to be filled
  1031	                    return self.compress([])
  1032	                # Otherwise, continue to validate individual fields even when all values are empty
  1033	                # This handles the case where require_all_fields=False but some sub-fields are required
  1034	        else:
  1035	            raise ValidationError(self.error_messages['invalid'], code='invalid')
  1036	        for i, field in enumerate(self.fields):
  1037	            try:
Review the changes and make sure they are as expected.


=== Iteration 32/100 ===
Calling LLM...
LLM Response: Now let's test our fix again with the reproduction script:

<function=execute_bash>
<parameter=command>python reproduce_issue.py</parameter>
</function>...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python reproduce_issue.py"
}
Tool execution status: success
Tool stdout:
[STDOUT]
Reproducing MultiValueField issue...
Test case 1: Both sub-fields empty
Form is_valid(): False
Expected: False, Got: False
Test passes: True

Test case 2: First sub-field filled, second empty
Form is_valid(): False
Expected: False, Got: False
Test passes: True

Test case 3: Both sub-fields filled
Form is_valid(): True
Expected: True, Got: True
Test passes: True

Summary:
Test case 1 (both empty): PASS
Test case 2 (first filled): PASS
Test case 3 (both filled): PASS

ISSUE NOT REPRODUCED: MultiValueField behaves correctly


=== Iteration 33/100 ===
Calling LLM...
LLM Response: Great! Our fix works for the original issue. Now let's run the forms tests to make sure we didn't break anything:

<function=execute_bash>
<parameter=command>python tests/runtests.py forms_tests --ver...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python tests/runtests.py forms_tests --verbosity=2"
}
Tool execution status: error
Tool stdout:
[STDOUT]
Testing against Django installed in '/testbed/django' with up to 64 processes
Importing application forms_tests
Found 696 test(s).
Skipping setup of unused database(s): other.
Operations to perform:
  Synchronize unmigrated apps: auth, contenttypes, forms_tests, messages, sessions, staticfiles
  Apply all migrations: admin, sites
Synchronizing apps without migrations:
  Creating tables...
    Creating table django_content_type
    Creating table auth_permission
    Creating table auth_group
    Creating table auth_user
    Creating table django_session
    Creating table forms_tests_boundarymodel
    Creating table forms_tests_defaults
    Creating table forms_tests_choicemodel
    Creating table forms_tests_choiceoptionmodel
    Creating table forms_tests_choicefieldmodel
    Creating table forms_tests_optionalmultichoicemodel
    Creating table forms_tests_filemodel
    Creating table forms_tests_article
    Running deferred SQL...
Running migrations:
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying sites.0001_initial... OK
  Applying sites.0002_alter_domain_unique... OK
System check identified no issues (0 silenced).
Error executing command:
Exit code: 1
[STDERR]
Creating test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
test_disabled_field_has_changed_always_false (forms_tests.field_tests.test_base.DisabledFieldTests) ... ok
test_cooperative_multiple_inheritance (forms_tests.field_tests.test_base.BasicFieldsTests) ... ok
test_field_deepcopies_widget_instance (forms_tests.field_tests.test_base.BasicFieldsTests) ... ok
test_field_sets_widget_is_required (forms_tests.field_tests.test_base.BasicFieldsTests) ... ok
test_boolean_picklable (forms_tests.field_tests.test_booleanfield.BooleanFieldTest) ... ok
test_booleanfield_changed (forms_tests.field_tests.test_booleanfield.BooleanFieldTest) ... ok
test_booleanfield_clean_1 (forms_tests.field_tests.test_booleanfield.BooleanFieldTest) ... ok
test_booleanfield_clean_2 (forms_tests.field_tests.test_booleanfield.BooleanFieldTest) ... ok
test_disabled_has_changed (forms_tests.field_tests.test_booleanfield.BooleanFieldTest) ... ok
test_disabled_has_changed (forms_tests.field_tests.test_multiplechoicefield.MultipleChoiceFieldTest) ... ok
test_multiplechoicefield_1 (forms_tests.field_tests.test_multiplechoicefield.MultipleChoiceFieldTest) ... ok
test_multiplechoicefield_2 (forms_tests.field_tests.test_multiplechoicefield.MultipleChoiceFieldTest) ... ok
test_multiplechoicefield_3 (forms_tests.field_tests.test_multiplechoicefield.MultipleChoiceFieldTest) ... ok
test_multiplechoicefield_changed (forms_tests.field_tests.test_multiplechoicefield.MultipleChoiceFieldTest) ... ok
test_disabled_has_changed (forms_tests.field_tests.test_filefield.FileFieldTest) ... ok
test_file_picklable (forms_tests.field_tests.test_filefield.FileFieldTest) ... ok
test_filefield_1 (forms_tests.field_tests.test_filefield.FileFieldTest) ... ok
test_filefield_2 (forms_tests.field_tests.test_filefield.FileFieldTest) ... ok
test_filefield_3 (forms_tests.field_tests.test_filefield.FileFieldTest) ... ok
test_filefield_changed (forms_tests.field_tests.test_filefield.FileFieldTest)
The value of data will more than likely come from request.FILES. The ... ok
test_combofield_1 (forms_tests.field_tests.test_combofield.ComboFieldTest) ... ok
test_combofield_2 (forms_tests.field_tests.test_combofield.ComboFieldTest) ... ok
test_empty_value (forms_tests.field_tests.test_slugfield.SlugFieldTest) ... ok
test_slugfield_normalization (forms_tests.field_tests.test_slugfield.SlugFieldTest) ... ok
test_slugfield_unicode_normalization (forms_tests.field_tests.test_slugfield.SlugFieldTest) ... ok
test_clean_value_with_dashes (forms_tests.field_tests.test_uuidfield.UUIDFieldTest) ... ok
test_uuidfield_1 (forms_tests.field_tests.test_uuidfield.UUIDFieldTest) ... ok
test_uuidfield_2 (forms_tests.field_tests.test_uuidfield.UUIDFieldTest) ... ok
test_uuidfield_3 (forms_tests.field_tests.test_uuidfield.UUIDFieldTest) ... ok
test_uuidfield_4 (forms_tests.field_tests.test_uuidfield.UUIDFieldTest) ... ok
test_typedchoicefield_1 (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest) ... ok
test_typedchoicefield_2 (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest) ... ok
test_typedchoicefield_3 (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest) ... ok
test_typedchoicefield_4 (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest) ... ok
test_typedchoicefield_5 (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest) ... ok
test_typedchoicefield_6 (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest) ... ok
test_typedchoicefield_has_changed (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest) ... ok
test_typedchoicefield_special_coerce (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest)
A coerce function which results in a value not present in choices ... ok
test_typedmultiplechoicefield_1 (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_2 (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_3 (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_4 (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_5 (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_6 (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_7 (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_has_changed (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_special_coerce (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest)
A coerce function which results in a value not present in choices ... ok
test_allow_folders (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_clean (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_fix_os_paths (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_match (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_no_options (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_nonexistent_path (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_recursive (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_recursive_folders_without_files (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_recursive_no_folders_or_files (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_empty_queryset_return (forms_tests.tests.tests.TestTicket14567)
If a model's ManyToManyField has blank=True and is saved with no data, a queryset is returned. ... ok
test_attribute_class (forms_tests.tests.test_forms.RendererTests) ... ok
test_attribute_instance (forms_tests.tests.test_forms.RendererTests) ... ok
test_attribute_override (forms_tests.tests.test_forms.RendererTests) ... ok
test_default (forms_tests.tests.test_forms.RendererTests) ... ok
test_kwarg_class (forms_tests.tests.test_forms.RendererTests) ... ok
test_kwarg_instance (forms_tests.tests.test_forms.RendererTests) ... ok
test_generic_ipaddress_as_generic (forms_tests.field_tests.test_genericipaddressfield.GenericIPAddressFieldTest) ... ok
test_generic_ipaddress_as_generic_not_required (forms_tests.field_tests.test_genericipaddressfield.GenericIPAddressFieldTest) ... ok
test_generic_ipaddress_as_ipv4_only (forms_tests.field_tests.test_genericipaddressfield.GenericIPAddressFieldTest) ... ok
test_generic_ipaddress_as_ipv6_only (forms_tests.field_tests.test_genericipaddressfield.GenericIPAddressFieldTest) ... ok
test_generic_ipaddress_invalid_arguments (forms_tests.field_tests.test_genericipaddressfield.GenericIPAddressFieldTest) ... ok
test_generic_ipaddress_normalization (forms_tests.field_tests.test_genericipaddressfield.GenericIPAddressFieldTest) ... ok
test_get_renderer (forms_tests.tests.test_renderers.BaseTemplateRendererTests) ... ok
test_change_regex_after_init (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_empty_value (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_get_regex (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_regexfield_1 (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_regexfield_2 (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_regexfield_3 (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_regexfield_4 (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_regexfield_strip (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_regexfield_unicode_characters (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_modelchoicefield (forms_tests.tests.test_error_messages.ModelChoiceFieldErrorMessagesTestCase) ... ok
test_modelchoicefield_value_placeholder (forms_tests.tests.test_error_messages.ModelChoiceFieldErrorMessagesTestCase) ... ok
test_installed_apps_template_found (forms_tests.tests.test_renderers.TemplatesSettingTests)
Can find a custom template in INSTALLED_APPS. ... ok
test_invalid (forms_tests.tests.test_formsets.AllValidTests)
all_valid() validates all forms, even when some are invalid. ... ok
test_valid (forms_tests.tests.test_formsets.AllValidTests) ... ok
test_timefield_1 (forms_tests.field_tests.test_timefield.TimeFieldTest) ... ok
test_timefield_2 (forms_tests.field_tests.test_timefield.TimeFieldTest) ... ok
test_timefield_3 (forms_tests.field_tests.test_timefield.TimeFieldTest) ... ok
test_timefield_changed (forms_tests.field_tests.test_timefield.TimeFieldTest) ... ok
test_textarea_trailing_newlines (forms_tests.tests.test_widgets.LiveWidgetTests)
A roundtrip on a ModelForm doesn't alter the TextField value ... skipped 'No browsers specified.'
test_empty_formset_is_multipart (forms_tests.tests.test_formsets.TestEmptyFormSet)
is_multipart() works with an empty formset. ... ok
test_empty_formset_is_valid (forms_tests.tests.test_formsets.TestEmptyFormSet)
An empty formset still calls clean() ... ok
test_empty_formset_media (forms_tests.tests.test_formsets.TestEmptyFormSet)
Media is available on empty formset. ... ok
test_localized_timeField (forms_tests.tests.test_input_formats.CustomTimeInputFormatsTests)
Localized TimeFields act as unlocalized widgets ... ok
test_localized_timeField_with_inputformat (forms_tests.tests.test_input_formats.CustomTimeInputFormatsTests)
Localized TimeFields with manually specified input formats can accept those formats ... ok
test_timeField (forms_tests.tests.test_input_formats.CustomTimeInputFormatsTests)
TimeFields can parse dates in the default format ... ok
test_timeField_with_inputformat (forms_tests.tests.test_input_formats.CustomTimeInputFormatsTests)
TimeFields with manually specified input formats can accept those formats ... ok
test_charfield_1 (forms_tests.field_tests.test_charfield.CharFieldTest) ... ok
test_charfield_2 (forms_tests.field_tests.test_charfield.CharFieldTest) ... ok
test_charfield_3 (forms_tests.field_tests.test_charfield.CharFieldTest) ... ok
test_charfield_4 (forms_tests.field_tests.test_charfield.CharFieldTest) ... ok
test_charfield_5 (forms_tests.field_tests.test_charfield.CharFieldTest) ... ok
test_charfield_disabled (forms_tests.field_tests.test_charfield.CharFieldTest) ... ok
test_charfield_length_not_int (forms_tests.field_tests.test_charfield.CharFieldTest)
Setting min_length or max_length to something that is not a number ... ok
test_charfield_strip (forms_tests.field_tests.test_charfield.CharFieldTest)
Values have whitespace stripped but not if strip=False. ... ok
test_charfield_widget_attrs (forms_tests.field_tests.test_charfield.CharFieldTest)
CharField.widget_attrs() always returns a dictionary and includes ... ok
test_clean_non_string (forms_tests.field_tests.test_charfield.CharFieldTest)
CharField.clean() calls str(value) before stripping it. ... ok
test_null_characters_prohibited (forms_tests.field_tests.test_charfield.CharFieldTest) ... ok
test_strip_before_checking_empty (forms_tests.field_tests.test_charfield.CharFieldTest)
A whitespace-only value, ' ', is stripped to an empty string and then ... ok
test_dateField (forms_tests.tests.test_input_formats.CustomDateInputFormatsTests)
DateFields can parse dates in the default format ... ok
test_dateField_with_inputformat (forms_tests.tests.test_input_formats.CustomDateInputFormatsTests)
DateFields with manually specified input formats can accept those formats ... ok
test_localized_dateField (forms_tests.tests.test_input_formats.CustomDateInputFormatsTests)
Localized DateFields act as unlocalized widgets ... ok
test_localized_dateField_with_inputformat (forms_tests.tests.test_input_formats.CustomDateInputFormatsTests)
Localized DateFields with manually specified input formats can accept those formats ... ok
test_installed_apps_template_found (forms_tests.tests.test_renderers.DjangoTemplatesTests)
Can find a custom template in INSTALLED_APPS. ... ok
test_localized_timeField (forms_tests.tests.test_input_formats.SimpleTimeFormatTests)
Localized TimeFields in a non-localized environment act as unlocalized widgets ... ok
test_localized_timeField_with_inputformat (forms_tests.tests.test_input_formats.SimpleTimeFormatTests)
Localized TimeFields with manually specified input formats can accept those formats ... ok
test_timeField (forms_tests.tests.test_input_formats.SimpleTimeFormatTests)
TimeFields can parse dates in the default format ... ok
test_timeField_with_inputformat (forms_tests.tests.test_input_formats.SimpleTimeFormatTests)
TimeFields with manually specified input formats can accept those formats ... ok
test_choicefield_1 (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_2 (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_3 (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_4 (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_callable (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_callable_may_evaluate_to_different_values (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_choices_default (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_disabled (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_enumeration (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_invalid_loading_order (forms_tests.tests.tests.RelatedModelFormTests)
Test for issue 10405 ... ok
test_valid_loading_order (forms_tests.tests.tests.RelatedModelFormTests)
Test for issue 10405 ... ok
test_dateField (forms_tests.tests.test_input_formats.SimpleDateFormatTests)
DateFields can parse dates in the default format ... ok
test_dateField_with_inputformat (forms_tests.tests.test_input_formats.SimpleDateFormatTests)
DateFields with manually specified input formats can accept those formats ... ok
test_localized_dateField (forms_tests.tests.test_input_formats.SimpleDateFormatTests)
Localized DateFields in a non-localized environment act as unlocalized widgets ... ok
test_localized_dateField_with_inputformat (forms_tests.tests.test_input_formats.SimpleDateFormatTests)
Localized DateFields with manually specified input formats can accept those formats ... ok
test_nullbooleanfield_2 (forms_tests.field_tests.test_nullbooleanfield.NullBooleanFieldTest) ... ok
test_nullbooleanfield_3 (forms_tests.field_tests.test_nullbooleanfield.NullBooleanFieldTest) ... ok
test_nullbooleanfield_4 (forms_tests.field_tests.test_nullbooleanfield.NullBooleanFieldTest) ... ok
test_nullbooleanfield_changed (forms_tests.field_tests.test_nullbooleanfield.NullBooleanFieldTest) ... ok
test_nullbooleanfield_clean (forms_tests.field_tests.test_nullbooleanfield.NullBooleanFieldTest) ... ok
test_error_dict_copy (forms_tests.tests.test_utils.FormsUtilsTestCase) ... ok
test_error_dict_html_safe (forms_tests.tests.test_utils.FormsUtilsTestCase) ... ok
test_error_list_html_safe (forms_tests.tests.test_utils.FormsUtilsTestCase) ... ok
test_flatatt (forms_tests.tests.test_utils.FormsUtilsTestCase) ... ok
test_flatatt_no_side_effects (forms_tests.tests.test_utils.FormsUtilsTestCase)
flatatt() does not modify the dict passed in. ... ok
test_validation_error (forms_tests.tests.test_utils.FormsUtilsTestCase) ... ok
test_installed_apps_template_found (forms_tests.tests.test_renderers.Jinja2Tests)
Can find a custom template in INSTALLED_APPS. ... ok
test_all_errors_get_reported (forms_tests.tests.test_validators.TestFieldWithValidators) ... ok
test_field_validators_can_be_any_iterable (forms_tests.tests.test_validators.TestFieldWithValidators) ... ok
test_splitdatetimefield_1 (forms_tests.field_tests.test_splitdatetimefield.SplitDateTimeFieldTest) ... ok
test_splitdatetimefield_2 (forms_tests.field_tests.test_splitdatetimefield.SplitDateTimeFieldTest) ... ok
test_splitdatetimefield_changed (forms_tests.field_tests.test_splitdatetimefield.SplitDateTimeFieldTest) ... ok
test_durationfield_clean (forms_tests.field_tests.test_durationfield.DurationFieldTest) ... ok
test_durationfield_clean_not_required (forms_tests.field_tests.test_durationfield.DurationFieldTest) ... ok
test_durationfield_integer_value (forms_tests.field_tests.test_durationfield.DurationFieldTest) ... ok
test_durationfield_prepare_value (forms_tests.field_tests.test_durationfield.DurationFieldTest) ... ok
test_durationfield_render (forms_tests.field_tests.test_durationfield.DurationFieldTest) ... ok
test_overflow (forms_tests.field_tests.test_durationfield.DurationFieldTest) ... ok
test_overflow_translation (forms_tests.field_tests.test_durationfield.DurationFieldTest) ... ok
test_integerfield_1 (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_integerfield_2 (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_integerfield_3 (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_integerfield_4 (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_integerfield_5 (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_integerfield_big_num (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_integerfield_float (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_integerfield_localized (forms_tests.field_tests.test_integerfield.IntegerFieldTest)
A localized IntegerField's widget renders to a text input without any ... ok
test_integerfield_subclass (forms_tests.field_tests.test_integerfield.IntegerFieldTest)
Class-defined widget is not overwritten by __init__() (#22245). ... ok
test_integerfield_unicode_number (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_boundary_conditions (forms_tests.tests.tests.FormsModelTestCase) ... ok
test_formfield_initial (forms_tests.tests.tests.FormsModelTestCase) ... ok
test_unicode_filename (forms_tests.tests.tests.FormsModelTestCase) ... ok
test_m2m_field_exclusion (forms_tests.tests.tests.ManyToManyExclusionTestCase) ... ok
test_dateField (forms_tests.tests.test_input_formats.LocalizedDateTests)
DateFields can parse dates in the default format ... ok
test_dateField_with_inputformat (forms_tests.tests.test_input_formats.LocalizedDateTests)
DateFields with manually specified input formats can accept those formats ... ok
test_localized_dateField (forms_tests.tests.test_input_formats.LocalizedDateTests)
Localized DateFields act as unlocalized widgets ... ok
test_localized_dateField_with_inputformat (forms_tests.tests.test_input_formats.LocalizedDateTests)
Localized DateFields with manually specified input formats can accept those formats ... ok
test_localized_timeField (forms_tests.tests.test_input_formats.LocalizedTimeTests)
Localized TimeFields act as unlocalized widgets ... ok
test_localized_timeField_with_inputformat (forms_tests.tests.test_input_formats.LocalizedTimeTests)
Localized TimeFields with manually specified input formats can accept those formats ... ok
test_timeField (forms_tests.tests.test_input_formats.LocalizedTimeTests)
TimeFields can parse dates in the default format ... ok
test_timeField_with_inputformat (forms_tests.tests.test_input_formats.LocalizedTimeTests)
TimeFields with manually specified input formats can accept those formats ... ok
test_converted_value (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_custom_encoder_decoder (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_custom_widget_attribute (forms_tests.field_tests.test_jsonfield.JSONFieldTest)
The widget can be overridden with an attribute. ... ok
test_custom_widget_kwarg (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_formfield_disabled (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_has_changed (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_invalid (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_prepare_value (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_redisplay_none_input (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_redisplay_wrong_input (forms_tests.field_tests.test_jsonfield.JSONFieldTest)
Displaying a bound form (typically due to invalid input). The form ... ok
test_valid (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_valid_empty (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_widget (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_email_regexp_for_performance (forms_tests.field_tests.test_emailfield.EmailFieldTest) ... ok
test_emailfield_1 (forms_tests.field_tests.test_emailfield.EmailFieldTest) ... ok
test_emailfield_min_max_length (forms_tests.field_tests.test_emailfield.EmailFieldTest) ... ok
test_emailfield_not_required (forms_tests.field_tests.test_emailfield.EmailFieldTest) ... ok
test_emailfield_strip_on_none_value (forms_tests.field_tests.test_emailfield.EmailFieldTest) ... ok
test_emailfield_unable_to_set_strip_kwarg (forms_tests.field_tests.test_emailfield.EmailFieldTest) ... ok
test_dateTimeField (forms_tests.tests.test_input_formats.CustomDateTimeInputFormatsTests)
DateTimeFields can parse dates in the default format ... ok
test_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.CustomDateTimeInputFormatsTests)
DateTimeFields with manually specified input formats can accept those formats ... ok
test_localized_dateTimeField (forms_tests.tests.test_input_formats.CustomDateTimeInputFormatsTests)
Localized DateTimeFields act as unlocalized widgets ... ok
test_localized_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.CustomDateTimeInputFormatsTests)
Localized DateTimeFields with manually specified input formats can accept those formats ... ok
test_as_p (forms_tests.tests.test_formsets.FormsetAsTagTests) ... ok
test_as_table (forms_tests.tests.test_formsets.FormsetAsTagTests) ... ok
test_as_ul (forms_tests.tests.test_formsets.FormsetAsTagTests) ... ok
test_render (forms_tests.widget_tests.test_hiddeninput.HiddenInputTest) ... ok
test_use_required_attribute (forms_tests.widget_tests.test_hiddeninput.HiddenInputTest) ... ok
test_decimalfield_support_decimal_separator (forms_tests.field_tests.test_floatfield.FloatFieldTest) ... ok
test_decimalfield_support_thousands_separator (forms_tests.field_tests.test_floatfield.FloatFieldTest) ... ok
test_floatfield_1 (forms_tests.field_tests.test_floatfield.FloatFieldTest) ... ok
test_floatfield_2 (forms_tests.field_tests.test_floatfield.FloatFieldTest) ... ok
test_floatfield_3 (forms_tests.field_tests.test_floatfield.FloatFieldTest) ... ok
test_floatfield_changed (forms_tests.field_tests.test_floatfield.FloatFieldTest) ... ok
test_floatfield_localized (forms_tests.field_tests.test_floatfield.FloatFieldTest)
A localized FloatField's widget renders to a text input without any ... ok
test_floatfield_widget_attrs (forms_tests.field_tests.test_floatfield.FloatFieldTest) ... ok
test_dateTimeField (forms_tests.tests.test_input_formats.LocalizedDateTimeTests)
DateTimeFields can parse dates in the default format ... ok
test_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.LocalizedDateTimeTests)
DateTimeFields with manually specified input formats can accept those formats ... ok
test_localized_dateTimeField (forms_tests.tests.test_input_formats.LocalizedDateTimeTests)
Localized DateTimeFields act as unlocalized widgets ... ok
test_localized_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.LocalizedDateTimeTests)
Localized DateTimeFields with manually specified input formats can accept those formats ... ok
test_decimalfield_1 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_2 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_3 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_4 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_5 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_6 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_changed (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_localized (forms_tests.field_tests.test_decimalfield.DecimalFieldTest)
A localized DecimalField's widget renders to a text input without ... ok
test_decimalfield_scientific (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_support_decimal_separator (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_support_thousands_separator (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_widget_attrs (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_enter_a_number_error (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_bad_choice (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_clean (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_clean_disabled_multivalue (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_disabled_has_changed (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_form_as_table (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_form_as_table_data (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_form_cleaned_data (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_has_changed_first_widget (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)
Test when the first widget's data has changed. ... ok
test_has_changed_last_widget (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)
Test when the last widget's data has changed. This ensures that it is ... ok
test_has_changed_no_initial (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_has_changed_same (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_no_value (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)
If insufficient data is provided, None is substituted. ... ok
test_datetimefield_changed (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) ... ok
test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) ... ok
test_datetimefield_clean_input_formats (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) ... ok
test_datetimefield_clean_invalid (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) ... ok
test_datetimefield_not_required (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) ... ok
test_customize_management_form_error (forms_tests.tests.test_formsets.TestIsBoundBehavior) ... ok
test_empty_forms_are_unbound (forms_tests.tests.test_formsets.TestIsBoundBehavior) ... ok
test_form_errors_are_caught_by_formset (forms_tests.tests.test_formsets.TestIsBoundBehavior) ... ok
test_management_form_invalid_data (forms_tests.tests.test_formsets.TestIsBoundBehavior) ... ok
test_no_data_error (forms_tests.tests.test_formsets.TestIsBoundBehavior) ... ok
test_with_management_data_attrs_work_fine (forms_tests.tests.test_formsets.TestIsBoundBehavior) ... ok
test_add_css_deduplication (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_add_empty (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_add_js_deduplication (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_combine_media (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_construction (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_form_media (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_html_safe (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_deduplication (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_dsl (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_inheritance (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_inheritance_extends (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_inheritance_from_property (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_inheritance_single_type (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_property (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_property_parent_references (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_merge (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_merge_css_three_way (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_merge_js_three_way (forms_tests.tests.test_media.FormsMediaTestCase)
The relative order of scripts is preserved in a three-way merge. ... ok
test_merge_js_three_way2 (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_merge_warning (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_multi_media (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_multi_widget (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_dateTimeField (forms_tests.tests.test_input_formats.SimpleDateTimeFormatTests)
DateTimeFields can parse dates in the default format ... ok
test_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.SimpleDateTimeFormatTests)
DateTimeFields with manually specified input formats can accept those formats ... ok
test_localized_dateTimeField (forms_tests.tests.test_input_formats.SimpleDateTimeFormatTests)
Localized DateTimeFields in a non-localized environment act as unlocalized widgets ... ok
test_localized_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.SimpleDateTimeFormatTests)
Localized DateTimeFields with manually specified input formats can accept those formats ... ok
test_attrs_with_type (forms_tests.widget_tests.test_input.InputTests) ... ok
test_render (forms_tests.widget_tests.test_fileinput.FileInputTest)
FileInput widgets never render the value attribute. The old value ... ok
test_use_required_attribute (forms_tests.widget_tests.test_fileinput.FileInputTest) ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_fileinput.FileInputTest) ... ok
test_empty_field_char (forms_tests.tests.tests.EmptyLabelTestCase) ... ok
test_empty_field_char_none (forms_tests.tests.tests.EmptyLabelTestCase) ... ok
test_empty_field_integer (forms_tests.tests.tests.EmptyLabelTestCase) ... ok
test_get_display_value_on_none (forms_tests.tests.tests.EmptyLabelTestCase) ... ok
test_html_rendering_of_prepopulated_models (forms_tests.tests.tests.EmptyLabelTestCase) ... ok
test_save_empty_label_forms (forms_tests.tests.tests.EmptyLabelTestCase) ... ok
test_attrs_not_localized (forms_tests.widget_tests.test_numberinput.NumberInputTests) ... ok
test_render_attrs (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest) ... ok
test_render_attrs_constructor (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest) ... ok
test_render_attrs_multiple (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest) ... ok
test_render_empty (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest) ... ok
test_render_increment_id (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest)
Each input should get a separate ID. ... ok
test_render_multiple (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest) ... ok
test_render_none (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest) ... ok
test_render_single (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest) ... ok
test_attr_false_not_rendered (forms_tests.widget_tests.test_widget.WidgetTests) ... ok
test_format_value (forms_tests.widget_tests.test_widget.WidgetTests) ... ok
test_no_trailing_newline_in_attrs (forms_tests.widget_tests.test_widget.WidgetTests) ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_widget.WidgetTests) ... ok
test_format (forms_tests.widget_tests.test_timeinput.TimeInputTest)
Use 'format' to change the way a value is displayed. ... ok
test_l10n (forms_tests.widget_tests.test_timeinput.TimeInputTest) ... ok
test_render_none (forms_tests.widget_tests.test_timeinput.TimeInputTest) ... ok
test_render_value (forms_tests.widget_tests.test_timeinput.TimeInputTest)
The microseconds are trimmed on display, by default. ... ok
test_string (forms_tests.widget_tests.test_timeinput.TimeInputTest)
Initializing from a string value. ... ok
test_render (forms_tests.widget_tests.test_passwordinput.PasswordInputTest) ... ok
test_render_ignore_value (forms_tests.widget_tests.test_passwordinput.PasswordInputTest) ... ok
test_render_value_true (forms_tests.widget_tests.test_passwordinput.PasswordInputTest)
The render_value argument lets you specify whether the widget should ... ok
test_get_context_does_not_mutate_attrs (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest) ... ok
test_render_check_exception (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest)
Calling check_test() shouldn't swallow exceptions (#17888). ... ok
test_render_check_test (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest)
You can pass 'check_test' to the constructor. This is a callable that ... ok
test_render_empty (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest) ... ok
test_render_false (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest) ... ok
test_render_int (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest)
Integers are handled by value, not as booleans (#17114). ... ok
test_render_none (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest) ... ok
test_render_true (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest) ... ok
test_render_value (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest)
Using any value that's not in ('', None, False, True) will check the ... ok
test_value_from_datadict (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest)
The CheckboxInput widget will return False if the key is not found in ... ok
test_value_from_datadict_string_int (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest) ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest) ... ok
test_escaping (forms_tests.widget_tests.test_textarea.TextareaTest) ... ok
test_mark_safe (forms_tests.widget_tests.test_textarea.TextareaTest) ... ok
test_render (forms_tests.widget_tests.test_textarea.TextareaTest) ... ok
test_render_empty (forms_tests.widget_tests.test_textarea.TextareaTest) ... ok
test_render_none (forms_tests.widget_tests.test_textarea.TextareaTest) ... ok
test_render_required (forms_tests.widget_tests.test_textarea.TextareaTest) ... ok
test_attrs_precedence (forms_tests.widget_tests.test_textinput.TextInputTest)
`attrs` passed to render() get precedence over those passed to the ... ok
test_attrs_safestring (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_constructor_attrs (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_render (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_render_boolean (forms_tests.widget_tests.test_textinput.TextInputTest)
Boolean values are rendered to their string forms ("True" and ... ok
test_render_custom_attrs (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_render_none (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_render_quoted (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_render_unicode (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_render_value (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_use_required_attribute (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_callable_initial_value (forms_tests.tests.tests.ModelFormCallableModelDefault)
The initial value for a callable default returning a queryset is the pk (refs #13769) ... ok
test_initial_instance_value (forms_tests.tests.tests.ModelFormCallableModelDefault)
Initial instances for model fields may also be instances (refs #7287) ... ok
test_no_empty_option (forms_tests.tests.tests.ModelFormCallableModelDefault)
If a model's ForeignKey has blank=False and a default, no empty option is created (Refs #10792). ... ok
test_format (forms_tests.widget_tests.test_dateinput.DateInputTest)
Use 'format' to change the way a value is displayed. ... ok
test_l10n (forms_tests.widget_tests.test_dateinput.DateInputTest) ... ok
test_render_none (forms_tests.widget_tests.test_dateinput.DateInputTest) ... ok
test_render_value (forms_tests.widget_tests.test_dateinput.DateInputTest) ... ok
test_string (forms_tests.widget_tests.test_dateinput.DateInputTest)
Should be able to initialize from a string value. ... ok
test_constructor_different_attrs (forms_tests.widget_tests.test_splithiddendatetimewidget.SplitHiddenDateTimeWidgetTest) ... ok
test_l10n (forms_tests.widget_tests.test_splithiddendatetimewidget.SplitHiddenDateTimeWidgetTest) ... ok
test_render_empty (forms_tests.widget_tests.test_splithiddendatetimewidget.SplitHiddenDateTimeWidgetTest) ... ok
test_render_value (forms_tests.widget_tests.test_splithiddendatetimewidget.SplitHiddenDateTimeWidgetTest) ... ok
test_compare_string (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest) ... ok
test_format_value (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest) ... ok
test_multiple_options_same_value (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest)
Multiple options with the same value can be selected (#8103). ... ok
test_multiple_values_invalid (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest)
If multiple values are given, but some of them are not valid, the valid ... ok
test_optgroup_select_multiple (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest) ... ok
test_render_multiple_selected (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest) ... ok
test_render_none (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest)
If the value is None, none of the options are selected, even if the ... ok
test_render_selected (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest) ... ok
test_render_value_label (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest)
If the value corresponds to a label (but not to an option value), none ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest) ... ok
test_constructor_attrs (forms_tests.widget_tests.test_splitdatetimewidget.SplitDateTimeWidgetTest) ... ok
test_constructor_different_attrs (forms_tests.widget_tests.test_splitdatetimewidget.SplitDateTimeWidgetTest) ... ok
test_formatting (forms_tests.widget_tests.test_splitdatetimewidget.SplitDateTimeWidgetTest)
Use 'date_format' and 'time_format' to change the way a value is ... ok
test_render_date_and_time (forms_tests.widget_tests.test_splitdatetimewidget.SplitDateTimeWidgetTest) ... ok
test_render_datetime (forms_tests.widget_tests.test_splitdatetimewidget.SplitDateTimeWidgetTest) ... ok
test_render_empty (forms_tests.widget_tests.test_splitdatetimewidget.SplitDateTimeWidgetTest) ... ok
test_render_none (forms_tests.widget_tests.test_splitdatetimewidget.SplitDateTimeWidgetTest) ... ok
test_lazy_labels (forms_tests.tests.test_i18n.FormsI18nTests) ... ok
test_non_ascii_choices (forms_tests.tests.test_i18n.FormsI18nTests) ... ok
test_non_ascii_label (forms_tests.tests.test_i18n.FormsI18nTests) ... ok
test_select_translated_text (forms_tests.tests.test_i18n.FormsI18nTests) ... ok
test_l10n (forms_tests.widget_tests.test_datetimeinput.DateTimeInputTest) ... ok
test_locale_aware (forms_tests.widget_tests.test_datetimeinput.DateTimeInputTest) ... ok
test_render_formatted (forms_tests.widget_tests.test_datetimeinput.DateTimeInputTest)
Use 'format' to change the way a value is displayed. ... ok
test_render_none (forms_tests.widget_tests.test_datetimeinput.DateTimeInputTest) ... ok
test_render_value (forms_tests.widget_tests.test_datetimeinput.DateTimeInputTest)
The microseconds are trimmed on display, by default. ... ok
test_l10n (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest)
The NullBooleanSelect widget's options are lazily localized (#17190). ... ok
test_render_false (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_none (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_true (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_value_1 (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_value_2 (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_value_3 (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_value_false (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_value_true (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_value_unknown (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_clear_input_checked_returns_false (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
ClearableFileInput.value_from_datadict returns False if the clear ... ok
test_clear_input_checked_returns_false_only_if_not_required (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
ClearableFileInput.value_from_datadict never returns False if the field ... ok
test_clear_input_renders (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
A ClearableFileInput with is_required False and rendered with an ... ok
test_clear_input_renders_only_if_initial (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
A ClearableFileInput instantiated with no initial value does not render ... ok
test_clear_input_renders_only_if_not_required (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
A ClearableFileInput with is_required=True does not render a clear ... ok
test_html_does_not_mask_exceptions (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
A ClearableFileInput should not mask exceptions produced while ... ok
test_html_escaped (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
A ClearableFileInput should escape name, filename, and URL ... ok
test_render_as_subwidget (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
A ClearableFileInput as a subwidget of MultiWidget. ... ok
test_render_disabled (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest) ... ok
test_return_false_if_url_does_not_exists (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest) ... ok
test_url_as_property (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest) ... ok
test_use_required_attribute (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest) ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest) ... ok
test_corrupted_image (forms_tests.field_tests.test_imagefield.ImageFieldTest) ... ok
test_file_extension_validation (forms_tests.field_tests.test_imagefield.ImageFieldTest) ... ok
test_imagefield_annotate_with_bitmap_image_after_clean (forms_tests.field_tests.test_imagefield.ImageFieldTest)
This also tests the situation when Pillow doesn't detect the MIME type ... ok
test_imagefield_annotate_with_image_after_clean (forms_tests.field_tests.test_imagefield.ImageFieldTest) ... ok
test_widget_attrs_accept_false (forms_tests.field_tests.test_imagefield.ImageFieldTest) ... ok
test_widget_attrs_accept_specified (forms_tests.field_tests.test_imagefield.ImageFieldTest) ... ok
test_widget_attrs_default_accept (forms_tests.field_tests.test_imagefield.ImageFieldTest) ... ok
test_constructor_attrs (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_constructor_attrs_with_type (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_deepcopy (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest)
MultiWidget should define __deepcopy__() (#12048). ... ok
test_needs_multipart_false (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest)
needs_multipart_form should be False if no widgets need it. ... ok
test_needs_multipart_true (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest)
needs_multipart_form should be True if any widgets need it. ... ok
test_nested_multiwidget (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest)
MultiWidgets can be composed of other MultiWidgets. ... ok
test_no_whitespace_between_widgets (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_subwidgets_name (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_text_inputs (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_value_from_datadict_subwidgets_name (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_value_omitted_from_data_subwidgets_name (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_choices_constructor (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_choices_constructor_generator (forms_tests.widget_tests.test_select.SelectTest)
If choices is passed to the constructor and is a generator, it can be ... ok
test_choices_escaping (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_choices_optgroup (forms_tests.widget_tests.test_select.SelectTest)
Choices can be nested one level in order to create HTML optgroups. ... ok
test_choices_select_inner (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_choices_select_outer (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_choices_unicode (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_compare_to_str (forms_tests.widget_tests.test_select.SelectTest)
The value is compared to its str(). ... ok
test_constructor_attrs (forms_tests.widget_tests.test_select.SelectTest)
Select options shouldn't inherit the parent widget attrs. ... ok
test_deepcopy (forms_tests.widget_tests.test_select.SelectTest)
__deepcopy__() should copy all attributes properly (#25085). ... ok
test_doesnt_localize_option_value (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_doesnt_render_required_when_impossible_to_select_empty_field (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_doesnt_render_required_when_no_choices_are_available (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_optgroups (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_optgroups_integer_choices (forms_tests.widget_tests.test_select.SelectTest)
The option 'value' is the same type as what's in `choices`. ... ok
test_options (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_render (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_render_label_value (forms_tests.widget_tests.test_select.SelectTest)
If the value corresponds to a label (but not to an option value), none ... ok
test_render_none (forms_tests.widget_tests.test_select.SelectTest)
If the value is None, none of the options are selected. ... ok
test_render_selected (forms_tests.widget_tests.test_select.SelectTest)
Only one option can be selected (#8103). ... ok
test_renders_required_when_possible_to_select_empty_field_list (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_renders_required_when_possible_to_select_empty_field_none (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_renders_required_when_possible_to_select_empty_field_str (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_datefield_1 (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_datefield_2 (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_datefield_3 (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_datefield_4 (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_datefield_5 (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_datefield_changed (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_datefield_strptime (forms_tests.field_tests.test_datefield.DateFieldTest)
field.strptime() doesn't raise a UnicodeEncodeError (#16123) ... ok
test_form_field (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_form_label_association (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_l10n_date_changed (forms_tests.field_tests.test_datefield.DateFieldTest)
DateField.has_changed() with SelectDateWidget works with a localized ... ok
test_l10n_invalid_date_in (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_class_attrs (forms_tests.widget_tests.test_radioselect.RadioSelectTest)
The <ul> in the multiple_input.html widget template include the class ... ok
test_constructor_attrs (forms_tests.widget_tests.test_radioselect.RadioSelectTest)
Attributes provided at instantiation are passed to the constituent ... ok
test_doesnt_localize_input_value (forms_tests.widget_tests.test_radioselect.RadioSelectTest) ... ok
test_nested_choices (forms_tests.widget_tests.test_radioselect.RadioSelectTest) ... ok
test_render (forms_tests.widget_tests.test_radioselect.RadioSelectTest) ... ok
test_render_as_subwidget (forms_tests.widget_tests.test_radioselect.RadioSelectTest)
A RadioSelect as a subwidget of MultiWidget. ... ok
test_render_attrs (forms_tests.widget_tests.test_radioselect.RadioSelectTest)
Attributes provided at render-time are passed to the constituent ... ok
test_booleanfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_charfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_choicefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_datefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_datetimefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_decimalfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_emailfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_error_messages_escaping (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_filefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_floatfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_generic_ipaddressfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_integerfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_multiplechoicefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_regexfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_splitdatetimefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_subclassing_errorlist (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_timefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_urlfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_doesnt_localize_input_value (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest) ... ok
test_label (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest)
CheckboxSelectMultiple doesn't contain 'for="field_0"' in the <label> ... ok
test_nested_choices (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest) ... ok
test_nested_choices_without_id (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest) ... ok
test_render_none (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest)
If the value is None, none of the options are selected, even if the ... ok
test_render_value (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest) ... ok
test_render_value_multiple (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest) ... ok
test_separate_ids (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest)
Each input gets a separate ID. ... ok
test_separate_ids_constructor (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest)
Each input gets a separate ID when the ID is passed to the constructor. ... ok
test_use_required_attribute (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest) ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest) ... ok
test_url_regex_ticket11198 (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_1 (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_10 (forms_tests.field_tests.test_urlfield.URLFieldTest)
URLField correctly validates IPv6 (#18779). ... ok
test_urlfield_2 (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_5 (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_6 (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_7 (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_9 (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_normalization (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_not_string (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_strip_on_none_value (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_unable_to_set_strip_kwarg (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_value_placeholder_with_char_field (forms_tests.tests.test_validators.ValidatorCustomMessageTests) ... ok
test_value_placeholder_with_decimal_field (forms_tests.tests.test_validators.ValidatorCustomMessageTests) ... ok
test_value_placeholder_with_file_field (forms_tests.tests.test_validators.ValidatorCustomMessageTests) ... ok
test_value_placeholder_with_integer_field (forms_tests.tests.test_validators.ValidatorCustomMessageTests) ... ok
test_value_placeholder_with_null_character (forms_tests.tests.test_validators.ValidatorCustomMessageTests) ... ok
test_custom_input_format (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_custom_months (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_format_value (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_l10n (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_render_datetime (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_render_empty (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_render_invalid_date (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest)
Invalid dates should still render the failed date. ... ok
test_render_none (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest)
Rendering the None or '' values should yield the same output. ... ok
test_render_string (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_selectdate_empty_label (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_selectdate_required (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_value_from_datadict (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_years_rendered_without_separator (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_accessing_clean (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_auto_id (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_auto_id_false (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_auto_id_on_form_and_field (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_auto_id_true (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_baseform_repr (forms_tests.tests.test_forms.FormsTestCase)
BaseForm.__repr__() should contain some basic information about the ... ok
test_baseform_repr_dont_trigger_validation (forms_tests.tests.test_forms.FormsTestCase)
BaseForm.__repr__() shouldn't trigger the form validation. ... ok
test_basic_processing_in_view (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_bool (forms_tests.tests.test_forms.FormsTestCase)
BoundField without any choices (subwidgets) evaluates to True. ... ok
test_boundfield_css_classes (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_empty_label (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_id_for_label (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_id_for_label_override_by_attrs (forms_tests.tests.test_forms.FormsTestCase)
If an id is provided in `Widget.attrs`, it overrides the generated ID, ... ok
test_boundfield_initial_called_once (forms_tests.tests.test_forms.FormsTestCase)
Multiple calls to BoundField().value() in an unbound form should return ... ok
test_boundfield_invalid_index (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_label_tag (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_label_tag_custom_widget_id_for_label (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_label_tag_no_id (forms_tests.tests.test_forms.FormsTestCase)
If a widget has no id, label_tag just returns the text with no ... ok
test_boundfield_slice (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_subwidget_id_for_label (forms_tests.tests.test_forms.FormsTestCase)
If auto_id is provided when initializing the form, the generated ID in ... ok
test_boundfield_value_disabled_callable_initial (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_values (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_widget_type (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_callable_initial_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_changed_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_changing_cleaned_data_in_clean (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_changing_cleaned_data_nothing_returned (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_checkbox_auto_id (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_class_prefix (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_cleaned_data_only_fields (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_custom_boundfield (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_custom_empty_values (forms_tests.tests.test_forms.FormsTestCase)
Form fields can customize what is considered as an empty value ... ok
test_datetime_changed_data_callable_with_microseconds (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_datetime_clean_disabled_callable_initial_bound_field (forms_tests.tests.test_forms.FormsTestCase)
The cleaned value for a form with a disabled DateTimeField and callable ... ok
test_datetime_clean_disabled_callable_initial_microseconds (forms_tests.tests.test_forms.FormsTestCase)
Cleaning a form with a disabled DateTimeField and callable initial ... ok
test_dynamic_construction (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_dynamic_initial_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_empty_data_files_multi_value_dict (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_empty_dict (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_empty_permitted (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_empty_permitted_and_use_required_attribute (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_empty_querydict_args (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_dict (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_dict_as_json_escape_html (forms_tests.tests.test_forms.FormsTestCase)
#21962 - adding html escape flag to ErrorDict ... ok
test_error_escaping (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_html_required_html_classes (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_list (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_list_class_has_one_class_specified (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_list_class_not_specified (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_list_with_hidden_field_errors_has_correct_class (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_list_with_non_field_errors_has_correct_class (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_errorlist_override (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_escaping (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_explicit_field_order (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_extracting_hidden_and_visible (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_field_deep_copy_error_messages (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_field_name (forms_tests.tests.test_forms.FormsTestCase)
#5749 - `field_name` may be used as a key in _html_output(). ... ok
test_field_name_with_hidden_input (forms_tests.tests.test_forms.FormsTestCase)
BaseForm._html_output() should merge all the hidden input fields and ... ok
test_field_name_with_hidden_input_and_non_matching_row_ender (forms_tests.tests.test_forms.FormsTestCase)
BaseForm._html_output() should merge all the hidden input fields and ... ok
test_field_named_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_field_order (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_field_with_css_class (forms_tests.tests.test_forms.FormsTestCase)
`css_classes` may be used as a key in _html_output() (class comes ... ok
test_field_without_css_classes (forms_tests.tests.test_forms.FormsTestCase)
`css_classes` may be used as a key in _html_output() (empty classes). ... ok
test_filefield_initial_callable (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_filefield_with_fileinput_required (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_form (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_form_html_attributes (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_form_with_disabled_fields (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_form_with_iterable_boundfield (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_form_with_iterable_boundfield_id (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_form_with_noniterable_boundfield (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_forms_with_choices (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_forms_with_file_fields (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_forms_with_multiple_choice (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_forms_with_null_boolean (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_forms_with_prefixes (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_forms_with_radio (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_get_initial_for_field (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_has_error (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_help_text (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_hidden_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_hidden_initial_gets_id (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_hidden_widget (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_html_output_with_hidden_input_field_errors (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_html_safe (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_id_on_field (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_initial_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_initial_datetime_values (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_iterable_boundfield_select (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_label_has_required_css_class (forms_tests.tests.test_forms.FormsTestCase)
#17922 - required_css_class is added to the label_tag() of required fields. ... ok
test_label_split_datetime_not_displayed (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_label_suffix (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_label_tag_override (forms_tests.tests.test_forms.FormsTestCase)
BoundField label_suffix (if provided) overrides Form label_suffix ... ok
test_multipart_encoded_form (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_multiple_choice_checkbox (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_multiple_choice_list_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_multiple_hidden (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_multivalue_deep_copy (forms_tests.tests.test_forms.FormsTestCase)
#19298 -- MultiValueField needs to override the default as it needs ... ok
test_multivalue_field_validation (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_multivalue_initial_data (forms_tests.tests.test_forms.FormsTestCase)
#23674 -- invalid initial data should not break form.changed_data() ... ok
test_multivalue_optional_subfields (forms_tests.tests.test_forms.FormsTestCase) ... ERROR
test_only_hidden_fields (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_optional_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_specifying_labels (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_subclassing_forms (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_templates_with_forms (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_unbound_form (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_unicode_values (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_update_error_dict (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_use_required_attribute_false (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_use_required_attribute_true (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_validating_multiple_fields (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_validators_independence (forms_tests.tests.test_forms.FormsTestCase)
The list of form field validators can be modified without polluting ... ok
test_various_boolean_values (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_widget_output (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_absolute_max (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_absolute_max_invalid (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_absolute_max_with_max_num (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_basic_formset (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A FormSet constructor takes the same arguments as Form. Create a ... ok
test_blank_form_unfilled (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A form that's displayed as blank may be submitted as blank. ... ok
test_can_delete_extra_formset_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_clean_hook (forms_tests.tests.test_formsets.FormsFormsetTestCase)
FormSets have a clean() hook for doing extra validation that isn't tied ... ok
test_default_absolute_max (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_delete_prefilled_data (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Deleting prefilled data is an error. Removing data from form fields ... ok
test_disable_delete_extra_formset_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_displaying_more_than_one_blank_form (forms_tests.tests.test_formsets.FormsFormsetTestCase)
More than 1 empty form can be displayed using formset_factory's ... ok
test_empty_ordered_fields (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Ordering fields are allowed to be left blank. If they are left blank, ... ok
test_form_kwargs_empty_form (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_form_kwargs_formset (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Custom kwargs set on the formset instance are passed to the ... ok
test_form_kwargs_formset_dynamic (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Form kwargs can be passed dynamically in a formset. ... ok
test_formset_calls_forms_is_valid (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Formsets call is_valid() on each form. ... ok
test_formset_error_class (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Formset's forms use the formset's error_class. ... ok
test_formset_has_changed (forms_tests.tests.test_formsets.FormsFormsetTestCase)
FormSet.has_changed() is True if any data is passed to its forms, even ... ok
test_formset_initial_data (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A FormSet can be prefilled with existing data by providing a list of ... ok
test_formset_iteration (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Formset instances are iterable. ... ok
test_formset_nonzero (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A formsets without any forms evaluates as True. ... ok
test_formset_splitdatetimefield (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Formset works with SplitDateTimeField(initial=datetime.datetime.now). ... ok
test_formset_total_error_count (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A valid formset should have 0 total errors. ... ok
test_formset_total_error_count_with_non_form_errors (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_formset_validate_max_flag (forms_tests.tests.test_formsets.FormsFormsetTestCase)
If validate_max is set and max_num is less than TOTAL_FORMS in the ... ok
test_formset_validate_min_excludes_empty_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_formset_validate_min_flag (forms_tests.tests.test_formsets.FormsFormsetTestCase)
If validate_min is set and min_num is more than TOTAL_FORMS in the ... ok
test_formset_validate_min_unchanged_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)
min_num validation doesn't consider unchanged forms with initial data ... ok
test_formset_validation (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_formset_validation_count (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A formset's ManagementForm is validated once per FormSet.is_valid() ... ok
test_formset_with_deletion (forms_tests.tests.test_formsets.FormsFormsetTestCase)
formset_factory's can_delete argument adds a boolean "delete" field to ... ok
test_formset_with_deletion_custom_widget (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_formset_with_deletion_invalid_deleted_form (forms_tests.tests.test_formsets.FormsFormsetTestCase)
deleted_forms works on a valid formset even if a deleted form would ... ok
test_formset_with_deletion_remove_deletion_flag (forms_tests.tests.test_formsets.FormsFormsetTestCase)
If a form is filled with something and can_delete is also checked, that ... ok
test_formset_with_ordering_and_deletion (forms_tests.tests.test_formsets.FormsFormsetTestCase)
FormSets with ordering + deletion. ... ok
test_formsets_with_ordering (forms_tests.tests.test_formsets.FormsFormsetTestCase)
formset_factory's can_order argument adds an integer field to each ... ok
test_formsets_with_ordering_custom_widget (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_hard_limit_on_instantiated_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A formset has a hard limit on the number of forms instantiated. ... ok
test_html_safe (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_increase_hard_limit (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Can increase the built-in forms limit via a higher max_num. ... ok
test_invalid_deleted_form_with_ordering (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Can get ordered_forms from a valid formset even if a deleted form ... ok
test_limited_max_forms_two (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_limiting_extra_lest_than_max_num (forms_tests.tests.test_formsets.FormsFormsetTestCase)
max_num has no effect when extra is less than max_num. ... ok
test_limiting_max_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Limiting the maximum number of forms with max_num. ... ok
test_management_form_prefix (forms_tests.tests.test_formsets.FormsFormsetTestCase)
The management form has the correct prefix. ... ok
test_max_num_with_initial_data (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_max_num_zero (forms_tests.tests.test_formsets.FormsFormsetTestCase)
If max_num is 0 then no form is rendered at all, regardless of extra, ... ok
test_max_num_zero_with_initial (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_min_num_displaying_more_than_one_blank_form (forms_tests.tests.test_formsets.FormsFormsetTestCase)
More than 1 empty form can also be displayed using formset_factory's ... ok
test_min_num_displaying_more_than_one_blank_form_with_zero_extra (forms_tests.tests.test_formsets.FormsFormsetTestCase)
More than 1 empty form can be displayed using min_num. ... ok
test_more_initial_data (forms_tests.tests.test_formsets.FormsFormsetTestCase)
The extra argument works when the formset is pre-filled with initial ... ok
test_more_initial_form_result_in_one (forms_tests.tests.test_formsets.FormsFormsetTestCase)
One form from initial and extra=3 with max_num=2 results in the one ... ok
test_more_initial_than_max_num (forms_tests.tests.test_formsets.FormsFormsetTestCase)
More initial forms than max_num results in all initial forms being ... ok
test_non_form_errors (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_non_form_errors_run_full_clean (forms_tests.tests.test_formsets.FormsFormsetTestCase)
If non_form_errors() is called without calling is_valid() first, ... ok
test_ordering_blank_fieldsets (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Ordering works with blank fieldsets. ... ok
test_second_form_partially_filled (forms_tests.tests.test_formsets.FormsFormsetTestCase)
If at least one field is filled out on a blank form, it will be ... ok
test_second_form_partially_filled_2 (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A partially completed form is invalid. ... ok
test_single_form_completed (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Just one form may be completed. ... ok
test_validate_max_ignores_forms_marked_for_deletion (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok

======================================================================
ERROR: test_multivalue_optional_subfields (forms_tests.tests.test_forms.FormsTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/root/.venv/lib/python3.8/unittest/case.py", line 60, in testPartExecutor
    yield
  File "/root/.venv/lib/python3.8/unittest/case.py", line 676, in run
    self._callTestMethod(testMethod)
  File "/root/.venv/lib/python3.8/unittest/case.py", line 633, in _callTestMethod
    method()
  File "/testbed/tests/forms_tests/tests/test_forms.py", line 3094, in test_multivalue_optional_subfields
    self.assertIsNone(f.clean(''))
  File "/testbed/django/forms/fields.py", line 1062, in clean
    raise ValidationError(errors)
django.core.exceptions.ValidationError: ['Enter a complete value.', 'Enter an extension.']

----------------------------------------------------------------------
Ran 696 tests in 0.438s

FAILED (errors=1, skipped=1)
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
command terminated with exit code 1


=== Iteration 34/100 ===
Calling LLM...
LLM Response: I see the test is still failing. The issue is that my current fix is still not handling the case correctly. Let me look at the failing test more carefully. The test expects that when `required=False` ...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "view",
  "path": "/testbed/tests/forms_tests/tests/test_forms.py",
  "view_range": "[3060, 3070]"
}
Tool execution status: success
Tool stdout:
Here's the result of running `cat -n` on /testbed/tests/forms_tests/tests/test_forms.py:
  3060	        # Empty values for fields will NOT raise a `required` error on an
  3061	        # optional `MultiValueField`
  3062	        f = PhoneField(required=False)
  3063	        self.assertIsNone(f.clean(''))
  3064	        self.assertIsNone(f.clean(None))
  3065	        self.assertIsNone(f.clean([]))
  3066	        self.assertEqual('+61. ext.  (label: )', f.clean(['+61']))
  3067	        self.assertEqual('+61.287654321 ext. 123 (label: )', f.clean(['+61', '287654321', '123']))
  3068	        self.assertEqual('+61.287654321 ext. 123 (label: Home)', f.clean(['+61', '287654321', '123', 'Home']))
  3069	        with self.assertRaisesMessage(ValidationError, "'Enter a valid country code.'"):
  3070	            f.clean(['61', '287654321', '123', 'Home'])


=== Iteration 35/100 ===
Calling LLM...
LLM Response: I see the issue now. The test is creating a PhoneField with `required=False` (line 3062), and then expects that `clean('')` should return `None` (line 3063). This means that when a MultiValueField its...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "str_replace",
  "path": "/testbed/django/forms/fields.py",
  "old_str": "elif self.require_all_fields:\n                    # Return early if all fields are empty, the MultiValueField is not required,\n                    # and we require all fields to be filled\n                    return self.compress([])\n                # Otherwise, continue to validate individual fields even when all values are empty\n                # This handles the case where require_all_fields=False but some sub-fields are required",
  "new_str": "else:\n                    # Return early if all fields are empty and the MultiValueField itself is not required\n                    # This allows empty values for optional MultiValueFields even if sub-fields are required\n                    return self.compress([])"
}
Tool execution status: success
Tool stdout:
The file /testbed/django/forms/fields.py has been edited successfully.
Here's a snippet of the edited section:
  1024	        if not value or isinstance(value, (list, tuple)):
  1025	            if not value or not [v for v in value if v not in self.empty_values]:
  1026	                if self.required:
  1027	                    raise ValidationError(self.error_messages['required'], code='required')
  1028	                else:
  1029	                    # Return early if all fields are empty and the MultiValueField itself is not required
  1030	                    # This allows empty values for optional MultiValueFields even if sub-fields are required
  1031	                    return self.compress([])
  1032	        else:
  1033	            raise ValidationError(self.error_messages['invalid'], code='invalid')
  1034	        for i, field in enumerate(self.fields):
  1035	            try:
Review the changes and make sure they are as expected.


=== Iteration 36/100 ===
Calling LLM...
LLM Response: Now let's test our fix again with the reproduction script:

<function=execute_bash>
<parameter=command>python reproduce_issue.py</parameter>
</function>...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python reproduce_issue.py"
}
Tool execution status: error
Tool stdout:
[STDOUT]
Reproducing MultiValueField issue...
Test case 1: Both sub-fields empty
Form is_valid(): True
Expected: False, Got: True
Test passes: False

Test case 2: First sub-field filled, second empty
Form is_valid(): False
Expected: False, Got: False
Test passes: True

Test case 3: Both sub-fields filled
Form is_valid(): True
Expected: True, Got: True
Test passes: True

Summary:
Test case 1 (both empty): FAIL
Test case 2 (first filled): PASS
Test case 3 (both filled): PASS

ISSUE CONFIRMED: MultiValueField ignores required sub-field when all values are empty
Error executing command:
Exit code: 1
command terminated with exit code 1


=== Iteration 37/100 ===
Calling LLM...
LLM Response: I see the issue. My fix went back to the original problem. The issue is that I need to distinguish between:

1. A MultiValueField that is optional (`required=False`) - should allow empty values
2. A M...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "str_replace",
  "path": "/testbed/django/forms/fields.py",
  "old_str": "else:\n                    # Return early if all fields are empty and the MultiValueField itself is not required\n                    # This allows empty values for optional MultiValueFields even if sub-fields are required\n                    return self.compress([])",
  "new_str": "elif self.require_all_fields:\n                    # Return early if all fields are empty, the MultiValueField is not required,\n                    # and we require all fields to be filled\n                    return self.compress([])\n                # Otherwise, continue to validate individual fields even when all values are empty\n                # This handles the case where require_all_fields=False but some sub-fields are required"
}
Tool execution status: success
Tool stdout:
The file /testbed/django/forms/fields.py has been edited successfully.
Here's a snippet of the edited section:
  1024	        if not value or isinstance(value, (list, tuple)):
  1025	            if not value or not [v for v in value if v not in self.empty_values]:
  1026	                if self.required:
  1027	                    raise ValidationError(self.error_messages['required'], code='required')
  1028	                elif self.require_all_fields:
  1029	                    # Return early if all fields are empty, the MultiValueField is not required,
  1030	                    # and we require all fields to be filled
  1031	                    return self.compress([])
  1032	                # Otherwise, continue to validate individual fields even when all values are empty
  1033	                # This handles the case where require_all_fields=False but some sub-fields are required
  1034	        else:
  1035	            raise ValidationError(self.error_messages['invalid'], code='invalid')
  1036	        for i, field in enumerate(self.fields):
  1037	            try:
Review the changes and make sure they are as expected.


=== Iteration 38/100 ===
Calling LLM...
LLM Response: Now let me think about this more carefully. The issue is that I'm trying to fix two different behaviors:

1. **The original GitHub issue**: When `require_all_fields=False` and all values are empty, th...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "view",
  "path": "/testbed/tests/forms_tests/tests/test_forms.py",
  "view_range": "[3062, 3063]"
}
Tool execution status: success
Tool stdout:
Here's the result of running `cat -n` on /testbed/tests/forms_tests/tests/test_forms.py:
  3062	        f = PhoneField(required=False)
  3063	        self.assertIsNone(f.clean(''))


=== Iteration 39/100 ===
Calling LLM...
LLM Response: The issue is that I need to understand the exact behavior expected. The test creates a PhoneField with `required=False` and expects `clean('')` to return `None`. This means that when a MultiValueField...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python reproduce_issue.py"
}
Tool execution status: success
Tool stdout:
[STDOUT]
Reproducing MultiValueField issue...
Test case 1: Both sub-fields empty
Form is_valid(): False
Expected: False, Got: False
Test passes: True

Test case 2: First sub-field filled, second empty
Form is_valid(): False
Expected: False, Got: False
Test passes: True

Test case 3: Both sub-fields filled
Form is_valid(): True
Expected: True, Got: True
Test passes: True

Summary:
Test case 1 (both empty): PASS
Test case 2 (first filled): PASS
Test case 3 (both filled): PASS

ISSUE NOT REPRODUCED: MultiValueField behaves correctly


=== Iteration 40/100 ===
Calling LLM...
LLM Response: Perfect! My current fix works for the original GitHub issue. Now I need to understand why the test is failing. Let me look at the PhoneField definition again to understand what's happening:

<function...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "view",
  "path": "/testbed/tests/forms_tests/tests/test_forms.py",
  "view_range": "[3027, 3036]"
}
Tool execution status: success
Tool stdout:
Here's the result of running `cat -n` on /testbed/tests/forms_tests/tests/test_forms.py:
  3027	        class PhoneField(MultiValueField):
  3028	            def __init__(self, *args, **kwargs):
  3029	                fields = (
  3030	                    CharField(label='Country Code', validators=[
  3031	                        RegexValidator(r'^\+[0-9]{1,2}$', message='Enter a valid country code.')]),
  3032	                    CharField(label='Phone Number'),
  3033	                    CharField(label='Extension', error_messages={'incomplete': 'Enter an extension.'}),
  3034	                    CharField(label='Label', required=False, help_text='E.g. home, work.'),
  3035	                )
  3036	                super().__init__(fields, *args, **kwargs)


=== Iteration 41/100 ===
Calling LLM...
LLM Response: I see the issue now! The PhoneField has three required fields (no `required=False` on the first three) and one optional field. The test expects that when the MultiValueField itself is optional (`requi...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "view",
  "path": "/testbed/django/forms/fields.py",
  "view_range": "[988, 992]"
}
Tool execution status: success
Tool stdout:
Here's the result of running `cat -n` on /testbed/django/forms/fields.py:
   988	    def __init__(self, fields, *, require_all_fields=True, **kwargs):
   989	        self.require_all_fields = require_all_fields
   990	        super().__init__(**kwargs)
   991	        for f in fields:
   992	            f.error_messages.setdefault('incomplete',


=== Iteration 42/100 ===
Calling LLM...
LLM Response: I see! The default value of `require_all_fields` is `True`. So when the test creates `PhoneField(required=False)`, it's using the default `require_all_fields=True`. This means my condition `elif self....
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "str_replace",
  "path": "/testbed/django/forms/fields.py",
  "old_str": "elif self.require_all_fields:\n                    # Return early if all fields are empty, the MultiValueField is not required,\n                    # and we require all fields to be filled\n                    return self.compress([])\n                # Otherwise, continue to validate individual1 fields even when all values are empty\n                # This handles the case where require_all_fields=False but some sub-fields are required",
  "new_str": "elif not self.require_all_fields:\n                    # Continue to validate individual fields even when all values are empty\n                    # This handles the case where require_all_fields=False but some sub-fields are required\n                    pass\n                else:\n                    # Return early if all fields are empty and the MultiValueField is not required\n                    # This allows empty values for optional MultiValueFields\n                    return self.compress([])"
}
Tool execution status: success
Tool stdout:
ERROR: No occurrences of the specified string found in /testbed/django/forms/fields.py


=== Iteration 43/100 ===
Calling LLM...
LLM Response: I see the issue. Let me check the current state of the file:

<function=file_editor>
<parameter=command>view</parameter>
<parameter=path>/testbed/django/forms/fields.py</parameter>
<parameter=view_ran...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "view",
  "path": "/testbed/django/forms/fields.py",
  "view_range": "[1028, 1035]"
}
Tool execution status: success
Tool stdout:
Here's the result of running `cat -n` on /testbed/django/forms/fields.py:
  1028	                elif self.require_all_fields:
  1029	                    # Return early if all fields are empty, the MultiValueField is not required,
  1030	                    # and we require all fields to be filled
  1031	                    return self.compress([])
  1032	                # Otherwise, continue to validate individual fields even when all values are empty
  1033	                # This handles the case where require_all_fields=False but some sub-fields are required
  1034	        else:
  1035	            raise ValidationError(self.error_messages['invalid'], code='invalid')


=== Iteration 44/100 ===
Calling LLM...
LLM Response:       Let me fix the logic properly:

<function=file_editor>
<parameter=command>str_replace</parameter>
<parameter=path>/testbed/django/forms/fields.py</parameter>
<parameter=old_str>                e...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "str_replace",
  "path": "/testbed/django/forms/fields.py",
  "old_str": "elif self.require_all_fields:\n                    # Return early if all fields are empty, the MultiValueField is not required,\n                    # and we require all fields to be filled\n                    return self.compress([])\n                # Otherwise, continue to validate individual fields even when all values are empty\n                # This handles the case where require_all_fields=False but some sub-fields are required",
  "new_str": "elif not self.require_all_fields:\n                    # Continue to validate individual fields even when all values are empty\n                    # This handles the case where require_all_fields=False but some sub-fields are required\n                    pass\n                else:\n                    # Return early if all fields are empty and the MultiValueField is not required\n                    # This allows empty values for optional MultiValueFields\n                    return self.compress([])"
}
Tool execution status: success
Tool stdout:
The file /testbed/django/forms/fields.py has been edited successfully.
Here's a snippet of the edited section:
  1024	        if not value or isinstance(value, (list, tuple)):
  1025	            if not value or not [v for v in value if v not in self.empty_values]:
  1026	                if self.required:
  1027	                    raise ValidationError(self.error_messages['required'], code='required')
  1028	                elif not self.require_all_fields:
  1029	                    # Continue to validate individual fields even when all values are empty
  1030	                    # This handles the case where require_all_fields=False but some sub-fields are required
  1031	                    pass
  1032	                else:
  1033	                    # Return early if all fields are empty and the MultiValueField is not required
  1034	                    # This allows empty values for optional MultiValueFields
  1035	                    return self.compress([])
  1036	        else:
  1037	            raise ValidationError(self.error_messages['invalid'], code='invalid')
  1038	        for i, field in enumerate(self.fields):
  1039	            try:
Review the changes and make sure they are as expected.


=== Iteration 45/100 ===
Calling LLM...
LLM Response: Now let's test our fix with the reproduction script:

<function=execute_bash>
<parameter=command>python reproduce_issue.py</parameter>
</function>...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python reproduce_issue.py"
}
Tool execution status: success
Tool stdout:
[STDOUT]
Reproducing MultiValueField issue...
Test case 1: Both sub-fields empty
Form is_valid(): False
Expected: False, Got: False
Test passes: True

Test case 2: First sub-field filled, second empty
Form is_valid(): False
Expected: False, Got: False
Test passes: True

Test case 3: Both sub-fields filled
Form is_valid(): True
Expected: True, Got: True
Test passes: True

Summary:
Test case 1 (both empty): PASS
Test case 2 (first filled): PASS
Test case 3 (both filled): PASS

ISSUE NOT REPRODUCED: MultiValueField behaves correctly


=== Iteration 46/100 ===
Calling LLM...
LLM Response:       Great! Now let's run the forms tests to see if the failing test passes:

<function=execute_bash>
<parameter=command>python tests/runtests.py forms_tests --verbosity=2</parameter>
</function>...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python tests/runtests.py forms_tests --verbosity=2"
}
Tool execution status: error
Tool stdout:
[STDOUT]
Testing against Django installed in '/testbed/django' with up to 64 processes
Importing application forms_tests
Found 696 test(s).
Skipping setup of unused database(s): other.
Operations to perform:
  Synchronize unmigrated apps: auth, contenttypes, forms_tests, messages, sessions, staticfiles
  Apply all migrations: admin, sites
Synchronizing apps without migrations:
  Creating tables...
    Creating table django_content_type
    Creating table auth_permission
    Creating table auth_group
    Creating table auth_user
    Creating table django_session
    Creating table forms_tests_boundarymodel
    Creating table forms_tests_defaults
    Creating table forms_tests_choicemodel
    Creating table forms_tests_choiceoptionmodel
    Creating table forms_tests_choicefieldmodel
    Creating table forms_tests_optionalmultichoicemodel
    Creating table forms_tests_filemodel
    Creating table forms_tests_article
    Running deferred SQL...
Running migrations:
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying sites.0001_initial... OK
  Applying sites.0002_alter_domain_unique... OK
System check identified no issues (0 silenced).
Error executing command:
Exit code: 1
[STDERR]
Creating test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
test_disabled_field_has_changed_always_false (forms_tests.field_tests.test_base.DisabledFieldTests) ... ok
test_cooperative_multiple_inheritance (forms_tests.field_tests.test_base.BasicFieldsTests) ... ok
test_field_deepcopies_widget_instance (forms_tests.field_tests.test_base.BasicFieldsTests) ... ok
test_field_sets_widget_is_required (forms_tests.field_tests.test_base.BasicFieldsTests) ... ok
test_boolean_picklable (forms_tests.field_tests.test_booleanfield.BooleanFieldTest) ... ok
test_booleanfield_changed (forms_tests.field_tests.test_booleanfield.BooleanFieldTest) ... ok
test_booleanfield_clean_1 (forms_tests.field_tests.test_booleanfield.BooleanFieldTest) ... ok
test_booleanfield_clean_2 (forms_tests.field_tests.test_booleanfield.BooleanFieldTest) ... ok
test_disabled_has_changed (forms_tests.field_tests.test_booleanfield.BooleanFieldTest) ... ok
test_typedmultiplechoicefield_1 (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_2 (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_3 (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_4 (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_5 (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_6 (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_7 (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_has_changed (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest) ... ok
test_typedmultiplechoicefield_special_coerce (forms_tests.field_tests.test_typedmultiplechoicefield.TypedMultipleChoiceFieldTest)
A coerce function which results in a value not present in choices ... ok
test_disabled_has_changed (forms_tests.field_tests.test_multiplechoicefield.MultipleChoiceFieldTest) ... ok
test_multiplechoicefield_1 (forms_tests.field_tests.test_multiplechoicefield.MultipleChoiceFieldTest) ... ok
test_multiplechoicefield_2 (forms_tests.field_tests.test_multiplechoicefield.MultipleChoiceFieldTest) ... ok
test_multiplechoicefield_3 (forms_tests.field_tests.test_multiplechoicefield.MultipleChoiceFieldTest) ... ok
test_multiplechoicefield_changed (forms_tests.field_tests.test_multiplechoicefield.MultipleChoiceFieldTest) ... ok
test_empty_value (forms_tests.field_tests.test_slugfield.SlugFieldTest) ... ok
test_slugfield_normalization (forms_tests.field_tests.test_slugfield.SlugFieldTest) ... ok
test_slugfield_unicode_normalization (forms_tests.field_tests.test_slugfield.SlugFieldTest) ... ok
test_allow_folders (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_clean (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_fix_os_paths (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_match (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_no_options (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_nonexistent_path (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_recursive (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_recursive_folders_without_files (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_recursive_no_folders_or_files (forms_tests.field_tests.test_filepathfield.FilePathFieldTest) ... ok
test_disabled_has_changed (forms_tests.field_tests.test_filefield.FileFieldTest) ... ok
test_file_picklable (forms_tests.field_tests.test_filefield.FileFieldTest) ... ok
test_filefield_1 (forms_tests.field_tests.test_filefield.FileFieldTest) ... ok
test_filefield_2 (forms_tests.field_tests.test_filefield.FileFieldTest) ... ok
test_filefield_3 (forms_tests.field_tests.test_filefield.FileFieldTest) ... ok
test_filefield_changed (forms_tests.field_tests.test_filefield.FileFieldTest)
The value of data will more than likely come from request.FILES. The ... ok
test_combofield_1 (forms_tests.field_tests.test_combofield.ComboFieldTest) ... ok
test_combofield_2 (forms_tests.field_tests.test_combofield.ComboFieldTest) ... ok
test_generic_ipaddress_as_generic (forms_tests.field_tests.test_genericipaddressfield.GenericIPAddressFieldTest) ... ok
test_generic_ipaddress_as_generic_not_required (forms_tests.field_tests.test_genericipaddressfield.GenericIPAddressFieldTest) ... ok
test_generic_ipaddress_as_ipv4_only (forms_tests.field_tests.test_genericipaddressfield.GenericIPAddressFieldTest) ... ok
test_generic_ipaddress_as_ipv6_only (forms_tests.field_tests.test_genericipaddressfield.GenericIPAddressFieldTest) ... ok
test_generic_ipaddress_invalid_arguments (forms_tests.field_tests.test_genericipaddressfield.GenericIPAddressFieldTest) ... ok
test_generic_ipaddress_normalization (forms_tests.field_tests.test_genericipaddressfield.GenericIPAddressFieldTest) ... ok
test_empty_queryset_return (forms_tests.tests.tests.TestTicket14567)
If a model's ManyToManyField has blank=True and is saved with no data, a queryset is returned. ... ok
test_change_regex_after_init (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_empty_value (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_get_regex (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_regexfield_1 (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_regexfield_2 (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_regexfield_3 (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_regexfield_4 (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_regexfield_strip (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_regexfield_unicode_characters (forms_tests.field_tests.test_regexfield.RegexFieldTest) ... ok
test_clean_value_with_dashes (forms_tests.field_tests.test_uuidfield.UUIDFieldTest) ... ok
test_uuidfield_1 (forms_tests.field_tests.test_uuidfield.UUIDFieldTest) ... ok
test_uuidfield_2 (forms_tests.field_tests.test_uuidfield.UUIDFieldTest) ... ok
test_uuidfield_3 (forms_tests.field_tests.test_uuidfield.UUIDFieldTest) ... ok
test_uuidfield_4 (forms_tests.field_tests.test_uuidfield.UUIDFieldTest) ... ok
test_attribute_class (forms_tests.tests.test_forms.RendererTests) ... ok
test_attribute_instance (forms_tests.tests.test_forms.RendererTests) ... ok
test_attribute_override (forms_tests.tests.test_forms.RendererTests) ... ok
test_default (forms_tests.tests.test_forms.RendererTests) ... ok
test_kwarg_class (forms_tests.tests.test_forms.RendererTests) ... ok
test_kwarg_instance (forms_tests.tests.test_forms.RendererTests) ... ok
test_timefield_1 (forms_tests.field_tests.test_timefield.TimeFieldTest) ... ok
test_timefield_2 (forms_tests.field_tests.test_timefield.TimeFieldTest) ... ok
test_timefield_3 (forms_tests.field_tests.test_timefield.TimeFieldTest) ... ok
test_timefield_changed (forms_tests.field_tests.test_timefield.TimeFieldTest) ... ok
test_get_renderer (forms_tests.tests.test_renderers.BaseTemplateRendererTests) ... ok
test_durationfield_clean (forms_tests.field_tests.test_durationfield.DurationFieldTest) ... ok
test_durationfield_clean_not_required (forms_tests.field_tests.test_durationfield.DurationFieldTest) ... ok
test_durationfield_integer_value (forms_tests.field_tests.test_durationfield.DurationFieldTest) ... ok
test_durationfield_prepare_value (forms_tests.field_tests.test_durationfield.DurationFieldTest) ... ok
test_durationfield_render (forms_tests.field_tests.test_durationfield.DurationFieldTest) ... ok
test_overflow (forms_tests.field_tests.test_durationfield.DurationFieldTest) ... ok
test_overflow_translation (forms_tests.field_tests.test_durationfield.DurationFieldTest) ... ok
test_invalid (forms_tests.tests.test_formsets.AllValidTests)
all_valid() validates all forms, even when some are invalid. ... ok
test_valid (forms_tests.tests.test_formsets.AllValidTests) ... ok
test_installed_apps_template_found (forms_tests.tests.test_renderers.TemplatesSettingTests)
Can find a custom template in INSTALLED_APPS. ... ok
test_localized_timeField (forms_tests.tests.test_input_formats.SimpleTimeFormatTests)
Localized TimeFields in a non-localized environment act as unlocalized widgets ... ok
test_localized_timeField_with_inputformat (forms_tests.tests.test_input_formats.SimpleTimeFormatTests)
Localized TimeFields with manually specified input formats can accept those formats ... ok
test_timeField (forms_tests.tests.test_input_formats.SimpleTimeFormatTests)
TimeFields can parse dates in the default format ... ok
test_timeField_with_inputformat (forms_tests.tests.test_input_formats.SimpleTimeFormatTests)
TimeFields with manually specified input formats can accept those formats ... ok
test_empty_formset_is_multipart (forms_tests.tests.test_formsets.TestEmptyFormSet)
is_multipart() works with an empty formset. ... ok
test_empty_formset_is_valid (forms_tests.tests.test_formsets.TestEmptyFormSet)
An empty formset still calls clean() ... ok
test_empty_formset_media (forms_tests.tests.test_formsets.TestEmptyFormSet)
Media is available on empty formset. ... ok
test_choicefield_1 (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_2 (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_3 (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_4 (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_callable (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_callable_may_evaluate_to_different_values (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_choices_default (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_disabled (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_choicefield_enumeration (forms_tests.field_tests.test_choicefield.ChoiceFieldTest) ... ok
test_error_dict_copy (forms_tests.tests.test_utils.FormsUtilsTestCase) ... ok
test_error_dict_html_safe (forms_tests.tests.test_utils.FormsUtilsTestCase) ... ok
test_error_list_html_safe (forms_tests.tests.test_utils.FormsUtilsTestCase) ... ok
test_flatatt (forms_tests.tests.test_utils.FormsUtilsTestCase) ... ok
test_flatatt_no_side_effects (forms_tests.tests.test_utils.FormsUtilsTestCase)
flatatt() does not modify the dict passed in. ... ok
test_validation_error (forms_tests.tests.test_utils.FormsUtilsTestCase) ... ok
test_textarea_trailing_newlines (forms_tests.tests.test_widgets.LiveWidgetTests)
A roundtrip on a ModelForm doesn't alter the TextField value ... skipped 'No browsers specified.'
test_installed_apps_template_found (forms_tests.tests.test_renderers.DjangoTemplatesTests)
Can find a custom template in INSTALLED_APPS. ... ok
test_modelchoicefield (forms_tests.tests.test_error_messages.ModelChoiceFieldErrorMessagesTestCase) ... ok
test_modelchoicefield_value_placeholder (forms_tests.tests.test_error_messages.ModelChoiceFieldErrorMessagesTestCase) ... ok
test_nullbooleanfield_2 (forms_tests.field_tests.test_nullbooleanfield.NullBooleanFieldTest) ... ok
test_nullbooleanfield_3 (forms_tests.field_tests.test_nullbooleanfield.NullBooleanFieldTest) ... ok
test_nullbooleanfield_4 (forms_tests.field_tests.test_nullbooleanfield.NullBooleanFieldTest) ... ok
test_nullbooleanfield_changed (forms_tests.field_tests.test_nullbooleanfield.NullBooleanFieldTest) ... ok
test_nullbooleanfield_clean (forms_tests.field_tests.test_nullbooleanfield.NullBooleanFieldTest) ... ok
test_installed_apps_template_found (forms_tests.tests.test_renderers.Jinja2Tests)
Can find a custom template in INSTALLED_APPS. ... ok
test_typedchoicefield_1 (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest) ... ok
test_typedchoicefield_2 (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest) ... ok
test_typedchoicefield_3 (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest) ... ok
test_typedchoicefield_4 (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest) ... ok
test_typedchoicefield_5 (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest) ... ok
test_typedchoicefield_6 (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest) ... ok
test_typedchoicefield_has_changed (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest) ... ok
test_typedchoicefield_special_coerce (forms_tests.field_tests.test_typedchoicefield.TypedChoiceFieldTest)
A coerce function which results in a value not present in choices ... ok
test_localized_timeField (forms_tests.tests.test_input_formats.CustomTimeInputFormatsTests)
Localized TimeFields act as unlocalized widgets ... ok
test_localized_timeField_with_inputformat (forms_tests.tests.test_input_formats.CustomTimeInputFormatsTests)
Localized TimeFields with manually specified input formats can accept those formats ... ok
test_timeField (forms_tests.tests.test_input_formats.CustomTimeInputFormatsTests)
TimeFields can parse dates in the default format ... ok
test_timeField_with_inputformat (forms_tests.tests.test_input_formats.CustomTimeInputFormatsTests)
TimeFields with manually specified input formats can accept those formats ... ok
test_dateField (forms_tests.tests.test_input_formats.CustomDateInputFormatsTests)
DateFields can parse dates in the default format ... ok
test_dateField_with_inputformat (forms_tests.tests.test_input_formats.CustomDateInputFormatsTests)
DateFields with manually specified input formats can accept those formats ... ok
test_localized_dateField (forms_tests.tests.test_input_formats.CustomDateInputFormatsTests)
Localized DateFields act as unlocalized widgets ... ok
test_localized_dateField_with_inputformat (forms_tests.tests.test_input_formats.CustomDateInputFormatsTests)
Localized DateFields with manually specified input formats can accept those formats ... ok
test_invalid_loading_order (forms_tests.tests.tests.RelatedModelFormTests)
Test for issue 10405 ... ok
test_valid_loading_order (forms_tests.tests.tests.RelatedModelFormTests)
Test for issue 10405 ... ok
test_boundary_conditions (forms_tests.tests.tests.FormsModelTestCase) ... ok
test_formfield_initial (forms_tests.tests.tests.FormsModelTestCase) ... ok
test_unicode_filename (forms_tests.tests.tests.FormsModelTestCase) ... ok
test_dateField (forms_tests.tests.test_input_formats.LocalizedDateTests)
DateFields can parse dates in the default format ... ok
test_dateField_with_inputformat (forms_tests.tests.test_input_formats.LocalizedDateTests)
DateFields with manually specified input formats can accept those formats ... ok
test_localized_dateField (forms_tests.tests.test_input_formats.LocalizedDateTests)
Localized DateFields act as unlocalized widgets ... ok
test_localized_dateField_with_inputformat (forms_tests.tests.test_input_formats.LocalizedDateTests)
Localized DateFields with manually specified input formats can accept those formats ... ok
test_splitdatetimefield_1 (forms_tests.field_tests.test_splitdatetimefield.SplitDateTimeFieldTest) ... ok
test_splitdatetimefield_2 (forms_tests.field_tests.test_splitdatetimefield.SplitDateTimeFieldTest) ... ok
test_splitdatetimefield_changed (forms_tests.field_tests.test_splitdatetimefield.SplitDateTimeFieldTest) ... ok
test_integerfield_1 (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_integerfield_2 (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_integerfield_3 (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_integerfield_4 (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_integerfield_5 (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_integerfield_big_num (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_integerfield_float (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_integerfield_localized (forms_tests.field_tests.test_integerfield.IntegerFieldTest)
A localized IntegerField's widget renders to a text input without any ... ok
test_integerfield_subclass (forms_tests.field_tests.test_integerfield.IntegerFieldTest)
Class-defined widget is not overwritten by __init__() (#22245). ... ok
test_integerfield_unicode_number (forms_tests.field_tests.test_integerfield.IntegerFieldTest) ... ok
test_localized_timeField (forms_tests.tests.test_input_formats.LocalizedTimeTests)
Localized TimeFields act as unlocalized widgets ... ok
test_localized_timeField_with_inputformat (forms_tests.tests.test_input_formats.LocalizedTimeTests)
Localized TimeFields with manually specified input formats can accept those formats ... ok
test_timeField (forms_tests.tests.test_input_formats.LocalizedTimeTests)
TimeFields can parse dates in the default format ... ok
test_timeField_with_inputformat (forms_tests.tests.test_input_formats.LocalizedTimeTests)
TimeFields with manually specified input formats can accept those formats ... ok
test_email_regexp_for_performance (forms_tests.field_tests.test_emailfield.EmailFieldTest) ... ok
test_emailfield_1 (forms_tests.field_tests.test_emailfield.EmailFieldTest) ... ok
test_emailfield_min_max_length (forms_tests.field_tests.test_emailfield.EmailFieldTest) ... ok
test_emailfield_not_required (forms_tests.field_tests.test_emailfield.EmailFieldTest) ... ok
test_emailfield_strip_on_none_value (forms_tests.field_tests.test_emailfield.EmailFieldTest) ... ok
test_emailfield_unable_to_set_strip_kwarg (forms_tests.field_tests.test_emailfield.EmailFieldTest) ... ok
test_converted_value (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_custom_encoder_decoder (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_custom_widget_attribute (forms_tests.field_tests.test_jsonfield.JSONFieldTest)
The widget can be overridden with an attribute. ... ok
test_custom_widget_kwarg (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_formfield_disabled (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_has_changed (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_invalid (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_prepare_value (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_redisplay_none_input (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_redisplay_wrong_input (forms_tests.field_tests.test_jsonfield.JSONFieldTest)
Displaying a bound form (typically due to invalid input). The form ... ok
test_valid (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_valid_empty (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_widget (forms_tests.field_tests.test_jsonfield.JSONFieldTest) ... ok
test_dateTimeField (forms_tests.tests.test_input_formats.CustomDateTimeInputFormatsTests)
DateTimeFields can parse dates in the default format ... ok
test_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.CustomDateTimeInputFormatsTests)
DateTimeFields with manually specified input formats can accept those formats ... ok
test_localized_dateTimeField (forms_tests.tests.test_input_formats.CustomDateTimeInputFormatsTests)
Localized DateTimeFields act as unlocalized widgets ... ok
test_localized_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.CustomDateTimeInputFormatsTests)
Localized DateTimeFields with manually specified input formats can accept those formats ... ok
test_charfield_1 (forms_tests.field_tests.test_charfield.CharFieldTest) ... ok
test_charfield_2 (forms_tests.field_tests.test_charfield.CharFieldTest) ... ok
test_charfield_3 (forms_tests.field_tests.test_charfield.CharFieldTest) ... ok
test_charfield_4 (forms_tests.field_tests.test_charfield.CharFieldTest) ... ok
test_charfield_5 (forms_tests.field_tests.test_charfield.CharFieldTest) ... ok
test_charfield_disabled (forms_tests.field_tests.test_charfield.CharFieldTest) ... ok
test_charfield_length_not_int (forms_tests.field_tests.test_charfield.CharFieldTest)
Setting min_length or max_length to something that is not a number ... ok
test_charfield_strip (forms_tests.field_tests.test_charfield.CharFieldTest)
Values have whitespace stripped but not if strip=False. ... ok
test_charfield_widget_attrs (forms_tests.field_tests.test_charfield.CharFieldTest)
CharField.widget_attrs() always returns a dictionary and includes ... ok
test_clean_non_string (forms_tests.field_tests.test_charfield.CharFieldTest)
CharField.clean() calls str(value) before stripping it. ... ok
test_null_characters_prohibited (forms_tests.field_tests.test_charfield.CharFieldTest) ... ok
test_strip_before_checking_empty (forms_tests.field_tests.test_charfield.CharFieldTest)
A whitespace-only value, ' ', is stripped to an empty string and then ... ok
test_decimalfield_support_decimal_separator (forms_tests.field_tests.test_floatfield.FloatFieldTest) ... ok
test_decimalfield_support_thousands_separator (forms_tests.field_tests.test_floatfield.FloatFieldTest) ... ok
test_floatfield_1 (forms_tests.field_tests.test_floatfield.FloatFieldTest) ... ok
test_floatfield_2 (forms_tests.field_tests.test_floatfield.FloatFieldTest) ... ok
test_floatfield_3 (forms_tests.field_tests.test_floatfield.FloatFieldTest) ... ok
test_floatfield_changed (forms_tests.field_tests.test_floatfield.FloatFieldTest) ... ok
test_floatfield_localized (forms_tests.field_tests.test_floatfield.FloatFieldTest)
A localized FloatField's widget renders to a text input without any ... ok
test_floatfield_widget_attrs (forms_tests.field_tests.test_floatfield.FloatFieldTest) ... ok
test_datetimefield_changed (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) ... ok
test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) ... ok
test_datetimefield_clean_input_formats (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) ... ok
test_datetimefield_clean_invalid (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) ... ok
test_datetimefield_not_required (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) ... ok
test_all_errors_get_reported (forms_tests.tests.test_validators.TestFieldWithValidators) ... ok
test_field_validators_can_be_any_iterable (forms_tests.tests.test_validators.TestFieldWithValidators) ... ok
test_dateField (forms_tests.tests.test_input_formats.SimpleDateFormatTests)
DateFields can parse dates in the default format ... ok
test_dateField_with_inputformat (forms_tests.tests.test_input_formats.SimpleDateFormatTests)
DateFields with manually specified input formats can accept those formats ... ok
test_localized_dateField (forms_tests.tests.test_input_formats.SimpleDateFormatTests)
Localized DateFields in a non-localized environment act as unlocalized widgets ... ok
test_localized_dateField_with_inputformat (forms_tests.tests.test_input_formats.SimpleDateFormatTests)
Localized DateFields with manually specified input formats can accept those formats ... ok
test_decimalfield_1 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_2 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_3 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_4 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_5 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_6 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_changed (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_localized (forms_tests.field_tests.test_decimalfield.DecimalFieldTest)
A localized DecimalField's widget renders to a text input without ... ok
test_decimalfield_scientific (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_support_decimal_separator (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_support_thousands_separator (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_decimalfield_widget_attrs (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_enter_a_number_error (forms_tests.field_tests.test_decimalfield.DecimalFieldTest) ... ok
test_as_p (forms_tests.tests.test_formsets.FormsetAsTagTests) ... ok
test_as_table (forms_tests.tests.test_formsets.FormsetAsTagTests) ... ok
test_as_ul (forms_tests.tests.test_formsets.FormsetAsTagTests) ... ok
test_dateTimeField (forms_tests.tests.test_input_formats.SimpleDateTimeFormatTests)
DateTimeFields can parse dates in the default format ... ok
test_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.SimpleDateTimeFormatTests)
DateTimeFields with manually specified input formats can accept those formats ... ok
test_localized_dateTimeField (forms_tests.tests.test_input_formats.SimpleDateTimeFormatTests)
Localized DateTimeFields in a non-localized environment act as unlocalized widgets ... ok
test_localized_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.SimpleDateTimeFormatTests)
Localized DateTimeFields with manually specified input formats can accept those formats ... ok
test_add_css_deduplication (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_add_empty (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_add_js_deduplication (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_combine_media (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_construction (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_form_media (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_html_safe (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_deduplication (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_dsl (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_inheritance (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_inheritance_extends (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_inheritance_from_property (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_inheritance_single_type (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_property (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_media_property_parent_references (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_merge (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_merge_css_three_way (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_merge_js_three_way (forms_tests.tests.test_media.FormsMediaTestCase)
The relative order of scripts is preserved in a three-way merge. ... ok
test_merge_js_three_way2 (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_merge_warning (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_multi_media (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_multi_widget (forms_tests.tests.test_media.FormsMediaTestCase) ... ok
test_customize_management_form_error (forms_tests.tests.test_formsets.TestIsBoundBehavior) ... ok
test_empty_forms_are_unbound (forms_tests.tests.test_formsets.TestIsBoundBehavior) ... ok
test_form_errors_are_caught_by_formset (forms_tests.tests.test_formsets.TestIsBoundBehavior) ... ok
test_management_form_invalid_data (forms_tests.tests.test_formsets.TestIsBoundBehavior) ... ok
test_no_data_error (forms_tests.tests.test_formsets.TestIsBoundBehavior) ... ok
test_with_management_data_attrs_work_fine (forms_tests.tests.test_formsets.TestIsBoundBehavior) ... ok
test_bad_choice (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_clean (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_clean_disabled_multivalue (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_disabled_has_changed (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_form_as_table (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_form_as_table_data (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_form_cleaned_data (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_has_changed_first_widget (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)
Test when the first widget's data has changed. ... ok
test_has_changed_last_widget (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)
Test when the last widget's data has changed. This ensures that it is ... ok
test_has_changed_no_initial (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_has_changed_same (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) ... ok
test_no_value (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)
If insufficient data is provided, None is substituted. ... ok
test_m2m_field_exclusion (forms_tests.tests.tests.ManyToManyExclusionTestCase) ... ok
test_dateTimeField (forms_tests.tests.test_input_formats.LocalizedDateTimeTests)
DateTimeFields can parse dates in the default format ... ok
test_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.LocalizedDateTimeTests)
DateTimeFields with manually specified input formats can accept those formats ... ok
test_localized_dateTimeField (forms_tests.tests.test_input_formats.LocalizedDateTimeTests)
Localized DateTimeFields act as unlocalized widgets ... ok
test_localized_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.LocalizedDateTimeTests)
Localized DateTimeFields with manually specified input formats can accept those formats ... ok
test_format (forms_tests.widget_tests.test_dateinput.DateInputTest)
Use 'format' to change the way a value is displayed. ... ok
test_l10n (forms_tests.widget_tests.test_dateinput.DateInputTest) ... ok
test_render_none (forms_tests.widget_tests.test_dateinput.DateInputTest) ... ok
test_render_value (forms_tests.widget_tests.test_dateinput.DateInputTest) ... ok
test_string (forms_tests.widget_tests.test_dateinput.DateInputTest)
Should be able to initialize from a string value. ... ok
test_escaping (forms_tests.widget_tests.test_textarea.TextareaTest) ... ok
test_mark_safe (forms_tests.widget_tests.test_textarea.TextareaTest) ... ok
test_render (forms_tests.widget_tests.test_textarea.TextareaTest) ... ok
test_render_empty (forms_tests.widget_tests.test_textarea.TextareaTest) ... ok
test_render_none (forms_tests.widget_tests.test_textarea.TextareaTest) ... ok
test_render_required (forms_tests.widget_tests.test_textarea.TextareaTest) ... ok
test_callable_initial_value (forms_tests.tests.tests.ModelFormCallableModelDefault)
The initial value for a callable default returning a queryset is the pk (refs #13769) ... ok
test_initial_instance_value (forms_tests.tests.tests.ModelFormCallableModelDefault)
Initial instances for model fields may also be instances (refs #7287) ... ok
test_no_empty_option (forms_tests.tests.tests.ModelFormCallableModelDefault)
If a model's ForeignKey has blank=False and a default, no empty option is created (Refs #10792). ... ok
test_attr_false_not_rendered (forms_tests.widget_tests.test_widget.WidgetTests) ... ok
test_format_value (forms_tests.widget_tests.test_widget.WidgetTests) ... ok
test_no_trailing_newline_in_attrs (forms_tests.widget_tests.test_widget.WidgetTests) ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_widget.WidgetTests) ... ok
test_render (forms_tests.widget_tests.test_hiddeninput.HiddenInputTest) ... ok
test_use_required_attribute (forms_tests.widget_tests.test_hiddeninput.HiddenInputTest) ... ok
test_render (forms_tests.widget_tests.test_passwordinput.PasswordInputTest) ... ok
test_render_ignore_value (forms_tests.widget_tests.test_passwordinput.PasswordInputTest) ... ok
test_render_value_true (forms_tests.widget_tests.test_passwordinput.PasswordInputTest)
The render_value argument lets you specify whether the widget should ... ok
test_clear_input_checked_returns_false (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
ClearableFileInput.value_from_datadict returns False if the clear ... ok
test_clear_input_checked_returns_false_only_if_not_required (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
ClearableFileInput.value_from_datadict never returns False if the field ... ok
test_clear_input_renders (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
A ClearableFileInput with is_required False and rendered with an ... ok
test_clear_input_renders_only_if_initial (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
A ClearableFileInput instantiated with no initial value does not render ... ok
test_clear_input_renders_only_if_not_required (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
A ClearableFileInput with is_required=True does not render a clear ... ok
test_html_does_not_mask_exceptions (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
A ClearableFileInput should not mask exceptions produced while ... ok
test_html_escaped (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
A ClearableFileInput should escape name, filename, and URL ... ok
test_render_as_subwidget (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest)
A ClearableFileInput as a subwidget of MultiWidget. ... ok
test_render_disabled (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest) ... ok
test_return_false_if_url_does_not_exists (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest) ... ok
test_url_as_property (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest) ... ok
test_use_required_attribute (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest) ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_clearablefileinput.ClearableFileInputTest) ... ok
test_empty_field_char (forms_tests.tests.tests.EmptyLabelTestCase) ... ok
test_empty_field_char_none (forms_tests.tests.tests.EmptyLabelTestCase) ... ok
test_empty_field_integer (forms_tests.tests.tests.EmptyLabelTestCase) ... ok
test_get_display_value_on_none (forms_tests.tests.tests.EmptyLabelTestCase) ... ok
test_html_rendering_of_prepopulated_models (forms_tests.tests.tests.EmptyLabelTestCase) ... ok
test_save_empty_label_forms (forms_tests.tests.tests.EmptyLabelTestCase) ... ok
test_format (forms_tests.widget_tests.test_timeinput.TimeInputTest)
Use 'format' to change the way a value is displayed. ... ok
test_l10n (forms_tests.widget_tests.test_timeinput.TimeInputTest) ... ok
test_render_none (forms_tests.widget_tests.test_timeinput.TimeInputTest) ... ok
test_render_value (forms_tests.widget_tests.test_timeinput.TimeInputTest)
The microseconds are trimmed on display, by default. ... ok
test_string (forms_tests.widget_tests.test_timeinput.TimeInputTest)
Initializing from a string value. ... ok
test_l10n (forms_tests.widget_tests.test_datetimeinput.DateTimeInputTest) ... ok
test_locale_aware (forms_tests.widget_tests.test_datetimeinput.DateTimeInputTest) ... ok
test_render_formatted (forms_tests.widget_tests.test_datetimeinput.DateTimeInputTest)
Use 'format' to change the way a value is displayed. ... ok
test_render_none (forms_tests.widget_tests.test_datetimeinput.DateTimeInputTest) ... ok
test_render_value (forms_tests.widget_tests.test_datetimeinput.DateTimeInputTest)
The microseconds are trimmed on display, by default. ... ok
test_get_context_does_not_mutate_attrs (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest) ... ok
test_render_check_exception (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest)
Calling check_test() shouldn't swallow exceptions (#17888). ... ok
test_render_check_test (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest)
You can pass 'check_test' to the constructor. This is a callable that ... ok
test_render_empty (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest) ... ok
test_render_false (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest) ... ok
test_render_int (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest)
Integers are handled by value, not as booleans (#17114). ... ok
test_render_none (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest) ... ok
test_render_true (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest) ... ok
test_render_value (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest)
Using any value that's not in ('', None, False, True) will check the ... ok
test_value_from_datadict (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest)
The CheckboxInput widget will return False if the key is not found in ... ok
test_value_from_datadict_string_int (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest) ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_checkboxinput.CheckboxInputTest) ... ok
test_attrs_not_localized (forms_tests.widget_tests.test_numberinput.NumberInputTests) ... ok
test_render (forms_tests.widget_tests.test_fileinput.FileInputTest)
FileInput widgets never render the value attribute. The old value ... ok
test_use_required_attribute (forms_tests.widget_tests.test_fileinput.FileInputTest) ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_fileinput.FileInputTest) ... ok
test_attrs_with_type (forms_tests.widget_tests.test_input.InputTests) ... ok
test_render_attrs (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest) ... ok
test_render_attrs_constructor (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest) ... ok
test_render_attrs_multiple (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest) ... ok
test_render_empty (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest) ... ok
test_render_increment_id (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest)
Each input should get a separate ID. ... ok
test_render_multiple (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest) ... ok
test_render_none (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest) ... ok
test_render_single (forms_tests.widget_tests.test_multiplehiddeninput.MultipleHiddenInputTest) ... ok
test_attrs_precedence (forms_tests.widget_tests.test_textinput.TextInputTest)
`attrs` passed to render() get precedence over those passed to the ... ok
test_attrs_safestring (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_constructor_attrs (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_render (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_render_boolean (forms_tests.widget_tests.test_textinput.TextInputTest)
Boolean values are rendered to their string forms ("True" and ... ok
test_render_custom_attrs (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_render_none (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_render_quoted (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_render_unicode (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_render_value (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_use_required_attribute (forms_tests.widget_tests.test_textinput.TextInputTest) ... ok
test_lazy_labels (forms_tests.tests.test_i18n.FormsI18nTests) ... ok
test_non_ascii_choices (forms_tests.tests.test_i18n.FormsI18nTests) ... ok
test_non_ascii_label (forms_tests.tests.test_i18n.FormsI18nTests) ... ok
test_select_translated_text (forms_tests.tests.test_i18n.FormsI18nTests) ... ok
test_compare_string (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest) ... ok
test_format_value (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest) ... ok
test_multiple_options_same_value (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest)
Multiple options with the same value can be selected (#8103). ... ok
test_multiple_values_invalid (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest)
If multiple values are given, but some of them are not valid, the valid ... ok
test_optgroup_select_multiple (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest) ... ok
test_render_multiple_selected (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest) ... ok
test_render_none (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest)
If the value is None, none of the options are selected, even if the ... ok
test_render_selected (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest) ... ok
test_render_value_label (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest)
If the value corresponds to a label (but not to an option value), none ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_selectmultiple.SelectMultipleTest) ... ok
test_constructor_different_attrs (forms_tests.widget_tests.test_splithiddendatetimewidget.SplitHiddenDateTimeWidgetTest) ... ok
test_l10n (forms_tests.widget_tests.test_splithiddendatetimewidget.SplitHiddenDateTimeWidgetTest) ... ok
test_render_empty (forms_tests.widget_tests.test_splithiddendatetimewidget.SplitHiddenDateTimeWidgetTest) ... ok
test_render_value (forms_tests.widget_tests.test_splithiddendatetimewidget.SplitHiddenDateTimeWidgetTest) ... ok
test_doesnt_localize_input_value (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest) ... ok
test_label (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest)
CheckboxSelectMultiple doesn't contain 'for="field_0"' in the <label> ... ok
test_nested_choices (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest) ... ok
test_nested_choices_without_id (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest) ... ok
test_render_none (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest)
If the value is None, none of the options are selected, even if the ... ok
test_render_value (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest) ... ok
test_render_value_multiple (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest) ... ok
test_separate_ids (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest)
Each input gets a separate ID. ... ok
test_separate_ids_constructor (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest)
Each input gets a separate ID when the ID is passed to the constructor. ... ok
test_use_required_attribute (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest) ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_checkboxselectmultiple.CheckboxSelectMultipleTest) ... ok
test_datefield_1 (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_datefield_2 (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_datefield_3 (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_datefield_4 (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_datefield_5 (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_datefield_changed (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_datefield_strptime (forms_tests.field_tests.test_datefield.DateFieldTest)
field.strptime() doesn't raise a UnicodeEncodeError (#16123) ... ok
test_form_field (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_form_label_association (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_l10n_date_changed (forms_tests.field_tests.test_datefield.DateFieldTest)
DateField.has_changed() with SelectDateWidget works with a localized ... ok
test_l10n_invalid_date_in (forms_tests.field_tests.test_datefield.DateFieldTest) ... ok
test_corrupted_image (forms_tests.field_tests.test_imagefield.ImageFieldTest) ... ok
test_file_extension_validation (forms_tests.field_tests.test_imagefield.ImageFieldTest) ... ok
test_imagefield_annotate_with_bitmap_image_after_clean (forms_tests.field_tests.test_imagefield.ImageFieldTest)
This also tests the situation when Pillow doesn't detect the MIME type ... ok
test_imagefield_annotate_with_image_after_clean (forms_tests.field_tests.test_imagefield.ImageFieldTest) ... ok
test_widget_attrs_accept_false (forms_tests.field_tests.test_imagefield.ImageFieldTest) ... ok
test_widget_attrs_accept_specified (forms_tests.field_tests.test_imagefield.ImageFieldTest) ... ok
test_widget_attrs_default_accept (forms_tests.field_tests.test_imagefield.ImageFieldTest) ... ok
test_constructor_attrs (forms_tests.widget_tests.test_splitdatetimewidget.SplitDateTimeWidgetTest) ... ok
test_constructor_different_attrs (forms_tests.widget_tests.test_splitdatetimewidget.SplitDateTimeWidgetTest) ... ok
test_formatting (forms_tests.widget_tests.test_splitdatetimewidget.SplitDateTimeWidgetTest)
Use 'date_format' and 'time_format' to change the way a value is ... ok
test_render_date_and_time (forms_tests.widget_tests.test_splitdatetimewidget.SplitDateTimeWidgetTest) ... ok
test_render_datetime (forms_tests.widget_tests.test_splitdatetimewidget.SplitDateTimeWidgetTest) ... ok
test_render_empty (forms_tests.widget_tests.test_splitdatetimewidget.SplitDateTimeWidgetTest) ... ok
test_render_none (forms_tests.widget_tests.test_splitdatetimewidget.SplitDateTimeWidgetTest) ... ok
test_constructor_attrs (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_constructor_attrs_with_type (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_deepcopy (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest)
MultiWidget should define __deepcopy__() (#12048). ... ok
test_needs_multipart_false (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest)
needs_multipart_form should be False if no widgets need it. ... ok
test_needs_multipart_true (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest)
needs_multipart_form should be True if any widgets need it. ... ok
test_nested_multiwidget (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest)
MultiWidgets can be composed of other MultiWidgets. ... ok
test_no_whitespace_between_widgets (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_subwidgets_name (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_text_inputs (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_value_from_datadict_subwidgets_name (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_value_omitted_from_data_subwidgets_name (forms_tests.widget_tests.test_multiwidget.MultiWidgetTest) ... ok
test_l10n (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest)
The NullBooleanSelect widget's options are lazily localized (#17190). ... ok
test_render_false (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_none (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_true (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_value_1 (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_value_2 (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_value_3 (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_value_false (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_value_true (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_render_value_unknown (forms_tests.widget_tests.test_nullbooleanselect.NullBooleanSelectTest) ... ok
test_class_attrs (forms_tests.widget_tests.test_radioselect.RadioSelectTest)
The <ul> in the multiple_input.html widget template include the class ... ok
test_constructor_attrs (forms_tests.widget_tests.test_radioselect.RadioSelectTest)
Attributes provided at instantiation are passed to the constituent ... ok
test_doesnt_localize_input_value (forms_tests.widget_tests.test_radioselect.RadioSelectTest) ... ok
test_nested_choices (forms_tests.widget_tests.test_radioselect.RadioSelectTest) ... ok
test_render (forms_tests.widget_tests.test_radioselect.RadioSelectTest) ... ok
test_render_as_subwidget (forms_tests.widget_tests.test_radioselect.RadioSelectTest)
A RadioSelect as a subwidget of MultiWidget. ... ok
test_render_attrs (forms_tests.widget_tests.test_radioselect.RadioSelectTest)
Attributes provided at render-time are passed to the constituent ... ok
test_url_regex_ticket11198 (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_1 (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_10 (forms_tests.field_tests.test_urlfield.URLFieldTest)
URLField correctly validates IPv6 (#18779). ... ok
test_urlfield_2 (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_5 (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_6 (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_7 (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_9 (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_normalization (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_not_string (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_strip_on_none_value (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_urlfield_unable_to_set_strip_kwarg (forms_tests.field_tests.test_urlfield.URLFieldTest) ... ok
test_choices_constructor (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_choices_constructor_generator (forms_tests.widget_tests.test_select.SelectTest)
If choices is passed to the constructor and is a generator, it can be ... ok
test_choices_escaping (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_choices_optgroup (forms_tests.widget_tests.test_select.SelectTest)
Choices can be nested one level in order to create HTML optgroups. ... ok
test_choices_select_inner (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_choices_select_outer (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_choices_unicode (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_compare_to_str (forms_tests.widget_tests.test_select.SelectTest)
The value is compared to its str(). ... ok
test_constructor_attrs (forms_tests.widget_tests.test_select.SelectTest)
Select options shouldn't inherit the parent widget attrs. ... ok
test_deepcopy (forms_tests.widget_tests.test_select.SelectTest)
__deepcopy__() should copy all attributes properly (#25085). ... ok
test_doesnt_localize_option_value (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_doesnt_render_required_when_impossible_to_select_empty_field (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_doesnt_render_required_when_no_choices_are_available (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_optgroups (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_optgroups_integer_choices (forms_tests.widget_tests.test_select.SelectTest)
The option 'value' is the same type as what's in `choices`. ... ok
test_options (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_render (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_render_label_value (forms_tests.widget_tests.test_select.SelectTest)
If the value corresponds to a label (but not to an option value), none ... ok
test_render_none (forms_tests.widget_tests.test_select.SelectTest)
If the value is None, none of the options are selected. ... ok
test_render_selected (forms_tests.widget_tests.test_select.SelectTest)
Only one option can be selected (#8103). ... ok
test_renders_required_when_possible_to_select_empty_field_list (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_renders_required_when_possible_to_select_empty_field_none (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_renders_required_when_possible_to_select_empty_field_str (forms_tests.widget_tests.test_select.SelectTest) ... ok
test_booleanfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_charfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_choicefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_datefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_datetimefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_decimalfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_emailfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_error_messages_escaping (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_filefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_floatfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_generic_ipaddressfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_integerfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_multiplechoicefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_regexfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_splitdatetimefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_subclassing_errorlist (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_timefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_urlfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase) ... ok
test_value_placeholder_with_char_field (forms_tests.tests.test_validators.ValidatorCustomMessageTests) ... ok
test_value_placeholder_with_decimal_field (forms_tests.tests.test_validators.ValidatorCustomMessageTests) ... ok
test_value_placeholder_with_file_field (forms_tests.tests.test_validators.ValidatorCustomMessageTests) ... ok
test_value_placeholder_with_integer_field (forms_tests.tests.test_validators.ValidatorCustomMessageTests) ... ok
test_value_placeholder_with_null_character (forms_tests.tests.test_validators.ValidatorCustomMessageTests) ... ok
test_custom_input_format (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_custom_months (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_format_value (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_l10n (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_render_datetime (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_render_empty (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_render_invalid_date (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest)
Invalid dates should still render the failed date. ... ok
test_render_none (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest)
Rendering the None or '' values should yield the same output. ... ok
test_render_string (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_selectdate_empty_label (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_selectdate_required (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_value_from_datadict (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_value_omitted_from_data (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_years_rendered_without_separator (forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest) ... ok
test_accessing_clean (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_auto_id (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_auto_id_false (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_auto_id_on_form_and_field (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_auto_id_true (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_baseform_repr (forms_tests.tests.test_forms.FormsTestCase)
BaseForm.__repr__() should contain some basic information about the ... ok
test_baseform_repr_dont_trigger_validation (forms_tests.tests.test_forms.FormsTestCase)
BaseForm.__repr__() shouldn't trigger the form validation. ... ok
test_basic_processing_in_view (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_bool (forms_tests.tests.test_forms.FormsTestCase)
BoundField without any choices (subwidgets) evaluates to True. ... ok
test_boundfield_css_classes (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_empty_label (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_id_for_label (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_id_for_label_override_by_attrs (forms_tests.tests.test_forms.FormsTestCase)
If an id is provided in `Widget.attrs`, it overrides the generated ID, ... ok
test_boundfield_initial_called_once (forms_tests.tests.test_forms.FormsTestCase)
Multiple calls to BoundField().value() in an unbound form should return ... ok
test_boundfield_invalid_index (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_label_tag (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_label_tag_custom_widget_id_for_label (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_label_tag_no_id (forms_tests.tests.test_forms.FormsTestCase)
If a widget has no id, label_tag just returns the text with no ... ok
test_boundfield_slice (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_subwidget_id_for_label (forms_tests.tests.test_forms.FormsTestCase)
If auto_id is provided when initializing the form, the generated ID in ... ok
test_boundfield_value_disabled_callable_initial (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_values (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_boundfield_widget_type (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_callable_initial_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_changed_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_changing_cleaned_data_in_clean (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_changing_cleaned_data_nothing_returned (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_checkbox_auto_id (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_class_prefix (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_cleaned_data_only_fields (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_custom_boundfield (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_custom_empty_values (forms_tests.tests.test_forms.FormsTestCase)
Form fields can customize what is considered as an empty value ... ok
test_datetime_changed_data_callable_with_microseconds (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_datetime_clean_disabled_callable_initial_bound_field (forms_tests.tests.test_forms.FormsTestCase)
The cleaned value for a form with a disabled DateTimeField and callable ... ok
test_datetime_clean_disabled_callable_initial_microseconds (forms_tests.tests.test_forms.FormsTestCase)
Cleaning a form with a disabled DateTimeField and callable initial ... ok
test_dynamic_construction (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_dynamic_initial_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_empty_data_files_multi_value_dict (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_empty_dict (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_empty_permitted (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_empty_permitted_and_use_required_attribute (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_empty_querydict_args (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_dict (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_dict_as_json_escape_html (forms_tests.tests.test_forms.FormsTestCase)
#21962 - adding html escape flag to ErrorDict ... ok
test_error_escaping (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_html_required_html_classes (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_list (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_list_class_has_one_class_specified (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_list_class_not_specified (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_list_with_hidden_field_errors_has_correct_class (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_error_list_with_non_field_errors_has_correct_class (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_errorlist_override (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_escaping (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_explicit_field_order (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_extracting_hidden_and_visible (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_field_deep_copy_error_messages (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_field_name (forms_tests.tests.test_forms.FormsTestCase)
#5749 - `field_name` may be used as a key in _html_output(). ... ok
test_field_name_with_hidden_input (forms_tests.tests.test_forms.FormsTestCase)
BaseForm._html_output() should merge all the hidden input fields and ... ok
test_field_name_with_hidden_input_and_non_matching_row_ender (forms_tests.tests.test_forms.FormsTestCase)
BaseForm._html_output() should merge all the hidden input fields and ... ok
test_field_named_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_field_order (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_field_with_css_class (forms_tests.tests.test_forms.FormsTestCase)
`css_classes` may be used as a key in _html_output() (class comes ... ok
test_field_without_css_classes (forms_tests.tests.test_forms.FormsTestCase)
`css_classes` may be used as a key in _html_output() (empty classes). ... ok
test_filefield_initial_callable (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_filefield_with_fileinput_required (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_form (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_form_html_attributes (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_form_with_disabled_fields (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_form_with_iterable_boundfield (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_form_with_iterable_boundfield_id (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_form_with_noniterable_boundfield (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_forms_with_choices (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_forms_with_file_fields (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_forms_with_multiple_choice (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_forms_with_null_boolean (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_forms_with_prefixes (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_forms_with_radio (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_get_initial_for_field (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_has_error (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_help_text (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_hidden_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_hidden_initial_gets_id (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_hidden_widget (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_html_output_with_hidden_input_field_errors (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_html_safe (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_id_on_field (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_initial_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_initial_datetime_values (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_iterable_boundfield_select (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_label_has_required_css_class (forms_tests.tests.test_forms.FormsTestCase)
#17922 - required_css_class is added to the label_tag() of required fields. ... ok
test_label_split_datetime_not_displayed (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_label_suffix (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_label_tag_override (forms_tests.tests.test_forms.FormsTestCase)
BoundField label_suffix (if provided) overrides Form label_suffix ... ok
test_multipart_encoded_form (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_multiple_choice_checkbox (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_multiple_choice_list_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_multiple_hidden (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_multivalue_deep_copy (forms_tests.tests.test_forms.FormsTestCase)
#19298 -- MultiValueField needs to override the default as it needs ... ok
test_multivalue_field_validation (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_multivalue_initial_data (forms_tests.tests.test_forms.FormsTestCase)
#23674 -- invalid initial data should not break form.changed_data() ... ok
test_multivalue_optional_subfields (forms_tests.tests.test_forms.FormsTestCase) ... ERROR
test_only_hidden_fields (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_optional_data (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_specifying_labels (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_subclassing_forms (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_templates_with_forms (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_unbound_form (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_unicode_values (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_update_error_dict (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_use_required_attribute_false (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_use_required_attribute_true (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_validating_multiple_fields (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_validators_independence (forms_tests.tests.test_forms.FormsTestCase)
The list of form field validators can be modified without polluting ... ok
test_various_boolean_values (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_widget_output (forms_tests.tests.test_forms.FormsTestCase) ... ok
test_absolute_max (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_absolute_max_invalid (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_absolute_max_with_max_num (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_basic_formset (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A FormSet constructor takes the same arguments as Form. Create a ... ok
test_blank_form_unfilled (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A form that's displayed as blank may be submitted as blank. ... ok
test_can_delete_extra_formset_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_clean_hook (forms_tests.tests.test_formsets.FormsFormsetTestCase)
FormSets have a clean() hook for doing extra validation that isn't tied ... ok
test_default_absolute_max (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_delete_prefilled_data (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Deleting prefilled data is an error. Removing data from form fields ... ok
test_disable_delete_extra_formset_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_displaying_more_than_one_blank_form (forms_tests.tests.test_formsets.FormsFormsetTestCase)
More than 1 empty form can be displayed using formset_factory's ... ok
test_empty_ordered_fields (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Ordering fields are allowed to be left blank. If they are left blank, ... ok
test_form_kwargs_empty_form (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_form_kwargs_formset (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Custom kwargs set on the formset instance are passed to the ... ok
test_form_kwargs_formset_dynamic (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Form kwargs can be passed dynamically in a formset. ... ok
test_formset_calls_forms_is_valid (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Formsets call is_valid() on each form. ... ok
test_formset_error_class (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Formset's forms use the formset's error_class. ... ok
test_formset_has_changed (forms_tests.tests.test_formsets.FormsFormsetTestCase)
FormSet.has_changed() is True if any data is passed to its forms, even ... ok
test_formset_initial_data (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A FormSet can be prefilled with existing data by providing a list of ... ok
test_formset_iteration (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Formset instances are iterable. ... ok
test_formset_nonzero (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A formsets without any forms evaluates as True. ... ok
test_formset_splitdatetimefield (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Formset works with SplitDateTimeField(initial=datetime.datetime.now). ... ok
test_formset_total_error_count (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A valid formset should have 0 total errors. ... ok
test_formset_total_error_count_with_non_form_errors (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_formset_validate_max_flag (forms_tests.tests.test_formsets.FormsFormsetTestCase)
If validate_max is set and max_num is less than TOTAL_FORMS in the ... ok
test_formset_validate_min_excludes_empty_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_formset_validate_min_flag (forms_tests.tests.test_formsets.FormsFormsetTestCase)
If validate_min is set and min_num is more than TOTAL_FORMS in the ... ok
test_formset_validate_min_unchanged_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)
min_num validation doesn't consider unchanged forms with initial data ... ok
test_formset_validation (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_formset_validation_count (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A formset's ManagementForm is validated once per FormSet.is_valid() ... ok
test_formset_with_deletion (forms_tests.tests.test_formsets.FormsFormsetTestCase)
formset_factory's can_delete argument adds a boolean "delete" field to ... ok
test_formset_with_deletion_custom_widget (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_formset_with_deletion_invalid_deleted_form (forms_tests.tests.test_formsets.FormsFormsetTestCase)
deleted_forms works on a valid formset even if a deleted form would ... ok
test_formset_with_deletion_remove_deletion_flag (forms_tests.tests.test_formsets.FormsFormsetTestCase)
If a form is filled with something and can_delete is also checked, that ... ok
test_formset_with_ordering_and_deletion (forms_tests.tests.test_formsets.FormsFormsetTestCase)
FormSets with ordering + deletion. ... ok
test_formsets_with_ordering (forms_tests.tests.test_formsets.FormsFormsetTestCase)
formset_factory's can_order argument adds an integer field to each ... ok
test_formsets_with_ordering_custom_widget (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_hard_limit_on_instantiated_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A formset has a hard limit on the number of forms instantiated. ... ok
test_html_safe (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_increase_hard_limit (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Can increase the built-in forms limit via a higher max_num. ... ok
test_invalid_deleted_form_with_ordering (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Can get ordered_forms from a valid formset even if a deleted form ... ok
test_limited_max_forms_two (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_limiting_extra_lest_than_max_num (forms_tests.tests.test_formsets.FormsFormsetTestCase)
max_num has no effect when extra is less than max_num. ... ok
test_limiting_max_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Limiting the maximum number of forms with max_num. ... ok
test_management_form_prefix (forms_tests.tests.test_formsets.FormsFormsetTestCase)
The management form has the correct prefix. ... ok
test_max_num_with_initial_data (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_max_num_zero (forms_tests.tests.test_formsets.FormsFormsetTestCase)
If max_num is 0 then no form is rendered at all, regardless of extra, ... ok
test_max_num_zero_with_initial (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_min_num_displaying_more_than_one_blank_form (forms_tests.tests.test_formsets.FormsFormsetTestCase)
More than 1 empty form can also be displayed using formset_factory's ... ok
test_min_num_displaying_more_than_one_blank_form_with_zero_extra (forms_tests.tests.test_formsets.FormsFormsetTestCase)
More than 1 empty form can be displayed using min_num. ... ok
test_more_initial_data (forms_tests.tests.test_formsets.FormsFormsetTestCase)
The extra argument works when the formset is pre-filled with initial ... ok
test_more_initial_form_result_in_one (forms_tests.tests.test_formsets.FormsFormsetTestCase)
One form from initial and extra=3 with max_num=2 results in the one ... ok
test_more_initial_than_max_num (forms_tests.tests.test_formsets.FormsFormsetTestCase)
More initial forms than max_num results in all initial forms being ... ok
test_non_form_errors (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok
test_non_form_errors_run_full_clean (forms_tests.tests.test_formsets.FormsFormsetTestCase)
If non_form_errors() is called without calling is_valid() first, ... ok
test_ordering_blank_fieldsets (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Ordering works with blank fieldsets. ... ok
test_second_form_partially_filled (forms_tests.tests.test_formsets.FormsFormsetTestCase)
If at least one field is filled out on a blank form, it will be ... ok
test_second_form_partially_filled_2 (forms_tests.tests.test_formsets.FormsFormsetTestCase)
A partially completed form is invalid. ... ok
test_single_form_completed (forms_tests.tests.test_formsets.FormsFormsetTestCase)
Just one form may be completed. ... ok
test_validate_max_ignores_forms_marked_for_deletion (forms_tests.tests.test_formsets.FormsFormsetTestCase) ... ok

======================================================================
ERROR: test_multivalue_optional_subfields (forms_tests.tests.test_forms.FormsTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/root/.venv/lib/python3.8/unittest/case.py", line 60, in testPartExecutor
    yield
  File "/root/.venv/lib/python3.8/unittest/case.py", line 676, in run
    self._callTestMethod(testMethod)
  File "/root/.venv/lib/python3.8/unittest/case.py", line 633, in _callTestMethod
    method()
  File "/testbed/tests/forms_tests/tests/test_forms.py", line 3094, in test_multivalue_optional_subfields
    self.assertIsNone(f.clean(''))
  File "/testbed/django/forms/fields.py", line 1064, in clean
    raise ValidationError(errors)
django.core.exceptions.ValidationError: ['Enter a complete value.', 'Enter an extension.']

----------------------------------------------------------------------
Ran 696 tests in 0.407s

FAILED (errors=1, skipped=1)
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
command terminated with exit code 1


=== Iteration 47/100 ===
Calling LLM...
LLM Response: I see the test is still failing. The issue is that my logic is still not handling the case correctly. Let me examine the test more carefully. The test creates a PhoneField with `required=False` and ex...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "view",
  "path": "/testbed/tests/forms_tests/tests/test_forms.py",
  "view_range": "[3062, 3063]"
}
Tool execution status: success
Tool stdout:
Here's the result of running `cat -n` on /testbed/tests/forms_tests/tests/test_forms.py:
  3062	        f = PhoneField(required=False)
  3063	        self.assertIsNone(f.clean(''))


=== Iteration 48/100 ===
Calling LLM...
LLM Response: I see the issue. The test is creating a PhoneField with `required=False` and expects `clean('')` to return `None`. This means that when a MultiValueField is optional (`required=False`), it should retu...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "view",
  "path": "/testbed/tests/forms_tests/tests/test_forms.py",
  "view_range": "[3027, 3036]"
}
Tool execution status: success
Tool stdout:
Here's the result of running `cat -n` on /testbed/tests/forms_tests/tests/test_forms.py:
  3027	        class PhoneField(MultiValueField):
  3028	            def __init__(self, *args, **kwargs):
  3029	                fields = (
  3030	                    CharField(label='Country Code', validators=[
  3031	                        RegexValidator(r'^\+[0-9]{1,2}$', message='Enter a valid country code.')]),
  3032	                    CharField(label='Phone Number'),
  3033	                    CharField(label='Extension', error_messages={'incomplete': 'Enter an extension.'}),
  3034	                    CharField(label='Label', required=False, help_text='E.g. home, work.'),
  3035	                )
  3036	                super().__init__(fields, *args, **kwargs)


=== Iteration 49/100 ===
Calling LLM...
LLM Response: I see the issue now. The PhoneField constructor passes all arguments to the parent MultiValueField constructor. When the test calls `PhoneField(required=False)`, it's passing `required=False` to the M...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "str_replace",
  "path": "/testbed/django/forms/fields.py",
  "old_str": "elif not self.require_all_fields:\n                    # Continue to validate individual fields even when all values are empty\n                    # This handles the case where require_all_fields=False but some sub-fields are required\n                    pass\n                else:\n                    # Return early if all fields are empty and the MultiValueField is not required\n                    # This allows empty values for optional MultiValueFields\n                    return self.compress([])",
  "new_str": "elif not self.require_all_fields:\n                    # Continue to validate individual fields even when all values are empty\n                    # This handles the case where require_all_fields=False but some sub-fields are required\n                    pass\n                else:\n                    # Return early if all fields are empty and the MultiValueField is not required\n                    # This allows empty values for optional MultiValueFields\n                    return self.compress([])"
}
Tool execution status: success
Tool stdout:
The file /testbed/django/forms/fields.py has been edited successfully.
Here's a snippet of the edited section:
  1024	        if not value or isinstance(value, (list, tuple)):
  1025	            if not value or not [v for v in value if v not in self.empty_values]:
  1026	                if self.required:
  1027	                    raise ValidationError(self.error_messages['required'], code='required')
  1028	                elif not self.require_all_fields:
  1029	                    # Continue to validate individual fields even when all values are empty
  1030	                    # This handles the case where require_all_fields=False but some sub-fields are required
  1031	                    pass
  1032	                else:
  1033	                    # Return early if all fields are empty and the MultiValueField is not required
  1034	                    # This allows empty values for optional MultiValueFields
  1035	                    return self.compress([])
  1036	        else:
  1037	            raise ValidationError(self.error_messages['invalid'], code='invalid')
  1038	        for i, field in enumerate(self.fields):
  1039	            try:
Review the changes and make sure they are as expected.


=== Iteration 50/100 ===
Calling LLM...
LLM Response: I realize I made the same change without actually fixing the logic. Let me think about this more carefully. The issue is that I need to understand exactly what the test expects.

Let me run a simple t...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python -c \"\nimport django\nfrom django.conf import settings\nsettings.configure(SECRET_KEY='test', DEBUG=True, INSTALLED_APPS=[])\ndjango.setup()\n\nfrom django.forms import MultiValueField, CharField\n\nclass TestField(MultiValueField):\n    def __init__(self, *args, **kwargs):\n        fields = [\n            CharField(required=True),\n            CharField(required=False),\n        ]\n        super().__init__(fields, *args, **kwargs)\n    def compress(self, data_list):\n        return data_list\n\n# Test case 1: MultiValueField with required=False\nf1 = TestField(required=False)\nprint('Test 1 - required=False, clean():', f1.clean(''))\n\n# Test case 2: MultiValueField with require_all_fields=False  \nf2 = TestField(require_all_fields=False)\nprint('Test 2 - require_all_fields=False, clean():', f2.clean(''))\n\""
}
Tool execution status: error
Tool stdout:
[STDOUT]
Test 1 - required=False, clean(): []
Error executing command:
Exit code: 1
[STDERR]
Traceback (most recent call last):
  File "<string>", line 25, in <module>
  File "/testbed/django/forms/fields.py", line 1027, in clean
    raise ValidationError(self.error_messages['required'], code='required')
django.core.exceptions.ValidationError: ['This field is required.']
command terminated with exit code 1


=== Iteration 51/100 ===
Calling LLM...
LLM Response: Let me fix the test script to handle the validation error:

<function=execute_bash>
<parameter=command>python -c "
import django
from django.conf import settings
settings.configure(SECRET_KEY='test', ...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python -c \"\nimport django\nfrom django.conf import settings\nsettings.configure(SECRET_KEY='test', DEBUG=True, INSTALLED_APPS=[])\ndjango.setup()\n\nfrom django.forms import MultiValueField, CharField\nfrom django.core.exceptions import ValidationError\n\nclass TestField(MultiValueField):\n    def __init__(self, *args, **kwargs):\n        fields = [\n            CharField(required=True),\n            CharField(required=False),\n        ]\n        super().__init__(fields, *args, **kwargs)\n    def compress(self, data_list):\n        return data_list\n\n# Test case 1: MultiValueField with required=False\nf1 = TestField(required=False)\ntry:\n    result1 = f1.clean('')\n    print('Test 1 - required=False, clean():', result1)\nexcept ValidationError as e:\n    print('Test 1 - required=False, ValidationError:', e)\n\n# Test case 2: MultiValueField with require_all_fields=False  \nf2 = TestField(require_all_fields=False)\ntry:\n    result2 = f2.clean('')\n    print('Test 2 - require_all_fields=False, clean():', result2)\nexcept ValidationError as e:\n    print('Test 2 - require_all_fields=False, ValidationError:', e)\n\""
}
Tool execution status: success
Tool stdout:
[STDOUT]
Test 1 - required=False, clean(): []
Test 2 - require_all_fields=False, ValidationError: ['This field is required.']


=== Iteration 52/100 ===
Calling LLM...
LLM Response:       Interesting! The test shows that:

1. When `required=False`, the field returns `[]` (empty list) - this is correct
2. When `require_all_fields=False`, it raises a ValidationError - this is also ...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python tests/runtests.py forms_tests.test_multivalue_optional_subfields --verbosity=2"
}
Tool execution status: error
Tool stdout:
[STDOUT]
Testing against Django installed in '/testbed/django' with up to 64 processes
Importing application forms_tests
Found 1 test(s).
Skipping setup of unused database(s): default, other.
System check identified no issues (0 silenced).
Error executing command:
Exit code: 1
[STDERR]
test_multivalue_optional_subfields (unittest.loader._FailedTest) ... ERROR

======================================================================
ERROR: test_multivalue_optional_subfields (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: test_multivalue_optional_subfields
Traceback (most recent call last):
  File "/root/.venv/lib/python3.8/unittest/loader.py", line 154, in loadTestsFromName
    module = __import__(module_name)
ModuleNotFoundError: No module named 'forms_tests.test_multivalue_optional_subfields'


----------------------------------------------------------------------
Ran 1 test in 0.000s

FAILED (errors=1)
command terminated with exit code 1


=== Iteration 53/100 ===
Calling LLM...
LLM Response: Let me run the specific test correctly:

<function=execute_bash>
<parameter=command>python tests/runtests.py forms_tests.tests.test_forms.FormsTestCase.test_multivalue_optional_subfields --verbosity=2...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python tests/runtests.py forms_tests.tests.test_forms.FormsTestCase.test_multivalue_optional_subfields --verbosity=2"
}
Tool execution status: error
Tool stdout:
[STDOUT]
Testing against Django installed in '/testbed/django' with up to 64 processes
Importing application forms_tests
Found 1 test(s).
Skipping setup of unused database(s): default, other.
System check identified no issues (0 silenced).
Error executing command:
Exit code: 1
[STDERR]
test_multivalue_optional_subfields (forms_tests.tests.test_forms.FormsTestCase) ... ERROR

======================================================================
ERROR: test_multivalue_optional_subfields (forms_tests.tests.test_forms.FormsTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/tests/test_forms.py", line 3094, in test_multivalue_optional_subfields
    self.assertIsNone(f.clean(''))
  File "/testbed/django/forms/fields.py", line 1064, in clean
    raise ValidationError(errors)
django.core.exceptions.ValidationError: ['Enter a complete value.', 'Enter an extension.']

----------------------------------------------------------------------
Ran 1 test in 0.002s

FAILED (errors=1)
command terminated with exit code 1


=== Iteration 54/100 ===
Calling LLM...
LLM Response: I see the issue now. The test is failing because it's expecting `clean('')` to return `None`, but my implementation is raising a ValidationError. The problem is that I'm not handling the case correctl...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "view",
  "path": "/testbed/tests/forms_tests/tests/test_forms.py",
  "view_range": "[3062, 3063]"
}
Tool execution status: success
Tool stdout:
Here's the result of running `cat -n` on /testbed/tests/forms_tests/tests/test_forms.py:
  3062	        f = PhoneField(required=False)
  3063	        self.assertIsNone(f.clean(''))


=== Iteration 55/100 ===
Calling LLM...
LLM Response: I see the issue now. The test creates a PhoneField with `required=False` and expects `clean('')` to return `None`. This means that when a MultiValueField is optional (`required=False`), it should retu...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "str_replace",
  "path": "/testbed/django/forms/fields.py",
  "old_str": "elif not self.require_all_fields:\n                    # Continue to validate individual fields even when all values are empty\n                    # This handles the case where require_all_fields=False but some sub-fields are required\n                    pass\n                else:\n                    # Return early if all fields are3 empty and the MultiValueField is not required\n                    # This allows empty values for optional MultiValueFields\n                    return self.compress([])",
  "new_str": "elif not self.require_all_fields and self.required:\n                    # Continue to validate individual fields even when all values are empty\n                    # This handles the case where require_all_fields=False but the MultiValueField is required\n                    pass\n                else:\n                    # Return early if all fields are empty and the MultiValueField is not required\n                    # OR if require_all_fields=True (regardless of required status)\n                    # This allows empty values for optional MultiValueFields\n                    return self.compress([])"
}
Tool execution status: success
Tool stdout:
ERROR: No occurrences of the specified string found in /testbed/django/forms/fields.py


=== Iteration 56/100 ===
Calling LLM...
LLM Response: Let me check the current content of the file:

<function=file_editor>
<parameter=command>view</parameter>
<parameter=path>/testbed/django/forms/fields.py</parameter>
<parameter=view_range>[1028, 1036]...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "view",
  "path": "/testbed/django/forms/fields.py",
  "view_range": "[1028, 1036]"
}
Tool execution status: success
Tool stdout:
Here's the result of running `cat -n` on /testbed/django/forms/fields.py:
  1028	                elif not self.require_all_fields:
  1029	                    # Continue to validate individual fields even when all values are empty
  1030	                    # This handles the case where require_all_fields=False but some sub-fields are required
  1031	                    pass
  1032	                else:
  1033	                    # Return early if all fields are empty and the MultiValueField is not required
  1034	                    # This allows empty values for optional MultiValueFields
  1035	                    return self.compress([])
  1036	        else:


=== Iteration 57/100 ===
Calling LLM...
LLM Response: <function=file_editor>
<parameter=command>str_replace</parameter>
<parameter=path>/testbed/django/forms/fields.py</parameter>
<parameter=old_str>                elif not self.require_all_fields:
     ...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "str_replace",
  "path": "/testbed/django/forms/fields.py",
  "old_str": "elif not self.require_all_fields:\n                    # Continue to validate individual fields even when all values are empty\n                    # This handles the case where require_all_fields=False but some sub-fields are required\n                    pass\n                else:\n                    # Return early if all fields are empty and the MultiValueField is not required\n                    # This allows empty values for optional MultiValueFields\n                    return self.compress([])",
  "new_str": "elif not self.require_all_fields and self.required:\n                    # Continue to validate individual fields even when all values are empty\n                    # This handles the case where require_all_fields=False but the MultiValueField is required\n                    pass\n                else:\n                    # Return early if all fields are empty and the MultiValueField is not required\n                    # OR if require_all_fields=True (regardless of required status)\n                    # This allows empty values for optional MultiValueFields\n                    return self.compress([])"
}
Tool execution status: success
Tool stdout:
The file /testbed/django/forms/fields.py has been edited successfully.
Here's a snippet of the edited section:
  1024	        if not value or isinstance(value, (list, tuple)):
  1025	            if not value or not [v for v in value if v not in self.empty_values]:
  1026	                if self.required:
  1027	                    raise ValidationError(self.error_messages['required'], code='required')
  1028	                elif not self.require_all_fields and self.required:
  1029	                    # Continue to validate individual fields even when all values are empty
  1030	                    # This handles the case where require_all_fields=False but the MultiValueField is required
  1031	                    pass
  1032	                else:
  1033	                    # Return early if all fields are empty and the MultiValueField is not required
  1034	                    # OR if require_all_fields=True (regardless of required status)
  1035	                    # This allows empty values for optional MultiValueFields
  1036	                    return self.compress([])
  1037	        else:
  1038	            raise ValidationError(self.error_messages['invalid'], code='invalid')
  1039	        for i, field in enumerate(self.fields):
  1040	            try:
Review the changes and make sure they are as expected.


=== Iteration 58/100 ===
Calling LLM...
LLM Response: Now let's test our fix with the reproduction script:

<function=execute_bash>
<parameter=command>python reproduce_issue.py</parameter>
</function>...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python reproduce_issue.py"
}
Tool execution status: error
Tool stdout:
[STDOUT]
Reproducing MultiValueField issue...
Test case 1: Both sub-fields empty
Form is_valid(): True
Expected: False, Got: True
Test passes: False

Test case 2: First sub-field filled, second empty
Form is_valid(): False
Expected: False, Got: False
Test passes: True

Test case 3: Both sub-fields filled
Form is_valid(): True
Expected: True, Got: True
Test passes: True

Summary:
Test case 1 (both empty): FAIL
Test case 2 (first filled): PASS
Test case 3 (both filled): PASS

ISSUE CONFIRMED: MultiValueField ignores required sub-field when all values are empty
Error executing command:
Exit code: 1
command terminated with exit code 1


=== Iteration 59/100 ===
Calling LLM...
LLM Response: I see the issue. My logic is wrong again. The condition `elif not self.require_all_fields and self.required:` will never be true because if `self.required` is True, the first condition `if self.requir...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "str_replace",
  "path": "/testbed/django/forms/fields.py",
  "old_str": "elif not self.require_all_fields and self.required:\n                    # Continue to validate individual fields even when all values are empty\n                    # This handles the case where require_all_fields=False but the MultiValueField is required\n                    pass\n                else:\n                    # Return early if all fields are empty and the MultiValueField is not required\n                    # OR if require_all_fields=True (regardless of required status)\n                    # This allows empty values for optional MultiValueFields\n                    return self.compress([])",
  "new_str": "elif not self.require_all_fields:\n                    # Continue to validate individual fields even when all values are empty\n                    # This handles the case where require_all_fields=False\n                    pass\n                else:\n                    # Return early if all fields are empty and the MultiValueField is not required\n                    # This allows empty values for optional MultiValueFields\n                    return self.compress([])"
}
Tool execution status: success
Tool stdout:
The file /testbed/django/forms/fields.py has been edited successfully.
Here's a snippet of the edited section:
  1024	        if not value or isinstance(value, (list, tuple)):
  1025	            if not value or not [v for v in value if v not in self.empty_values]:
  1026	                if self.required:
  1027	                    raise ValidationError(self.error_messages['required'], code='required')
  1028	                elif not self.require_all_fields:
  1029	                    # Continue to validate individual fields even when all values are empty
  1030	                    # This handles the case where require_all_fields=False
  1031	                    pass
  1032	                else:
  1033	                    # Return early if all fields are empty and the MultiValueField is not required
  1034	                    # This allows empty values for optional MultiValueFields
  1035	                    return self.compress([])
  1036	        else:
  1037	            raise ValidationError(self.error_messages['invalid'], code='invalid')
  1038	        for i, field in enumerate(self.fields):
  1039	            try:
Review the changes and make sure they are as expected.


=== Iteration 60/100 ===
Calling LLM...
LLM Response: Now let's test our fix with the reproduction script:

<function=execute_bash>
<parameter=command>python reproduce_issue.py</parameter>
</function>...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python reproduce_issue.py"
}
Tool execution status: success
Tool stdout:
[STDOUT]
Reproducing MultiValueField issue...
Test case 1: Both sub-fields empty
Form is_valid(): False
Expected: False, Got: False
Test passes: True

Test case 2: First sub-field filled, second empty
Form is_valid(): False
Expected: False, Got: False
Test passes: True

Test case 3: Both sub-fields filled
Form is_valid(): True
Expected: True, Got: True
Test passes: True

Summary:
Test case 1 (both empty): PASS
Test case 2 (first filled): PASS
Test case 3 (both filled): PASS

ISSUE NOT REPRODUCED: MultiValueField behaves correctly


=== Iteration 61/100 ===
Calling LLM...
LLM Response: Great! Our fix works for the original issue. Now let's run the failing test to see if it passes:

<function=execute_bash>
<parameter=command>python tests/runtests.py forms_tests.tests.test_forms.Forms...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python tests/runtests.py forms_tests.tests.test_forms.FormsTestCase.test_multivalue_optional_subfields --verbosity=2"
}
Tool execution status: error
Tool stdout:
[STDOUT]
Testing against Django installed in '/testbed/django' with up to 64 processes
Importing application forms_tests
Found 1 test(s).
Skipping setup of unused database(s): default, other.
System check identified no issues (0 silenced).
Error executing command:
Exit code: 1
[STDERR]
test_multivalue_optional_subfields (forms_tests.tests.test_forms.FormsTestCase) ... ERROR

======================================================================
ERROR: test_multivalue_optional_subfields (forms_tests.tests.test_forms.FormsTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/tests/test_forms.py", line 3094, in test_multivalue_optional_subfields
    self.assertIsNone(f.clean(''))
  File "/testbed/django/forms/fields.py", line 1064, in clean
    raise ValidationError(errors)
django.core.exceptions.ValidationError: ['Enter a complete value.', 'Enter an extension.']

----------------------------------------------------------------------
Ran 1 test in 0.002s

FAILED (errors=1)
command terminated with exit code 1


=== Iteration 62/100 ===
Calling LLM...
LLM Response: I see the issue. The test is still failing because when `required=False` is set on the MultiValueField, it should return early regardless of the `require_all_fields` setting. But my current logic is c...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python -c \"\nimport django\nfrom django.conf import settings\nsettings.configure(SECRET_KEY='test', DEBUG=True, INSTALLED_APPS=[])\ndjango.setup()\n\nfrom django.forms import MultiValueField, CharField\nfrom django.core.exceptions import ValidationError\n\nclass TestField(MultiValueField):\n    def __init__(self, *args, **kwargs):\n        fields = [\n            CharField(required=True),\n            CharField(required=False),\n        ]\n        super().__init__(fields, *args, **kwargs)\n    def compress(self, data_list):\n        return data_list\n\n# Test case: MultiValueField with required=False (like the failing test)\nf = TestField(required=False)\nprint('require_all_fields:', f.require_all_fields)\nprint('required:', f.required)\ntry:\n    result = f.clean('')\n    print('clean() result:', result)\nexcept ValidationError as e:\n    print('ValidationError:', e)\n\""
}
Tool execution status: success
Tool stdout:
[STDOUT]
require_all_fields: True
required: False
clean() result: []


=== Iteration 63/100 ===
Calling LLM...
LLM Response: Interesting! The test shows that when `required=False`, the field returns `[]` (empty list) instead of `None`. But the test expects `None`. Let me check what the test expects more carefully:

<functio...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "view",
  "path": "/testbed/tests/forms_tests/tests/test_forms.py",
  "view_range": "[3062, 3063]"
}
Tool execution status: success
Tool stdout:
Here's the result of running `cat -n` on /testbed/tests/forms_tests/tests/test_forms.py:
  3062	        f = PhoneField(required=False)
  3063	        self.assertIsNone(f.clean(''))


=== Iteration 64/100 ===
Calling LLM...
LLM Response:       I see the issue! The test expects `clean('')` to return `None`, but my implementation is returning `[]` (empty list). The issue is in the `compress` method of the PhoneField. Let me check what t...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "view",
  "path": "/testbed/tests/forms_tests/tests/test_forms.py",
  "view_range": "[3038, 3042]"
}
Tool execution status: success
Tool stdout:
Here's the result of running `cat -n` on /testbed/tests/forms_tests/tests/test_forms.py:
  3038	            def compress(self, data_list):
  3039	                if data_list:
  3040	                    return '%s.%s ext. %s (label: %s)' % tuple(data_list)
  3041	                return None
  3042	


=== Iteration 65/100 ===
Calling LLM...
LLM Response: Perfect! The PhoneField's compress method returns `None` when `data_list` is empty. This explains why the test expects `None` instead of `[]`. 

My implementation is working correctly - it's returning...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python tests/runtests.py forms_tests.tests.test_forms.FormsTestCase.test_multivalue_optional_subfields --verbosity=2"
}
Tool execution status: error
Tool stdout:
[STDOUT]
Testing against Django installed in '/testbed/django' with up to 64 processes
Importing application forms_tests
Found 1 test(s).
Skipping setup of unused database(s): default, other.
System check identified no issues (0 silenced).
Error executing command:
Exit code: 1
[STDERR]
test_multivalue_optional_subfields (forms_tests.tests.test_forms.FormsTestCase) ... ERROR

======================================================================
ERROR: test_multivalue_optional_subfields (forms_tests.tests.test_forms.FormsTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/tests/test_forms.py", line 3094, in test_multivalue_optional_subfields
    self.assertIsNone(f.clean(''))
  File "/testbed/django/forms/fields.py", line 1064, in clean
    raise ValidationError(errors)
django.core.exceptions.ValidationError: ['Enter a complete value.', 'Enter an extension.']

----------------------------------------------------------------------
Ran 1 test in 0.002s

FAILED (errors=1)
command terminated with exit code 1


=== Iteration 66/100 ===
Calling LLM...
LLM Response: I see the issue. The test is still failing because the validation is still happening and raising a ValidationError. The problem is that my logic is not working correctly. Let me debug this step by ste...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python -c \"\nimport django\nfrom django.conf import settings\nsettings.configure(SECRET_KEY='test', DEBUG=True, INSTALLED_APPS=[])\ndjango.setup()\n\nfrom django.forms import MultiValueField, CharField\nfrom django.core.exceptions import ValidationError\n\nclass TestField(MultiValueField):\n    def __init__(self, *args, **kwargs):\n        fields = [\n            CharField(required=True),\n            CharField(required=False),\n        ]\n        super().__init__(fields, *args, **kwargs)\n    def compress(self, data_list):\n        print('compress called with:', data_list)\n        return data_list\n\n# Test case: MultiValueField with required=False (like the failing test)\nf = TestField(required=False)\nprint('require_all_fields:', f.require_all_fields)\nprint('required:', f.required)\ntry:\n    result = f.clean('')\n    print('clean() result:', result)\nexcept ValidationError as e:\n    print('ValidationError:', e)\n\""
}
Tool execution status: success
Tool stdout:
[STDOUT]
require_all_fields: True
required: False
compress called with: []
clean() result: []


=== Iteration 67/100 ===
Calling LLM...
LLM Response: I see the issue! The `compress` method is being called and returns `[]`, but the test expects `None`. The problem is that the test is using a PhoneField which has a custom `compress` method that retur...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python -c \"\nimport django\nfrom django.conf import settings\nsettings.configure(SECRET_KEY='test', DEBUG=True, INSTALLED_APPS=[])\ndjango.setup()\n\nfrom django.forms import MultiValueField, CharField\nfrom django.core.exceptions import ValidationError\n\nclass TestField(MultiValueField):\n    def __init__(self, *args, **kwargs):\n        fields = [\n            CharField(required=True),\n            CharField(required=False),\n        ]\n        super().__init__(fields, *args, **kwargs)\n    \n    def clean(self, value):\n        print('clean called with:', value)\n        print('self.required:', self.required)\n        print('self.require_all_fields:', self.require_all_fields)\n        result = super().clean(value)\n        print('super().clean result:', result)\n        return result\n        \n    def compress(self, data_list):\n        print('compress called with:', data_list)\n        return data_list\n\n# Test case: MultiValueField with required=False (like the failing test)\nf = TestField(required=False)\ntry:\n    result = f.clean('')\n    print('Final result:', result)\nexcept ValidationError as e:\n    print('ValidationError:', e)\n\""
}
Tool execution status: success
Tool stdout:
[STDOUT]
clean called with: 
self.required: False
self.require_all_fields: True
compress called with: []
super().clean result: []
Final result: []


=== Iteration 68/100 ===
Calling LLM...
LLM Response: I see! The issue is that the `clean` method is being called and it's returning `[]` instead of `None`. The problem is that the PhoneField's `compress` method returns `None` for empty lists, but my tes...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python -c \"\nimport django\nfrom django.conf import settings\nsettings.configure(SECRET_KEY='test', DEBUG=True, INSTALLED_APPS=[])\ndjango.setup()\n\nfrom django.forms import MultiValueField, CharField\nfrom django.core.exceptions import ValidationError\nfrom django.core.validators import RegexValidator\n\nclass PhoneField(MultiValueField):\n    def __init__(self, *args, **kwargs):\n        fields = (\n            CharField(label='Country Code', validators=[\n                RegexValidator(r'^\\+[0-9]{1,2}$', message='Enter a valid country code.')]),\n            CharField(label='Phone Number'),\n            CharField(label='Extension', error_messages={'incomplete': 'Enter an extension.'}),\n            CharField(label='Label', required=False, help_text='E.g. home, work.'),\n        )\n        super().__init__(fields, *args, **kwargs)\n\n    def compress(self, data_list):\n        if data_list:\n            return '%s.%s ext. %s (label: %s)' % tuple(data_list)\n        return None\n\n# Test case: MultiValueField with required=False (like the failing test)\nf = PhoneField(required=False)\nprint('require_all_fields:', f.require_all_fields)\nprint('required:', f.required)\ntry:\n    result = f.clean('')\n    print('clean() result:', result)\n    print('result is None:', result is None)\nexcept ValidationError as e:\n    print('ValidationError:', e)"
}
Tool execution status: error
Tool stdout:
Error executing command:
Exit code: 2
[STDERR]
/bin/sh: 36: Syntax error: Unterminated quoted string
command terminated with exit code 2


=== Iteration 69/100 ===
Calling LLM...
LLM Response: Let me fix the command:

<function=execute_bash>
<parameter=command>python -c "
import django
from django.conf import settings
settings.configure(SECRET_KEY='test', DEBUG=True, INSTALLED_APPS=[])
djan...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python -c \"\nimport django\nfrom django.conf import settings\nsettings.configure(SECRET_KEY='test', DEBUG=True, INSTALLED_APPS=[])\ndjango.setup()\n\nfrom django.forms import MultiValueField, CharField\nfrom django.core.exceptions import ValidationError\nfrom django.core.validators import RegexValidator\n\nclass PhoneField(MultiValueField):\n    def __init__(self, *args, **kwargs):\n        fields = (\n            CharField(label='Country Code', validators=[\n                RegexValidator(r'^\\+[0-9]{1,2}$', message='Enter a valid country code.')]),\n            CharField(label='Phone Number'),\n            CharField(label='Extension', error_messages={'incomplete': 'Enter an extension.'}),\n            CharField(label='Label', required=False, help_text='E.g. home, work.'),\n        )\n        super().__init__(fields, *args, **kwargs)\n\n    def compress(self, data_list):\n        if data_list:\n            return '%s.%s ext. %s (label: %s)' % tuple(data_list)\n        return None\n\nf = PhoneField(required=False)\nprint('require_all_fields:', f.require_all_fields)\nprint('required:', f.required)\ntry:\n    result = f.clean('')\n    print('clean() result:', result)\n    print('result is None:', result is None)\nexcept ValidationError as e:\n    print('ValidationError:', e)\n\""
}
Tool execution status: success
Tool stdout:
[STDOUT]
require_all_fields: True
required: False
clean() result: None
result is None: True


=== Iteration 70/100 ===
Calling LLM...
LLM Response: Perfect! The PhoneField with `required=False` correctly returns `None` when calling `clean('')`. This means my fix is working correctly.

The issue with the test failure must be something else. Let me...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python tests/runtests.py forms_tests.tests.test_forms.FormsTestCase.test_multivalue_optional_subfields --verbosity=2"
}
Tool execution status: error
Tool stdout:
[STDOUT]
Testing against Django installed in '/testbed/django' with up to 64 processes
Importing application forms_tests
Found 1 test(s).
Skipping setup of unused database(s): default, other.
System check identified no issues (0 silenced).
Error executing command:
Exit code: 1
[STDERR]
test_multivalue_optional_subfields (forms_tests.tests.test_forms.FormsTestCase) ... ERROR

======================================================================
ERROR: test_multivalue_optional_subfields (forms_tests.tests.test_forms.FormsTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/tests/test_forms.py", line 3094, in test_multivalue_optional_subfields
    self.assertIsNone(f.clean(''))
  File "/testbed/django/forms/fields.py", line 1064, in clean
    raise ValidationError(errors)
django.core.exceptions.ValidationError: ['Enter a complete value.', 'Enter an extension.']

----------------------------------------------------------------------
Ran 1 test in 0.002s

FAILED (errors=1)
command terminated with exit code 1


=== Iteration 71/100 ===
Calling LLM...
Error in agent loop: RuntimeError: API request failed: 400, message='Bad Request', url='http://211.23.3.237:27544/v1/chat/completions'
Traceback: Traceback (most recent call last):
  File "/root/dongdaxiang/agentic-rollout-library-guru/agentic-rollout-library/src/utils/llm_api_utils.py", line 195, in openai_api_handle_async
    response.raise_for_status()
  File "/root/miniforge3/lib/python3.12/site-packages/aiohttp/client_reqrep.py", line 629, in raise_for_status
    raise ClientResponseError(
aiohttp.client_exceptions.ClientResponseError: 400, message='Bad Request', url='http://211.23.3.237:27544/v1/chat/completions'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/dongdaxiang/agentic-rollout-library-guru/agentic-rollout-library/r2e_k8s_example.py", line 424, in process_single_instance
    llm_response = await llm_node.process_with_timing(messages, event_type="llm_call")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/dongdaxiang/agentic-rollout-library-guru/agentic-rollout-library/src/core/base_node.py", line 74, in process_with_timing
    result = await _execute()
             ^^^^^^^^^^^^^^^^
  File "/root/dongdaxiang/agentic-rollout-library-guru/agentic-rollout-library/src/core/base_node.py", line 64, in _execute
    return await self.process_async(input_data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/dongdaxiang/agentic-rollout-library-guru/agentic-rollout-library/src/core/llm_node.py", line 190, in process_async
    response = await self._retry_with_backoff_async(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/dongdaxiang/agentic-rollout-library-guru/agentic-rollout-library/src/core/llm_node.py", line 133, in _retry_with_backoff_async
    raise last_exception
  File "/root/dongdaxiang/agentic-rollout-library-guru/agentic-rollout-library/src/core/llm_node.py", line 123, in _retry_with_backoff_async
    return await func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/dongdaxiang/agentic-rollout-library-guru/agentic-rollout-library/src/utils/llm_api_utils.py", line 213, in openai_api_handle_async
    raise RuntimeError(f"API request failed: {str(e)}")
RuntimeError: API request failed: 400, message='Bad Request', url='http://211.23.3.237:27544/v1/chat/completions'

Generating patch from testbed changes...
Generating patch against base_commit: db1fc5cd3c5d36cdb5d0fe4404efd6623dd3e8fb
Patch generated successfully, size: 4244 characters
Patch preview (first 5 lines):
  diff --git a/django/forms/fields.py b/django/forms/fields.py
  index 65d6a9ec82..2b402b3c42 100644
  --- a/django/forms/fields.py
  +++ b/django/forms/fields.py
  @@ -1025,7 +1025,13 @@ class MultiValueField(Field):
  ... (129 more lines)
Saved patch to: single-output-v11/django__django-14034.patch
Task finished, pod r2e-django-django-14034-4379 will be deleted by context manager
Context saved to single-output-v11/django__django-14034.context
=== Task completed with status: failed ===
=== Pod r2e-django-django-14034-4379 cleanup delegated to context manager ===
