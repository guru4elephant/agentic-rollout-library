diff --git a/django/utils/dateformat.py b/django/utils/dateformat.py
index afd36d79e0..6aae98b7fe 100644
--- a/django/utils/dateformat.py
+++ b/django/utils/dateformat.py
@@ -326,7 +326,8 @@ class DateFormat(TimeFormat):
 
     def y(self):
         "Year, 2 digits; e.g. '99'"
-        return str(self.data.year)[2:]
+        year = self.data.year % 100
+        return '%02d' % year
 
     def Y(self):
         "Year, 4 digits; e.g. '1999'"
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..c574cd8a49
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,33 @@
+#!/usr/bin/env python3
+
+import os
+import django
+from django.conf import settings
+
+# Configure minimal Django settings
+if not settings.configured:
+    settings.configure(
+        USE_TZ=True,
+        TIME_ZONE='UTC',
+    )
+    django.setup()
+
+import datetime
+from django.utils import dateformat
+
+# Test cases from the issue
+test_cases = [
+    datetime.datetime(123, 4, 5, 6, 7),  # Year 123
+    datetime.datetime(99, 4, 5, 6, 7),   # Year 99
+    datetime.datetime(999, 4, 5, 6, 7),  # Year 999
+    datetime.datetime(1000, 4, 5, 6, 7), # Year 1000 (should work correctly)
+    datetime.datetime(2023, 4, 5, 6, 7), # Year 2023 (should work correctly)
+]
+
+print("Testing django dateformat.y() vs python datetime.strftime('%y')")
+print("=" * 60)
+
+for dt in test_cases:
+    django_result = dateformat.format(dt, "y")
+    python_result = dt.strftime("%y")
+    print(f"Year {dt.year}: django='{django_result}' python='{python_result}' {'✓' if django_result == python_result else '✗'}")
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..b1dda37bb3
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,39 @@
+#!/usr/bin/env python3
+
+import os
+import django
+from django.conf import settings
+
+# Configure minimal Django settings
+if not settings.configured:
+    settings.configure(
+        USE_TZ=True,
+        TIME_ZONE='UTC',
+    )
+    django.setup()
+
+import datetime
+from django.utils import dateformat
+
+# Test edge cases
+test_cases = [
+    datetime.datetime(1, 1, 1),      # Year 1
+    datetime.datetime(99, 1, 1),      # Year 99
+    datetime.datetime(100, 1, 1),     # Year 100
+    datetime.datetime(999, 1, 1),    # Year 999
+    datetime.datetime(1000, 1, 1),   # Year 1000
+    datetime.datetime(2023, 1, 1),   # Year 2023
+    datetime.datetime(9999, 1, 1),   # Year 9999
+]
+
+print("Testing edge cases for dateformat.y()")
+print("=" * 50)
+
+for dt in test_cases:
+    try:
+        django_result = dateformat.format(dt, "y")
+        python_result = dt.strftime("%y")
+        status = "✓" if django_result == python_result else "✗"
+        print(f"Year {dt.year}: django='{django_result}' python='{python_result}' {status}")
+    except Exception as e:
+        print(f"Year {dt.year}: Error - {e}")
\ No newline at end of file