diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..cc135ea9f6
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,20 @@
+from sympy import symbols, Min, Max, pycode
+
+# Test case from the issue
+a, b = symbols("a b")
+c = Min(a, b)
+print("Min test:")
+print(pycode(c))
+
+d = Max(a, b)
+print("\nMax test:")
+print(pycode(d))
+
+# Test with multiple arguments
+e = Min(a, b, a+b)
+print("\nMin with multiple args:")
+print(pycode(e))
+
+f = Max(a, b, a+b)
+print("\nMax with multiple args:")
+print(pycode(f))
\ No newline at end of file
diff --git a/sympy/printing/pycode.py b/sympy/printing/pycode.py
index 3a72ab606c..b4364113c6 100644
--- a/sympy/printing/pycode.py
+++ b/sympy/printing/pycode.py
@@ -465,6 +465,12 @@ def _print_Symbol(self, expr):
         else:
             return name
 
+    def _print_Min(self, expr):
+        return "min({})".format(", ".join(self._print(arg) for arg in expr.args))
+
+    def _print_Max(self, expr):
+        return "max({})".format(", ".join(self._print(arg) for arg in expr.args))
+
     _print_lowergamma = CodePrinter._print_not_supported
     _print_uppergamma = CodePrinter._print_not_supported
     _print_fresnelc = CodePrinter._print_not_supported
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..fe8b5af707
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,33 @@
+from sympy import symbols, Min, Max, pycode
+
+# Test edge cases
+a, b, c = symbols("a b c")
+
+# Single argument
+print("Min with single argument:")
+print(pycode(Min(a)))
+
+print("Max with single argument:")
+print(pycode(Max(a)))
+
+# Nested Min/Max
+print("Nested Min:")
+print(pycode(Min(Min(a, b), c)))
+
+print("Nested Max:")
+print(pycode(Max(Max(a, b), c)))
+
+# Mixed with other operations
+print("Min with arithmetic:")
+print(pycode(Min(a + b, a * b)))
+
+print("Max with arithmetic:")
+print(pycode(Max(a + b, a * b)))
+
+# Test with constants
+from sympy import S
+print("Min with constants:")
+print(pycode(Min(a, S(2), b)))
+
+print("Max with constants:")
+print(pycode(Max(a, S(2), b)))
\ No newline at end of file