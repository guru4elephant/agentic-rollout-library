=== Starting task for instance: pylint-dev__pylint-6528 ===
Task ID: 325
Pod name: r2e-pylint-dev-pylint-6528-6726
Pod name: r2e-pylint-dev-pylint-6528-6726
Using image: iregistry.baidu-int.com/acg-airec/r2e_gym/slimshetty/swebench-verified:sweb.eval.x86_64.pylint-dev__pylint-6528
K8S executor initialized

=== Iteration 1/100 ===
Calling LLM...
LLM Response: I'll help you implement the necessary changes to fix the issue where Pylint doesn't respect ignore patterns in recursive mode. Let me start by exploring the repository structure to understand how Pyli...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "find . -type f -name \"*.py\" | grep -E \"(main|run|cli)\" | head -10"
}
Tool execution status: success
Tool stdout:
[STDOUT]
./pylint/testutils/_run.py
./pylint/lint/run.py
./pylint/__main__.py
./pylint/pyreverse/main.py
./tests/functional/s/subprocess_run_check.py
./tests/functional/w/wrong_import_position_exclude_dunder_main.py
./tests/regrtest_data/beyond_top_four/module/sub_module/sub_sub_module/main.py
./tests/regrtest_data/max_inferable_limit_for_classes/main.py
./tests/test_pylint_runners.py
./tests/pyreverse/test_main.py


=== Iteration 2/100 ===
Calling LLM...
LLM Response: Let me explore the main entry points and understand how Pylint handles command-line arguments and recursive mode.

<function=file_editor>
<parameter=command>view</parameter>
<parameter=path>./pylint/_...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "view",
  "path": "./pylint/__main__.py"
}
Tool execution status: success
Tool stdout:
Here's the result of running `cat -n` on pylint/__main__.py:
     1	#!/usr/bin/env python
     2	
     3	# Licensed under the GPL: https://www.gnu.org/licenses/old-licenses/gpl-2.0.html
     4	# For details: https://github.com/PyCQA/pylint/blob/main/LICENSE
     5	# Copyright (c) https://github.com/PyCQA/pylint/blob/main/CONTRIBUTORS.txt
     6	
     7	import pylint
     8	
     9	pylint.modify_sys_path()
    10	pylint.run_pylint()


=== Iteration 3/100 ===
Calling LLM...
LLM Response: <function=file_editor>
<parameter=command>view</parameter>
<parameter=path>./pylint/lint</parameter>
</function>...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "view",
  "path": "./pylint/lint"
}
Tool execution status: success
Tool stdout:
Here's the files and directories up to 2 levels deep in pylint/lint, excluding hidden:
pylint/lint
pylint/lint/utils.py
pylint/lint/run.py
pylint/lint/caching.py
pylint/lint/expand_modules.py
pylint/lint/__init__.py
pylint/lint/pylinter.py
pylint/lint/base_options.py
pylint/lint/parallel.py
pylint/lint/report_functions.py
pylint/lint/message_state_handler.py



=== Iteration 4/100 ===
Calling LLM...
LLM Response: Let me look at the run.py file since it's likely the main entry point for pylint execution:

<function=file_editor>
<parameter=command>view</parameter>
<parameter=path>./pylint/lint/run.py</parameter>...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "view",
  "path": "./pylint/lint/run.py"
}
Tool execution status: success
Tool stdout:
Here's the result of running `cat -n` on pylint/lint/run.py:
     1	# Licensed under the GPL: https://www.gnu.org/licenses/old-licenses/gpl-2.0.html
     2	# For details: https://github.com/PyCQA/pylint/blob/main/LICENSE
     3	# Copyright (c) https://github.com/PyCQA/pylint/blob/main/CONTRIBUTORS.txt
     4	
     5	from __future__ import annotations
     6	
     7	import os
     8	import sys
     9	import warnings
    10	from collections.abc import Sequence
    11	from pathlib import Path
    12	from typing import Any
    13	
    14	from pylint import config
    15	from pylint.config.config_initialization import _config_initialization
    16	from pylint.config.exceptions import ArgumentPreprocessingError
    17	from pylint.config.utils import _preprocess_options
    18	from pylint.constants import full_version
    19	from pylint.lint.base_options import _make_run_options
    20	from pylint.lint.pylinter import PyLinter
    21	from pylint.reporters.base_reporter import BaseReporter
    22	
    23	try:
    24	    import multiprocessing
    25	    from multiprocessing import synchronize  # noqa pylint: disable=unused-import
    26	except ImportError:
    27	    multiprocessing = None  # type: ignore[assignment]
    28	
    29	
    30	def _query_cpu() -> int | None:
    31	    """Try to determine number of CPUs allotted in a docker container.
    32	
    33	    This is based on discussion and copied from suggestions in
    34	    https://bugs.python.org/issue36054.
    35	    """
    36	    cpu_quota, avail_cpu = None, None
    37	
    38	    if Path("/sys/fs/cgroup/cpu/cpu.cfs_quota_us").is_file():
    39	        with open("/sys/fs/cgroup/cpu/cpu.cfs_quota_us", encoding="utf-8") as file:
    40	            # Not useful for AWS Batch based jobs as result is -1, but works on local linux systems
    41	            cpu_quota = int(file.read().rstrip())
    42	
    43	    if (
    44	        cpu_quota
    45	        and cpu_quota != -1
    46	        and Path("/sys/fs/cgroup/cpu/cpu.cfs_period_us").is_file()
    47	    ):
    48	        with open("/sys/fs/cgroup/cpu/cpu.cfs_period_us", encoding="utf-8") as file:
    49	            cpu_period = int(file.read().rstrip())
    50	        # Divide quota by period and you should get num of allotted CPU to the container, rounded down if fractional.
    51	        avail_cpu = int(cpu_quota / cpu_period)
    52	    elif Path("/sys/fs/cgroup/cpu/cpu.shares").is_file():
    53	        with open("/sys/fs/cgroup/cpu/cpu.shares", encoding="utf-8") as file:
    54	            cpu_shares = int(file.read().rstrip())
    55	        # For AWS, gives correct value * 1024.
    56	        avail_cpu = int(cpu_shares / 1024)
    57	    return avail_cpu
    58	
    59	
    60	def _cpu_count() -> int:
    61	    """Use sched_affinity if available for virtualized or containerized environments."""
    62	    cpu_share = _query_cpu()
    63	    cpu_count = None
    64	    sched_getaffinity = getattr(os, "sched_getaffinity", None)
    65	    # pylint: disable=not-callable,using-constant-test,useless-suppression
    66	    if sched_getaffinity:
    67	        cpu_count = len(sched_getaffinity(0))
    68	    elif multiprocessing:
    69	        cpu_count = multiprocessing.cpu_count()
    70	    else:
    71	        cpu_count = 1
    72	    if cpu_share is not None:
    73	        return min(cpu_share, cpu_count)
    74	    return cpu_count
    75	
    76	
    77	UNUSED_PARAM_SENTINEL = object()
    78	
    79	
    80	class Run:
    81	    """Helper class to use as main for pylint with 'run(*sys.argv[1:])'."""
    82	
    83	    LinterClass = PyLinter
    84	    option_groups = (
    85	        (
    86	            "Commands",
    87	            "Options which are actually commands. Options in this \
    88	group are mutually exclusive.",
    89	        ),
    90	    )
    91	
    92	    def __init__(
    93	        self,
    94	        args: Sequence[str],
    95	        reporter: BaseReporter | None = None,
    96	        exit: bool = True,  # pylint: disable=redefined-builtin
    97	        do_exit: Any = UNUSED_PARAM_SENTINEL,
    98	    ) -> None:
    99	        # Immediately exit if user asks for version
   100	        if "--version" in args:
   101	            print(full_version)
   102	            sys.exit(0)
   103	
   104	        self._rcfile: str | None = None
   105	        self._output: str | None = None
   106	        self._plugins: list[str] = []
   107	        self.verbose: bool = False
   108	
   109	        # Pre-process certain options and remove them from args list
   110	        try:
   111	            args = _preprocess_options(self, args)
   112	        except ArgumentPreprocessingError as ex:
   113	            print(ex, file=sys.stderr)
   114	            sys.exit(32)
   115	
   116	        # Determine configuration file
   117	        if self._rcfile is None:
   118	            default_file = next(config.find_default_config_files(), None)
   119	            if default_file:
   120	                self._rcfile = str(default_file)
   121	
   122	        self.linter = linter = self.LinterClass(
   123	            _make_run_options(self),
   124	            option_groups=self.option_groups,
   125	            pylintrc=self._rcfile,
   126	        )
   127	        # register standard checkers
   128	        linter.load_default_plugins()
   129	        # load command line plugins
   130	        linter.load_plugin_modules(self._plugins)
   131	
   132	        linter.disable("I")
   133	        linter.enable("c-extension-no-member")
   134	
   135	        args = _config_initialization(
   136	            linter, args, reporter, config_file=self._rcfile, verbose_mode=self.verbose
   137	        )
   138	
   139	        if linter.config.jobs < 0:
   140	            print(
   141	                f"Jobs number ({linter.config.jobs}) should be greater than or equal to 0",
   142	                file=sys.stderr,
   143	            )
   144	            sys.exit(32)
   145	        if linter.config.jobs > 1 or linter.config.jobs == 0:
   146	            if multiprocessing is None:
   147	                print(
   148	                    "Multiprocessing library is missing, fallback to single process",
   149	                    file=sys.stderr,
   150	                )
   151	                linter.set_option("jobs", 1)
   152	            elif linter.config.jobs == 0:
   153	                linter.config.jobs = _cpu_count()
   154	
   155	        if self._output:
   156	            try:
   157	                with open(self._output, "w", encoding="utf-8") as output:
   158	                    linter.reporter.out = output
   159	                    linter.check(args)
   160	                    score_value = linter.generate_reports()
   161	            except OSError as ex:
   162	                print(ex, file=sys.stderr)
   163	                sys.exit(32)
   164	        else:
   165	            linter.check(args)
   166	            score_value = linter.generate_reports()
   167	
   168	        if do_exit is not UNUSED_PARAM_SENTINEL:
   169	            warnings.warn(
   170	                "do_exit is deprecated and it is going to be removed in a future version.",
   171	                DeprecationWarning,
   172	            )
   173	            exit = do_exit
   174	
   175	        if exit:
   176	            if linter.config.exit_zero:
   177	                sys.exit(0)
   178	            elif linter.any_fail_on_issues():
   179	                # We need to make sure we return a failing exit code in this case.
   180	                # So we use self.linter.msg_status if that is non-zero, otherwise we just return 1.
   181	                sys.exit(self.linter.msg_status or 1)
   182	            elif score_value is not None:
   183	                if score_value >= linter.config.fail_under:
   184	                    sys.exit(0)
   185	                else:
   186	                    # We need to make sure we return a failing exit code in this case.
   187	                    # So we use self.linter.msg_status if that is non-zero, otherwise we just return 1.
   188	                    sys.exit(self.linter.msg_status or 1)
   189	            else:
   190	                sys.exit(self.linter.msg_status)


=== Iteration 5/100 ===
Calling LLM...
LLM Response: Now let me look at the `expand_modules` module since it's likely responsible for handling recursive file discovery and ignore patterns:

<function=file_editor>
<parameter=command>view</parameter>
<par...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "view",
  "path": "./pylint/lint/expand_modules.py"
}
Tool execution status: success
Tool stdout:
Here's the result of running `cat -n` on pylint/lint/expand_modules.py:
     1	# Licensed under the GPL: https://www.gnu.org/licenses/old-licenses/gpl-2.0.html
     2	# For details: https://github.com/PyCQA/pylint/blob/main/LICENSE
     3	# Copyright (c) https://github.com/PyCQA/pylint/blob/main/CONTRIBUTORS.txt
     4	
     5	from __future__ import annotations
     6	
     7	import os
     8	import sys
     9	from collections.abc import Sequence
    10	from re import Pattern
    11	
    12	from astroid import modutils
    13	
    14	from pylint.typing import ErrorDescriptionDict, ModuleDescriptionDict
    15	
    16	
    17	def _modpath_from_file(filename: str, is_namespace: bool, path: list[str]) -> list[str]:
    18	    def _is_package_cb(inner_path: str, parts: list[str]) -> bool:
    19	        return modutils.check_modpath_has_init(inner_path, parts) or is_namespace
    20	
    21	    return modutils.modpath_from_file_with_callback(
    22	        filename, path=path, is_package_cb=_is_package_cb
    23	    )
    24	
    25	
    26	def get_python_path(filepath: str) -> str:
    27	    """TODO This get the python path with the (bad) assumption that there is always
    28	    an __init__.py.
    29	
    30	    This is not true since python 3.3 and is causing problem.
    31	    """
    32	    dirname = os.path.realpath(os.path.expanduser(filepath))
    33	    if not os.path.isdir(dirname):
    34	        dirname = os.path.dirname(dirname)
    35	    while True:
    36	        if not os.path.exists(os.path.join(dirname, "__init__.py")):
    37	            return dirname
    38	        old_dirname = dirname
    39	        dirname = os.path.dirname(dirname)
    40	        if old_dirname == dirname:
    41	            return os.getcwd()
    42	
    43	
    44	def _is_in_ignore_list_re(element: str, ignore_list_re: list[Pattern[str]]) -> bool:
    45	    """Determines if the element is matched in a regex ignore-list."""
    46	    return any(file_pattern.match(element) for file_pattern in ignore_list_re)
    47	
    48	
    49	def expand_modules(
    50	    files_or_modules: Sequence[str],
    51	    ignore_list: list[str],
    52	    ignore_list_re: list[Pattern[str]],
    53	    ignore_list_paths_re: list[Pattern[str]],
    54	) -> tuple[list[ModuleDescriptionDict], list[ErrorDescriptionDict]]:
    55	    """Take a list of files/modules/packages and return the list of tuple
    56	    (file, module name) which have to be actually checked.
    57	    """
    58	    result: list[ModuleDescriptionDict] = []
    59	    errors: list[ErrorDescriptionDict] = []
    60	    path = sys.path.copy()
    61	
    62	    for something in files_or_modules:
    63	        basename = os.path.basename(something)
    64	        if (
    65	            basename in ignore_list
    66	            or _is_in_ignore_list_re(os.path.basename(something), ignore_list_re)
    67	            or _is_in_ignore_list_re(something, ignore_list_paths_re)
    68	        ):
    69	            continue
    70	        module_path = get_python_path(something)
    71	        additional_search_path = [".", module_path] + path
    72	        if os.path.exists(something):
    73	            # this is a file or a directory
    74	            try:
    75	                modname = ".".join(
    76	                    modutils.modpath_from_file(something, path=additional_search_path)
    77	                )
    78	            except ImportError:
    79	                modname = os.path.splitext(basename)[0]
    80	            if os.path.isdir(something):
    81	                filepath = os.path.join(something, "__init__.py")
    82	            else:
    83	                filepath = something
    84	        else:
    85	            # suppose it's a module or package
    86	            modname = something
    87	            try:
    88	                filepath = modutils.file_from_modpath(
    89	                    modname.split("."), path=additional_search_path
    90	                )
    91	                if filepath is None:
    92	                    continue
    93	            except (ImportError, SyntaxError) as ex:
    94	                # The SyntaxError is a Python bug and should be
    95	                # removed once we move away from imp.find_module: https://bugs.python.org/issue10588
    96	                errors.append({"key": "fatal", "mod": modname, "ex": ex})
    97	                continue
    98	        filepath = os.path.normpath(filepath)
    99	        modparts = (modname or something).split(".")
   100	        try:
   101	            spec = modutils.file_info_from_modpath(
   102	                modparts, path=additional_search_path
   103	            )
   104	        except ImportError:
   105	            # Might not be acceptable, don't crash.
   106	            is_namespace = False
   107	            is_directory = os.path.isdir(something)
   108	        else:
   109	            is_namespace = modutils.is_namespace(spec)
   110	            is_directory = modutils.is_directory(spec)
   111	        if not is_namespace:
   112	            result.append(
   113	                {
   114	                    "path": filepath,
   115	                    "name": modname,
   116	                    "isarg": True,
   117	                    "basepath": filepath,
   118	                    "basename": modname,
   119	                }
   120	            )
   121	        has_init = (
   122	            not (modname.endswith(".__init__") or modname == "__init__")
   123	            and os.path.basename(filepath) == "__init__.py"
   124	        )
   125	        if has_init or is_namespace or is_directory:
   126	            for subfilepath in modutils.get_module_files(
   127	                os.path.dirname(filepath), ignore_list, list_all=is_namespace
   128	            ):
   129	                if filepath == subfilepath:
   130	                    continue
   131	                if _is_in_ignore_list_re(
   132	                    os.path.basename(subfilepath), ignore_list_re
   133	                ) or _is_in_ignore_list_re(subfilepath, ignore_list_paths_re):
   134	                    continue
   135	
   136	                modpath = _modpath_from_file(
   137	                    subfilepath, is_namespace, path=additional_search_path
   138	                )
   139	                submodname = ".".join(modpath)
   140	                result.append(
   141	                    {
   142	                        "path": subfilepath,
   143	                        "name": submodname,
   144	                        "isarg": False,
   145	                        "basepath": filepath,
   146	                        "basename": modname,
   147	                    }
   148	                )
   149	    return result, errors


=== Iteration 6/100 ===
Calling LLM...
LLM Response: Now let me look at how the `modutils.get_module_files` function works, since it seems to be responsible for recursive file discovery and might not be properly handling ignore patterns:

<function=sear...
Executing tool: r2e_search
Tool parameters: {
  "search_term": "get_module_files",
  "path": "."
}
Tool execution status: success
Tool stdout:
Found 2 matches for "get_module_files" in /testbed:
./pylint/lint/expand_modules.py (1 matches)
./pylint/pyreverse/inspector.py (1 matches)
End of matches for "get_module_files" in /testbed


=== Iteration 7/100 ===
Calling LLM...
LLM Response: Let me check the astroid library's modutils module to understand how `get_module_files` works:

<function=execute_bash>
<parameter=command>python3 -c "import astroid.modutils; help(astroid.modutils.ge...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "python3 -c \"import astroid.modutils; help(astroid.modutils.get_module_files)\""
}
Tool execution status: success
Tool stdout:
[STDOUT]
Help on function get_module_files in module astroid.modutils:

get_module_files(src_directory, blacklist, list_all=False)
    given a package directory return a list of all available python
    module's files in the package and its subpackages
    
    :type src_directory: str
    :param src_directory:
      path of the directory corresponding to the package
    
    :type blacklist: list or tuple
    :param blacklist: iterable
      list of files or directories to ignore.
    
    :type list_all: bool
    :param list_all:
        get files from all paths, including ones without __init__.py
    
    :rtype: list
    :return:
      the list of all available python module's files in the package and
      its subpackages


=== Iteration 8/100 ===
Calling LLM...
LLM Response: Now let me create a reproduction script to confirm the issue:

<function=file_editor>
<parameter=command>create</parameter>
<parameter=path>reproduce_issue.py</parameter>
<parameter=file_text>#!/usr/b...
Executing tool: r2e_file_editor
Tool parameters: {
  "command": "create",
  "path": "reproduce_issue.py",
  "file_text": "#!/usr/bin/env python3\n\nimport os\nimport subprocess\nimport tempfile\nimport shutil\n\ndef create_test_files():\n    \"\"\"Create test files to reproduce the issue\"\"\"\n    # Create directory structure\n    os.makedirs(\".a\", exist_ok=True)\n    \n    # Create test files\n    with open(\".a/foo.py\", \"w\") as f:\n        f.write(\"# import re\\n\")\n    \n    with open(\"bar.py\", \"w\") as f:\n        f.write(\"# import re\\n\")\n\ndef run_pylint_commands():\n    \"\"\"Run the pylint commands from the issue\"\"\"\n    commands = [\n        \"pylint --recursive=y .\",\n        \"pylint --recursive=y --ignore=.a .\",\n        \"pylint --recursive=y --ignore-paths=.a .\",\n        \"pylint --recursive=y --ignore-patterns='^\\.a' .\"\n    ]\n    \n    for cmd in commands:\n        print(f\"\\nRunning: {cmd}\")\n        try:\n            result = subprocess.run(cmd.split(), capture_output=True, text=True)\n            print(\"STDOUT:\")\n            print(result.stdout)\n            if result.stderr:\n                print(\"STDERR:\")\n                print(result.stderr)\n            print(f\"Exit code: {result.returncode}\")\n        except Exception as e:\n            print(f\"Error running command: {e}\")\n\ndef main():\n    # Create test files\n    create_test_files()\n    \n    # Run pylint commands\n    run_pylint_commands()\n    \n    # Clean up\n    shutil.rmtree(\".a\")\n    os.remove(\"bar.py\")\n\nif __name__ == \"__main__\":\n    main()"
}
Tool execution status: success
Tool stdout:
File created successfully at reproduce_issue.py.
Here's the result of running `cat -n` on reproduce_issue.py:
     1	#!/usr/bin/env python3
     2	
     3	import os
     4	import subprocess
     5	import tempfile
     6	import shutil
     7	
     8	def create_test_files():
     9	    """Create test files to reproduce the issue"""
    10	    # Create directory structure
    11	    os.makedirs(".a", exist_ok=True)
    12	    
    13	    # Create test files
    14	    with open(".a/foo.py", "w") as f:
    15	        f.write("# import re\n")
    16	    
    17	    with open("bar.py", "w") as f:
    18	        f.write("# import re\n")
    19	
    20	def run_pylint_commands():
... (file continues)


=== Iteration 9/100 ===
Calling LLM...
LLM Response: <function=execute_bash>
<parameter=command>cd /testbed && python3 reproduce_issue.py</parameter>
</function>...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "cd /testbed && python3 reproduce_issue.py"
}
Tool execution status: error
Tool stdout:
Error executing command:
Exit code: 124
[STDERR]
Command timed out after 300 seconds: cd /testbed && python3 reproduce_issue.py
command terminated with exit code 124


=== Iteration 10/100 ===
Calling LLM...
LLM Response: Let me try running the commands individually to see what's happening:

<function=execute_bash>
<parameter=command>mkdir -p .a</parameter>
</function>...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "mkdir -p .a"
}
Tool execution status: success
Tool stdout:


=== Iteration 11/100 ===
Calling LLM...
LLM Response: <function=execute_bash>
<parameter=command>echo "# import re" > .a/foo.py</parameter>
</function>...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "echo \"# import re\" > .a/foo.py"
}
Tool execution status: success
Tool stdout:


=== Iteration 12/100 ===
Calling LLM...
LLM Response: <function=execute_bash>
<parameter=command>echo "# import re" > bar.py</parameter>
</function>...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "echo \"# import re\" > bar.py"
}
Tool execution status: success
Tool stdout:


=== Iteration 13/100 ===
Calling LLM...
LLM Response: <function=execute_bash>
<parameter=command>pylint --recursive=y .</parameter>
</function>...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "pylint --recursive=y ."
}
Tool execution status: error
Tool stdout:
[STDOUT]
************* Module reproduce_issue
reproduce_issue.py:26:50: W1401: Anomalous backslash in string: '\.'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
reproduce_issue.py:14:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
reproduce_issue.py:17:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
reproduce_issue.py:39:15: W0703: Catching too general exception Exception (broad-except)
reproduce_issue.py:32:21: W1510: Using subprocess.run without explicitly set `check` is not recommended. (subprocess-run-check)
reproduce_issue.py:5:0: W0611: Unused import tempfile (unused-import)
************* Module bar
bar.py:1:0: C0104: Disallowed name "bar" (disallowed-name)
************* Module pylint.testutils.primer
pylint/testutils/primer.py:10:0: E0401: Unable to import 'git' (import-error)
************* Module foo
.a/foo.py:1:0: C0104: Disallowed name "foo" (disallowed-name)
************* Module test_messages_documentation
doc/test_messages_documentation.py:14:4: W0223: Method 'fromkeys' is abstract in class 'Counter' but is not overridden (abstract-method)
doc/test_messages_documentation.py:19:0: C0413: Import "from pathlib import Path" should be placed at the top of the module (wrong-import-position)
doc/test_messages_documentation.py:20:0: C0413: Import "from typing import Counter as CounterType" should be placed at the top of the module (wrong-import-position)
doc/test_messages_documentation.py:21:0: C0413: Import "from typing import List, Optional, TextIO, Tuple" should be placed at the top of the module (wrong-import-position)
doc/test_messages_documentation.py:23:0: C0413: Import "import pytest" should be placed at the top of the module (wrong-import-position)
doc/test_messages_documentation.py:25:0: C0413: Import "from pylint import checkers, config" should be placed at the top of the module (wrong-import-position)
doc/test_messages_documentation.py:26:0: C0413: Import "from pylint.config.config_initialization import _config_initialization" should be placed at the top of the module (wrong-import-position)
doc/test_messages_documentation.py:27:0: C0413: Import "from pylint.lint import PyLinter" should be placed at the top of the module (wrong-import-position)
doc/test_messages_documentation.py:28:0: C0413: Import "from pylint.message.message import Message" should be placed at the top of the module (wrong-import-position)
doc/test_messages_documentation.py:29:0: C0413: Import "from pylint.testutils.constants import _EXPECTED_RE" should be placed at the top of the module (wrong-import-position)
doc/test_messages_documentation.py:30:0: C0413: Import "from pylint.testutils.reporter_for_tests import FunctionalTestReporter" should be placed at the top of the module (wrong-import-position)
doc/test_messages_documentation.py:83:21: R6003: Consider using alternative Union syntax instead of 'Optional'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
doc/test_messages_documentation.py:35:65: R6002: 'typing.List' will be deprecated with PY39, consider using 'list' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
doc/test_messages_documentation.py:35:70: R6002: 'typing.Tuple' will be deprecated with PY39, consider using 'tuple' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
doc/test_messages_documentation.py:40:11: R6002: 'typing.List' will be deprecated with PY39, consider using 'list' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
doc/test_messages_documentation.py:40:16: R6002: 'typing.Tuple' will be deprecated with PY39, consider using 'tuple' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
doc/test_messages_documentation.py:72:34: R6002: 'typing.Tuple' will be deprecated with PY39, consider using 'tuple' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
doc/test_messages_documentation.py:136:18: R6002: 'typing.List' will be deprecated with PY39, consider using 'list' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
doc/test_messages_documentation.py:157:34: R6002: 'typing.Tuple' will be deprecated with PY39, consider using 'tuple' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
************* Module pylint_features
doc/exts/pylint_features.py:12:0: E0401: Unable to import 'sphinx' (import-error)
doc/exts/pylint_features.py:13:0: E0401: Unable to import 'sphinx.application' (import-error)
doc/exts/pylint_features.py:20:24: R6003: Consider using alternative Union syntax instead of 'Optional'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
************* Module pylint_options
doc/exts/pylint_options.py:16:0: E0401: Unable to import 'sphinx.application' (import-error)
************* Module pylint_extensions
doc/exts/pylint_extensions.py:15:0: E0401: Unable to import 'sphinx' (import-error)
doc/exts/pylint_extensions.py:16:0: E0401: Unable to import 'sphinx.application' (import-error)
doc/exts/pylint_extensions.py:24:24: R6003: Consider using alternative Union syntax instead of 'Optional'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
************* Module pylint_messages
doc/exts/pylint_messages.py:14:0: E0401: Unable to import 'sphinx.application' (import-error)
doc/exts/pylint_messages.py:305:30: R6003: Consider using alternative Union syntax instead of 'Optional'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
doc/exts/pylint_messages.py:61:42: R6002: 'typing.Tuple' will be deprecated with PY39, consider using 'tuple' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
doc/exts/pylint_messages.py:111:5: R6002: 'typing.Tuple' will be deprecated with PY39, consider using 'tuple' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
************* Module bad
doc/data/messages/d/duplicate-argument-name/bad.py:1:30: E0108: Duplicate argument name apple in function definition (duplicate-argument-name)
doc/data/messages/d/duplicate-argument-name/bad.py:1:15: W0613: Unused argument 'apple' (unused-argument)
doc/data/messages/d/duplicate-argument-name/bad.py:1:22: W0613: Unused argument 'banana' (unused-argument)
************* Module good
doc/data/messages/d/duplicate-argument-name/good.py:1:15: W0613: Unused argument 'apple' (unused-argument)
doc/data/messages/d/duplicate-argument-name/good.py:1:22: W0613: Unused argument 'banana' (unused-argument)
doc/data/messages/d/duplicate-argument-name/good.py:1:30: W0613: Unused argument 'orange' (unused-argument)
doc/data/messages/d/dict-iter-missing-items/bad.py:2:0: E1141: Unpacking a dictionary in iteration without calling .items() (dict-iter-missing-items)
doc/data/messages/d/duplicate-key/bad.py:1:13: W0109: Duplicate key 'Mathematics' in dictionary (duplicate-key)
doc/data/messages/d/duplicate-bases/bad.py:5:0: E0241: Duplicate bases for class 'Cat' (duplicate-bases)
doc/data/messages/d/duplicate-value/bad.py:1:16: W0130: Duplicate value 'value1' in set (duplicate-value)
doc/data/messages/y/yield-inside-async-function/bad.py:2:4: E1700: Yield inside async function (yield-inside-async-function)
doc/data/messages/y/yield-inside-async-function/bad.py:1:0: C0104: Disallowed name "foo" (disallowed-name)
doc/data/messages/y/yield-inside-async-function/good.py:1:0: C0104: Disallowed name "foo" (disallowed-name)
doc/data/messages/y/yield-inside-async-function/good.py:2:4: W0612: Unused variable '_inner_foo' (unused-variable)
doc/data/messages/y/yield-inside-async-function/good.py:6:0: C0104: Disallowed name "foo" (disallowed-name)
doc/data/messages/y/yield-inside-async-function/good.py:6:0: E0102: function already defined line 1 (function-redefined)
doc/data/messages/e/empty-docstring/bad.py:1:0: C0112: Empty function docstring (empty-docstring)
doc/data/messages/e/empty-docstring/bad.py:1:0: C0104: Disallowed name "foo" (disallowed-name)
doc/data/messages/e/empty-docstring/good.py:1:0: C0104: Disallowed name "foo" (disallowed-name)
doc/data/messages/l/literal-comparison/bad.py:2:11: R0123: Comparison to literal (literal-comparison)
doc/data/messages/l/logging-format-interpolation/bad.py:4:14: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
doc/data/messages/l/logging-format-interpolation/bad.py:4:14: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/l/logging-fstring-interpolation/bad.py:4:0: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
doc/data/messages/s/self-assigning-variable/bad.py:2:0: W0127: Assigning the same variable 'year' to itself (self-assigning-variable)
doc/data/messages/s/subclassed-final-class/bad.py:4:1: W2602: typing.final is not supported by all versions included in the py-version setting (using-final-decorator-in-unsupported-version)
doc/data/messages/s/subclassed-final-class/good.py:4:1: W2602: typing.final is not supported by all versions included in the py-version setting (using-final-decorator-in-unsupported-version)
doc/data/messages/s/super-without-brackets/bad.py:10:8: W0245: Super call without brackets (super-without-brackets)
doc/data/messages/s/super-with-arguments/bad.py:6:4: W0235: Useless super delegation in method '__init__' (useless-super-delegation)
doc/data/messages/s/super-with-arguments/bad.py:7:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
doc/data/messages/s/super-with-arguments/good.py:6:4: W0235: Useless super delegation in method '__init__' (useless-super-delegation)
doc/data/messages/s/singleton-comparison/bad.py:2:3: C0121: Comparison 'game_won == True' should be 'game_won is True' if checking for the singleton value True, or 'game_won' if testing for truthiness (singleton-comparison)
doc/data/messages/g/global-at-module-level/bad.py:2:0: W0604: Using the global statement at the module level (global-at-module-level)
doc/data/messages/g/global-statement/bad.py:4:0: C0104: Disallowed name "foo" (disallowed-name)
doc/data/messages/g/global-statement/bad.py:5:4: W0603: Using the global statement (global-statement)
doc/data/messages/g/global-statement/good.py:4:0: C0104: Disallowed name "foo" (disallowed-name)
doc/data/messages/f/function-redefined/bad.py:5:0: E0102: function already defined line 1 (function-redefined)
doc/data/messages/a/arguments-out-of-order/bad.py:11:4: W1114: Positional arguments appear to be out of order (arguments-out-of-order)
doc/data/messages/a/assert-on-tuple/bad.py:1:0: W0199: Assert called on a 2-item-tuple. Did you mean 'assert x,y'? (assert-on-tuple)
doc/data/messages/a/abstract-class-instantiated/bad.py:10:8: E0110: Abstract class 'Animal' with abstract methods instantiated (abstract-class-instantiated)
doc/data/messages/a/access-member-before-definition/bad.py:3:11: E0203: Access to member 'param' before its definition line 5 (access-member-before-definition)
doc/data/messages/a/assert-on-string-literal/bad.py:3:4: W0129: Assert statement has a string literal as its first argument. The assert will never fail. (assert-on-string-literal)
doc/data/messages/a/assert-on-string-literal/bad.py:2:4: W0612: Unused variable 'a' (unused-variable)
doc/data/messages/a/arguments-renamed/bad.py:2:19: W0621: Redefining name 'ingredient_name' from outer scope (line 12) (redefined-outer-name)
doc/data/messages/a/arguments-renamed/bad.py:9:4: W0237: Parameter 'ingredient_name' has been renamed to 'flavor' in overridden 'Orange.brew' method (arguments-renamed)
doc/data/messages/a/arguments-renamed/bad.py:12:30: R6102: Consider using an in-place tuple instead of list (consider-using-tuple)
doc/data/messages/a/arguments-renamed/bad.py:13:4: E1123: Unexpected keyword argument 'ingredient_name' in method call (unexpected-keyword-arg)
doc/data/messages/a/arguments-renamed/bad.py:13:4: E1120: No value for argument 'flavor' in method call (no-value-for-parameter)
doc/data/messages/a/arguments-renamed/good.py:2:19: W0621: Redefining name 'ingredient_name' from outer scope (line 12) (redefined-outer-name)
doc/data/messages/a/arguments-renamed/good.py:9:19: W0621: Redefining name 'ingredient_name' from outer scope (line 12) (redefined-outer-name)
doc/data/messages/a/arguments-renamed/good.py:12:30: R6102: Consider using an in-place tuple instead of list (consider-using-tuple)
doc/data/messages/a/assigning-non-slot/bad.py:6:8: E0237: Assigning to attribute 'surname' not defined in class slots (assigning-non-slot)
doc/data/messages/a/assignment-from-none/bad.py:5:0: E1128: Assigning result of a function call, where the function returns None (assignment-from-none)
doc/data/messages/a/await-outside-async/bad.py:5:4: E1142: 'await' should be used within an async function (await-outside-async)
doc/data/messages/a/abstract-method/bad.py:6:0: W0223: Method 'make_sound' is abstract in class 'Pet' but is not overridden (abstract-method)
doc/data/messages/a/abstract-method/bad.py:10:0: C0413: Import "import abc" should be placed at the top of the module (wrong-import-position)
doc/data/messages/a/abstract-method/bad.py:19:0: W0223: Method 'make_sound' is abstract in class 'WildAnimal' but is not overridden (abstract-method)
doc/data/messages/a/abstract-method/good.py:11:0: C0413: Import "import abc" should be placed at the top of the module (wrong-import-position)
doc/data/messages/a/arguments-differ/bad.py:7:4: W0221: Number of parameters was 3 in 'Drink.mix' and is now 4 in overridden 'Cocktail.mix' method (arguments-differ)
doc/data/messages/a/arguments-differ/bad.py:21:4: W0221: Number of parameters was 2 in 'Car.fill_tank' and is now 3 in overridden 'Airplane.fill_tank' method (arguments-differ)
doc/data/messages/a/anomalous-unicode-escape-in-string/bad.py:1:8: W1402: Anomalous Unicode escape in byte string: '\u'. String constant might be missing an r or u prefix. (anomalous-unicode-escape-in-string)
doc/data/messages/a/anomalous-unicode-escape-in-string/bad.py:1:6: E1101: Instance of 'bytes' has no 'format' member (no-member)
doc/data/messages/a/anomalous-unicode-escape-in-string/good.py:1:6: E1101: Instance of 'bytes' has no 'format' member (no-member)
doc/data/messages/a/anomalous-backslash-in-string/bad.py:1:10: W1401: Anomalous backslash in string: '\z'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
doc/data/messages/a/assignment-from-no-return/bad.py:5:0: E1111: Assigning result of a function call, where the function has no return (assignment-from-no-return)
doc/data/messages/i/invalid-enum-extension/bad.py:9:0: E0244: Extending inherited Enum class "Color" (invalid-enum-extension)
doc/data/messages/i/import-outside-toplevel/bad.py:2:4: C0415: Import outside toplevel (sys) (import-outside-toplevel)
doc/data/messages/p/potential-index-error/bad.py:1:6: E0643: Invalid index for iterable length (potential-index-error)
doc/data/messages/u/use-maxsplit-arg/bad.py:2:9: C0207: Use url.rsplit('.', maxsplit=1)[-1] instead (use-maxsplit-arg)
doc/data/messages/u/unused-wildcard-import/bad.py:1:0: W0401: Wildcard import abc (wildcard-import)
doc/data/messages/u/unused-wildcard-import/bad.py:1:0: W0614: Unused import(s) abstractmethod, abstractclassmethod, abstractstaticmethod, abstractproperty, ABCMeta and get_cache_token from wildcard import of abc (unused-wildcard-import)
doc/data/messages/u/unspecified-encoding/bad.py:1:0: C0104: Disallowed name "foo" (disallowed-name)
doc/data/messages/u/unspecified-encoding/bad.py:2:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
doc/data/messages/u/unspecified-encoding/bad.py:3:8: W0612: Unused variable 'contents' (unused-variable)
doc/data/messages/u/unspecified-encoding/good.py:1:0: C0104: Disallowed name "foo" (disallowed-name)
doc/data/messages/u/unspecified-encoding/good.py:3:8: W0612: Unused variable 'contents' (unused-variable)
doc/data/messages/u/unidiomatic-typecheck/bad.py:2:3: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
doc/data/messages/u/unnecessary-dunder-call/bad.py:1:8: C2801: Unnecessarily calls dunder method __str__. Use str built-in function. (unnecessary-dunder-call)
doc/data/messages/u/unnecessary-dunder-call/bad.py:2:9: C2801: Unnecessarily calls dunder method __add__. Use + operator. (unnecessary-dunder-call)
doc/data/messages/u/unnecessary-dunder-call/bad.py:6:11: C2801: Unnecessarily calls dunder method __gt__. Use > operator. (unnecessary-dunder-call)
doc/data/messages/u/unreachable/bad.py:3:4: W0101: Unreachable code (unreachable)
doc/data/messages/u/undefined-all-variable/bad.py:1:11: E0603: Undefined variable name 'get_fruit_colour' in __all__ (undefined-all-variable)
doc/data/messages/u/useless-return/bad.py:4:0: R1711: Useless return at end of function or method (useless-return)
doc/data/messages/u/use-list-literal/bad.py:1:13: R1734: Consider using [] instead of list() (use-list-literal)
doc/data/messages/u/ungrouped-imports/bad.py:4:0: C0412: Imports from package logging are not grouped (ungrouped-imports)
doc/data/messages/u/ungrouped-imports/bad.py:1:0: W0611: Unused import logging (unused-import)
doc/data/messages/u/ungrouped-imports/bad.py:2:0: W0611: Unused import os (unused-import)
doc/data/messages/u/ungrouped-imports/bad.py:3:0: W0611: Unused import sys (unused-import)
doc/data/messages/u/ungrouped-imports/bad.py:4:0: W0611: Unused import logging.config (unused-import)
doc/data/messages/u/ungrouped-imports/bad.py:5:0: W0611: Unused WatchedFileHandler imported from logging.handlers (unused-import)
doc/data/messages/u/ungrouped-imports/good.py:5:0: E0611: No name 'FileHandler' in module 'logging.handlers' (no-name-in-module)
doc/data/messages/u/ungrouped-imports/good.py:1:0: W0611: Unused import logging (unused-import)
doc/data/messages/u/ungrouped-imports/good.py:2:0: W0611: Unused import logging.config (unused-import)
doc/data/messages/u/ungrouped-imports/good.py:3:0: W0611: Unused import os (unused-import)
doc/data/messages/u/ungrouped-imports/good.py:4:0: W0611: Unused import sys (unused-import)
doc/data/messages/u/ungrouped-imports/good.py:5:0: W0611: Unused FileHandler imported from logging.handlers (unused-import)
doc/data/messages/u/useless-import-alias/bad.py:1:0: C0414: Import alias does not rename original package (useless-import-alias)
doc/data/messages/u/useless-import-alias/bad.py:1:0: E0401: Unable to import 'pandas' (import-error)
doc/data/messages/u/useless-import-alias/bad.py:1:0: W0611: Unused pandas imported as pandas (unused-import)
doc/data/messages/u/useless-import-alias/good.py:1:0: E0401: Unable to import 'pandas' (import-error)
doc/data/messages/u/useless-import-alias/good.py:1:0: W0611: Unused pandas imported as pd (unused-import)
doc/data/messages/u/use-dict-literal/bad.py:1:13: R1735: Consider using {} instead of dict() (use-dict-literal)
doc/data/messages/u/unnecessary-direct-lambda-call/bad.py:1:4: C3002: Lambda expression called directly. Execute the expression inline instead. (unnecessary-direct-lambda-call)
doc/data/messages/u/unnecessary-direct-lambda-call/bad.py:1:31: E0602: Undefined variable 'a' (undefined-variable)
doc/data/messages/u/unnecessary-direct-lambda-call/good.py:1:4: E0602: Undefined variable 'a' (undefined-variable)
doc/data/messages/u/unnecessary-direct-lambda-call/good.py:1:13: E0602: Undefined variable 'a' (undefined-variable)
doc/data/messages/u/unbalanced-tuple-unpacking/bad.py:2:0: W0632: Possible unbalanced tuple unpacking with sequence defined at line 1: left side has 3 label(s), right side has 4 value(s) (unbalanced-tuple-unpacking)
doc/data/messages/u/undefined-variable/bad.py:1:6: E0602: Undefined variable 'number' (undefined-variable)
doc/data/messages/u/unnecessary-lambda-assignment/bad.py:1:6: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
doc/data/messages/u/unnecessary-lambda-assignment/good.py:1:0: C0104: Disallowed name "foo" (disallowed-name)
doc/data/messages/u/unnecessary-list-index-lookup/bad.py:4:10: R1736: Unnecessary list index lookup, use 'letter' instead (unnecessary-list-index-lookup)
doc/data/messages/u/unnecessary-ellipsis/bad.py:3:4: W2301: Unnecessary ellipsis constant (unnecessary-ellipsis)
doc/data/messages/b/bad-staticmethod-argument/bad.py:3:4: W0211: Static method with 'self' as first argument (bad-staticmethod-argument)
doc/data/messages/b/bad-indentation/bad.py:1:3: W0141: Used builtin function 'input' (bad-builtin)
doc/data/messages/b/bad-indentation/good.py:1:3: W0141: Used builtin function 'input' (bad-builtin)
doc/data/messages/b/bad-format-character/bad.py:1:6: E1300: Unsupported format character 'z' (0x7a) at index 4 (bad-format-character)
doc/data/messages/b/bad-format-character/bad.py:1:6: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/b/bad-format-character/good.py:1:6: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/b/bad-builtin/bad.py:1:15: W0141: Used builtin function 'map'. Using a list comprehension can be clearer. (bad-builtin)
doc/data/messages/b/bad-builtin/good.py:1:26: R6102: Consider using an in-place tuple instead of list (consider-using-tuple)
doc/data/messages/b/bad-open-mode/bad.py:1:0: C0104: Disallowed name "foo" (disallowed-name)
doc/data/messages/b/bad-open-mode/bad.py:2:9: W1501: "rwx" is not a valid mode for open. (bad-open-mode)
doc/data/messages/b/bad-open-mode/bad.py:2:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
doc/data/messages/b/bad-open-mode/bad.py:3:8: W0612: Unused variable 'contents' (unused-variable)
doc/data/messages/b/bad-open-mode/good.py:1:0: C0104: Disallowed name "foo" (disallowed-name)
doc/data/messages/b/bad-open-mode/good.py:2:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
doc/data/messages/b/bad-open-mode/good.py:3:8: W0612: Unused variable 'contents' (unused-variable)
doc/data/messages/b/bad-classmethod-argument/bad.py:4:4: C0202: Class method get_instance should have 'cls' as first argument (bad-classmethod-argument)
doc/data/messages/b/bad-exception-context/bad.py:6:8: E0703: Exception context set to something which is not an exception, nor None (bad-exception-context)
doc/data/messages/b/binary-op-exception/bad.py:3:0: W0711: Exception to catch is the result of a binary "or" operation (binary-op-exception)
doc/data/messages/b/bad-except-order/bad.py:5:0: W0706: The except handler raises immediately (try-except-raise)
doc/data/messages/b/bad-except-order/bad.py:5:7: E0701: Bad except clauses order (Exception is an ancestor class of TypeError) (bad-except-order)
doc/data/messages/b/bad-except-order/bad.py:2:14: W0141: Used builtin function 'input' (bad-builtin)
doc/data/messages/b/bad-except-order/good.py:5:0: W0706: The except handler raises immediately (try-except-raise)
doc/data/messages/b/bad-except-order/good.py:2:14: W0141: Used builtin function 'input' (bad-builtin)
doc/data/messages/b/bad-option-value/bad.py:1:0: E0012: Bad option value for disable. Don't recognize message missing-module-documentation. (bad-option-value)
doc/data/messages/b/broken-collections-callable/bad.py:5:14: R6003: Consider using alternative Union syntax instead of 'Optional'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
doc/data/messages/b/broken-collections-callable/bad.py:5:23: E6005: 'collections.abc.Callable' inside Optional and Union is broken in 3.9.0 / 3.9.1 (use 'typing.Callable' instead) (broken-collections-callable)
doc/data/messages/b/broken-collections-callable/good.py:4:14: R6003: Consider using alternative Union syntax instead of 'Optional'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
doc/data/messages/b/broken-collections-callable/good.py:4:23: R6002: 'typing.Callable' will be deprecated with PY39, consider using 'collections.abc.Callable' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
doc/data/messages/b/broad-except/bad.py:3:7: W0703: Catching too general exception Exception (broad-except)
doc/data/messages/b/bad-string-format-type/bad.py:1:6: E1307: Argument 'builtins.str' does not match format type 'd' (bad-string-format-type)
doc/data/messages/b/bad-string-format-type/bad.py:1:6: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/b/bad-string-format-type/bad.py:1:13: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/b/bad-string-format-type/good.py:1:6: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/b/bad-reversed-sequence/bad.py:1:0: E0111: The first reversed() argument is not a sequence (bad-reversed-sequence)
doc/data/messages/b/bad-super-call/bad.py:7:8: E1003: Bad first argument 'Animal' given to super() (bad-super-call)
doc/data/messages/b/bad-super-call/good.py:6:4: W0235: Useless super delegation in method '__init__' (useless-super-delegation)
doc/data/messages/b/bad-str-strip-call/bad.py:1:0: E1310: Suspicious argument in str.strip call (bad-str-strip-call)
doc/data/messages/b/bad-str-strip-call/bad.py:3:0: E1310: Suspicious argument in str.strip call (bad-str-strip-call)
doc/data/messages/b/bad-format-string/bad.py:1:6: W1302: Invalid format string (bad-format-string)
Exception on node <Const.str l.1 at 0x7f539087e2e0> in file '/testbed/doc/data/messages/b/bad-format-string/bad.py'
doc/data/messages/b/bad-format-string/bad.py:1:0: F0001: Fatal error while checking 'doc/data/messages/b/bad-format-string/bad.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/root/.cache/pylint/pylint-crash-2025-10-08-09.txt'. (fatal)
doc/data/messages/b/bare-except/bad.py:3:0: W0702: No exception type(s) specified (bare-except)
doc/data/messages/w/wrong-import-order/bad.py:2:0: E0611: No name 'utils' in module '' (no-name-in-module)
doc/data/messages/w/wrong-import-order/bad.py:3:0: C0411: first party import "import pylint" should be placed before "from . import utils" (wrong-import-order)
doc/data/messages/w/wrong-import-order/bad.py:4:0: C0411: standard import "import sys" should be placed before "import pylint" (wrong-import-order)
doc/data/messages/w/wrong-import-order/bad.py:1:0: W0611: Unused import os (unused-import)
doc/data/messages/w/wrong-import-order/bad.py:2:0: W0611: Unused import utils (unused-import)
doc/data/messages/w/wrong-import-order/bad.py:3:0: W0611: Unused import pylint (unused-import)
doc/data/messages/w/wrong-import-order/bad.py:4:0: W0611: Unused import sys (unused-import)
doc/data/messages/w/wrong-import-order/good.py:6:0: E0611: No name 'utils' in module '' (no-name-in-module)
doc/data/messages/w/wrong-import-order/good.py:1:0: W0611: Unused import os (unused-import)
doc/data/messages/w/wrong-import-order/good.py:2:0: W0611: Unused import sys (unused-import)
doc/data/messages/w/wrong-import-order/good.py:4:0: W0611: Unused import pylint (unused-import)
doc/data/messages/w/wrong-import-order/good.py:6:0: W0611: Unused import utils (unused-import)
doc/data/messages/w/while-used/good.py:4:0: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
doc/data/messages/w/wildcard-import/bad.py:1:0: W0401: Wildcard import abc (wildcard-import)
doc/data/messages/w/wildcard-import/bad.py:1:0: W0614: Unused import(s) abstractmethod, abstractclassmethod, abstractstaticmethod, abstractproperty, ABCMeta, ABC and get_cache_token from wildcard import of abc (unused-wildcard-import)
doc/data/messages/w/wildcard-import/good.py:3:0: W0611: Unused import abc (unused-import)
doc/data/messages/w/wildcard-import/good.py:4:0: W0611: Unused ABC imported from abc (unused-import)
doc/data/messages/w/wildcard-import/good.py:4:0: W0611: Unused abstractmethod imported from abc (unused-import)
doc/data/messages/w/wrong-import-position/bad.py:5:0: C0413: Import "import sys" should be placed at the top of the module (wrong-import-position)
doc/data/messages/n/no-else-break/bad.py:3:8: R1723: Unnecessary "else" after "break", remove the "else" and de-indent the code inside it (no-else-break)
doc/data/messages/n/no-else-return/bad.py:2:4: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
doc/data/messages/n/no-else-continue/bad.py:3:8: R1724: Unnecessary "else" after "continue", remove the "else" and de-indent the code inside it (no-else-continue)
doc/data/messages/n/no-else-raise/bad.py:2:4: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
doc/data/messages/m/missing-format-argument-key/bad.py:1:6: W1303: Missing keyword argument 'last' for format string (missing-format-argument-key)
doc/data/messages/m/missing-format-argument-key/bad.py:1:6: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/m/missing-format-argument-key/good.py:1:6: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/m/missing-param-doc/bad.py:1:0: W9015: "b" missing in parameter documentation (missing-param-doc)
doc/data/messages/m/missing-param-doc/bad.py:1:0: W9016: "b" missing in parameter type documentation (missing-type-doc)
doc/data/messages/m/misplaced-future/bad.py:3:0: W0410: __future__ import is not the first non docstring statement (misplaced-future)
doc/data/messages/m/misplaced-future/bad.py:1:0: W0611: Unused import sys (unused-import)
doc/data/messages/m/misplaced-future/good.py:3:0: W0611: Unused import sys (unused-import)
doc/data/messages/m/missing-yield-doc/good.py:4:33: R6002: 'typing.Iterator' will be deprecated with PY39, consider using 'collections.abc.Iterator' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
doc/data/messages/m/missing-yield-type-doc/good.py:4:33: R6002: 'typing.Iterator' will be deprecated with PY39, consider using 'collections.abc.Iterator' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
doc/data/messages/m/missing-type-doc/bad.py:1:0: W9016: "b" missing in parameter type documentation (missing-type-doc)
doc/data/messages/m/missing-raises-doc/bad.py:1:0: W9006: "ValueError" not documented as being raised (missing-raises-doc)
doc/data/messages/m/method-cache-max-size-none/bad.py:5:5: W1518: 'lru_cache(maxsize=None)' or 'cache' will keep all method args alive indefinitely, including 'self' (method-cache-max-size-none)
doc/data/messages/o/overridden-final-method/bad.py:5:5: W2602: typing.final is not supported by all versions included in the py-version setting (using-final-decorator-in-unsupported-version)
doc/data/messages/o/overridden-final-method/good.py:5:5: W2602: typing.final is not supported by all versions included in the py-version setting (using-final-decorator-in-unsupported-version)
doc/data/messages/t/too-few-format-args/bad.py:1:6: E1306: Not enough arguments for format string (too-few-format-args)
doc/data/messages/t/too-few-format-args/bad.py:1:6: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/t/too-few-format-args/good.py:1:6: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/t/too-many-format-args/bad.py:1:6: E1305: Too many arguments for format string (too-many-format-args)
doc/data/messages/t/too-many-format-args/bad.py:1:6: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/t/too-many-format-args/good.py:1:6: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/t/too-many-arguments/bad.py:1:0: R0913: Too many arguments (13/10) (too-many-arguments)
doc/data/messages/t/too-many-arguments/bad.py:2:4: W0613: Unused argument 'x_white' (unused-argument)
doc/data/messages/t/too-many-arguments/bad.py:3:4: W0613: Unused argument 'y_white' (unused-argument)
doc/data/messages/t/too-many-arguments/bad.py:4:4: W0613: Unused argument 'z_white' (unused-argument)
doc/data/messages/t/too-many-arguments/bad.py:5:4: W0613: Unused argument 'piece_white' (unused-argument)
doc/data/messages/t/too-many-arguments/bad.py:6:4: W0613: Unused argument 'x_black' (unused-argument)
doc/data/messages/t/too-many-arguments/bad.py:7:4: W0613: Unused argument 'y_black' (unused-argument)
doc/data/messages/t/too-many-arguments/bad.py:8:4: W0613: Unused argument 'z_black' (unused-argument)
doc/data/messages/t/too-many-arguments/bad.py:9:4: W0613: Unused argument 'piece_black' (unused-argument)
doc/data/messages/t/too-many-arguments/bad.py:10:4: W0613: Unused argument 'x_blue' (unused-argument)
doc/data/messages/t/too-many-arguments/bad.py:11:4: W0613: Unused argument 'y_blue' (unused-argument)
doc/data/messages/t/too-many-arguments/bad.py:12:4: W0613: Unused argument 'z_blue' (unused-argument)
doc/data/messages/t/too-many-arguments/bad.py:13:4: W0613: Unused argument 'piece_blue' (unused-argument)
doc/data/messages/t/too-many-arguments/bad.py:14:4: W0613: Unused argument 'current_player' (unused-argument)
doc/data/messages/t/too-many-arguments/good.py:13:4: W0613: Unused argument 'white' (unused-argument)
doc/data/messages/t/too-many-arguments/good.py:14:4: W0613: Unused argument 'black' (unused-argument)
doc/data/messages/t/too-many-arguments/good.py:15:4: W0613: Unused argument 'blue' (unused-argument)
doc/data/messages/t/too-many-arguments/good.py:16:4: W0613: Unused argument 'current_player' (unused-argument)
doc/data/messages/t/typevar-double-variance/bad.py:3:0: C0131: TypeVar cannot be both covariant and contravariant (typevar-double-variance)
doc/data/messages/t/typevar-double-variance/bad.py:3:0: C0105: Type variable name does not reflect variance (typevar-name-incorrect-variance)
doc/data/messages/t/typevar-name-mismatch/bad.py:3:0: C0132: TypeVar name "T" does not match assigned variable name "X" (typevar-name-mismatch)
doc/data/messages/t/try-except-raise/bad.py:3:0: W0706: The except handler raises immediately (try-except-raise)
doc/data/messages/t/try-except-raise/good.py:2:0: W0104: Statement seems to have no effect (pointless-statement)
doc/data/messages/r/return-in-init/bad.py:3:4: E0101: Explicit return in __init__ (return-in-init)
doc/data/messages/r/redundant-unittest-assert/bad.py:6:8: W1503: Redundant use of assertTrue with constant value 'foo' (redundant-unittest-assert)
doc/data/messages/r/redefined-loop-name/bad.py:1:12: E0602: Undefined variable 'names' (undefined-variable)
doc/data/messages/r/redefined-loop-name/good.py:1:12: E0602: Undefined variable 'names' (undefined-variable)
doc/data/messages/r/redefined-slots-in-subclass/bad.py:6:16: W0244: Redefined slots ['a'] in subclass (redefined-slots-in-subclass)
doc/data/messages/r/reimported/bad.py:2:0: W0404: Reimport 're' (imported line 1) (reimported)
doc/data/messages/r/reimported/bad.py:1:0: W0611: Unused import re (unused-import)
doc/data/messages/r/reimported/good.py:1:0: W0611: Unused import re (unused-import)
doc/data/messages/c/comparison-with-itself/bad.py:3:11: R0124: Redundant comparison - fruit == fruit (comparison-with-itself)
doc/data/messages/c/comparison-with-itself/bad.py:2:4: W0612: Unused variable 'an_orange' (unused-variable)
doc/data/messages/c/confusing-consecutive-elif/bad.py:3:11: W0141: Used builtin function 'input' (bad-builtin)
doc/data/messages/c/confusing-consecutive-elif/good.py:4:11: W0141: Used builtin function 'input' (bad-builtin)
doc/data/messages/c/confusing-consecutive-elif/good.py:14:7: W0141: Used builtin function 'input' (bad-builtin)
doc/data/messages/c/comparison-of-constants/bad.py:2:11: R0124: Redundant comparison - 42 == 42 (comparison-with-itself)
doc/data/messages/c/comparison-of-constants/bad.py:2:11: R0133: Comparison between constants: '42 == 42' has a constant value (comparison-of-constants)
doc/data/messages/c/consider-using-f-string/bad.py:5:12: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/c/consider-using-f-string/bad.py:8:15: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/c/consider-using-f-string/bad.py:9:21: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/c/consider-using-with/bad.py:1:7: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
doc/data/messages/c/catching-non-exception/bad.py:7:7: E0712: Catching an exception which doesn't inherit from Exception: FooError (catching-non-exception)
doc/data/messages/c/comparison-with-callable/bad.py:6:11: W0143: Comparing against a callable, did you omit the parenthesis? (comparison-with-callable)
doc/data/messages/c/cell-var-from-loop/bad.py:1:0: C0104: Disallowed name "foo" (disallowed-name)
doc/data/messages/c/cell-var-from-loop/bad.py:3:8: C0104: Disallowed name "bar" (disallowed-name)
doc/data/messages/c/cell-var-from-loop/bad.py:4:18: W0640: Cell variable i defined in loop (cell-var-from-loop)
doc/data/messages/c/cell-var-from-loop/good.py:1:0: C0104: Disallowed name "bar" (disallowed-name)
doc/data/messages/c/cell-var-from-loop/good.py:5:0: C0104: Disallowed name "foo" (disallowed-name)
doc/data/messages/c/chained-comparison/bad.py:1:8: W0141: Used builtin function 'input' (bad-builtin)
doc/data/messages/c/chained-comparison/bad.py:2:8: W0141: Used builtin function 'input' (bad-builtin)
doc/data/messages/c/chained-comparison/bad.py:3:8: W0141: Used builtin function 'input' (bad-builtin)
doc/data/messages/c/chained-comparison/bad.py:4:3: R1716: Simplify chained comparison between the operands (chained-comparison)
doc/data/messages/c/chained-comparison/good.py:1:8: W0141: Used builtin function 'input' (bad-builtin)
doc/data/messages/c/chained-comparison/good.py:2:8: W0141: Used builtin function 'input' (bad-builtin)
doc/data/messages/c/chained-comparison/good.py:3:8: W0141: Used builtin function 'input' (bad-builtin)
doc/data/messages/c/consider-using-sys-exit/bad.py:2:11: W0141: Used builtin function 'input' (bad-builtin)
doc/data/messages/c/consider-using-sys-exit/bad.py:4:4: R1722: Consider using sys.exit() (consider-using-sys-exit)
doc/data/messages/c/consider-using-sys-exit/good.py:4:11: W0141: Used builtin function 'input' (bad-builtin)
************* Module minimal_messages_config
tests/testutils/data/m/minimal_messages_config.py:8:4: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/testutils/data/m/minimal_messages_config.py:10:6: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
tests/testutils/data/m/minimal_messages_config.py:8:4: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
************* Module logging_format_interpolation_style
tests/config/data/logging_format_interpolation_style.py:9:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/config/data/logging_format_interpolation_style.py:10:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/config/data/logging_format_interpolation_style.py:11:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/config/data/logging_format_interpolation_style.py:12:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/config/data/logging_format_interpolation_style.py:13:0: E1205: Too many arguments for logging format string (logging-too-many-args)
************* Module functional.d.dangerous_default_value
tests/functional/d/dangerous_default_value.py:6:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:10:0: W0102: Dangerous default value HEHE (builtins.dict) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:18:0: W0102: Dangerous default value set() (builtins.set) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:28:0: W0102: Dangerous default value GLOBAL_SET (builtins.set) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:32:0: W0102: Dangerous default value dict() (builtins.dict) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:36:0: W0102: Dangerous default value list() (builtins.list) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:40:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:44:0: W0102: Dangerous default value {} as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:48:0: W0102: Dangerous default value list() (builtins.list) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:52:0: W0102: Dangerous default value dict() (builtins.dict) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:61:0: W0102: Dangerous default value OINK (builtins.dict) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:65:0: W0102: Dangerous default value dict() (builtins.dict) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:73:0: W0102: Dangerous default value INVALID_DICT (builtins.dict) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:77:0: W0102: Dangerous default value set() as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:81:0: W0102: Dangerous default value deque() (collections.deque) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:85:0: W0102: Dangerous default value ChainMap() (collections.ChainMap) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:89:0: W0102: Dangerous default value Counter() (collections.Counter) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:93:0: W0102: Dangerous default value OrderedDict() (collections.OrderedDict) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:97:0: W0102: Dangerous default value defaultdict() (collections.defaultdict) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:101:0: W0102: Dangerous default value UserDict() (collections.UserDict) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:105:0: W0102: Dangerous default value UserList() (collections.UserList) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:109:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/d/dangerous_default_value.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.d.defined_and_used_on_same_line
tests/functional/d/defined_and_used_on_same_line.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/d/defined_and_used_on_same_line.py:2:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/d/defined_and_used_on_same_line.py:2:0: I0021: Useless suppression of 'multiple-statements' (useless-suppression)
************* Module functional.d.duplicate_bases
tests/functional/d/duplicate_bases.py:5:0: E0241: Duplicate bases for class 'Duplicates' (duplicate-bases)
tests/functional/d/duplicate_bases.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/d/duplicate_bases.py:2:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/d/duplicate_bases.py:2:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
************* Module functional.d.duplicate_string_formatting_argument
tests/functional/d/duplicate_string_formatting_argument.py:8:8: W1308: Duplicate string formatting argument 'NAME', consider passing as named argument (duplicate-string-formatting-argument)
tests/functional/d/duplicate_string_formatting_argument.py:8:8: W1308: Duplicate string formatting argument 'OTHER_NAME', consider passing as named argument (duplicate-string-formatting-argument)
tests/functional/d/duplicate_string_formatting_argument.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/d/duplicate_string_formatting_argument.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.d.disable_msg_next_line
tests/functional/d/disable_msg_next_line.py:16:11: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
tests/functional/d/disable_msg_next_line.py:15:4: W0612: Unused variable 'x' (unused-variable)
tests/functional/d/disable_msg_next_line.py:19:21: W0613: Unused argument 'arg2' (unused-argument)
tests/functional/d/disable_msg_next_line.py:14:0: I0021: Useless suppression of 'f-string-without-interpolation' (useless-suppression)
************* Module functional.d.disabled_msgid_in_pylintrc
tests/functional/d/disabled_msgid_in_pylintrc.py:5:7: W0703: Catching too general exception Exception (broad-except)
tests/functional/d/disabled_msgid_in_pylintrc.py:4:8: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
************* Module functional.d.dict_iter_missing_items
tests/functional/d/dict_iter_missing_items.py:11:0: E1141: Unpacking a dictionary in iteration without calling .items() (dict-iter-missing-items)
tests/functional/d/dict_iter_missing_items.py:1:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
tests/functional/d/dict_iter_missing_items.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/d/dict_iter_missing_items.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.d.dataclass_with_default_factory
tests/functional/d/dataclass_with_default_factory.py:40:9: E1133: Non-iterable value Test2.int_prop is used in an iterating context (not-an-iterable)
tests/functional/d/dataclass_with_default_factory.py:44:0: E1137: 'Test2.int_prop' does not support item assignment (unsupported-assignment-operation)
************* Module functional.d.disable_wrong_import_order
tests/functional/d/disable_wrong_import_order.py:11:0: C0412: Imports from package first_party are not grouped (ungrouped-imports)
tests/functional/d/disable_wrong_import_order.py:4:0: I0021: Useless suppression of 'no-name-in-module' (useless-suppression)
************* Module functional.d.docstrings
tests/functional/d/docstrings.py:1:0: C0114: Missing module docstring (missing-module-docstring)
tests/functional/d/docstrings.py:6:0: C0112: Empty function docstring (empty-docstring)
tests/functional/d/docstrings.py:10:0: C0116: Missing function or method docstring (missing-function-docstring)
tests/functional/d/docstrings.py:23:0: C0115: Missing class docstring (missing-class-docstring)
tests/functional/d/docstrings.py:40:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/functional/d/docstrings.py:48:4: C0112: Empty method docstring (empty-docstring)
tests/functional/d/docstrings.py:62:4: C0112: Empty method docstring (empty-docstring)
tests/functional/d/docstrings.py:70:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/functional/d/docstrings.py:73:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/d/docstrings.py:73:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.d.dataclass_with_field
tests/functional/d/dataclass_with_field.py:7:0: E0401: Unable to import 'pydantic.dataclasses' (import-error)
tests/functional/d/dataclass_with_field.py:20:11: R6002: 'typing.List' will be deprecated with PY39, consider using 'list' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/d/dataclass_with_field.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/d/dataclass_with_field.py:3:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.d.duplicate_value
tests/functional/d/duplicate_value.py:5:7: W0130: Duplicate value 1 in set (duplicate-value)
tests/functional/d/duplicate_value.py:6:7: W0130: Duplicate value 2 in set (duplicate-value)
tests/functional/d/duplicate_value.py:9:7: W0130: Duplicate value 'one' in set (duplicate-value)
tests/functional/d/duplicate_value.py:10:7: W0130: Duplicate value 'two' in set (duplicate-value)
tests/functional/d/duplicate_value.py:12:12: W0130: Duplicate value True in set (duplicate-value)
tests/functional/d/duplicate_value.py:12:12: W0130: Duplicate value 12 in set (duplicate-value)
tests/functional/d/duplicate_value.py:15:18: W0130: Duplicate value 1 in set (duplicate-value)
tests/functional/d/duplicate_value.py:16:12: W0130: Duplicate value 'arg1' in set (duplicate-value)
tests/functional/d/duplicate_value.py:18:20: W0130: Duplicate value 'arg1' in set (duplicate-value)
tests/functional/d/duplicate_value.py:18:20: W0130: Duplicate value True in set (duplicate-value)
tests/functional/d/duplicate_value.py:1:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
tests/functional/d/duplicate_value.py:1:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.d.disable_ungrouped_imports
tests/functional/d/disable_ungrouped_imports.py:9:0: C0412: Imports from package os are not grouped (ungrouped-imports)
tests/functional/d/disable_ungrouped_imports.py:10:0: C0412: Imports from package logging are not grouped (ungrouped-imports)
tests/functional/d/disable_ungrouped_imports.py:3:0: I0021: Useless suppression of 'wrong-import-position' (useless-suppression)
tests/functional/d/disable_ungrouped_imports.py:3:0: I0021: Useless suppression of 'wrong-import-order' (useless-suppression)
tests/functional/d/disable_ungrouped_imports.py:3:0: I0021: Useless suppression of 'using-constant-test' (useless-suppression)
tests/functional/d/disable_ungrouped_imports.py:4:0: I0021: Useless suppression of 'import-error' (useless-suppression)
tests/functional/d/disable_ungrouped_imports.py:6:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
************* Module functional.d.duplicate_argument_name
tests/functional/d/duplicate_argument_name.py:4:12: E0108: Duplicate argument name _ in function definition (duplicate-argument-name)
tests/functional/d/duplicate_argument_name.py:7:18: E0108: Duplicate argument name _abc in function definition (duplicate-argument-name)
tests/functional/d/duplicate_argument_name.py:10:12: E0108: Duplicate argument name _ in function definition (duplicate-argument-name)
tests/functional/d/duplicate_argument_name.py:13:15: E0108: Duplicate argument name _ in function definition (duplicate-argument-name)
************* Module functional.d.decorator_unused
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'unnecessary-dunder-call' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'bad-file-encoding' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'non-ascii-name' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'non-ascii-module-import' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'typevar-name-incorrect-variance' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'typevar-double-variance' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'typevar-name-mismatch' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'empty-docstring' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'singleton-comparison' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'unidiomatic-typecheck' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'too-many-lines' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'trailing-whitespace' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'missing-final-newline' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'trailing-newlines' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'multiple-statements' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'superfluous-parens' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'mixed-line-endings' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'unexpected-line-ending-format' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'bad-classmethod-argument' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'bad-mcs-method-argument' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'bad-mcs-classmethod-argument' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'single-string-used-for-slots' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'unnecessary-lambda-assignment' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'unnecessary-direct-lambda-call' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'wrong-spelling-in-comment' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'wrong-spelling-in-docstring' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'invalid-characters-in-docstring' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'multiple-imports' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'wrong-import-order' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'wrong-import-position' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'useless-import-alias' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'import-outside-toplevel' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'unneeded-not' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'consider-using-enumerate' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'consider-iterating-dictionary' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'consider-using-dict-items' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'use-maxsplit-arg' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'use-sequence-for-iteration' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'consider-using-f-string' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'use-implicit-booleaness-not-len' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'use-implicit-booleaness-not-comparison' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'consider-using-any-or-all' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'misplaced-comparison-constant' (useless-suppression)
************* Module functional.d.duplicate_except
tests/functional/d/duplicate_except.py:9:11: W0705: Catching previously caught exception type ValueError (duplicate-except)
************* Module functional.d.disable_wrong_import_position
tests/functional/d/disable_wrong_import_position.py:5:0: I0021: Useless suppression of 'wrong-import-position' (useless-suppression)
************* Module functional.d.dataclass_typecheck
tests/functional/d/dataclass_typecheck.py:18:11: R6003: Consider using alternative Union syntax instead of 'Optional'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
tests/functional/d/dataclass_typecheck.py:32:6: E1126: Sequence index is not an int, slice, or instance with __index__ (invalid-sequence-index)
tests/functional/d/dataclass_typecheck.py:36:10: E1127: Slice index is not an int, None, or instance with __index__ (invalid-slice-index)
tests/functional/d/dataclass_typecheck.py:39:0: E1102: obj.attr1 is not callable (not-callable)
tests/functional/d/dataclass_typecheck.py:44:6: E1130: bad operand type for unary -: str (invalid-unary-operand-type)
tests/functional/d/dataclass_typecheck.py:51:11: E1135: Value 'obj.attr1' doesn't support membership test (unsupported-membership-test)
tests/functional/d/dataclass_typecheck.py:56:6: E1136: Value 'obj.attr1' is unsubscriptable (unsubscriptable-object)
tests/functional/d/dataclass_typecheck.py:61:0: E1137: 'obj.attr1' does not support item assignment (unsupported-assignment-operation)
tests/functional/d/dataclass_typecheck.py:66:4: E1138: 'obj.attr1' does not support item deletion (unsupported-delete-operation)
tests/functional/d/dataclass_typecheck.py:81:11: R6003: Consider using alternative Union syntax instead of 'Optional'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
tests/functional/d/dataclass_typecheck.py:91:0: E1129: Context manager 'str' doesn't implement __enter__ and __exit__. (not-context-manager)
tests/functional/d/dataclass_typecheck.py:99:0: E1139: Invalid metaclass 'Instance of builtins.int' used (invalid-metaclass)
tests/functional/d/dataclass_typecheck.py:105:0: E1140: Dict key is unhashable (unhashable-dict-key)
tests/functional/d/dataclass_typecheck.py:115:6: W1116: Second argument of isinstance is not a type (isinstance-second-argument-not-valid-type)
tests/functional/d/dataclass_typecheck.py:112:0: R0204: Redefinition of __name__ type from int to str (redefined-variable-type)
tests/functional/d/dataclass_typecheck.py:22:11: R6002: 'typing.Callable' will be deprecated with PY39, consider using 'collections.abc.Callable' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/d/dataclass_typecheck.py:23:11: R6002: 'typing.List' will be deprecated with PY39, consider using 'list' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/d/dataclass_typecheck.py:24:11: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/d/dataclass_typecheck.py:5:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/d/dataclass_typecheck.py:5:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/d/dataclass_typecheck.py:5:0: I0021: Useless suppression of 'pointless-statement' (useless-suppression)
tests/functional/d/dataclass_typecheck.py:5:0: I0021: Useless suppression of 'fixme' (useless-suppression)
************* Module functional.d.disable_msg_github_issue_1389
tests/functional/d/disable_msg_github_issue_1389.py:15:10: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/d/disable_msg_github_issue_1389.py:15:23: R6002: 'typing.Set' will be deprecated with PY39, consider using 'set' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/d/disable_msg_github_issue_1389.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/d/disable_msg_github_issue_1389.py:1:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
tests/functional/d/disable_msg_github_issue_1389.py:5:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
tests/functional/d/disable_msg_github_issue_1389.py:6:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
************* Module functional.d.duplicate_argument_name_py3
tests/functional/d/duplicate_argument_name_py3.py:4:16: E0108: Duplicate argument name _ in function definition (duplicate-argument-name)
************* Module functional.d.duplicate_dict_literal_key
tests/functional/d/duplicate_dict_literal_key.py:18:18: W0109: Duplicate key 'MyEnum.KEY' in dictionary (duplicate-key)
tests/functional/d/duplicate_dict_literal_key.py:23:13: W0109: Duplicate key 'tea' in dictionary (duplicate-key)
tests/functional/d/duplicate_dict_literal_key.py:30:0: W0109: Duplicate key 1 in dictionary (duplicate-key)
tests/functional/d/duplicate_dict_literal_key.py:31:0: W0109: Duplicate key 1.0 in dictionary (duplicate-key)
************* Module functional.y.yield_outside_func
tests/functional/y/yield_outside_func.py:4:0: E0105: Yield outside function (yield-outside-function)
************* Module functional.y.yield_inside_async_function
tests/functional/y/yield_inside_async_function.py:16:4: E1700: Yield inside async function (yield-inside-async-function)
tests/functional/y/yield_inside_async_function.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/y/yield_inside_async_function.py:2:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.y.yield_from_iterable
tests/functional/y/yield_from_iterable.py:7:15: E1133: Non-iterable value 10 is used in an iterating context (not-an-iterable)
tests/functional/y/yield_from_iterable.py:4:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/y/yield_from_iterable.py:4:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.y.yield_from_outside_func
tests/functional/y/yield_from_outside_func.py:4:0: E0105: Yield outside function (yield-outside-function)
************* Module functional.e.exception_is_binary_op
tests/functional/e/exception_is_binary_op.py:5:0: W0711: Exception to catch is the result of a binary "or" operation (binary-op-exception)
tests/functional/e/exception_is_binary_op.py:7:0: W0711: Exception to catch is the result of a binary "and" operation (binary-op-exception)
tests/functional/e/exception_is_binary_op.py:9:0: W0711: Exception to catch is the result of a binary "or" operation (binary-op-exception)
tests/functional/e/exception_is_binary_op.py:11:0: W0711: Exception to catch is the result of a binary "or" operation (binary-op-exception)
************* Module functional.e.enum_self_defined_member_5138
tests/functional/e/enum_self_defined_member_5138.py:25:34: E1101: Instance of 'Day' has no 'foo' member (no-member)
tests/functional/e/enum_self_defined_member_5138.py:29:6: E1101: Instance of 'FRIDAY' has no 'foo' member (no-member)
tests/functional/e/enum_self_defined_member_5138.py:46:6: E1101: Instance of 'MILE' has no 'foo' member (no-member)
tests/functional/e/enum_self_defined_member_5138.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/e/enum_self_defined_member_5138.py:2:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.e.empty_docstring
tests/functional/e/empty_docstring.py:1:0: C0112: Empty module docstring (empty-docstring)
tests/functional/e/empty_docstring.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.e.excess_escapes
tests/functional/e/excess_escapes.py:8:5: W1401: Anomalous backslash in string: '\['. String constant might be missing an r prefix. (anomalous-backslash-in-string)
tests/functional/e/excess_escapes.py:8:7: W1401: Anomalous backslash in string: '\]'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
tests/functional/e/excess_escapes.py:9:8: W1401: Anomalous backslash in string: '\/'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
tests/functional/e/excess_escapes.py:10:20: W1401: Anomalous backslash in string: '\`'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
tests/functional/e/excess_escapes.py:17:15: W1401: Anomalous backslash in string: '\o'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
tests/functional/e/excess_escapes.py:17:20: W1401: Anomalous backslash in string: '\o'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
tests/functional/e/excess_escapes.py:19:13: W1401: Anomalous backslash in string: '\8'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
tests/functional/e/excess_escapes.py:19:17: W1401: Anomalous backslash in string: '\9'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
tests/functional/e/excess_escapes.py:32:42: W1401: Anomalous backslash in string: '\P'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
tests/functional/e/excess_escapes.py:1:0: I0021: Useless suppression of 'pointless-string-statement' (useless-suppression)
tests/functional/e/excess_escapes.py:1:0: I0021: Useless suppression of 'fixme' (useless-suppression)
************* Module functional.e.eval_used
tests/functional/e/eval_used.py:3:0: W0123: Use of eval (eval-used)
tests/functional/e/eval_used.py:4:0: W0123: Use of eval (eval-used)
tests/functional/e/eval_used.py:6:0: W0123: Use of eval (eval-used)
tests/functional/e/eval_used.py:10:4: W0123: Use of eval (eval-used)
************* Module functional.e.exec_used
tests/functional/e/exec_used.py:3:0: W0122: Use of exec (exec-used)
tests/functional/e/exec_used.py:4:0: W0122: Use of exec (exec-used)
tests/functional/e/exec_used.py:6:0: W0122: Use of exec (exec-used)
tests/functional/e/exec_used.py:9:4: W0122: Use of exec (exec-used)
tests/functional/e/exec_used.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.l.logging_format_interpolation_py36
tests/functional/l/logging_format_interpolation_py36.py:5:0: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module functional.l.logging_too_many_args
tests/functional/l/logging_too_many_args.py:4:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/functional/l/logging_too_many_args.py:5:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/functional/l/logging_too_many_args.py:6:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/functional/l/logging_too_many_args.py:7:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/functional/l/logging_too_many_args.py:8:0: E1205: Too many arguments for logging format string (logging-too-many-args)
************* Module functional.l.logging_not_lazy
tests/functional/l/logging_not_lazy.py:11:0: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
tests/functional/l/logging_not_lazy.py:12:0: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
tests/functional/l/logging_not_lazy.py:13:0: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
tests/functional/l/logging_not_lazy.py:14:0: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
tests/functional/l/logging_not_lazy.py:15:0: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
tests/functional/l/logging_not_lazy.py:16:0: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
tests/functional/l/logging_not_lazy.py:27:4: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
tests/functional/l/logging_not_lazy.py:27:4: W1302: Invalid format string (bad-format-string)
tests/functional/l/logging_not_lazy.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/l/logging_not_lazy.py:2:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/l/logging_not_lazy.py:2:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.l.logging_format_interpolation_style
tests/functional/l/logging_format_interpolation_style.py:7:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/functional/l/logging_format_interpolation_style.py:8:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/functional/l/logging_format_interpolation_style.py:9:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/functional/l/logging_format_interpolation_style.py:10:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/functional/l/logging_format_interpolation_style.py:11:0: E1205: Too many arguments for logging format string (logging-too-many-args)
************* Module functional.l.lost_exception
tests/functional/l/lost_exception.py:14:16: W0150: break statement in finally block may swallow exception (lost-exception)
tests/functional/l/lost_exception.py:15:12: W0150: return statement in finally block may swallow exception (lost-exception)
tests/functional/l/lost_exception.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.l.line_too_long_end_of_module
tests/functional/l/line_too_long_end_of_module.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/l/line_too_long_end_of_module.py:1:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.l.loopvar_in_dict_comp
tests/functional/l/loopvar_in_dict_comp.py:8:23: W0640: Cell variable x defined in loop (cell-var-from-loop)
************* Module functional.l.literal_comparison
tests/functional/l/literal_comparison.py:4:3: R0133: Comparison between constants: '2 is 2' has a constant value (comparison-of-constants)
tests/functional/l/literal_comparison.py:4:3: R0123: Comparison to literal (literal-comparison)
tests/functional/l/literal_comparison.py:7:3: R0133: Comparison between constants: 'a is b'a'' has a constant value (comparison-of-constants)
tests/functional/l/literal_comparison.py:7:3: R0123: Comparison to literal (literal-comparison)
tests/functional/l/literal_comparison.py:10:3: R0133: Comparison between constants: '2.0 is 3.0' has a constant value (comparison-of-constants)
tests/functional/l/literal_comparison.py:10:3: R0123: Comparison to literal (literal-comparison)
tests/functional/l/literal_comparison.py:16:3: R0123: Comparison to literal (literal-comparison)
tests/functional/l/literal_comparison.py:19:3: R0123: Comparison to literal (literal-comparison)
tests/functional/l/literal_comparison.py:22:3: R0123: Comparison to literal (literal-comparison)
tests/functional/l/literal_comparison.py:25:3: R0123: Comparison to literal (literal-comparison)
tests/functional/l/literal_comparison.py:28:3: R0123: Comparison to literal (literal-comparison)
tests/functional/l/literal_comparison.py:31:3: R0123: Comparison to literal (literal-comparison)
tests/functional/l/literal_comparison.py:38:3: R0123: Comparison to literal (literal-comparison)
tests/functional/l/literal_comparison.py:41:3: R0123: Comparison to literal (literal-comparison)
tests/functional/l/literal_comparison.py:44:3: R0123: Comparison to literal (literal-comparison)
tests/functional/l/literal_comparison.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.l.line_too_long
tests/functional/l/line_too_long.py:1:0: I0021: Useless suppression of 'fixme' (useless-suppression)
tests/functional/l/line_too_long.py:24:0: I0021: Useless suppression of 'fixme' (useless-suppression)
tests/functional/l/line_too_long.py:27:0: I0021: Useless suppression of 'fixme' (useless-suppression)
tests/functional/l/line_too_long.py:53:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
tests/functional/l/line_too_long.py:77:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.l.logging_fstring_interpolation_py36
tests/functional/l/logging_fstring_interpolation_py36.py:17:0: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
tests/functional/l/logging_fstring_interpolation_py36.py:18:0: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
tests/functional/l/logging_fstring_interpolation_py36.py:19:0: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
tests/functional/l/logging_fstring_interpolation_py36.py:20:0: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
tests/functional/l/logging_fstring_interpolation_py36.py:21:0: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module functional.l.logical_tautology
tests/functional/l/logical_tautology.py:6:7: R0124: Redundant comparison - arg == arg (comparison-with-itself)
tests/functional/l/logical_tautology.py:8:9: R0124: Redundant comparison - arg != arg (comparison-with-itself)
tests/functional/l/logical_tautology.py:10:9: R0124: Redundant comparison - arg > arg (comparison-with-itself)
tests/functional/l/logical_tautology.py:12:9: R0124: Redundant comparison - arg <= arg (comparison-with-itself)
tests/functional/l/logical_tautology.py:14:9: R0124: Redundant comparison - None == None (comparison-with-itself)
tests/functional/l/logical_tautology.py:14:9: R0133: Comparison between constants: 'None == None' has a constant value (comparison-of-constants)
tests/functional/l/logical_tautology.py:16:9: R0124: Redundant comparison - 786 == 786 (comparison-with-itself)
tests/functional/l/logical_tautology.py:16:9: R0133: Comparison between constants: '786 == 786' has a constant value (comparison-of-constants)
tests/functional/l/logical_tautology.py:18:9: R0124: Redundant comparison - 786 is 786 (comparison-with-itself)
tests/functional/l/logical_tautology.py:18:9: R0133: Comparison between constants: '786 is 786' has a constant value (comparison-of-constants)
tests/functional/l/logical_tautology.py:20:9: R0124: Redundant comparison - 786 is not 786 (comparison-with-itself)
tests/functional/l/logical_tautology.py:20:9: R0133: Comparison between constants: '786 is not 786' has a constant value (comparison-of-constants)
tests/functional/l/logical_tautology.py:22:9: R0124: Redundant comparison - arg is arg (comparison-with-itself)
tests/functional/l/logical_tautology.py:24:9: R0124: Redundant comparison - arg is not arg (comparison-with-itself)
tests/functional/l/logical_tautology.py:26:9: R0124: Redundant comparison - True is True (comparison-with-itself)
tests/functional/l/logical_tautology.py:26:9: R0133: Comparison between constants: 'True is True' has a constant value (comparison-of-constants)
tests/functional/l/logical_tautology.py:28:9: R0133: Comparison between constants: '666 == 786' has a constant value (comparison-of-constants)
tests/functional/l/logical_tautology.py:36:18: R0124: Redundant comparison - arg != arg (comparison-with-itself)
tests/functional/l/logical_tautology.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/l/logical_tautology.py:2:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/l/logical_tautology.py:2:0: I0021: Useless suppression of 'inconsistent-return-statements' (useless-suppression)
tests/functional/l/logical_tautology.py:2:0: I0021: Useless suppression of 'too-many-branches' (useless-suppression)
************* Module functional.l.logging_fstring_interpolation_py37
tests/functional/l/logging_fstring_interpolation_py37.py:5:0: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module functional.l.logging_not_lazy_with_logger
tests/functional/l/logging_not_lazy_with_logger.py:9:0: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
tests/functional/l/logging_not_lazy_with_logger.py:10:0: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
tests/functional/l/logging_not_lazy_with_logger.py:12:0: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
tests/functional/l/logging_not_lazy_with_logger.py:14:0: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
************* Module functional.l.logging_format_interpolation
tests/functional/l/logging_format_interpolation.py:16:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
tests/functional/l/logging_format_interpolation.py:17:43: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
tests/functional/l/logging_format_interpolation.py:18:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
tests/functional/l/logging_format_interpolation.py:19:43: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
tests/functional/l/logging_format_interpolation.py:20:21: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
tests/functional/l/logging_format_interpolation.py:36:19: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
tests/functional/l/logging_format_interpolation.py:37:0: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
tests/functional/l/logging_format_interpolation.py:1:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
tests/functional/l/logging_format_interpolation.py:2:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
tests/functional/l/logging_format_interpolation.py:2:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/l/logging_format_interpolation.py:2:0: I0021: Useless suppression of 'wrong-import-position' (useless-suppression)
************* Module functional.l.logging_too_few_args
tests/functional/l/logging_too_few_args.py:5:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/functional/l/logging_too_few_args.py:6:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/functional/l/logging_too_few_args.py:7:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/functional/l/logging_too_few_args.py:8:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/functional/l/logging_too_few_args.py:9:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/functional/l/logging_too_few_args.py:10:0: E1205: Too many arguments for logging format string (logging-too-many-args)
************* Module functional.s.subclassed_final_class_py38
tests/functional/s/subclassed_final_class_py38.py:9:1: W2602: typing.final is not supported by all versions included in the py-version setting (using-final-decorator-in-unsupported-version)
tests/functional/s/subclassed_final_class_py38.py:4:0: I0021: Useless suppression of 'useless-object-inheritance' (useless-suppression)
tests/functional/s/subclassed_final_class_py38.py:4:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/s/subclassed_final_class_py38.py:4:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.s.simplify_chained_comparison
tests/functional/s/simplify_chained_comparison.py:10:11: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:15:11: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:23:7: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:25:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:27:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:29:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:31:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:33:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:37:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:39:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:41:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:43:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:45:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:47:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:49:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:51:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:53:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:55:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/s/simplify_chained_comparison.py:3:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/s/simplify_chained_comparison.py:3:0: I0021: Useless suppression of 'no-else-return' (useless-suppression)
tests/functional/s/simplify_chained_comparison.py:3:0: I0021: Useless suppression of 'too-many-branches' (useless-suppression)
************* Module functional.s.subprocess_run_check
tests/functional/s/subprocess_run_check.py:6:0: W1510: Using subprocess.run without explicitly set `check` is not recommended. (subprocess-run-check)
tests/functional/s/subprocess_run_check.py:1:0: I0021: Useless suppression of 'disallowed-name' (useless-suppression)
tests/functional/s/subprocess_run_check.py:1:0: I0021: Useless suppression of 'no-value-for-parameter' (useless-suppression)
tests/functional/s/subprocess_run_check.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/s/subprocess_run_check.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.s.suspicious_str_strip_call
tests/functional/s/suspicious_str_strip_call.py:8:0: E1310: Suspicious argument in str.strip call (bad-str-strip-call)
tests/functional/s/suspicious_str_strip_call.py:9:0: E1310: Suspicious argument in str.lstrip call (bad-str-strip-call)
tests/functional/s/suspicious_str_strip_call.py:10:0: E1310: Suspicious argument in bytes.rstrip call (bad-str-strip-call)
************* Module functional.s.subprocess_popen_preexec_fn
tests/functional/s/subprocess_popen_preexec_fn.py:9:0: W1509: Using preexec_fn keyword which may be unsafe in the presence of threads (subprocess-popen-preexec-fn)
tests/functional/s/subprocess_popen_preexec_fn.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.s.shallow_copy_environ
tests/functional/s/shallow_copy_environ.py:7:0: W1507: Using copy.copy(os.environ). Use os.environ.copy() instead.  (shallow-copy-environ)
tests/functional/s/shallow_copy_environ.py:17:0: W1507: Using copy.copy(os.environ). Use os.environ.copy() instead.  (shallow-copy-environ)
tests/functional/s/shallow_copy_environ.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
************* Module functional.s.superfluous_parens
tests/functional/s/superfluous_parens.py:14:10: R6201: Consider using set for membership test (use-set-for-membership)
tests/functional/s/superfluous_parens.py:16:13: R6201: Consider using set for membership test (use-set-for-membership)
tests/functional/s/superfluous_parens.py:48:32: R6201: Consider using set for membership test (use-set-for-membership)
tests/functional/s/superfluous_parens.py:2:0: I0021: Useless suppression of 'fixme' (useless-suppression)
************* Module functional.s.stop_iteration_inside_generator
tests/functional/s/stop_iteration_inside_generator.py:24:4: R1708: Do not raise StopIteration in generator, use return statement instead (stop-iteration-return)
tests/functional/s/stop_iteration_inside_generator.py:32:4: R1708: Do not raise StopIteration in generator, use return statement instead (stop-iteration-return)
tests/functional/s/stop_iteration_inside_generator.py:39:14: R1708: Do not raise StopIteration in generator, use return statement instead (stop-iteration-return)
tests/functional/s/stop_iteration_inside_generator.py:59:18: R1708: Do not raise StopIteration in generator, use return statement instead (stop-iteration-return)
tests/functional/s/stop_iteration_inside_generator.py:72:12: R1708: Do not raise StopIteration in generator, use return statement instead (stop-iteration-return)
tests/functional/s/stop_iteration_inside_generator.py:87:18: R1708: Do not raise StopIteration in generator, use return statement instead (stop-iteration-return)
tests/functional/s/stop_iteration_inside_generator.py:129:10: R1708: Do not raise StopIteration in generator, use return statement instead (stop-iteration-return)
tests/functional/s/stop_iteration_inside_generator.py:4:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/s/stop_iteration_inside_generator.py:4:0: I0021: Useless suppression of 'import-error' (useless-suppression)
tests/functional/s/stop_iteration_inside_generator.py:4:0: I0021: Useless suppression of 'not-callable' (useless-suppression)
tests/functional/s/stop_iteration_inside_generator.py:112:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
************* Module functional.s.slots_checks
tests/functional/s/slots_checks.py:36:0: E0238: Invalid __slots__ object (invalid-slots)
tests/functional/s/slots_checks.py:39:0: E0238: Invalid __slots__ object (invalid-slots)
tests/functional/s/slots_checks.py:43:22: E0236: Invalid object '2' in __slots__, must contain only non empty strings (invalid-slots-object)
tests/functional/s/slots_checks.py:45:0: E0238: Invalid __slots__ object (invalid-slots)
tests/functional/s/slots_checks.py:49:27: E0236: Invalid object "''" in __slots__, must contain only non empty strings (invalid-slots-object)
tests/functional/s/slots_checks.py:51:0: C0205: Class __slots__ should be a non-string iterable (single-string-used-for-slots)
tests/functional/s/slots_checks.py:54:0: C0205: Class __slots__ should be a non-string iterable (single-string-used-for-slots)
tests/functional/s/slots_checks.py:57:0: C0205: Class __slots__ should be a non-string iterable (single-string-used-for-slots)
tests/functional/s/slots_checks.py:61:17: E0236: Invalid object 'str' in __slots__, must contain only non empty strings (invalid-slots-object)
tests/functional/s/slots_checks.py:64:17: E0236: Invalid object '1 + 2 + 3' in __slots__, must contain only non empty strings (invalid-slots-object)
tests/functional/s/slots_checks.py:91:17: E0242: Value 'first' in slots conflicts with class variable (class-variable-slots-conflict)
tests/functional/s/slots_checks.py:91:36: E0242: Value 'third' in slots conflicts with class variable (class-variable-slots-conflict)
tests/functional/s/slots_checks.py:91:45: E0242: Value 'fourth' in slots conflicts with class variable (class-variable-slots-conflict)
tests/functional/s/slots_checks.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/s/slots_checks.py:4:0: I0021: Useless suppression of 'wrong-import-position' (useless-suppression)
tests/functional/s/slots_checks.py:4:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.s.signature_differs
tests/functional/s/signature_differs.py:21:4: W0222: Signature differs from overridden 'abcd' method (signature-differs)
tests/functional/s/signature_differs.py:1:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
************* Module functional.s.statement_without_effect
tests/functional/s/statement_without_effect.py:5:0: W0105: String statement has no effect (pointless-string-statement)
tests/functional/s/statement_without_effect.py:9:0: W0104: Statement seems to have no effect (pointless-statement)
tests/functional/s/statement_without_effect.py:11:0: W0104: Statement seems to have no effect (pointless-statement)
tests/functional/s/statement_without_effect.py:15:0: W0104: Statement seems to have no effect (pointless-statement)
tests/functional/s/statement_without_effect.py:18:0: W0105: String statement has no effect (pointless-string-statement)
tests/functional/s/statement_without_effect.py:23:0: W0106: Expression "list() and tuple()" is assigned to nothing (expression-not-assigned)
tests/functional/s/statement_without_effect.py:30:0: W0106: Expression "ANSWER == to_be()" is assigned to nothing (expression-not-assigned)
tests/functional/s/statement_without_effect.py:32:0: W0106: Expression "to_be() or not to_be()" is assigned to nothing (expression-not-assigned)
tests/functional/s/statement_without_effect.py:33:0: W0106: Expression "to_be().title" is assigned to nothing (expression-not-assigned)
tests/functional/s/statement_without_effect.py:58:8: W0105: String statement has no effect (pointless-string-statement)
tests/functional/s/statement_without_effect.py:65:8: W0105: String statement has no effect (pointless-string-statement)
************* Module functional.s.statement_without_effect_py36
tests/functional/s/statement_without_effect_py36.py:18:4: W0105: String statement has no effect (pointless-string-statement)
************* Module functional.s.singledispatch_functions
tests/functional/s/singledispatch_functions.py:60:4: W0612: Unused variable 'unused' (unused-variable)
tests/functional/s/singledispatch_functions.py:65:24: W0613: Unused argument 'arg' (unused-argument)
tests/functional/s/singledispatch_functions.py:70:24: W0613: Unused argument 'arg' (unused-argument)
tests/functional/s/singledispatch_functions.py:75:0: E0102: function already defined line 70 (function-redefined)
tests/functional/s/singledispatch_functions.py:75:24: W0613: Unused argument 'arg' (unused-argument)
tests/functional/s/singledispatch_functions.py:1:0: I0021: Useless suppression of 'assignment-from-no-return' (useless-suppression)
tests/functional/s/singledispatch_functions.py:2:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
tests/functional/s/singledispatch_functions.py:2:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
************* Module functional.s.sys_stream_regression_1004
tests/functional/s/sys_stream_regression_1004.py:6:0: E1101: Instance of 'TextIOWrapper' has no 'buff' member (no-member)
tests/functional/s/sys_stream_regression_1004.py:7:0: E1101: Instance of 'BufferedWriter' has no 'write1' member; maybe 'write'? (no-member)
tests/functional/s/sys_stream_regression_1004.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/s/sys_stream_regression_1004.py:2:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/s/sys_stream_regression_1004.py:2:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.s.singleton_comparison
tests/functional/s/singleton_comparison.py:4:4: C0121: Comparison 'x == None' should be 'x is None' (singleton-comparison)
tests/functional/s/singleton_comparison.py:5:4: C0121: Comparison 'x == True' should be 'x is True' if checking for the singleton value True, or 'bool(x)' if testing for truthiness (singleton-comparison)
tests/functional/s/singleton_comparison.py:6:4: C0121: Comparison 'x == False' should be 'x is False' if checking for the singleton value False, or 'not x' if testing for falsiness (singleton-comparison)
tests/functional/s/singleton_comparison.py:7:4: C0121: Comparison 'True == True' should be 'True is True' if checking for the singleton value True, or 'bool(True)' if testing for truthiness (singleton-comparison)
tests/functional/s/singleton_comparison.py:11:4: C0121: Comparison 'None == x' should be 'None is x' (singleton-comparison)
tests/functional/s/singleton_comparison.py:11:4: C2201: Comparison should be x == None (misplaced-comparison-constant)
tests/functional/s/singleton_comparison.py:12:5: C0121: Comparison 'True == x' should be 'True is x' if checking for the singleton value True, or 'bool(x)' if testing for truthiness (singleton-comparison)
tests/functional/s/singleton_comparison.py:12:5: C2201: Comparison should be x == True (misplaced-comparison-constant)
tests/functional/s/singleton_comparison.py:13:5: C0121: Comparison 'False == x' should be 'False is x' if checking for the singleton value False, or 'not x' if testing for falsiness (singleton-comparison)
tests/functional/s/singleton_comparison.py:13:5: C2201: Comparison should be x == False (misplaced-comparison-constant)
tests/functional/s/singleton_comparison.py:15:4: C0121: Comparison 'x != True' should be 'x is not True' if checking for the singleton value True, or 'not x' if testing for falsiness (singleton-comparison)
tests/functional/s/singleton_comparison.py:16:5: C0121: Comparison 'x != False' should be 'x is not False' if checking for the singleton value False, or 'bool(x)' if testing for truthiness (singleton-comparison)
tests/functional/s/singleton_comparison.py:17:5: C0121: Comparison 'x != None' should be 'x is not None' (singleton-comparison)
tests/functional/s/singleton_comparison.py:18:7: C0121: Comparison 'x == True' should be 'x is True' if checking for the singleton value True, or 'x' if testing for truthiness (singleton-comparison)
tests/functional/s/singleton_comparison.py:19:7: C0121: Comparison 'x != False' should be 'x is not False' if checking for the singleton value False, or 'x' if testing for truthiness (singleton-comparison)
tests/functional/s/singleton_comparison.py:20:3: C0121: Comparison 'x == True' should be 'x is True' if checking for the singleton value True, or 'x' if testing for truthiness (singleton-comparison)
tests/functional/s/singleton_comparison.py:22:9: C0121: Comparison 'x == True' should be 'x is True' if checking for the singleton value True, or 'x' if testing for truthiness (singleton-comparison)
tests/functional/s/singleton_comparison.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/s/singleton_comparison.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.g.globals
tests/functional/g/globals.py:5:0: W0604: Using the global statement at the module level (global-at-module-level)
tests/functional/g/globals.py:6:6: E0602: Undefined variable 'CSTE' (undefined-variable)
tests/functional/g/globals.py:17:4: W0603: Using the global statement (global-statement)
tests/functional/g/globals.py:24:4: W0602: Using global for 'HOP' but no assignment is done (global-variable-not-assigned)
tests/functional/g/globals.py:25:10: E0602: Undefined variable 'HOP' (undefined-variable)
tests/functional/g/globals.py:30:4: W0601: Global variable 'SOMEVAR' undefined at the module level (global-variable-undefined)
tests/functional/g/globals.py:36:4: W0603: Using the global statement (global-statement)
tests/functional/g/globals.py:42:4: W0602: Using global for 'CONSTANT' but no assignment is done (global-variable-not-assigned)
tests/functional/g/globals.py:48:4: W0603: Using the global statement (global-statement)
tests/functional/g/globals.py:55:4: W0603: Using the global statement (global-statement)
tests/functional/g/globals.py:62:4: W0603: Using the global statement (global-statement)
tests/functional/g/globals.py:72:4: W0603: Using the global statement (global-statement)
tests/functional/g/globals.py:81:4: W0603: Using the global statement (global-statement)
tests/functional/g/globals.py:87:4: W0603: Using the global statement (global-statement)
************* Module functional.g.generated_members
tests/functional/g/generated_members.py:10:6: E1101: Instance of 'Klass' has no 'DoesNotExist' member (no-member)
tests/functional/g/generated_members.py:11:6: E1101: Instance of 'Klass' has no 'aBC_set1' member (no-member)
tests/functional/g/generated_members.py:12:6: E1101: Instance of 'Klass' has no 'ham' member (no-member)
tests/functional/g/generated_members.py:13:6: E1101: Instance of 'Klass' has no 'spam' member (no-member)
tests/functional/g/generated_members.py:15:0: E1101: Module 'pylint.checkers.base' has no 'doesnotexist' member (no-member)
tests/functional/g/generated_members.py:19:0: E1101: Instance of 'Klass' has no 'rollback' member (no-member)
tests/functional/g/generated_members.py:20:0: E1101: Instance of 'Klass' has no 'rollback' member (no-member)
tests/functional/g/generated_members.py:2:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
************* Module functional.g.genexp_in_class_scope
tests/functional/g/genexp_in_class_scope.py:1:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/g/genexp_in_class_scope.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.g.genexpr_variable_scope
tests/functional/g/genexpr_variable_scope.py:5:6: E0602: Undefined variable 'n' (undefined-variable)
************* Module functional.g.generic_alias.generic_alias_related_py39
tests/functional/g/generic_alias/generic_alias_related_py39.py:36:0: E1136: Value 'ClsUnsubscriptable()' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_related_py39.py:37:0: E1136: Value 'ClsUnsubscriptable' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_related_py39.py:40:0: E1136: Value 'ClsGetItem' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_related_py39.py:42:0: E1136: Value 'ClsClassGetItem()' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_related_py39.py:55:0: W0223: Method 'abstract_method' is abstract in class 'ClsAbstract' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_related_py39.py:32:14: R6002: 'typing.List' will be deprecated with PY39, consider using 'list' instead (consider-using-alias)
tests/functional/g/generic_alias/generic_alias_related_py39.py:9:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_related_py39.py:10:0: I0021: Useless suppression of 'multiple-statements' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_related_py39.py:10:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.g.generic_alias.generic_alias_related
tests/functional/g/generic_alias/generic_alias_related.py:34:0: E1136: Value 'ClsUnsubscriptable()' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_related.py:35:0: E1136: Value 'ClsUnsubscriptable' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_related.py:38:0: E1136: Value 'ClsGetItem' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_related.py:40:0: E1136: Value 'ClsClassGetItem()' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_related.py:53:0: W0223: Method 'abstract_method' is abstract in class 'ClsAbstract' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_related.py:30:14: R6002: 'typing.List' will be deprecated with PY39, consider using 'list' instead (consider-using-alias)
tests/functional/g/generic_alias/generic_alias_related.py:9:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_related.py:10:0: I0021: Useless suppression of 'multiple-statements' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_related.py:10:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.g.generic_alias.generic_alias_postponed_evaluation_py37
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:74:0: E1136: Value 'collections.abc.Hashable' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:75:0: E1136: Value 'collections.abc.Sized' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:82:0: W0223: Method '__hash__' is abstract in class 'Hashable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:85:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:88:0: W0223: Method '__contains__' is abstract in class 'Container' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:88:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:88:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:107:0: W0223: Method '__hash__' is abstract in class 'Hashable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:107:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:112:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:112:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:114:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:114:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:188:8: E1136: Value 'A' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:7:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:7:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:8:0: I0021: Useless suppression of 'multiple-statements' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:8:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.g.generic_alias.generic_alias_collections_py37_with_typing
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:71:0: E1136: Value 'collections.abc.Hashable' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:72:0: E1136: Value 'collections.abc.Sized' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:79:0: W0223: Method '__hash__' is abstract in class 'Hashable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:82:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:85:0: W0223: Method '__contains__' is abstract in class 'Container' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:85:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:85:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:104:0: W0223: Method '__hash__' is abstract in class 'Hashable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:104:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:109:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:109:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:111:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:111:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:130:9: E1136: Value 'int' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:131:15: E1136: Value 'collections.abc.Hashable' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:132:12: E1136: Value 'collections.abc.Sized' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:7:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:7:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:8:0: I0021: Useless suppression of 'multiple-statements' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:8:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.g.generic_alias.generic_alias_mixed_py39
tests/functional/g/generic_alias/generic_alias_mixed_py39.py:29:0: W0223: Method '__hash__' is abstract in class 'Hashable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_mixed_py39.py:32:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_mixed_py39.py:35:0: W0223: Method '__contains__' is abstract in class 'Container' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_mixed_py39.py:35:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_mixed_py39.py:35:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_mixed_py39.py:29:22: R6002: 'typing.Hashable' will be deprecated with PY39, consider using 'collections.abc.Hashable' instead (consider-using-alias)
tests/functional/g/generic_alias/generic_alias_mixed_py39.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_mixed_py39.py:3:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_mixed_py39.py:3:0: I0021: Useless suppression of 'pointless-statement' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_mixed_py39.py:4:0: I0021: Useless suppression of 'multiple-statements' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_mixed_py39.py:4:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.g.generic_alias.generic_alias_side_effects
tests/functional/g/generic_alias/generic_alias_side_effects.py:19:0: W0102: Dangerous default value set() (builtins.set) as argument (dangerous-default-value)
tests/functional/g/generic_alias/generic_alias_side_effects.py:27:0: W0102: Dangerous default value dict() (builtins.dict) as argument (dangerous-default-value)
tests/functional/g/generic_alias/generic_alias_side_effects.py:31:0: W0102: Dangerous default value list() (builtins.list) as argument (dangerous-default-value)
tests/functional/g/generic_alias/generic_alias_side_effects.py:35:0: W0102: Dangerous default value deque() (collections.deque) as argument (dangerous-default-value)
tests/functional/g/generic_alias/generic_alias_side_effects.py:39:0: W0102: Dangerous default value ChainMap() (collections.ChainMap) as argument (dangerous-default-value)
tests/functional/g/generic_alias/generic_alias_side_effects.py:43:0: W0102: Dangerous default value Counter() (collections.Counter) as argument (dangerous-default-value)
tests/functional/g/generic_alias/generic_alias_side_effects.py:47:0: W0102: Dangerous default value OrderedDict() (collections.OrderedDict) as argument (dangerous-default-value)
tests/functional/g/generic_alias/generic_alias_side_effects.py:51:0: W0102: Dangerous default value defaultdict() (collections.defaultdict) as argument (dangerous-default-value)
tests/functional/g/generic_alias/generic_alias_side_effects.py:1:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_side_effects.py:1:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.g.generic_alias.generic_alias_collections
tests/functional/g/generic_alias/generic_alias_collections.py:66:0: E1136: Value 'collections.abc.Hashable' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections.py:67:0: E1136: Value 'collections.abc.Sized' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections.py:74:0: W0223: Method '__hash__' is abstract in class 'Hashable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections.py:77:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections.py:80:0: W0223: Method '__contains__' is abstract in class 'Container' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections.py:80:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections.py:80:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections.py:99:0: W0223: Method '__hash__' is abstract in class 'Hashable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections.py:99:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections.py:104:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections.py:104:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections.py:106:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections.py:106:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections.py:125:9: E1136: Value 'int' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections.py:126:15: E1136: Value 'collections.abc.Hashable' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections.py:127:12: E1136: Value 'collections.abc.Sized' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_collections.py:3:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_collections.py:4:0: I0021: Useless suppression of 'multiple-statements' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_collections.py:4:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.g.generic_alias.generic_alias_collections_py37
tests/functional/g/generic_alias/generic_alias_collections_py37.py:69:0: E1136: Value 'collections.abc.Hashable' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:70:0: E1136: Value 'collections.abc.Sized' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:77:0: W0223: Method '__hash__' is abstract in class 'Hashable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:80:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:83:0: W0223: Method '__contains__' is abstract in class 'Container' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:83:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:83:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:102:0: W0223: Method '__hash__' is abstract in class 'Hashable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:102:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:107:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:107:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:109:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:109:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:128:9: E1136: Value 'int' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:129:15: E1136: Value 'collections.abc.Hashable' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:130:12: E1136: Value 'collections.abc.Sized' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:6:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:6:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:7:0: I0021: Useless suppression of 'multiple-statements' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:7:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.g.generic_alias.generic_alias_typing
tests/functional/g/generic_alias/generic_alias_typing.py:66:0: E1136: Value 'typing.ByteString' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_typing.py:67:0: E1136: Value 'typing.Hashable' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_typing.py:68:0: E1136: Value 'typing.Sized' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_typing.py:72:0: W0223: Method '__hash__' is abstract in class 'Hashable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_typing.py:75:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_typing.py:78:0: W0223: Method '__contains__' is abstract in class 'Container' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_typing.py:78:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_typing.py:78:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_typing.py:100:0: W0223: Method '__hash__' is abstract in class 'Hashable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_typing.py:100:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_typing.py:105:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_typing.py:105:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_typing.py:107:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_typing.py:107:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_typing.py:118:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_typing.py:138:9: E1136: Value 'int' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_typing.py:139:17: E1136: Value 'typing.ByteString' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_typing.py:140:15: E1136: Value 'typing.Hashable' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_typing.py:141:12: E1136: Value 'typing.Sized' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_typing.py:148:8: E1136: Value 'A' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_typing.py:150:8: E1136: Value 'A' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_typing.py:112:19: R6002: 'typing.List' will be deprecated with PY39, consider using 'list' instead (consider-using-alias)
tests/functional/g/generic_alias/generic_alias_typing.py:123:11: R6002: 'typing.Tuple' will be deprecated with PY39, consider using 'tuple' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/g/generic_alias/generic_alias_typing.py:124:10: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/g/generic_alias/generic_alias_typing.py:130:20: R6002: 'typing.ContextManager' will be deprecated with PY39, consider using 'contextlib.AbstractContextManager' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/g/generic_alias/generic_alias_typing.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_typing.py:4:0: I0021: Useless suppression of 'multiple-statements' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_typing.py:4:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.g.generic_alias.generic_alias_mixed_py37
tests/functional/g/generic_alias/generic_alias_mixed_py37.py:34:0: W0223: Method '__hash__' is abstract in class 'Hashable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_mixed_py37.py:37:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_mixed_py37.py:40:0: W0223: Method '__contains__' is abstract in class 'Container' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_mixed_py37.py:40:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_mixed_py37.py:40:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_mixed_py37.py:34:22: R6002: 'typing.Hashable' will be deprecated with PY39, consider using 'collections.abc.Hashable' instead (consider-using-alias)
tests/functional/g/generic_alias/generic_alias_mixed_py37.py:6:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_mixed_py37.py:6:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_mixed_py37.py:6:0: I0021: Useless suppression of 'pointless-statement' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_mixed_py37.py:7:0: I0021: Useless suppression of 'multiple-statements' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_mixed_py37.py:7:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.f.forgotten_debug_statement_py37
tests/functional/f/forgotten_debug_statement_py37.py:6:0: W1515: Leaving functions creating breakpoints in production code is not recommended (forgotten-debug-statement)
tests/functional/f/forgotten_debug_statement_py37.py:7:0: W1515: Leaving functions creating breakpoints in production code is not recommended (forgotten-debug-statement)
tests/functional/f/forgotten_debug_statement_py37.py:8:0: W1515: Leaving functions creating breakpoints in production code is not recommended (forgotten-debug-statement)
tests/functional/f/forgotten_debug_statement_py37.py:10:0: W1515: Leaving functions creating breakpoints in production code is not recommended (forgotten-debug-statement)
tests/functional/f/forgotten_debug_statement_py37.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/f/forgotten_debug_statement_py37.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.f.function_redefined
tests/functional/f/function_redefined.py:18:4: E0102: method already defined line 15 (function-redefined)
tests/functional/f/function_redefined.py:21:0: E0102: class already defined line 8 (function-redefined)
tests/functional/f/function_redefined.py:35:0: E0102: function already defined line 32 (function-redefined)
tests/functional/f/function_redefined.py:37:4: W0621: Redefining name '__revision__' from outer scope (line 7) (redefined-outer-name)
tests/functional/f/function_redefined.py:54:4: E0102: function already defined line 48 (function-redefined)
tests/functional/f/function_redefined.py:89:0: E0102: function already defined line 88 (function-redefined)
tests/functional/f/function_redefined.py:93:0: E0102: function already defined line 92 (function-redefined)
tests/functional/f/function_redefined.py:125:14: R6002: 'typing.Callable' will be deprecated with PY39, consider using 'collections.abc.Callable' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/f/function_redefined.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/f/function_redefined.py:1:0: I0021: Useless suppression of 'using-constant-test' (useless-suppression)
************* Module functional.f.first_arg
tests/functional/f/first_arg.py:10:4: C0202: Class method __new__ should have 'cls' as first argument (bad-classmethod-argument)
tests/functional/f/first_arg.py:16:4: R0202: Consider using a decorator instead of calling classmethod (no-classmethod-decorator)
tests/functional/f/first_arg.py:18:4: C0202: Class method class2 should have 'cls' as first argument (bad-classmethod-argument)
tests/functional/f/first_arg.py:20:4: R0202: Consider using a decorator instead of calling classmethod (no-classmethod-decorator)
tests/functional/f/first_arg.py:25:4: C0204: Metaclass class method __new__ should have 'mcs' as first argument (bad-mcs-classmethod-argument)
tests/functional/f/first_arg.py:32:4: C0203: Metaclass method method2 should have 'cls' as first argument (bad-mcs-method-argument)
tests/functional/f/first_arg.py:36:4: C0204: Metaclass class method class1 should have 'mcs' as first argument (bad-mcs-classmethod-argument)
tests/functional/f/first_arg.py:38:4: R0202: Consider using a decorator instead of calling classmethod (no-classmethod-decorator)
tests/functional/f/first_arg.py:40:4: C0204: Metaclass class method class2 should have 'mcs' as first argument (bad-mcs-classmethod-argument)
tests/functional/f/first_arg.py:42:4: R0202: Consider using a decorator instead of calling classmethod (no-classmethod-decorator)
tests/functional/f/first_arg.py:1:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.f.func_disable_linebased
tests/functional/f/func_disable_linebased.py:2:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.f.f_string_without_interpolation
tests/functional/f/f_string_without_interpolation.py:9:6: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
************* Module functional.f.fallback_import_enabled
tests/functional/f/fallback_import_enabled.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/f/fallback_import_enabled.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.f.function_redefined_2540
tests/functional/f/function_redefined_2540.py:1:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
************* Module functional.f.future_unicode_literals
tests/functional/f/future_unicode_literals.py:5:15: W1402: Anomalous Unicode escape in byte string: '\u'. String constant might be missing an r or u prefix. (anomalous-unicode-escape-in-string)
************* Module functional.f.fixme
tests/functional/f/fixme.py:2:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/f/fixme.py:30:0: I0021: Useless suppression of 'fixme' (useless-suppression)
tests/functional/f/fixme.py:31:0: I0021: Useless suppression of 'fixme' (useless-suppression)
tests/functional/f/fixme.py:32:0: I0021: Useless suppression of 'fixme' (useless-suppression)
tests/functional/f/fixme.py:32:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.f.fallback_import_disabled
tests/functional/f/fallback_import_disabled.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/f/fallback_import_disabled.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.f.formatted_string_literal_with_if
tests/functional/f/formatted_string_literal_with_if.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/f/formatted_string_literal_with_if.py:2:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/f/formatted_string_literal_with_if.py:2:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.a.await_outside_async
tests/functional/a/await_outside_async.py:12:10: E1142: 'await' should be used within an async function (await-outside-async)
tests/functional/a/await_outside_async.py:25:8: E1142: 'await' should be used within an async function (await-outside-async)
tests/functional/a/await_outside_async.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.a.arguments_differ
tests/functional/a/arguments_differ.py:12:4: W0221: Number of parameters was 1 in 'Parent.test' and is now 2 in overridden 'Child.test' method (arguments-differ)
tests/functional/a/arguments_differ.py:23:4: W0221: Number of parameters was 3 in 'ParentDefaults.test' and is now 2 in overridden 'ChildDefaults.test' method (arguments-differ)
tests/functional/a/arguments_differ.py:41:4: W0221: Number of parameters was 2 in 'Classmethod.func' and is now 0 in overridden 'ClassmethodChild.func' method (arguments-differ)
tests/functional/a/arguments_differ.py:68:4: W0221: Variadics removed in overridden 'VarargsChild.has_kwargs' method (arguments-differ)
tests/functional/a/arguments_differ.py:71:4: W0237: Parameter 'args' has been renamed to 'arg' in overridden 'VarargsChild.no_kwargs' method (arguments-renamed)
tests/functional/a/arguments_differ.py:144:4: W0221: Number of parameters was 1 in 'Staticmethod.func' and is now 2 in overridden 'StaticmethodChild2.func' method (arguments-differ)
tests/functional/a/arguments_differ.py:180:4: W0221: Number of parameters was 2 in 'FirstHasArgs.test' and is now 4 in overridden 'SecondChangesArgs.test' method (arguments-differ)
tests/functional/a/arguments_differ.py:243:4: W0237: Parameter 'arg' has been renamed to '_arg' in overridden 'ChildClass.meth' method (arguments-renamed)
tests/functional/a/arguments_differ.py:307:4: W0221: Number of parameters was 4 in 'AbstractFoo.kwonly_1' and is now 3 in overridden 'Foo.kwonly_1' method (arguments-differ)
tests/functional/a/arguments_differ.py:310:4: W0221: Number of parameters was 3 in 'AbstractFoo.kwonly_2' and is now 2 in overridden 'Foo.kwonly_2' method (arguments-differ)
tests/functional/a/arguments_differ.py:313:4: W0221: Number of parameters was 3 in 'AbstractFoo.kwonly_3' and is now 3 in overridden 'Foo.kwonly_3' method (arguments-differ)
tests/functional/a/arguments_differ.py:316:4: W0221: Number of parameters was 3 in 'AbstractFoo.kwonly_4' and is now 3 in overridden 'Foo.kwonly_4' method (arguments-differ)
tests/functional/a/arguments_differ.py:319:4: W0221: Variadics removed in overridden 'Foo.kwonly_5' method (arguments-differ)
tests/functional/a/arguments_differ.py:359:4: W0221: Number of parameters was 2 in 'AClass.method' and is now 3 in overridden 'ClassWithNewNonDefaultKeywordOnly.method' method (arguments-differ)
tests/functional/a/arguments_differ.py:257:31: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/a/arguments_differ.py:261:31: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/a/arguments_differ.py:265:37: R6002: 'typing.List' will be deprecated with PY39, consider using 'list' instead (consider-using-alias)
tests/functional/a/arguments_differ.py:269:37: R6002: 'typing.List' will be deprecated with PY39, consider using 'list' instead (consider-using-alias)
tests/functional/a/arguments_differ.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.a.assert_on_string_literal
tests/functional/a/assert_on_string_literal.py:3:0: W0129: Assert statement has a string literal as its first argument. The assert will never fail. (assert-on-string-literal)
tests/functional/a/assert_on_string_literal.py:4:0: W0129: Assert statement has a string literal as its first argument. The assert will always fail. (assert-on-string-literal)
************* Module functional.a.anomalous_backslash_escape
tests/functional/a/anomalous_backslash_escape.py:4:14: W1401: Anomalous backslash in string: '\z'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
tests/functional/a/anomalous_backslash_escape.py:5:27: W1401: Anomalous backslash in string: '\z'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
tests/functional/a/anomalous_backslash_escape.py:6:30: W1401: Anomalous backslash in string: '\z'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
tests/functional/a/anomalous_backslash_escape.py:8:4: W1401: Anomalous backslash in string: '\z'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
tests/functional/a/anomalous_backslash_escape.py:12:4: W1401: Anomalous backslash in string: '\z'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
tests/functional/a/anomalous_backslash_escape.py:15:23: W1401: Anomalous backslash in string: '\z'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
************* Module functional.a.assert_on_tuple
tests/functional/a/assert_on_tuple.py:5:0: W0199: Assert called on a 2-item-tuple. Did you mean 'assert x,y'? (assert-on-tuple)
tests/functional/a/assert_on_tuple.py:11:0: W0199: Assert called on a 2-item-tuple. Did you mean 'assert x,y'? (assert-on-tuple)
************* Module functional.a.arguments_out_of_order
tests/functional/a/arguments_out_of_order.py:22:4: W1114: Positional arguments appear to be out of order (arguments-out-of-order)
tests/functional/a/arguments_out_of_order.py:23:4: W1114: Positional arguments appear to be out of order (arguments-out-of-order)
tests/functional/a/arguments_out_of_order.py:25:4: W1114: Positional arguments appear to be out of order (arguments-out-of-order)
tests/functional/a/arguments_out_of_order.py:51:4: W1114: Positional arguments appear to be out of order (arguments-out-of-order)
tests/functional/a/arguments_out_of_order.py:1:0: I0021: Useless suppression of 'no-method-argument' (useless-suppression)
************* Module functional.a.arguments
tests/functional/a/arguments.py:47:0: E1120: No value for argument 'first_argument' in function call (no-value-for-parameter)
tests/functional/a/arguments.py:48:0: E1121: Too many positional arguments for function call (too-many-function-args)
tests/functional/a/arguments.py:50:0: E1120: No value for argument 'third_argument' in function call (no-value-for-parameter)
tests/functional/a/arguments.py:52:0: E1120: No value for argument 'first_argument' in function call (no-value-for-parameter)
tests/functional/a/arguments.py:52:0: E1120: No value for argument 'second_argument' in function call (no-value-for-parameter)
tests/functional/a/arguments.py:52:0: E1120: No value for argument 'third_argument' in function call (no-value-for-parameter)
tests/functional/a/arguments.py:54:0: E1121: Too many positional arguments for function call (too-many-function-args)
tests/functional/a/arguments.py:59:0: E1123: Unexpected keyword argument 'bob' in function call (unexpected-keyword-arg)
tests/functional/a/arguments.py:59:0: E1120: No value for argument 'first_argument' in function call (no-value-for-parameter)
tests/functional/a/arguments.py:60:0: E1123: Unexpected keyword argument 'coin' in function call (unexpected-keyword-arg)
tests/functional/a/arguments.py:62:0: E1124: Argument 'one' passed by position and keyword in function call (redundant-keyword-arg)
tests/functional/a/arguments.py:67:0: E1120: No value for argument 'arg' in lambda call (no-value-for-parameter)
tests/functional/a/arguments.py:72:4: E1120: No value for argument 'arg' in staticmethod call (no-value-for-parameter)
tests/functional/a/arguments.py:73:4: E1120: No value for argument 'arg' in staticmethod call (no-value-for-parameter)
tests/functional/a/arguments.py:75:4: E1120: No value for argument 'arg' in classmethod call (no-value-for-parameter)
tests/functional/a/arguments.py:76:4: E1120: No value for argument 'arg' in classmethod call (no-value-for-parameter)
tests/functional/a/arguments.py:78:4: E1120: No value for argument 'arg' in method call (no-value-for-parameter)
tests/functional/a/arguments.py:79:4: E1120: No value for argument 'arg' in unbound method call (no-value-for-parameter)
tests/functional/a/arguments.py:81:4: E1120: No value for argument 'arg' in method call (no-value-for-parameter)
tests/functional/a/arguments.py:82:4: E1120: No value for argument 'arg' in unbound method call (no-value-for-parameter)
tests/functional/a/arguments.py:111:8: E1120: No value for argument 'first' in staticmethod call (no-value-for-parameter)
tests/functional/a/arguments.py:112:8: E1121: Too many positional arguments for staticmethod call (too-many-function-args)
tests/functional/a/arguments.py:120:8: E1121: Too many positional arguments for constructor call (too-many-function-args)
tests/functional/a/arguments.py:122:8: E1120: No value for argument 'first' in constructor call (no-value-for-parameter)
tests/functional/a/arguments.py:122:8: E1120: No value for argument 'second' in constructor call (no-value-for-parameter)
tests/functional/a/arguments.py:123:8: E1123: Unexpected keyword argument 'lala' in constructor call (unexpected-keyword-arg)
tests/functional/a/arguments.py:123:8: E1120: No value for argument 'second' in constructor call (no-value-for-parameter)
tests/functional/a/arguments.py:134:8: E1120: No value for argument 'icon' in method call (no-value-for-parameter)
tests/functional/a/arguments.py:135:8: E1121: Too many positional arguments for method call (too-many-function-args)
tests/functional/a/arguments.py:137:0: E1120: No value for argument 'icon' in method call (no-value-for-parameter)
tests/functional/a/arguments.py:164:4: E1120: No value for argument 'two' in function call (no-value-for-parameter)
tests/functional/a/arguments.py:164:4: E1120: No value for argument 'three' in function call (no-value-for-parameter)
tests/functional/a/arguments.py:167:4: E1120: No value for argument 'two' in function call (no-value-for-parameter)
tests/functional/a/arguments.py:167:4: E1120: No value for argument 'three' in function call (no-value-for-parameter)
tests/functional/a/arguments.py:203:23: E1123: Unexpected keyword argument 'd' in method call (unexpected-keyword-arg)
tests/functional/a/arguments.py:203:23: E1123: Unexpected keyword argument 'e' in method call (unexpected-keyword-arg)
tests/functional/a/arguments.py:216:0: E1120: No value for argument 'third' in function call (no-value-for-parameter)
tests/functional/a/arguments.py:217:0: E1120: No value for argument 'second' in function call (no-value-for-parameter)
tests/functional/a/arguments.py:218:0: E1123: Unexpected keyword argument 'fourth' in function call (unexpected-keyword-arg)
tests/functional/a/arguments.py:253:0: E1120: No value for argument 'arg' in function call (no-value-for-parameter)
tests/functional/a/arguments.py:254:0: E1120: No value for argument 'arg' in function call (no-value-for-parameter)
tests/functional/a/arguments.py:256:0: E1120: No value for argument 'arg' in function call (no-value-for-parameter)
************* Module functional.a.async_functions
tests/functional/a/async_functions.py:5:0: W0622: Redefining built-in 'next' (redefined-builtin)
tests/functional/a/async_functions.py:8:30: W0613: Unused argument 'arg2' (unused-argument)
tests/functional/a/async_functions.py:22:8: E1003: Bad first argument 'OtherClass' given to super() (bad-super-call)
tests/functional/a/async_functions.py:57:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
tests/functional/a/async_functions.py:57:18: E0108: Duplicate argument name a in function definition (duplicate-argument-name)
tests/functional/a/async_functions.py:62:0: C0112: Empty function docstring (empty-docstring)
tests/functional/a/async_functions.py:62:0: C0104: Disallowed name "foo" (disallowed-name)
tests/functional/a/async_functions.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.a.anomalous_unicode_escape
tests/functional/a/anomalous_unicode_escape.py:5:16: W1402: Anomalous Unicode escape in byte string: '\u'. String constant might be missing an r or u prefix. (anomalous-unicode-escape-in-string)
tests/functional/a/anomalous_unicode_escape.py:6:21: W1402: Anomalous Unicode escape in byte string: '\U'. String constant might be missing an r or u prefix. (anomalous-unicode-escape-in-string)
tests/functional/a/anomalous_unicode_escape.py:8:22: W1402: Anomalous Unicode escape in byte string: '\N'. String constant might be missing an r or u prefix. (anomalous-unicode-escape-in-string)
tests/functional/a/anomalous_unicode_escape.py:1:0: I0021: Useless suppression of 'pointless-string-statement' (useless-suppression)
************* Module functional.a.arguments_renamed
tests/functional/a/arguments_renamed.py:17:4: W0237: Parameter 'fruit_name' has been renamed to 'orange_name' in overridden 'Orange.brew' method (arguments-renamed)
tests/functional/a/arguments_renamed.py:20:4: W0237: Parameter 'fruit_name' has been renamed to 'orange_name' in overridden 'Orange.eat_with_condiment' method (arguments-renamed)
tests/functional/a/arguments_renamed.py:27:4: W0221: Number of parameters was 3 in 'Fruit.eat_with_condiment' and is now 4 in overridden 'Banana.eat_with_condiment' method (arguments-differ)
tests/functional/a/arguments_renamed.py:40:4: W0237: Parameter 'arg' has been renamed to 'arg1' in overridden 'Child.test' method (arguments-renamed)
tests/functional/a/arguments_renamed.py:43:4: W0221: Number of parameters was 4 in 'Parent.kwargs_test' and is now 4 in overridden 'Child.kwargs_test' method (arguments-differ)
tests/functional/a/arguments_renamed.py:48:4: W0237: Parameter 'arg' has been renamed to 'var' in overridden 'Child2.test' method (arguments-renamed)
tests/functional/a/arguments_renamed.py:51:4: W0221: Number of parameters was 4 in 'Parent.kwargs_test' and is now 3 in overridden 'Child2.kwargs_test' method (arguments-differ)
tests/functional/a/arguments_renamed.py:67:4: W0237: Parameter 'barg' has been renamed to 'param2' in overridden 'ChildDefaults.test1' method (arguments-renamed)
tests/functional/a/arguments_renamed.py:70:4: W0237: Parameter 'arg' has been renamed to '_arg' in overridden 'ChildDefaults.test2' method (arguments-renamed)
tests/functional/a/arguments_renamed.py:70:4: W0237: Parameter 'barg' has been renamed to 'ignored_barg' in overridden 'ChildDefaults.test2' method (arguments-renamed)
tests/functional/a/arguments_renamed.py:95:8: W0237: Parameter 'fruit_name' has been renamed to 'orange_name' in overridden 'FruitOverrideConditional.brew' method (arguments-renamed)
tests/functional/a/arguments_renamed.py:99:12: W0221: Number of parameters was 3 in 'FruitConditional.eat_with_condiment' and is now 4 in overridden 'FruitOverrideConditional.eat_with_condiment' method (arguments-differ)
tests/functional/a/arguments_renamed.py:1:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
tests/functional/a/arguments_renamed.py:1:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
************* Module functional.i.inherit_non_class
tests/functional/i/inherit_non_class.py:21:0: E0239: Inheriting '1', which is not a class. (inherit-non-class)
tests/functional/i/inherit_non_class.py:24:0: E0239: Inheriting 'lambda abc: 42', which is not a class. (inherit-non-class)
tests/functional/i/inherit_non_class.py:27:0: E0239: Inheriting 'object()', which is not a class. (inherit-non-class)
tests/functional/i/inherit_non_class.py:30:0: E0239: Inheriting 'return_class', which is not a class. (inherit-non-class)
tests/functional/i/inherit_non_class.py:33:0: E0239: Inheriting 'Empty()', which is not a class. (inherit-non-class)
tests/functional/i/inherit_non_class.py:68:0: E0239: Inheriting 'bool', which is not a class. (inherit-non-class)
tests/functional/i/inherit_non_class.py:72:0: E0239: Inheriting 'range', which is not a class. (inherit-non-class)
tests/functional/i/inherit_non_class.py:76:0: E0239: Inheriting 'slice', which is not a class. (inherit-non-class)
tests/functional/i/inherit_non_class.py:80:0: E0239: Inheriting 'memoryview', which is not a class. (inherit-non-class)
tests/functional/i/inherit_non_class.py:98:0: E0239: Inheriting 'ParentBad[int]', which is not a class. (inherit-non-class)
tests/functional/i/inherit_non_class.py:102:13: E1136: Value 'Empty' is unsubscriptable (unsubscriptable-object)
tests/functional/i/inherit_non_class.py:5:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/i/inherit_non_class.py:5:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/i/inherit_non_class.py:95:0: I0021: Useless suppression of 'fixme' (useless-suppression)
************* Module functional.i.import_itself
tests/functional/i/import_itself.py:4:0: W0406: Module import itself (import-self)
tests/functional/i/import_itself.py:2:0: I0021: Useless suppression of 'using-constant-test' (useless-suppression)
************* Module functional.i.import_error
tests/functional/i/import_error.py:3:0: E0401: Unable to import 'totally_missing' (import-error)
tests/functional/i/import_error.py:21:4: E0401: Unable to import 'maybe_missing_2' (import-error)
tests/functional/i/import_error.py:33:0: E0001: Cannot import 'functional.s.syntax.syntax_error' due to syntax error 'invalid syntax (<unknown>, line 1)' (syntax-error)
tests/functional/i/import_error.py:33:0: E0611: No name 'syntax_error' in module 'functional.s.syntax' (no-name-in-module)
tests/functional/i/import_error.py:68:0: E0401: Unable to import 'external_module' (import-error)
tests/functional/i/import_error.py:70:0: E0401: Unable to import 'external_module.another_module' (import-error)
tests/functional/i/import_error.py:70:0: W0404: Reimport 'anything' (imported line 68) (reimported)
tests/functional/i/import_error.py:72:0: E0401: Unable to import 'external_module' (import-error)
tests/functional/i/import_error.py:74:0: E0401: Unable to import 'fake_module.submodule' (import-error)
tests/functional/i/import_error.py:74:0: W0404: Reimport 'anything' (imported line 68) (reimported)
tests/functional/i/import_error.py:76:0: E0401: Unable to import 'fake_module.submodule.deeper' (import-error)
tests/functional/i/import_error.py:76:0: W0404: Reimport 'anything' (imported line 68) (reimported)
tests/functional/i/import_error.py:78:0: C0410: Multiple imports on one line (foo, bar) (multiple-imports)
tests/functional/i/import_error.py:80:0: W0404: Reimport 'foo' (imported line 78) (reimported)
tests/functional/i/import_error.py:81:0: W0404: Reimport 'bar' (imported line 78) (reimported)
tests/functional/i/import_error.py:80:0: C0412: Imports from package foo are not grouped (ungrouped-imports)
tests/functional/i/import_error.py:81:0: C0412: Imports from package bar are not grouped (ungrouped-imports)
tests/functional/i/import_error.py:2:0: I0021: Useless suppression of 'bare-except' (useless-suppression)
tests/functional/i/import_error.py:2:0: I0021: Useless suppression of 'broad-except' (useless-suppression)
************* Module functional.i.import_outside_toplevel
tests/functional/i/import_outside_toplevel.py:11:4: C0415: Import outside toplevel (symtable) (import-outside-toplevel)
tests/functional/i/import_outside_toplevel.py:15:4: C0415: Import outside toplevel (os, sys) (import-outside-toplevel)
tests/functional/i/import_outside_toplevel.py:19:4: C0415: Import outside toplevel (time) (import-outside-toplevel)
tests/functional/i/import_outside_toplevel.py:23:4: C0415: Import outside toplevel (random, socket) (import-outside-toplevel)
tests/functional/i/import_outside_toplevel.py:27:4: C0415: Import outside toplevel (tokenize) (import-outside-toplevel)
tests/functional/i/import_outside_toplevel.py:30:8: C0415: Import outside toplevel (turtle) (import-outside-toplevel)
tests/functional/i/import_outside_toplevel.py:35:8: C0415: Import outside toplevel (tabnanny) (import-outside-toplevel)
tests/functional/i/import_outside_toplevel.py:39:4: C0415: Import outside toplevel (collections.defaultdict) (import-outside-toplevel)
tests/functional/i/import_outside_toplevel.py:43:4: C0415: Import outside toplevel (math.sin, math.cos) (import-outside-toplevel)
tests/functional/i/import_outside_toplevel.py:48:4: C0415: Import outside toplevel (astroid) (import-outside-toplevel)
tests/functional/i/import_outside_toplevel.py:51:4: C0415: Import outside toplevel (notastroid) (import-outside-toplevel)
tests/functional/i/import_outside_toplevel.py:51:4: E0401: Unable to import 'notastroid' (import-error)
************* Module functional.i.init_subclass_classmethod
tests/functional/i/init_subclass_classmethod.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.i.inference_crash_4692
tests/functional/i/inference_crash_4692.py:5:0: E0401: Unable to import 'notclick' (import-error)
************* Module functional.i.iterable_context_py36
tests/functional/i/iterable_context_py36.py:11:35: E1133: Non-iterable value self is used in an iterating context (not-an-iterable)
tests/functional/i/iterable_context_py36.py:12:21: E1133: Non-iterable value self is used in an iterating context (not-an-iterable)
tests/functional/i/iterable_context_py36.py:1:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
************* Module functional.i.inner_classes
tests/functional/i/inner_classes.py:1:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
tests/functional/i/inner_classes.py:1:0: I0021: Useless suppression of 'unnecessary-dunder-call' (useless-suppression)
************* Module functional.i.isinstance_second_argument
tests/functional/i/isinstance_second_argument.py:27:0: W1116: Second argument of isinstance is not a type (isinstance-second-argument-not-valid-type)
tests/functional/i/isinstance_second_argument.py:28:0: W1116: Second argument of isinstance is not a type (isinstance-second-argument-not-valid-type)
tests/functional/i/isinstance_second_argument.py:29:0: W1116: Second argument of isinstance is not a type (isinstance-second-argument-not-valid-type)
tests/functional/i/isinstance_second_argument.py:30:0: W1116: Second argument of isinstance is not a type (isinstance-second-argument-not-valid-type)
tests/functional/i/isinstance_second_argument.py:31:0: W1116: Second argument of isinstance is not a type (isinstance-second-argument-not-valid-type)
tests/functional/i/isinstance_second_argument.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/i/isinstance_second_argument.py:1:0: I0021: Useless suppression of 'wrong-import-position' (useless-suppression)
************* Module functional.i.iterable_context
tests/functional/i/iterable_context.py:58:9: E1133: Non-iterable value powers_of_two is used in an iterating context (not-an-iterable)
tests/functional/i/iterable_context.py:93:6: E1133: Non-iterable value A() is used in an iterating context (not-an-iterable)
tests/functional/i/iterable_context.py:95:6: E1133: Non-iterable value B is used in an iterating context (not-an-iterable)
tests/functional/i/iterable_context.py:96:9: E1133: Non-iterable value A() is used in an iterating context (not-an-iterable)
tests/functional/i/iterable_context.py:100:9: E1133: Non-iterable value B is used in an iterating context (not-an-iterable)
tests/functional/i/iterable_context.py:103:9: E1133: Non-iterable value range is used in an iterating context (not-an-iterable)
tests/functional/i/iterable_context.py:107:9: E1133: Non-iterable value True is used in an iterating context (not-an-iterable)
tests/functional/i/iterable_context.py:110:9: E1133: Non-iterable value None is used in an iterating context (not-an-iterable)
tests/functional/i/iterable_context.py:113:9: E1133: Non-iterable value 8.5 is used in an iterating context (not-an-iterable)
tests/functional/i/iterable_context.py:116:9: E1133: Non-iterable value 10 is used in an iterating context (not-an-iterable)
tests/functional/i/iterable_context.py:152:12: C0501: `for` loop could be `any(value == v for v in self.valid_values)` (consider-using-any-or-all)
tests/functional/i/iterable_context.py:196:43: R6102: Consider using an in-place tuple instead of list (consider-using-tuple)
tests/functional/i/iterable_context.py:5:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/i/iterable_context.py:5:0: I0021: Useless suppression of 'unused-argument' (useless-suppression)
tests/functional/i/iterable_context.py:5:0: I0021: Useless suppression of 'bad-mcs-method-argument' (useless-suppression)
************* Module functional.i.iterable_context_py3
tests/functional/i/iterable_context_py3.py:17:9: E1133: Non-iterable value SomeClass() is used in an iterating context (not-an-iterable)
tests/functional/i/iterable_context_py3.py:4:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/i/iterable_context_py3.py:4:0: I0021: Useless suppression of 'unused-argument' (useless-suppression)
************* Module functional.i.init_is_generator
tests/functional/i/init_is_generator.py:4:4: E0100: __init__ method is a generator (init-is-generator)
tests/functional/i/init_is_generator.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.i.init_not_called
tests/functional/i/init_not_called.py:32:4: W0231: __init__ method from base class 'BBBB' is not called (super-init-not-called)
tests/functional/i/init_not_called.py:64:4: W0231: __init__ method from base class 'NewStyleC' is not called (super-init-not-called)
tests/functional/i/init_not_called.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/i/init_not_called.py:1:0: I0021: Useless suppression of 'wrong-import-position' (useless-suppression)
************* Module functional.i.import_aliasing
tests/functional/i/import_aliasing.py:6:0: C0414: Import alias does not rename original package (useless-import-alias)
tests/functional/i/import_aliasing.py:8:0: R0402: Use 'from os import path' instead (consider-using-from-import)
tests/functional/i/import_aliasing.py:10:0: R0402: Use 'from foo.bar import foobar' instead (consider-using-from-import)
tests/functional/i/import_aliasing.py:14:0: C0414: Import alias does not rename original package (useless-import-alias)
tests/functional/i/import_aliasing.py:17:0: C0414: Import alias does not rename original package (useless-import-alias)
tests/functional/i/import_aliasing.py:18:0: C0414: Import alias does not rename original package (useless-import-alias)
tests/functional/i/import_aliasing.py:20:0: C0414: Import alias does not rename original package (useless-import-alias)
tests/functional/i/import_aliasing.py:21:0: C0414: Import alias does not rename original package (useless-import-alias)
tests/functional/i/import_aliasing.py:23:0: C0414: Import alias does not rename original package (useless-import-alias)
tests/functional/i/import_aliasing.py:26:0: E0402: Attempted relative import beyond top-level package (relative-beyond-top-level)
tests/functional/i/import_aliasing.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/i/import_aliasing.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/i/import_aliasing.py:1:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
************* Module functional.p.protected_access_access_different_scopes
tests/functional/p/protected_access_access_different_scopes.py:9:11: E0602: Undefined variable 'self' (undefined-variable)
tests/functional/p/protected_access_access_different_scopes.py:13:4: E0602: Undefined variable 'self' (undefined-variable)
************* Module functional.p.postponed_evaluation_pep585_error
tests/functional/p/postponed_evaluation_pep585_error.py:86:7: R6003: Consider using alternative Union syntax instead of 'Union'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
tests/functional/p/postponed_evaluation_pep585_error.py:87:7: R6003: Consider using alternative Union syntax instead of 'Union'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
tests/functional/p/postponed_evaluation_pep585_error.py:87:13: R6003: Consider using alternative Union syntax instead of 'Union'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
tests/functional/p/postponed_evaluation_pep585_error.py:80:6: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/p/postponed_evaluation_pep585_error.py:82:6: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/p/postponed_evaluation_pep585_error.py:6:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/p/postponed_evaluation_pep585_error.py:6:0: I0021: Useless suppression of 'unused-import' (useless-suppression)
tests/functional/p/postponed_evaluation_pep585_error.py:6:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
tests/functional/p/postponed_evaluation_pep585_error.py:6:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
tests/functional/p/postponed_evaluation_pep585_error.py:6:0: I0021: Useless suppression of 'inherit-non-class' (useless-suppression)
tests/functional/p/postponed_evaluation_pep585_error.py:6:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.p.property_with_parameters
tests/functional/p/property_with_parameters.py:7:4: R0206: Cannot have defined parameters for properties (property-with-parameters)
************* Module functional.p.py_version_35
tests/functional/p/py_version_35.py:5:0: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
tests/functional/p/py_version_35.py:2:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
************* Module functional.p.postponed_evaluation_activated
tests/functional/p/postponed_evaluation_activated.py:1:0: I0021: Useless suppression of 'pointless-statement' (useless-suppression)
tests/functional/p/postponed_evaluation_activated.py:2:0: I0021: Useless suppression of 'no-name-in-module' (useless-suppression)
************* Module functional.p.postponed_evaluation_pep585_py39
tests/functional/p/postponed_evaluation_pep585_py39.py:82:7: R6003: Consider using alternative Union syntax instead of 'Union'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
tests/functional/p/postponed_evaluation_pep585_py39.py:83:7: R6003: Consider using alternative Union syntax instead of 'Union'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
tests/functional/p/postponed_evaluation_pep585_py39.py:83:13: R6003: Consider using alternative Union syntax instead of 'Union'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
tests/functional/p/postponed_evaluation_pep585_py39.py:106:7: E1136: Value 'OrderedDict' is unsubscriptable (unsubscriptable-object)
tests/functional/p/postponed_evaluation_pep585_py39.py:76:6: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/p/postponed_evaluation_pep585_py39.py:78:6: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/p/postponed_evaluation_pep585_py39.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/p/postponed_evaluation_pep585_py39.py:2:0: I0021: Useless suppression of 'unused-import' (useless-suppression)
tests/functional/p/postponed_evaluation_pep585_py39.py:2:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
tests/functional/p/postponed_evaluation_pep585_py39.py:2:0: I0021: Useless suppression of 'inherit-non-class' (useless-suppression)
tests/functional/p/postponed_evaluation_pep585_py39.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
************* Module functional.p.pattern_matching
tests/functional/p/pattern_matching.py:13:7: E0001: invalid syntax (<unknown>, line 13) (syntax-error)
************* Module functional.p.postponed_evaluation_not_activated
tests/functional/p/postponed_evaluation_not_activated.py:6:36: E0602: Undefined variable 'Class' (undefined-variable)
tests/functional/p/postponed_evaluation_not_activated.py:9:30: E0601: Using variable 'OtherClass' before assignment (used-before-assignment)
tests/functional/p/postponed_evaluation_not_activated.py:1:0: I0021: Useless suppression of 'pointless-statement' (useless-suppression)
************* Module functional.p.potential_index_error
tests/functional/p/potential_index_error.py:6:6: E0643: Invalid index for iterable length (potential-index-error)
tests/functional/p/potential_index_error.py:7:6: E0643: Invalid index for iterable length (potential-index-error)
tests/functional/p/potential_index_error.py:8:6: E0643: Invalid index for iterable length (potential-index-error)
************* Module functional.p.postponed_evaluation_activated_with_alias
tests/functional/p/postponed_evaluation_activated_with_alias.py:1:0: I0021: Useless suppression of 'pointless-statement' (useless-suppression)
tests/functional/p/postponed_evaluation_activated_with_alias.py:2:0: I0021: Useless suppression of 'no-name-in-module' (useless-suppression)
************* Module functional.p.protected_access_special_methods_on
tests/functional/p/protected_access_special_methods_on.py:15:8: W0238: Unused private member `Protected.__private` (unused-private-member)
tests/functional/p/protected_access_special_methods_on.py:23:8: W0238: Unused private member `Protected.__private` (unused-private-member)
tests/functional/p/protected_access_special_methods_on.py:5:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.p.postponed_evaluation_pep585
tests/functional/p/postponed_evaluation_pep585.py:87:7: R6003: Consider using alternative Union syntax instead of 'Union' (consider-alternative-union-syntax)
tests/functional/p/postponed_evaluation_pep585.py:88:7: R6003: Consider using alternative Union syntax instead of 'Union' (consider-alternative-union-syntax)
tests/functional/p/postponed_evaluation_pep585.py:88:13: R6003: Consider using alternative Union syntax instead of 'Union' (consider-alternative-union-syntax)
tests/functional/p/postponed_evaluation_pep585.py:81:6: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead (consider-using-alias)
tests/functional/p/postponed_evaluation_pep585.py:83:6: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead (consider-using-alias)
tests/functional/p/postponed_evaluation_pep585.py:6:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/p/postponed_evaluation_pep585.py:6:0: I0021: Useless suppression of 'unused-import' (useless-suppression)
tests/functional/p/postponed_evaluation_pep585.py:6:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
tests/functional/p/postponed_evaluation_pep585.py:6:0: I0021: Useless suppression of 'inherit-non-class' (useless-suppression)
tests/functional/p/postponed_evaluation_pep585.py:6:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
************* Module functional.p.protocol_classes
tests/functional/p/protocol_classes.py:31:21: W0613: Unused argument 'blob' (unused-argument)
************* Module functional.p.protected_access_special_methods_off
tests/functional/p/protected_access_special_methods_off.py:15:8: W0238: Unused private member `Protected.__private` (unused-private-member)
tests/functional/p/protected_access_special_methods_off.py:23:8: W0238: Unused private member `Protected.__private` (unused-private-member)
tests/functional/p/protected_access_special_methods_off.py:5:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.u.unexpected_keyword_arg
tests/functional/u/unexpected_keyword_arg.py:43:0: E1123: Unexpected keyword argument 'internal_arg' in function call (unexpected-keyword-arg)
tests/functional/u/unexpected_keyword_arg.py:73:0: E1123: Unexpected keyword argument 'internal_arg' in function call (unexpected-keyword-arg)
tests/functional/u/unexpected_keyword_arg.py:96:0: E1123: Unexpected keyword argument 'internal_arg' in function call (unexpected-keyword-arg)
tests/functional/u/unexpected_keyword_arg.py:118:0: E1123: Unexpected keyword argument 'internal_arg' in function call (unexpected-keyword-arg)
************* Module functional.u.unspecified_encoding_py38
tests/functional/u/unspecified_encoding_py38.py:13:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:14:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:15:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:16:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:17:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:26:5: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:29:5: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:33:5: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:38:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:39:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:40:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:41:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:50:5: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:53:5: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:57:5: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:66:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:67:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:68:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:75:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:76:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:77:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:81:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:82:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:83:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:84:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:138:14: R6003: Consider using alternative Union syntax instead of 'Optional'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
tests/functional/u/unspecified_encoding_py38.py:149:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:152:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:155:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:158:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:161:0: W1501: "None" is not a valid mode for open. (bad-open-mode)
tests/functional/u/unspecified_encoding_py38.py:161:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:164:0: W1501: "2" is not a valid mode for open. (bad-open-mode)
tests/functional/u/unspecified_encoding_py38.py:164:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:2:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
************* Module functional.u.ungrouped_imports
tests/functional/u/ungrouped_imports.py:8:0: C0412: Imports from package logging are not grouped (ungrouped-imports)
tests/functional/u/ungrouped_imports.py:11:4: C0412: Imports from package os are not grouped (ungrouped-imports)
tests/functional/u/ungrouped_imports.py:19:4: C0412: Imports from package logging are not grouped (ungrouped-imports)
tests/functional/u/ungrouped_imports.py:20:0: C0412: Imports from package os are not grouped (ungrouped-imports)
tests/functional/u/ungrouped_imports.py:17:0: C0412: Imports from package astroid are not grouped (ungrouped-imports)
************* Module functional.u.unknown_encoding_jython
tests/functional/u/unknown_encoding_jython.py:1:0: F0001: Fatal error while checking 'tests/functional/u/unknown_encoding_jython.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/root/.cache/pylint/pylint-crash-2025-10-08-09.txt'. (fatal)
************* Module functional.u.unsubscriptable_value_py37
tests/functional/u/unsubscriptable_value_py37.py:15:0: E1136: Value 'Subscriptable()' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value_py37.py:17:3: R6002: 'typing.List' will be deprecated with PY39, consider using 'list' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
************* Module functional.u.unbalanced_tuple_unpacking
tests/functional/u/unbalanced_tuple_unpacking.py:11:4: W0632: Possible unbalanced tuple unpacking with sequence (1, 2, 3): left side has 2 label(s), right side has 3 value(s) (unbalanced-tuple-unpacking)
tests/functional/u/unbalanced_tuple_unpacking.py:17:4: W0632: Possible unbalanced tuple unpacking with sequence [1, 2, 3]: left side has 2 label(s), right side has 3 value(s) (unbalanced-tuple-unpacking)
tests/functional/u/unbalanced_tuple_unpacking.py:23:4: W0632: Possible unbalanced tuple unpacking with sequence (1, 2, 3): left side has 2 label(s), right side has 3 value(s) (unbalanced-tuple-unpacking)
tests/functional/u/unbalanced_tuple_unpacking.py:82:4: W0632: Possible unbalanced tuple unpacking with sequence defined at line 7 of functional.u.unpacking.unpacking: left side has 2 label(s), right side has 3 value(s) (unbalanced-tuple-unpacking)
tests/functional/u/unbalanced_tuple_unpacking.py:96:8: W0632: Possible unbalanced tuple unpacking with sequence defined at line 7 of functional.u.unpacking.unpacking: left side has 2 label(s), right side has 3 value(s) (unbalanced-tuple-unpacking)
tests/functional/u/unbalanced_tuple_unpacking.py:140:8: W0632: Possible unbalanced tuple unpacking with sequence defined at line 128: left side has 4 label(s), right side has 3 value(s) (unbalanced-tuple-unpacking)
tests/functional/u/unbalanced_tuple_unpacking.py:145:8: W0632: Possible unbalanced tuple unpacking with sequence defined at line 128: left side has 2 label(s), right side has 3 value(s) (unbalanced-tuple-unpacking)
tests/functional/u/unbalanced_tuple_unpacking.py:157:0: W0632: Possible unbalanced tuple unpacking with sequence defined at line 151: left side has 2 label(s), right side has 0 value(s) (unbalanced-tuple-unpacking)
tests/functional/u/unbalanced_tuple_unpacking.py:162:0: W0632: Possible unbalanced tuple unpacking with sequence (1, 2): left side has 3 label(s), right side has 2 value(s) (unbalanced-tuple-unpacking)
tests/functional/u/unbalanced_tuple_unpacking.py:6:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/u/unbalanced_tuple_unpacking.py:89:0: I0021: Useless suppression of 'attribute-defined-outside-init' (useless-suppression)
************* Module functional.u.unexpected_special_method_signature
tests/functional/u/unexpected_special_method_signature.py:8:4: E0302: The special method '__enter__' expects 0 param(s), 1 was given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:11:4: E0302: The special method '__del__' expects 0 param(s), 1 was given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:14:4: E0302: The special method '__format__' expects 1 param(s), 2 were given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:17:4: E0302: The special method '__setattr__' expects 2 param(s), 0 was given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:20:4: E0302: The special method '__round__' expects between 0 or 1 param(s), 2 were given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:23:4: E0302: The special method '__deepcopy__' expects 1 param(s), 2 were given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:26:4: E0211: Method has no argument (no-method-argument)
tests/functional/u/unexpected_special_method_signature.py:30:4: E0302: The special method '__getattr__' expects 1 param(s), 2 were given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:33:4: E0302: The special method '__subclasses__' expects 0 param(s), 1 was given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:37:4: E0302: The special method '__init_subclass__' expects 0 param(s), 1 was given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:43:4: E0302: The special method '__exit__' expects 3 param(s), 1 was given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:49:4: E0302: The special method '__exit__' expects 3 param(s), 4 were given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:57:4: E0302: The special method '__exit__' expects 3 param(s), 4 were given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:63:4: E0302: The special method '__aiter__' expects 0 param(s), 1 was given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:65:4: E0302: The special method '__anext__' expects 0 param(s), 2 were given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:67:4: E0302: The special method '__await__' expects 0 param(s), 1 was given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:69:4: E0302: The special method '__aenter__' expects 0 param(s), 1 was given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:71:4: E0302: The special method '__aexit__' expects 3 param(s), 0 was given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/u/unexpected_special_method_signature.py:3:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/u/unexpected_special_method_signature.py:3:0: I0021: Useless suppression of 'unused-argument' (useless-suppression)
tests/functional/u/unexpected_special_method_signature.py:3:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
tests/functional/u/unexpected_special_method_signature.py:4:0: I0021: Useless suppression of 'too-many-arguments' (useless-suppression)
************* Module functional.u.unhashable_dict_key
tests/functional/u/unhashable_dict_key.py:7:0: E1140: Dict key is unhashable (unhashable-dict-key)
tests/functional/u/unhashable_dict_key.py:8:0: E1140: Dict key is unhashable (unhashable-dict-key)
tests/functional/u/unhashable_dict_key.py:9:0: E1140: Dict key is unhashable (unhashable-dict-key)
tests/functional/u/unhashable_dict_key.py:10:0: E1140: Dict key is unhashable (unhashable-dict-key)
tests/functional/u/unhashable_dict_key.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.u.unidiomatic_typecheck
tests/functional/u/unidiomatic_typecheck.py:5:4: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tests/functional/u/unidiomatic_typecheck.py:6:4: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tests/functional/u/unidiomatic_typecheck.py:7:4: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tests/functional/u/unidiomatic_typecheck.py:8:4: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tests/functional/u/unidiomatic_typecheck.py:12:4: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tests/functional/u/unidiomatic_typecheck.py:13:4: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tests/functional/u/unidiomatic_typecheck.py:14:4: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tests/functional/u/unidiomatic_typecheck.py:15:4: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tests/functional/u/unidiomatic_typecheck.py:65:4: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tests/functional/u/unidiomatic_typecheck.py:66:4: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tests/functional/u/unidiomatic_typecheck.py:67:4: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tests/functional/u/unidiomatic_typecheck.py:68:4: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tests/functional/u/unidiomatic_typecheck.py:69:4: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tests/functional/u/unidiomatic_typecheck.py:70:4: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tests/functional/u/unidiomatic_typecheck.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/u/unidiomatic_typecheck.py:2:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.u.unsubscriptable_value
tests/functional/u/unsubscriptable_value.py:32:0: E1136: Value 'NonSubscriptable()' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:33:0: E1136: Value 'NonSubscriptable' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:35:0: E1136: Value 'Subscriptable' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:44:0: E1136: Value 'powers_of_two()' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:45:0: E1136: Value 'powers_of_two' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:49:0: E1136: Value 'True' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:50:0: E1136: Value 'None' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:51:0: E1136: Value '8.5' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:52:0: E1136: Value '10' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:55:0: E1136: Value '{x**2 for x in range(10)}' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:56:0: E1136: Value 'set(numbers)' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:57:0: E1136: Value 'frozenset(numbers)' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:77:0: E1136: Value 'SubscriptableClass()' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:84:0: E1136: Value 'test' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:127:11: E1136: Value 'var_one' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:5:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/u/unsubscriptable_value.py:6:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
************* Module functional.u.unrecognized_inline_option
tests/functional/u/unrecognized_inline_option.py:2:0: E0011: Unrecognized file option 'bouboule' (unrecognized-inline-option)
************* Module functional.u.unreachable
tests/functional/u/unreachable.py:7:4: W0101: Unreachable code (unreachable)
tests/functional/u/unreachable.py:12:8: W0101: Unreachable code (unreachable)
tests/functional/u/unreachable.py:18:8: W0101: Unreachable code (unreachable)
tests/functional/u/unreachable.py:22:4: W0101: Unreachable code (unreachable)
tests/functional/u/unreachable.py:35:4: W0101: Unreachable code (unreachable)
tests/functional/u/unreachable.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.u.using_constant_test
tests/functional/u/using_constant_test.py:22:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:26:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:29:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:32:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:35:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:38:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:41:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:44:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:47:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:50:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:53:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:56:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:59:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:62:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:65:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:68:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:73:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:76:3: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:80:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:81:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:82:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:83:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:84:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:85:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:89:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:93:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:117:3: R0133: Comparison between constants: '2 < 3' has a constant value (comparison-of-constants)
tests/functional/u/using_constant_test.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.u.ungrouped_imports_suppression
tests/functional/u/ungrouped_imports_suppression.py:13:4: C0412: Imports from package os are not grouped (ungrouped-imports)
tests/functional/u/ungrouped_imports_suppression.py:10:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
************* Module functional.u.unused.unused_name_from_wildcard_import
tests/functional/u/unused/unused_name_from_wildcard_import.py:3:0: W0401: Wildcard import unused_argument_py3 (wildcard-import)
tests/functional/u/unused/unused_name_from_wildcard_import.py:4:0: W0401: Wildcard import unused_global_variable1 (wildcard-import)
tests/functional/u/unused/unused_name_from_wildcard_import.py:5:0: W0401: Wildcard import unused_import_py30 (wildcard-import)
tests/functional/u/unused/unused_name_from_wildcard_import.py:3:0: W0614: Unused import(s) func, only_raises and increment_factory from wildcard import of unused_argument_py3 (unused-wildcard-import)
tests/functional/u/unused/unused_name_from_wildcard_import.py:4:0: W0614: Unused import(s) VAR from wildcard import of unused_global_variable1 (unused-wildcard-import)
tests/functional/u/unused/unused_name_from_wildcard_import.py:5:0: W0614: Unused import(s) abc, sys, Meta, Meta2, Meta3, ABCMeta and SomethingElse from wildcard import of unused_import_py30 (unused-wildcard-import)
tests/functional/u/unused/unused_name_from_wildcard_import.py:2:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.u.unused.unused_variable_py36
tests/functional/u/unused/unused_variable_py36.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.u.unused.unused_global_variable2
tests/functional/u/unused/unused_global_variable2.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/u/unused/unused_global_variable2.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.u.unused.unused_global_variable4
tests/functional/u/unused/unused_global_variable4.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/u/unused/unused_global_variable4.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.u.unused.unused_global_variable3
tests/functional/u/unused/unused_global_variable3.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.u.unused.unused_import
tests/functional/u/unused/unused_import.py:3:0: W0611: Unused import xml.etree (unused-import)
tests/functional/u/unused/unused_import.py:4:0: W0611: Unused import xml.sax (unused-import)
tests/functional/u/unused/unused_import.py:5:0: W0611: Unused os.path imported as test (unused-import)
tests/functional/u/unused/unused_import.py:6:0: W0611: Unused argv imported from sys as test2 (unused-import)
tests/functional/u/unused/unused_import.py:7:0: W0611: Unused flags imported from sys (unused-import)
tests/functional/u/unused/unused_import.py:9:0: W0611: Unused deque imported from collections (unused-import)
tests/functional/u/unused/unused_import.py:9:0: W0611: Unused OrderedDict imported from collections (unused-import)
tests/functional/u/unused/unused_import.py:10:0: W0611: Unused import re (unused-import)
tests/functional/u/unused/unused_import.py:13:0: W0611: Unused SomeOtherName imported from fake (unused-import)
tests/functional/u/unused/unused_import.py:45:0: W0611: Unused import os (unused-import)
tests/functional/u/unused/unused_import.py:2:0: I0021: Useless suppression of 'undefined-all-variable' (useless-suppression)
tests/functional/u/unused/unused_import.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/u/unused/unused_import.py:12:0: I0021: Useless suppression of 'self-assigning-variable' (useless-suppression)
************* Module functional.u.unused.unused_variable
tests/functional/u/unused/unused_variable.py:4:4: W0611: Unused import xml (unused-import)
tests/functional/u/unused/unused_variable.py:7:4: W0611: Unused import unittest.case (unused-import)
tests/functional/u/unused/unused_variable.py:8:4: W0611: Unused xml imported as sql (unused-import)
tests/functional/u/unused/unused_variable.py:11:4: W0612: Unused variable '_foo' (unused-variable)
tests/functional/u/unused/unused_variable.py:13:4: W0612: Unused variable '__a' (unused-variable)
tests/functional/u/unused/unused_variable.py:15:4: W0612: Unused variable '_a_' (unused-variable)
tests/functional/u/unused/unused_variable.py:16:4: W0612: Unused variable '__a__' (unused-variable)
tests/functional/u/unused/unused_variable.py:17:4: W0612: Unused variable '__never_used' (unused-variable)
tests/functional/u/unused/unused_variable.py:20:4: W0612: Unused variable 'flagged_local_field' (unused-variable)
tests/functional/u/unused/unused_variable.py:21:4: W0612: Unused variable 'unused_local_field' (unused-variable)
tests/functional/u/unused/unused_variable.py:22:4: W0612: Unused variable 'ignored_local_field' (unused-variable)
tests/functional/u/unused/unused_variable.py:28:8: W0612: Unused variable '__class__' (unused-variable)
tests/functional/u/unused/unused_variable.py:35:4: W0641: Possibly unused variable 'value' (possibly-unused-variable)
tests/functional/u/unused/unused_variable.py:41:4: W0612: Unused variable 'value' (unused-variable)
tests/functional/u/unused/unused_variable.py:46:4: W0612: Unused variable 'value' (unused-variable)
tests/functional/u/unused/unused_variable.py:54:4: W0611: Unused wraps imported from functools as abc (unused-import)
tests/functional/u/unused/unused_variable.py:55:4: W0611: Unused namedtuple imported from collections (unused-import)
tests/functional/u/unused/unused_variable.py:59:4: W0611: Unused hexdigits imported from string (unused-import)
tests/functional/u/unused/unused_variable.py:64:4: W0612: Unused variable 'my_var' (unused-variable)
tests/functional/u/unused/unused_variable.py:76:4: W0612: Unused variable 'aaaa' (unused-variable)
tests/functional/u/unused/unused_variable.py:98:4: W0602: Using global for 'PATH' but no assignment is done (global-variable-not-assigned)
tests/functional/u/unused/unused_variable.py:98:4: W0602: Using global for 'deque' but no assignment is done (global-variable-not-assigned)
tests/functional/u/unused/unused_variable.py:106:4: W0611: Unused import this (unused-import)
tests/functional/u/unused/unused_variable.py:107:4: W0611: Unused re imported as RE (unused-import)
tests/functional/u/unused/unused_variable.py:104:4: W0611: Unused platform imported from sys (unused-import)
tests/functional/u/unused/unused_variable.py:105:4: W0611: Unused version imported from sys as VERSION (unused-import)
tests/functional/u/unused/unused_variable.py:117:8: W0621: Redefining name 'error' from outer scope (line 114) (redefined-outer-name)
tests/functional/u/unused/unused_variable.py:111:4: W0612: Unused variable 'unused' (unused-variable)
tests/functional/u/unused/unused_variable.py:145:8: W0621: Redefining name 'error' from outer scope (line 141) (redefined-outer-name)
tests/functional/u/unused/unused_variable.py:145:8: W0612: Unused variable 'error' (unused-variable)
tests/functional/u/unused/unused_variable.py:154:8: W0621: Redefining name 'error' from outer scope (line 151) (redefined-outer-name)
tests/functional/u/unused/unused_variable.py:151:4: W0612: Unused variable 'error' (unused-variable)
tests/functional/u/unused/unused_variable.py:169:10: W0631: Using possibly undefined loop variable 'e' (undefined-loop-variable)
tests/functional/u/unused/unused_variable.py:162:4: W0612: Unused variable 'e' (unused-variable)
tests/functional/u/unused/unused_variable.py:1:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
tests/functional/u/unused/unused_variable.py:1:0: I0021: Useless suppression of 'fixme' (useless-suppression)
tests/functional/u/unused/unused_variable.py:1:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.u.unused.unused_import_py30
tests/functional/u/unused/unused_import_py30.py:7:0: W0404: Reimport 'ABCMeta' (imported line 6) (reimported)
tests/functional/u/unused/unused_import_py30.py:2:0: I0021: Useless suppression of 'wrong-import-position' (useless-suppression)
tests/functional/u/unused/unused_import_py30.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
************* Module functional.u.unused.unused_private_member
tests/functional/u/unused/unused_private_member.py:6:4: W0238: Unused private member `AnotherClass.__test(self)` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:14:4: W0238: Unused private member `HasUnusedInClass.__private_class_method_unused(cls)` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:22:4: W0238: Unused private member `HasUnusedInClass.__private_static_method_unused()` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:36:4: W0238: Unused private member `HasUnusedInClass.__test(self, x, y, z)` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:57:4: W0238: Unused private member `HasUnusedInClass.__test_recursive(self)` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:10:4: W0238: Unused private member `HasUnusedInClass.__my_secret` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:30:8: W0238: Unused private member `HasUnusedInClass.__instance_secret` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:140:15: E0602: Undefined variable 'cls' (undefined-variable)
tests/functional/u/unused/unused_private_member.py:135:8: W0238: Unused private member `FalsePositive4657.__attr_c` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:159:8: W0238: Unused private member `FalsePositive4668.__unused` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:183:8: W0612: Unused variable '__true_positive' (unused-variable)
tests/functional/u/unused/unused_private_member.py:203:8: W0612: Unused variable '__inner_4' (unused-variable)
tests/functional/u/unused/unused_private_member.py:183:8: W0238: Unused private member `FalsePositive4673.do_thing.__true_positive(in_thing)` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:203:8: W0238: Unused private member `FalsePositive4673.complicated_example.__inner_4()` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:214:8: W0238: Unused private member `Crash4755Context.__messages` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:244:12: R0204: Redefinition of FalsePositive4681.__instance type from int to bool (redefined-variable-type)
tests/functional/u/unused/unused_private_member.py:231:4: W0238: Unused private member `FalsePositive4681.__should_cause_error` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:241:12: W0238: Unused private member `FalsePositive4681.__should_cause_error` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:245:12: W0238: Unused private member `FalsePositive4681.__should_cause_error` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:263:12: R0204: Redefinition of FalsePositive4681b.__instance type from int to bool (redefined-variable-type)
tests/functional/u/unused/unused_private_member.py:276:4: W0238: Unused private member `FalsePositive4849.__unused_private_method()` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:293:4: W0238: Unused private member `Pony.__init_defaults(self)` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:298:4: W0238: Unused private member `Pony.__get_fur_color(self)` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:343:8: W0238: Unused private member `TypeSelfCallInMethod.__a` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:1:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.u.unused.unused_typing_imports
tests/functional/u/unused/unused_typing_imports.py:27:15: R6003: Consider using alternative Union syntax instead of 'Optional'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
tests/functional/u/unused/unused_typing_imports.py:31:18: R6003: Consider using alternative Union syntax instead of 'Optional'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
tests/functional/u/unused/unused_typing_imports.py:36:13: R6102: Consider using an in-place tuple instead of list (consider-using-tuple)
tests/functional/u/unused/unused_typing_imports.py:27:24: R6002: 'typing.Callable' will be deprecated with PY39, consider using 'collections.abc.Callable' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/u/unused/unused_typing_imports.py:31:27: R6002: 'typing.Iterable' will be deprecated with PY39, consider using 'collections.abc.Iterable' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/u/unused/unused_typing_imports.py:1:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.u.unused.unused_argument
tests/functional/u/unused/unused_argument.py:3:16: W0613: Unused argument 'first' (unused-argument)
tests/functional/u/unused/unused_argument.py:3:23: W0613: Unused argument 'second' (unused-argument)
tests/functional/u/unused/unused_argument.py:7:38: W0613: Unused argument 'ignored_second' (unused-argument)
tests/functional/u/unused/unused_argument.py:11:37: W0613: Unused argument 'unused_second' (unused-argument)
tests/functional/u/unused/unused_argument.py:32:29: W0613: Unused argument 'aay' (unused-argument)
tests/functional/u/unused/unused_argument.py:60:13: W0613: Unused argument 'arg' (unused-argument)
tests/functional/u/unused/unused_argument.py:67:21: W0613: Unused argument 'arg' (unused-argument)
tests/functional/u/unused/unused_argument.py:74:0: W0613: Unused argument 'args' (unused-argument)
tests/functional/u/unused/unused_argument.py:74:0: W0613: Unused argument 'kwargs' (unused-argument)
tests/functional/u/unused/unused_argument.py:93:23: W0613: Unused argument 'arg' (unused-argument)
tests/functional/u/unused/unused_argument.py:104:34: W0613: Unused argument 'other' (unused-argument)
tests/functional/u/unused/unused_argument.py:85:0: I0021: Useless suppression of 'no-member' (useless-suppression)
tests/functional/u/unused/unused_argument.py:87:0: I0021: Useless suppression of 'attribute-defined-outside-init' (useless-suppression)
************* Module functional.u.unused.unused_argument_py3
tests/functional/u/unused/unused_argument_py3.py:3:9: W0613: Unused argument 'first' (unused-argument)
tests/functional/u/unused/unused_argument_py3.py:3:19: W0613: Unused argument 'second' (unused-argument)
tests/functional/u/unused/unused_argument_py3.py:7:23: W0613: Unused argument 'second' (unused-argument)
tests/functional/u/unused/unused_argument_py3.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.u.unused.unused_import_class_def_keyword
tests/functional/u/unused/unused_import_class_def_keyword.py:6:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/u/unused/unused_import_class_def_keyword.py:6:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.u.unused.unused_global_variable1
tests/functional/u/unused/unused_global_variable1.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/u/unused/unused_global_variable1.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.u.unused.unused_import_positional_only_py38
tests/functional/u/unused/unused_import_positional_only_py38.py:8:31: R6002: 'typing.Set' will be deprecated with PY39, consider using 'set' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
************* Module functional.b.bad_reversed_sequence
tests/functional/b/bad_reversed_sequence.py:40:10: E0111: The first reversed() argument is not a sequence (bad-reversed-sequence)
tests/functional/b/bad_reversed_sequence.py:43:10: E0111: The first reversed() argument is not a sequence (bad-reversed-sequence)
tests/functional/b/bad_reversed_sequence.py:44:10: E0111: The first reversed() argument is not a sequence (bad-reversed-sequence)
tests/functional/b/bad_reversed_sequence.py:47:10: E0111: The first reversed() argument is not a sequence (bad-reversed-sequence)
tests/functional/b/bad_reversed_sequence.py:48:10: E0111: The first reversed() argument is not a sequence (bad-reversed-sequence)
tests/functional/b/bad_reversed_sequence.py:50:10: E0111: The first reversed() argument is not a sequence (bad-reversed-sequence)
tests/functional/b/bad_reversed_sequence.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/b/bad_reversed_sequence.py:2:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.b.bad_open_mode
tests/functional/b/bad_open_mode.py:12:0: W1501: "rwx" is not a valid mode for open. (bad-open-mode)
tests/functional/b/bad_open_mode.py:13:0: W1501: "rr" is not a valid mode for open. (bad-open-mode)
tests/functional/b/bad_open_mode.py:14:0: W1501: "+" is not a valid mode for open. (bad-open-mode)
tests/functional/b/bad_open_mode.py:15:0: W1501: "xw" is not a valid mode for open. (bad-open-mode)
tests/functional/b/bad_open_mode.py:21:0: W1501: "Ua" is not a valid mode for open. (bad-open-mode)
tests/functional/b/bad_open_mode.py:22:0: W1501: "Ur++" is not a valid mode for open. (bad-open-mode)
************* Module functional.b.blacklisted_name
tests/functional/b/blacklisted_name.py:3:0: C0104: Disallowed name "baz" (disallowed-name)
tests/functional/b/blacklisted_name.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.b.bad_except_order
tests/functional/b/bad_except_order.py:9:7: E0701: Bad except clauses order (Exception is an ancestor class of TypeError) (bad-except-order)
tests/functional/b/bad_except_order.py:16:7: E0701: Bad except clauses order (LookupError is an ancestor class of IndexError) (bad-except-order)
tests/functional/b/bad_except_order.py:23:7: E0701: Bad except clauses order (LookupError is an ancestor class of IndexError) (bad-except-order)
tests/functional/b/bad_except_order.py:23:7: E0701: Bad except clauses order (NameError is an ancestor class of UnboundLocalError) (bad-except-order)
tests/functional/b/bad_except_order.py:26:0: E0701: Bad except clauses order (empty except clause should always appear last) (bad-except-order)
tests/functional/b/bad_except_order.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/b/bad_except_order.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.b.bad_staticmethod_argument
tests/functional/b/bad_staticmethod_argument.py:5:4: W0211: Static method with 'self' as first argument (bad-staticmethod-argument)
tests/functional/b/bad_staticmethod_argument.py:10:4: W0211: Static method with 'cls' as first argument (bad-staticmethod-argument)
************* Module functional.b.bad_option_value
tests/functional/b/bad_option_value.py:1:0: E0012: Bad option value for enable. Don't recognize message W04044. (bad-option-value)
************* Module functional.b.bad_string_format_type
tests/functional/b/bad_string_format_type.py:5:0: E1101: Instance of 'bytes' has no 'format' member (no-member)
tests/functional/b/bad_string_format_type.py:25:0: E1307: Argument 'builtins.str' does not match format type 'd' (bad-string-format-type)
tests/functional/b/bad_string_format_type.py:26:0: E1307: Argument 'builtins.str' does not match format type 'd' (bad-string-format-type)
tests/functional/b/bad_string_format_type.py:27:0: E1307: Argument 'builtins.float' does not match format type 'x' (bad-string-format-type)
tests/functional/b/bad_string_format_type.py:28:0: E1307: Argument 'builtins.float' does not match format type 'x' (bad-string-format-type)
tests/functional/b/bad_string_format_type.py:29:0: E1307: Argument 'builtins.list' does not match format type 'd' (bad-string-format-type)
tests/functional/b/bad_string_format_type.py:30:0: E1307: Argument 'builtins.list' does not match format type 'd' (bad-string-format-type)
tests/functional/b/bad_string_format_type.py:33:0: E1307: Argument 'builtins.str' does not match format type 'd' (bad-string-format-type)
tests/functional/b/bad_string_format_type.py:34:0: E1307: Argument 'builtins.str' does not match format type 'd' (bad-string-format-type)
tests/functional/b/bad_string_format_type.py:38:0: E1307: Argument 'builtins.str' does not match format type 'd' (bad-string-format-type)
************* Module functional.b.bad_indentation
tests/functional/b/bad_indentation.py:15:15: R6102: Consider using an in-place tuple instead of list (consider-using-tuple)
tests/functional/b/bad_indentation.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.b.base_init_vars
tests/functional/b/base_init_vars.py:1:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
************* Module functional.b.bad_reversed_sequence_py38
tests/functional/b/bad_reversed_sequence_py38.py:12:0: E0111: The first reversed() argument is not a sequence (bad-reversed-sequence)
tests/functional/b/bad_reversed_sequence_py38.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/b/bad_reversed_sequence_py38.py:3:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/b/bad_reversed_sequence_py38.py:3:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.b.bad_reversed_sequence_py37
tests/functional/b/bad_reversed_sequence_py37.py:12:0: E0111: The first reversed() argument is not a sequence (bad-reversed-sequence)
tests/functional/b/bad_reversed_sequence_py37.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/b/bad_reversed_sequence_py37.py:3:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.b.broad_except
tests/functional/b/broad_except.py:7:7: W0703: Catching too general exception Exception (broad-except)
tests/functional/b/broad_except.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/b/broad_except.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.b.bad_exception_context
tests/functional/b/bad_exception_context.py:14:4: E0703: Exception context set to something which is not an exception, nor None (bad-exception-context)
tests/functional/b/bad_exception_context.py:17:4: E0703: Exception context set to something which is not an exception, nor None (bad-exception-context)
tests/functional/b/bad_exception_context.py:23:4: E0703: Exception context set to something which is not an exception, nor None (bad-exception-context)
tests/functional/b/bad_exception_context.py:31:7: E0712: Catching an exception which doesn't inherit from Exception: function (catching-non-exception)
tests/functional/b/bad_exception_context.py:32:4: E0703: Exception context set to something which is not an exception, nor None (bad-exception-context)
************* Module functional.b.bare_except
tests/functional/b/bare_except.py:5:0: W0702: No exception type(s) specified (bare-except)
tests/functional/b/bare_except.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/b/bare_except.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/b/bare_except.py:1:0: I0021: Useless suppression of 'import-error' (useless-suppression)
************* Module functional.b.bad_thread_instantiation
tests/functional/b/bad_thread_instantiation.py:5:0: W1506: threading.Thread needs the target function (bad-thread-instantiation)
tests/functional/b/bad_thread_instantiation.py:8:0: W1506: threading.Thread needs the target function (bad-thread-instantiation)
tests/functional/b/bad_thread_instantiation.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/b/bad_thread_instantiation.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.w.wrong_import_position_exclude_dunder_main
tests/functional/w/wrong_import_position_exclude_dunder_main.py:1:0: I0021: Useless suppression of 'import-error' (useless-suppression)
tests/functional/w/wrong_import_position_exclude_dunder_main.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/w/wrong_import_position_exclude_dunder_main.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.w.wrong_import_position7
tests/functional/w/wrong_import_position7.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
tests/functional/w/wrong_import_position7.py:2:0: I0021: Useless suppression of 'no-name-in-module' (useless-suppression)
tests/functional/w/wrong_import_position7.py:2:0: I0021: Useless suppression of 'relative-beyond-top-level' (useless-suppression)
************* Module functional.w.wildcard_import_allowed
tests/functional/w/wildcard_import_allowed.py:2:0: W0401: Wildcard import csv (wildcard-import)
tests/functional/w/wildcard_import_allowed.py:3:0: W0401: Wildcard import abc (wildcard-import)
tests/functional/w/wildcard_import_allowed.py:4:0: W0401: Wildcard import UNINFERABLE (wildcard-import)
tests/functional/w/wildcard_import_allowed.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/w/wildcard_import_allowed.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.w.wrong_import_order
tests/functional/w/wrong_import_order.py:12:0: C0411: standard import "import os.path" should be placed before "import six" (wrong-import-order)
tests/functional/w/wrong_import_order.py:14:0: C0411: standard import "import sys" should be placed before "import six" (wrong-import-order)
tests/functional/w/wrong_import_order.py:15:0: C0411: standard import "import datetime" should be placed before "import six" (wrong-import-order)
tests/functional/w/wrong_import_order.py:18:0: C0411: third party import "import totally_missing" should be placed before "from .package import Class" (wrong-import-order)
tests/functional/w/wrong_import_order.py:20:0: C0411: third party import "import astroid" should be placed before "from .package import Class" (wrong-import-order)
tests/functional/w/wrong_import_order.py:24:0: C0411: third party import "from six.moves.urllib.parse import quote" should be placed before "from .package import Class" (wrong-import-order)
tests/functional/w/wrong_import_order.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
tests/functional/w/wrong_import_order.py:2:0: I0021: Useless suppression of 'relative-beyond-top-level' (useless-suppression)
************* Module functional.w.wrong_import_position4
tests/functional/w/wrong_import_position4.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
tests/functional/w/wrong_import_position4.py:2:0: I0021: Useless suppression of 'no-name-in-module' (useless-suppression)
tests/functional/w/wrong_import_position4.py:2:0: I0021: Useless suppression of 'relative-beyond-top-level' (useless-suppression)
tests/functional/w/wrong_import_position4.py:2:0: I0021: Useless suppression of 'unused-variable' (useless-suppression)
************* Module functional.w.wrong_import_position6
tests/functional/w/wrong_import_position6.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
tests/functional/w/wrong_import_position6.py:2:0: I0021: Useless suppression of 'no-name-in-module' (useless-suppression)
tests/functional/w/wrong_import_position6.py:2:0: I0021: Useless suppression of 'relative-beyond-top-level' (useless-suppression)
************* Module functional.w.wrong_import_position3
tests/functional/w/wrong_import_position3.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
tests/functional/w/wrong_import_position3.py:2:0: I0021: Useless suppression of 'import-error' (useless-suppression)
tests/functional/w/wrong_import_position3.py:2:0: I0021: Useless suppression of 'no-name-in-module' (useless-suppression)
tests/functional/w/wrong_import_position3.py:2:0: I0021: Useless suppression of 'relative-beyond-top-level' (useless-suppression)
************* Module functional.w.wrong_import_position13
tests/functional/w/wrong_import_position13.py:4:0: C0413: Import "from sys import x" should be placed at the top of the module (wrong-import-position)
************* Module functional.w.wrong_import_position5
tests/functional/w/wrong_import_position5.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
tests/functional/w/wrong_import_position5.py:2:0: I0021: Useless suppression of 'import-error' (useless-suppression)
tests/functional/w/wrong_import_position5.py:2:0: I0021: Useless suppression of 'no-name-in-module' (useless-suppression)
tests/functional/w/wrong_import_position5.py:2:0: I0021: Useless suppression of 'relative-beyond-top-level' (useless-suppression)
************* Module functional.w.wrong_import_position14
tests/functional/w/wrong_import_position14.py:5:0: C0413: Import "import y" should be placed at the top of the module (wrong-import-position)
************* Module functional.w.wrong_import_order2
tests/functional/w/wrong_import_order2.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
************* Module functional.w.with_used_before_assign
tests/functional/w/with_used_before_assign.py:10:39: E0602: Undefined variable 'ctx' (undefined-variable)
tests/functional/w/with_used_before_assign.py:11:8: E0601: Using variable 'context' before assignment (used-before-assignment)
************* Module functional.w.wrong_import_position2
tests/functional/w/wrong_import_position2.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
tests/functional/w/wrong_import_position2.py:2:0: I0021: Useless suppression of 'import-error' (useless-suppression)
tests/functional/w/wrong_import_position2.py:2:0: I0021: Useless suppression of 'no-name-in-module' (useless-suppression)
tests/functional/w/wrong_import_position2.py:2:0: I0021: Useless suppression of 'relative-beyond-top-level' (useless-suppression)
************* Module functional.w.wrong_import_position12
tests/functional/w/wrong_import_position12.py:5:0: C0413: Import "import os" should be placed at the top of the module (wrong-import-position)
************* Module functional.w.wrong_import_position
tests/functional/w/wrong_import_position.py:22:0: C0413: Import "import six" should be placed at the top of the module (wrong-import-position)
tests/functional/w/wrong_import_position.py:26:0: C0413: Import "import datetime" should be placed at the top of the module (wrong-import-position)
tests/functional/w/wrong_import_position.py:32:0: C0413: Import "import scipy" should be placed at the top of the module (wrong-import-position)
tests/functional/w/wrong_import_position.py:33:0: C0413: Import "import astroid" should be placed at the top of the module (wrong-import-position)
tests/functional/w/wrong_import_position.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
tests/functional/w/wrong_import_position.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/w/wrong_import_position.py:3:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.w.with_using_generator
tests/functional/w/with_using_generator.py:14:8: E1129: Context manager 'generator' doesn't implement __enter__ and __exit__. (not-context-manager)
************* Module functional.w.wrong_import_position11
tests/functional/w/wrong_import_position11.py:4:0: C0413: Import "import os" should be placed at the top of the module (wrong-import-position)
tests/functional/w/wrong_import_position11.py:2:0: I0021: Useless suppression of 'pointless-string-statement' (useless-suppression)
************* Module functional.w.wrong_exception_operation
tests/functional/w/wrong_exception_operation.py:6:8: W0716: Invalid exception operation. Did you mean '(ValueError, TypeError)' instead? (wrong-exception-operation)
tests/functional/w/wrong_exception_operation.py:11:8: W0716: Invalid exception operation. Did you mean '(ValueError, TypeError)' instead? (wrong-exception-operation)
tests/functional/w/wrong_exception_operation.py:17:8: W0716: Invalid exception operation. Did you mean '(ValueError, TypeError)' instead? (wrong-exception-operation)
tests/functional/w/wrong_exception_operation.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/w/wrong_exception_operation.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/w/wrong_exception_operation.py:1:0: I0021: Useless suppression of 'superfluous-parens' (useless-suppression)
************* Module functional.w.wrong_import_position9
tests/functional/w/wrong_import_position9.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
tests/functional/w/wrong_import_position9.py:2:0: I0021: Useless suppression of 'no-name-in-module' (useless-suppression)
tests/functional/w/wrong_import_position9.py:2:0: I0021: Useless suppression of 'relative-beyond-top-level' (useless-suppression)
************* Module functional.w.wildcard_import
tests/functional/w/wildcard_import.py:2:0: W0401: Wildcard import indirect1 (wildcard-import)
tests/functional/w/wildcard_import.py:5:0: W0401: Wildcard import unknown.package (wildcard-import)
tests/functional/w/wildcard_import.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/w/wildcard_import.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/w/wildcard_import.py:1:0: I0021: Useless suppression of 'unused-wildcard-import' (useless-suppression)
************* Module functional.w.wrong_import_position8
tests/functional/w/wrong_import_position8.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
tests/functional/w/wrong_import_position8.py:2:0: I0021: Useless suppression of 'import-error' (useless-suppression)
tests/functional/w/wrong_import_position8.py:2:0: I0021: Useless suppression of 'no-name-in-module' (useless-suppression)
tests/functional/w/wrong_import_position8.py:2:0: I0021: Useless suppression of 'relative-beyond-top-level' (useless-suppression)
************* Module functional.n.nonlocal_without_binding
tests/functional/n/nonlocal_without_binding.py:22:8: E0117: nonlocal name b found without binding (nonlocal-without-binding)
tests/functional/n/nonlocal_without_binding.py:25:4: E0117: nonlocal name x found without binding (nonlocal-without-binding)
tests/functional/n/nonlocal_without_binding.py:28:8: E0117: nonlocal name some_attr found without binding (nonlocal-without-binding)
tests/functional/n/nonlocal_without_binding.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.n.names_in__all__
tests/functional/n/names_in__all__.py:19:4: E0602: Undefined variable 'SomeUndefined' (undefined-variable)
tests/functional/n/names_in__all__.py:17:4: E0603: Undefined variable name '' in __all__ (undefined-all-variable)
tests/functional/n/names_in__all__.py:20:4: E0603: Undefined variable name 'NonExistant' in __all__ (undefined-all-variable)
tests/functional/n/names_in__all__.py:22:4: E0603: Undefined variable name 'func' in __all__ (undefined-all-variable)
tests/functional/n/names_in__all__.py:23:4: E0603: Undefined variable name 'inner' in __all__ (undefined-all-variable)
tests/functional/n/names_in__all__.py:24:4: E0603: Undefined variable name 'InnerKlass' in __all__ (undefined-all-variable)
************* Module functional.n.none_dunder_protocols_py38
tests/functional/n/none_dunder_protocols_py38.py:7:20: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
************* Module functional.n.not_in_loop
tests/functional/n/not_in_loop.py:8:8: E0103: 'continue' not properly in loop (not-in-loop)
tests/functional/n/not_in_loop.py:13:4: E0103: 'continue' not properly in loop (not-in-loop)
tests/functional/n/not_in_loop.py:16:4: E0103: 'continue' not properly in loop (not-in-loop)
tests/functional/n/not_in_loop.py:20:8: E0103: 'continue' not properly in loop (not-in-loop)
tests/functional/n/not_in_loop.py:25:4: E0103: 'continue' not properly in loop (not-in-loop)
tests/functional/n/not_in_loop.py:30:4: E0103: 'break' not properly in loop (not-in-loop)
tests/functional/n/not_in_loop.py:33:4: E0103: 'continue' not properly in loop (not-in-loop)
tests/functional/n/not_in_loop.py:35:4: E0103: 'break' not properly in loop (not-in-loop)
tests/functional/n/not_in_loop.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.n.nested_blocks_issue1088
tests/functional/n/nested_blocks_issue1088.py:3:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
tests/functional/n/nested_blocks_issue1088.py:14:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
tests/functional/n/nested_blocks_issue1088.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/n/nested_blocks_issue1088.py:1:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
************* Module functional.n.namePresetCamelCase
tests/functional/n/namePresetCamelCase.py:1:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
************* Module functional.n.nan_comparison_check
tests/functional/n/nan_comparison_check.py:7:4: W0177: Comparison 'x is numpy.NaN' should be 'math.isnan(x)' (nan-comparison)
tests/functional/n/nan_comparison_check.py:8:4: W0177: Comparison 'x == numpy.NaN' should be 'math.isnan(x)' (nan-comparison)
tests/functional/n/nan_comparison_check.py:9:4: W0177: Comparison 'x == float('nan')' should be 'math.isnan(x)' (nan-comparison)
tests/functional/n/nan_comparison_check.py:10:4: W0177: Comparison 'x is float('nan')' should be 'math.isnan(x)' (nan-comparison)
tests/functional/n/nan_comparison_check.py:11:4: W0177: Comparison 'numpy.NaN == numpy.NaN' should be 'math.isnan(numpy.NaN)' (nan-comparison)
tests/functional/n/nan_comparison_check.py:14:4: W0177: Comparison 'numpy.NaN is not x' should be 'not math.isnan(x)' (nan-comparison)
tests/functional/n/nan_comparison_check.py:15:4: W0177: Comparison 'numpy.NaN != x' should be 'not math.isnan(x)' (nan-comparison)
tests/functional/n/nan_comparison_check.py:17:4: W0177: Comparison 'x != numpy.NaN' should be 'not math.isnan(x)' (nan-comparison)
tests/functional/n/nan_comparison_check.py:18:5: W0177: Comparison 'x != float('nan')' should be 'not math.isnan(x)' (nan-comparison)
tests/functional/n/nan_comparison_check.py:19:4: W0177: Comparison 'x is not numpy.NaN' should be 'not math.isnan(x)' (nan-comparison)
tests/functional/n/nan_comparison_check.py:20:7: W0177: Comparison 'x == numpy.NaN' should be 'math.isnan(x)' (nan-comparison)
tests/functional/n/nan_comparison_check.py:21:7: W0177: Comparison 'x is not float('nan')' should be 'not math.isnan(x)' (nan-comparison)
tests/functional/n/nan_comparison_check.py:22:3: W0177: Comparison 'x == numpy.NaN' should be 'math.isnan(x)' (nan-comparison)
tests/functional/n/nan_comparison_check.py:24:9: W0177: Comparison 'x is numpy.NaN' should be 'math.isnan(x)' (nan-comparison)
tests/functional/n/nan_comparison_check.py:1:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/n/nan_comparison_check.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/n/nan_comparison_check.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/n/nan_comparison_check.py:2:0: I0021: Useless suppression of 'comparison-with-itself' (useless-suppression)
************* Module functional.n.none_dunder_protocols
tests/functional/n/none_dunder_protocols.py:38:9: E1135: Value 'NonIterableClass' doesn't support membership test (unsupported-membership-test)
tests/functional/n/none_dunder_protocols.py:39:9: E1135: Value 'OldNonIterableClass' doesn't support membership test (unsupported-membership-test)
tests/functional/n/none_dunder_protocols.py:40:9: E1135: Value 'NonContainerClass' doesn't support membership test (unsupported-membership-test)
tests/functional/n/none_dunder_protocols.py:41:9: E1135: Value 'NonIterableClass()' doesn't support membership test (unsupported-membership-test)
tests/functional/n/none_dunder_protocols.py:42:9: E1135: Value 'OldNonIterableClass()' doesn't support membership test (unsupported-membership-test)
tests/functional/n/none_dunder_protocols.py:43:9: E1135: Value 'NonContainerClass()' doesn't support membership test (unsupported-membership-test)
tests/functional/n/none_dunder_protocols.py:44:9: E1135: Value 'MultipleAssignmentNonesClass()' doesn't support membership test (unsupported-membership-test)
************* Module functional.n.not_context_manager
tests/functional/n/not_context_manager.py:23:0: E1129: Context manager 'NotAManager' doesn't implement __enter__ and __exit__. (not-context-manager)
tests/functional/n/not_context_manager.py:37:0: E1129: Context manager 'dec' doesn't implement __enter__ and __exit__. (not-context-manager)
tests/functional/n/not_context_manager.py:55:0: E1129: Context manager 'int' doesn't implement __enter__ and __exit__. (not-context-manager)
tests/functional/n/not_context_manager.py:90:0: E1129: Context manager 'int' doesn't implement __enter__ and __exit__. (not-context-manager)
tests/functional/n/not_context_manager.py:134:0: E1129: Context manager 'generator' doesn't implement __enter__ and __exit__. (not-context-manager)
tests/functional/n/not_context_manager.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.n.not_async_context_manager_py37
tests/functional/n/not_async_context_manager_py37.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.n.not_callable
tests/functional/n/not_callable.py:6:0: E1102: REVISION is not callable (not-callable)
tests/functional/n/not_callable.py:24:12: E1102: INSTANCE is not callable (not-callable)
tests/functional/n/not_callable.py:26:12: E1102: LIST is not callable (not-callable)
tests/functional/n/not_callable.py:28:12: E1102: DICT is not callable (not-callable)
tests/functional/n/not_callable.py:30:12: E1102: TUPLE is not callable (not-callable)
tests/functional/n/not_callable.py:32:12: E1102: INT is not callable (not-callable)
tests/functional/n/not_callable.py:67:0: E1102: PROP.test is not callable (not-callable)
tests/functional/n/not_callable.py:68:0: E1102: PROP.custom is not callable (not-callable)
tests/functional/n/not_callable.py:137:18: E1102: ClassWithProperty().value is not callable (not-callable)
tests/functional/n/not_callable.py:202:0: E1102: get_number(10) is not callable (not-callable)
tests/functional/n/not_callable.py:1:0: I0021: Useless suppression of 'use-dict-literal' (useless-suppression)
************* Module functional.n.nested_func_defined_in_loop
tests/functional/n/nested_func_defined_in_loop.py:7:18: W0640: Cell variable i defined in loop (cell-var-from-loop)
************* Module functional.n.nonexistent_operator
tests/functional/n/nonexistent_operator.py:6:4: E0107: Use of the non-existent ++ operator (nonexistent-operator)
tests/functional/n/nonexistent_operator.py:7:0: E0107: Use of the non-existent ++ operator (nonexistent-operator)
tests/functional/n/nonexistent_operator.py:8:5: E0107: Use of the non-existent ++ operator (nonexistent-operator)
tests/functional/n/nonexistent_operator.py:12:4: E0107: Use of the non-existent -- operator (nonexistent-operator)
tests/functional/n/nonexistent_operator.py:14:0: E0107: Use of the non-existent -- operator (nonexistent-operator)
tests/functional/n/nonexistent_operator.py:15:5: E0107: Use of the non-existent -- operator (nonexistent-operator)
************* Module functional.n.nonlocal_and_global
tests/functional/n/nonlocal_and_global.py:4:0: E0115: Name 'missing' is nonlocal and global (nonlocal-and-global)
tests/functional/n/nonlocal_and_global.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/n/nonlocal_and_global.py:2:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.n.new_style_class_py_30
tests/functional/n/new_style_class_py_30.py:15:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
tests/functional/n/new_style_class_py_30.py:21:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
tests/functional/n/new_style_class_py_30.py:26:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
tests/functional/n/new_style_class_py_30.py:33:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
************* Module functional.n.namedtuple_member_inference
tests/functional/n/namedtuple_member_inference.py:17:10: E1101: Class 'Thing' has no 'x' member (no-member)
************* Module functional.n.not_async_context_manager
tests/functional/n/not_async_context_manager.py:51:4: E1701: Async context manager 'int' doesn't implement __aenter__ and __aexit__. (not-async-context-manager)
tests/functional/n/not_async_context_manager.py:53:4: E1701: Async context manager 'generator' doesn't implement __aenter__ and __aexit__. (not-async-context-manager)
tests/functional/n/not_async_context_manager.py:55:4: E1701: Async context manager 'ContextManager' doesn't implement __aenter__ and __aexit__. (not-async-context-manager)
tests/functional/n/not_async_context_manager.py:57:4: E1701: Async context manager 'PartialAsyncContextManager' doesn't implement __aenter__ and __aexit__. (not-async-context-manager)
tests/functional/n/not_async_context_manager.py:59:4: E1701: Async context manager 'SecondPartialAsyncContextManager' doesn't implement __aenter__ and __aexit__. (not-async-context-manager)
tests/functional/n/not_async_context_manager.py:66:4: E1701: Async context manager 'AsyncManagerMixin' doesn't implement __aenter__ and __aexit__. (not-async-context-manager)
tests/functional/n/not_async_context_manager.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.n.non_ascii_name_class.non_ascii_name_class
tests/functional/n/non_ascii_name_class/non_ascii_name_class.py:11:0: C2401: Class name "НoldIt" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name_class.non_ascii_name_class_method
tests/functional/n/non_ascii_name_class/non_ascii_name_class_method.py:12:4: C2401: Function name "umlaut_ä" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name_class.non_ascii_name_class_attribute
tests/functional/n/non_ascii_name_class/non_ascii_name_class_attribute.py:12:8: C2401: Attribute name "łoopback" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name_class.non_ascii_name_class_constant
tests/functional/n/non_ascii_name_class/non_ascii_name_class_constant.py:6:4: C2401: Attribute name "ŁOOPBACK" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.no.no_dummy_redefined
tests/functional/n/no/no_dummy_redefined.py:12:4: W0621: Redefining name 'value' from outer scope (line 7) (redefined-outer-name)
************* Module functional.n.no.no_self_argument_py37
tests/functional/n/no/no_self_argument_py37.py:13:4: E0213: Method should have "self" as first argument (no-self-argument)
tests/functional/n/no/no_self_argument_py37.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/n/no/no_self_argument_py37.py:3:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.n.no.no_else_return
tests/functional/n/no/no_else_return.py:6:4: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
tests/functional/n/no/no_else_return.py:15:4: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
tests/functional/n/no/no_else_return.py:29:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
tests/functional/n/no/no_else_return.py:41:4: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
tests/functional/n/no/no_else_return.py:53:4: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
tests/functional/n/no/no_else_return.py:68:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
tests/functional/n/no/no_else_return.py:104:4: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
tests/functional/n/no/no_else_return.py:4:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/n/no/no_else_return.py:4:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.n.no.no_classmethod_decorator
tests/functional/n/no/no_classmethod_decorator.py:14:4: R0202: Consider using a decorator instead of calling classmethod (no-classmethod-decorator)
tests/functional/n/no/no_classmethod_decorator.py:17:8: R0202: Consider using a decorator instead of calling classmethod (no-classmethod-decorator)
tests/functional/n/no/no_classmethod_decorator.py:25:4: R0202: Consider using a decorator instead of calling classmethod (no-classmethod-decorator)
************* Module functional.n.no.no_member_subclassed_dataclasses
tests/functional/n/no/no_member_subclassed_dataclasses.py:10:25: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead (consider-using-alias)
tests/functional/n/no/no_member_subclassed_dataclasses.py:22:25: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead (consider-using-alias)
tests/functional/n/no/no_member_subclassed_dataclasses.py:35:25: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead (consider-using-alias)
************* Module functional.n.no.no_member_dataclasses
tests/functional/n/no/no_member_dataclasses.py:69:26: E1101: Instance of 'Field' has no 'items' member (no-member)
tests/functional/n/no/no_member_dataclasses.py:81:26: E1101: Instance of 'Field' has no 'items' member (no-member)
tests/functional/n/no/no_member_dataclasses.py:15:25: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead (consider-using-alias)
tests/functional/n/no/no_member_dataclasses.py:28:25: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead (consider-using-alias)
tests/functional/n/no/no_member_dataclasses.py:42:25: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead (consider-using-alias)
tests/functional/n/no/no_member_dataclasses.py:55:15: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/n/no/no_member_dataclasses.py:66:15: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/n/no/no_member_dataclasses.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.n.no.no_else_break
tests/functional/n/no/no_else_break.py:8:8: R1723: Unnecessary "else" after "break", remove the "else" and de-indent the code inside it (no-else-break)
tests/functional/n/no/no_else_break.py:16:8: R1723: Unnecessary "elif" after "break", remove the leading "el" from "elif" (no-else-break)
tests/functional/n/no/no_else_break.py:28:12: R1723: Unnecessary "else" after "break", remove the "else" and de-indent the code inside it (no-else-break)
tests/functional/n/no/no_else_break.py:41:8: R1723: Unnecessary "else" after "break", remove the "else" and de-indent the code inside it (no-else-break)
tests/functional/n/no/no_else_break.py:54:8: R1723: Unnecessary "elif" after "break", remove the leading "el" from "elif" (no-else-break)
tests/functional/n/no/no_else_break.py:70:12: R1723: Unnecessary "else" after "break", remove the "else" and de-indent the code inside it (no-else-break)
tests/functional/n/no/no_else_break.py:110:8: R1723: Unnecessary "else" after "break", remove the "else" and de-indent the code inside it (no-else-break)
tests/functional/n/no/no_else_break.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/n/no/no_else_break.py:3:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.n.no.no_else_continue
tests/functional/n/no/no_else_continue.py:8:8: R1724: Unnecessary "else" after "continue", remove the "else" and de-indent the code inside it (no-else-continue)
tests/functional/n/no/no_else_continue.py:16:8: R1724: Unnecessary "elif" after "continue", remove the leading "el" from "elif" (no-else-continue)
tests/functional/n/no/no_else_continue.py:28:12: R1724: Unnecessary "else" after "continue", remove the "else" and de-indent the code inside it (no-else-continue)
tests/functional/n/no/no_else_continue.py:41:8: R1724: Unnecessary "else" after "continue", remove the "else" and de-indent the code inside it (no-else-continue)
tests/functional/n/no/no_else_continue.py:54:8: R1724: Unnecessary "elif" after "continue", remove the leading "el" from "elif" (no-else-continue)
tests/functional/n/no/no_else_continue.py:70:12: R1724: Unnecessary "else" after "continue", remove the "else" and de-indent the code inside it (no-else-continue)
tests/functional/n/no/no_else_continue.py:110:8: R1724: Unnecessary "else" after "continue", remove the "else" and de-indent the code inside it (no-else-continue)
tests/functional/n/no/no_else_continue.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/n/no/no_else_continue.py:3:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.n.no.no_else_raise
tests/functional/n/no/no_else_raise.py:6:4: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
tests/functional/n/no/no_else_raise.py:15:4: R1720: Unnecessary "elif" after "raise", remove the leading "el" from "elif" (no-else-raise)
tests/functional/n/no/no_else_raise.py:29:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
tests/functional/n/no/no_else_raise.py:41:4: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
tests/functional/n/no/no_else_raise.py:53:4: R1720: Unnecessary "elif" after "raise", remove the leading "el" from "elif" (no-else-raise)
tests/functional/n/no/no_else_raise.py:68:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
tests/functional/n/no/no_else_raise.py:104:4: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
tests/functional/n/no/no_else_raise.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/n/no/no_else_raise.py:3:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.n.no.no_warning_docstring
tests/functional/n/no/no_warning_docstring.py:4:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
tests/functional/n/no/no_warning_docstring.py:4:0: I0021: Useless suppression of 'using-constant-test' (useless-suppression)
************* Module functional.n.no.no_self_argument
tests/functional/n/no/no_self_argument.py:8:4: E0213: Method should have "self" as first argument (no-self-argument)
tests/functional/n/no/no_self_argument.py:12:4: E0213: Method should have "self" as first argument (no-self-argument)
************* Module functional.n.no.no_member_assign_same_line
tests/functional/n/no/no_member_assign_same_line.py:16:22: E1101: Instance of 'AssignMemberInSameLine' has no 'member' member (no-member)
************* Module functional.n.no.no_member_if_statements
tests/functional/n/no/no_member_if_statements.py:6:0: E1101: Instance of 'str' has no 'isoformat' member (no-member)
tests/functional/n/no/no_member_if_statements.py:12:4: E1101: Instance of 'str' has no 'isoformat' member (no-member)
tests/functional/n/no/no_member_if_statements.py:23:3: E1101: Instance of 'str' has no 'none_existent' member (no-member)
tests/functional/n/no/no_member_if_statements.py:30:17: R6003: Consider using alternative Union syntax instead of 'Union'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
tests/functional/n/no/no_member_if_statements.py:33:23: R6003: Consider using alternative Union syntax instead of 'Union'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
************* Module functional.n.no.no_name_in_module
tests/functional/n/no/no_name_in_module.py:5:0: E0611: No name 'tutu' in module 'collections' (no-name-in-module)
tests/functional/n/no/no_name_in_module.py:6:0: E0611: No name 'toto' in module 'collections' (no-name-in-module)
tests/functional/n/no/no_name_in_module.py:10:0: E1101: Module 'xml.etree.ElementTree' has no 'nonexistant_function' member (no-member)
tests/functional/n/no/no_name_in_module.py:11:0: E1101: Module 'xml.etree.ElementTree' has no 'another' member (no-member)
tests/functional/n/no/no_name_in_module.py:16:6: E1101: Module 'sys' has no 'stdoout' member; maybe 'stdout'? (no-member)
tests/functional/n/no/no_name_in_module.py:23:0: E0611: No name 'findiiter' in module 're' (no-name-in-module)
tests/functional/n/no/no_name_in_module.py:23:0: E0611: No name 'compiile' in module 're' (no-name-in-module)
tests/functional/n/no/no_name_in_module.py:26:0: W0104: Statement seems to have no effect (pointless-statement)
tests/functional/n/no/no_name_in_module.py:34:4: E0611: No name 'anything' in module 'collections' (no-name-in-module)
tests/functional/n/no/no_name_in_module.py:49:4: E0611: No name 'indeed_missing' in module 'collections' (no-name-in-module)
tests/functional/n/no/no_name_in_module.py:54:4: E0611: No name 'emit' in module 'collections' (no-name-in-module)
tests/functional/n/no/no_name_in_module.py:71:8: E0611: No name 'emit2' in module 'collections' (no-name-in-module)
tests/functional/n/no/no_name_in_module.py:76:0: E0611: No name 'lala' in module 'functional.n.no.no_self_argument' (no-name-in-module)
tests/functional/n/no/no_name_in_module.py:77:0: E0611: No name 'bla' in module 'functional.n.no.no_self_argument' (no-name-in-module)
tests/functional/n/no/no_name_in_module.py:80:0: E0611: No name 'THIS_does_not_EXIST' in module 'argparse' (no-name-in-module)
tests/functional/n/no/no_name_in_module.py:2:0: I0021: Useless suppression of 'bare-except' (useless-suppression)
tests/functional/n/no/no_name_in_module.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
************* Module functional.n.no.no_method_argument_py38
tests/functional/n/no/no_method_argument_py38.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.n.no.no_member_imports
tests/functional/n/no/no_member_imports.py:10:4: E1101: Module 'math' has no 'THIS_does_not_EXIST' member (no-member)
tests/functional/n/no/no_member_imports.py:19:4: E1101: Module 'argparse' has no 'THIS_does_not_EXIST' member (no-member)
tests/functional/n/no/no_member_imports.py:25:4: E1101: Module 'xml.etree' has no 'THIS_does_not_EXIST' member (no-member)
tests/functional/n/no/no_member_imports.py:32:4: E1101: Module 'argparse' has no 'submodule' member (no-member)
tests/functional/n/no/no_member_imports.py:38:4: E1101: Module 'collections.abc' has no 'THIS_does_not_EXIST' member (no-member)
tests/functional/n/no/no_member_imports.py:44:4: E1101: Module 'sys' has no 'THIS_does_not_EXIST' member (no-member)
tests/functional/n/no/no_member_imports.py:59:4: E1101: Class 'Option' has no 'THIS_does_not_EXIST' member (no-member)
************* Module functional.n.no.no_staticmethod_decorator
tests/functional/n/no/no_staticmethod_decorator.py:14:4: R0203: Consider using a decorator instead of calling staticmethod (no-staticmethod-decorator)
tests/functional/n/no/no_staticmethod_decorator.py:17:8: R0203: Consider using a decorator instead of calling staticmethod (no-staticmethod-decorator)
tests/functional/n/no/no_staticmethod_decorator.py:25:4: R0203: Consider using a decorator instead of calling staticmethod (no-staticmethod-decorator)
************* Module functional.n.non.non_str_assignment_to_dunder_name
tests/functional/n/non/non_str_assignment_to_dunder_name.py:37:0: W1115: Non-string value assigned to __name__ (non-str-assignment-to-dunder-name)
tests/functional/n/non/non_str_assignment_to_dunder_name.py:38:0: W1115: Non-string value assigned to __name__ (non-str-assignment-to-dunder-name)
tests/functional/n/non/non_str_assignment_to_dunder_name.py:39:0: W1115: Non-string value assigned to __name__ (non-str-assignment-to-dunder-name)
tests/functional/n/non/non_str_assignment_to_dunder_name.py:40:0: W1115: Non-string value assigned to __name__ (non-str-assignment-to-dunder-name)
tests/functional/n/non/non_str_assignment_to_dunder_name.py:46:0: W1115: Non-string value assigned to __name__ (non-str-assignment-to-dunder-name)
tests/functional/n/non/non_str_assignment_to_dunder_name.py:47:0: W1115: Non-string value assigned to __name__ (non-str-assignment-to-dunder-name)
tests/functional/n/non/non_str_assignment_to_dunder_name.py:48:0: W1115: Non-string value assigned to __name__ (non-str-assignment-to-dunder-name)
tests/functional/n/non/non_str_assignment_to_dunder_name.py:49:0: W1115: Non-string value assigned to __name__ (non-str-assignment-to-dunder-name)
tests/functional/n/non/non_str_assignment_to_dunder_name.py:38:0: R0204: Redefinition of ExampleClass.__name__ type from int to bool (redefined-variable-type)
tests/functional/n/non/non_str_assignment_to_dunder_name.py:47:0: R0204: Redefinition of example_function.__name__ type from int to bool (redefined-variable-type)
************* Module functional.n.non.non_init_parent_called
tests/functional/n/non/non_init_parent_called.py:7:0: E0401: Unable to import 'nonexistant' (import-error)
tests/functional/n/non/non_init_parent_called.py:15:8: W0233: __init__ method from a non direct base class 'BBBBMixin' is called (non-parent-init-called)
tests/functional/n/non/non_init_parent_called.py:23:50: E1101: Module 'functional.n.non.non_init_parent_called' has no 'BBBB' member (no-member)
tests/functional/n/non/non_init_parent_called.py:28:8: E1101: Module 'functional.n.non.non_init_parent_called' has no 'BBBB' member (no-member)
tests/functional/n/non/non_init_parent_called.py:49:4: W0231: __init__ method from base class 'dict' is not called (super-init-not-called)
tests/functional/n/non/non_init_parent_called.py:51:8: E1101: Super of 'Super2' has no '__woohoo__' member (no-member)
tests/functional/n/non/non_init_parent_called.py:1:0: I0021: Useless suppression of 'protected-access' (useless-suppression)
tests/functional/n/non/non_init_parent_called.py:1:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
tests/functional/n/non/non_init_parent_called.py:2:0: I0021: Useless suppression of 'unnecessary-dunder-call' (useless-suppression)
************* Module functional.n.non.non_iterator_returned
tests/functional/n/non/non_iterator_returned.py:79:4: E0301: __iter__ returns non-iterator (non-iterator-returned)
tests/functional/n/non/non_iterator_returned.py:86:4: E0301: __iter__ returns non-iterator (non-iterator-returned)
tests/functional/n/non/non_iterator_returned.py:93:4: E0301: __iter__ returns non-iterator (non-iterator-returned)
tests/functional/n/non/non_iterator_returned.py:100:4: E0301: __iter__ returns non-iterator (non-iterator-returned)
tests/functional/n/non/non_iterator_returned.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.n.non.non_ascii_name
tests/functional/n/non/non_ascii_name.py:3:0: C2401: Variable name "áéíóú" contains a non-ASCII character, consider renaming it. (non-ascii-name)
tests/functional/n/non/non_ascii_name.py:5:0: C2401: Function name "úóíéá" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_import.non_ascii_import_as_bad
tests/functional/n/non_ascii_import/non_ascii_import_as_bad.py:2:0: C2403: Module name "łos" contains a non-ASCII character, use an ASCII-only alias for import. (non-ascii-module-import)
************* Module functional.n.non_ascii_import.non_ascii_import_from_as
tests/functional/n/non_ascii_import/non_ascii_import_from_as.py:2:0: C2403: Module name "łos" contains a non-ASCII character, use an ASCII-only alias for import. (non-ascii-module-import)
************* Module functional.n.non_ascii_name.non_ascii_name_function_argument_py39plus
tests/functional/n/non_ascii_name/non_ascii_name_function_argument_py39plus.py:12:4: C2401: Argument name "łol" contains a non-ASCII character, consider renaming it. (non-ascii-name)
tests/functional/n/non_ascii_name/non_ascii_name_function_argument_py39plus.py:24:4: C2401: Argument name "łol" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name.non_ascii_name_kwargs_py39plus
tests/functional/n/non_ascii_name/non_ascii_name_kwargs_py39plus.py:17:4: C2401: Argument name "łol" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name.non_ascii_name_staticmethod
tests/functional/n/non_ascii_name/non_ascii_name_staticmethod.py:11:4: C2401: Function name "umlaut_ä" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name.non_ascii_name_inline_var
tests/functional/n/non_ascii_name/non_ascii_name_inline_var.py:7:8: C2401: Variable name "łol" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name.non_ascii_name_function_argument_py38
tests/functional/n/non_ascii_name/non_ascii_name_function_argument_py38.py:11:4: C2401: Argument name "łol" contains a non-ASCII character, consider renaming it. (non-ascii-name)
tests/functional/n/non_ascii_name/non_ascii_name_function_argument_py38.py:23:4: C2401: Argument name "łol" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name.non_ascii_name_loł
tests/functional/n/non_ascii_name/non_ascii_name_loł.py:1:0: W2402: File name "non_ascii_name_loł" contains a non-ASCII character. PEP 3131 only allows non-ascii identifiers, not file names. (non-ascii-file-name)
************* Module functional.n.non_ascii_name.non_ascii_name_local
tests/functional/n/non_ascii_name/non_ascii_name_local.py:6:4: C2401: Variable name "łol" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name.non_ascii_name_for_loop
tests/functional/n/non_ascii_name/non_ascii_name_for_loop.py:10:8: C2401: Variable name "łol" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name.non_ascii_name_decorator
tests/functional/n/non_ascii_name/non_ascii_name_decorator.py:16:4: C2401: Argument name "fåling" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name.non_ascii_name_function
tests/functional/n/non_ascii_name/non_ascii_name_function.py:13:0: C2401: Function name "sayНello" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name.non_ascii_name_assignment_expressions
tests/functional/n/non_ascii_name/non_ascii_name_assignment_expressions.py:3:4: C2401: Variable name "loł" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name.non_ascii_name_kwargs_py38
tests/functional/n/non_ascii_name/non_ascii_name_kwargs_py38.py:16:4: C2401: Argument name "łol" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name.non_ascii_name_pos_and_kwonly_function
tests/functional/n/non_ascii_name/non_ascii_name_pos_and_kwonly_function.py:12:4: C2401: Argument name "not_okay_łol" contains a non-ASCII character, consider renaming it. (non-ascii-name)
tests/functional/n/non_ascii_name/non_ascii_name_pos_and_kwonly_function.py:13:4: C2401: Argument name "not_okay_defaułt" contains a non-ASCII character, consider renaming it. (non-ascii-name)
tests/functional/n/non_ascii_name/non_ascii_name_pos_and_kwonly_function.py:16:4: C2401: Argument name "p_or_kw_not_økay" contains a non-ASCII character, consider renaming it. (non-ascii-name)
tests/functional/n/non_ascii_name/non_ascii_name_pos_and_kwonly_function.py:19:4: C2401: Argument name "kw_arg_not_økay" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name.non_ascii_name_try_except
tests/functional/n/non_ascii_name/non_ascii_name_try_except.py:9:0: C2401: Variable name "łol" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name.non_ascii_name_variable
tests/functional/n/non_ascii_name/non_ascii_name_variable.py:7:0: C2401: Variable name "łol" contains a non-ASCII character, consider renaming it. (non-ascii-name)
tests/functional/n/non_ascii_name/non_ascii_name_variable.py:9:0: C2401: Variable name "łol" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.k.keyword_arg_before_vararg
tests/functional/k/keyword_arg_before_vararg.py:5:0: W1113: Keyword argument before variable positional arguments list in the definition of check_kwargs_before_args function (keyword-arg-before-vararg)
tests/functional/k/keyword_arg_before_vararg.py:14:4: W1113: Keyword argument before variable positional arguments list in the definition of func_in_class function (keyword-arg-before-vararg)
tests/functional/k/keyword_arg_before_vararg.py:19:4: W1113: Keyword argument before variable positional arguments list in the definition of static_method_in_class function (keyword-arg-before-vararg)
tests/functional/k/keyword_arg_before_vararg.py:24:4: W1113: Keyword argument before variable positional arguments list in the definition of class_method_in_class function (keyword-arg-before-vararg)
tests/functional/k/keyword_arg_before_vararg.py:11:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
tests/functional/k/keyword_arg_before_vararg.py:11:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
************* Module functional.m.module___dict__
tests/functional/m/module___dict__.py:5:6: E0601: Using variable '__dict__' before assignment (used-before-assignment)
************* Module functional.m.mapping_context_py3
tests/functional/m/mapping_context_py3.py:19:7: E1134: Non-mapping value SomeClass() is used in a mapping context (not-a-mapping)
tests/functional/m/mapping_context_py3.py:1:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
************* Module functional.m.multiple_imports
tests/functional/m/multiple_imports.py:2:0: C0410: Multiple imports on one line (os, socket) (multiple-imports)
tests/functional/m/multiple_imports.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/m/multiple_imports.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.m.misplaced_bare_raise
tests/functional/m/misplaced_bare_raise.py:6:4: E0704: The raise statement is not inside an except clause (misplaced-bare-raise)
tests/functional/m/misplaced_bare_raise.py:36:16: E0704: The raise statement is not inside an except clause (misplaced-bare-raise)
tests/functional/m/misplaced_bare_raise.py:39:4: E0704: The raise statement is not inside an except clause (misplaced-bare-raise)
tests/functional/m/misplaced_bare_raise.py:40:0: E0704: The raise statement is not inside an except clause (misplaced-bare-raise)
tests/functional/m/misplaced_bare_raise.py:49:4: E0704: The raise statement is not inside an except clause (misplaced-bare-raise)
tests/functional/m/misplaced_bare_raise.py:57:4: E0704: The raise statement is not inside an except clause (misplaced-bare-raise)
tests/functional/m/misplaced_bare_raise.py:68:4: E0704: The raise statement is not inside an except clause (misplaced-bare-raise)
************* Module functional.m.misplaced_format_function
tests/functional/m/misplaced_format_function.py:5:0: E0119: format function is not called on str (misplaced-format-function)
tests/functional/m/misplaced_format_function.py:6:0: E0119: format function is not called on str (misplaced-format-function)
tests/functional/m/misplaced_format_function.py:52:8: E0119: format function is not called on str (misplaced-format-function)
tests/functional/m/misplaced_format_function.py:58:0: E0119: format function is not called on str (misplaced-format-function)
tests/functional/m/misplaced_format_function.py:3:0: I0021: Useless suppression of 'pointless-string-statement' (useless-suppression)
tests/functional/m/misplaced_format_function.py:3:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
tests/functional/m/misplaced_format_function.py:3:0: I0021: Useless suppression of 'no-member' (useless-suppression)
tests/functional/m/misplaced_format_function.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/m/misplaced_format_function.py:3:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
************* Module functional.m.membership_protocol
tests/functional/m/membership_protocol.py:4:5: R6201: Consider using set for membership test (use-set-for-membership)
tests/functional/m/membership_protocol.py:7:5: R6201: Consider using set for membership test (use-set-for-membership)
tests/functional/m/membership_protocol.py:113:6: E1135: Value '42' doesn't support membership test (unsupported-membership-test)
tests/functional/m/membership_protocol.py:114:10: E1135: Value 'None' doesn't support membership test (unsupported-membership-test)
tests/functional/m/membership_protocol.py:115:6: E1135: Value '8.5' doesn't support membership test (unsupported-membership-test)
tests/functional/m/membership_protocol.py:120:10: E1135: Value 'EmptyClass()' doesn't support membership test (unsupported-membership-test)
tests/functional/m/membership_protocol.py:121:6: E1135: Value 'EmptyClass' doesn't support membership test (unsupported-membership-test)
tests/functional/m/membership_protocol.py:122:10: E1135: Value 'count' doesn't support membership test (unsupported-membership-test)
tests/functional/m/membership_protocol.py:123:6: E1135: Value 'range' doesn't support membership test (unsupported-membership-test)
************* Module functional.m.monkeypatch_method
tests/functional/m/monkeypatch_method.py:1:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/m/monkeypatch_method.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/m/monkeypatch_method.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.m.mixin_class_rgx
tests/functional/m/mixin_class_rgx.py:24:4: E1701: Async context manager 'AsyncManagerMixedin' doesn't implement __aenter__ and __aexit__. (not-async-context-manager)
tests/functional/m/mixin_class_rgx.py:26:4: E1701: Async context manager 'AsyncManagerMixin' doesn't implement __aenter__ and __aexit__. (not-async-context-manager)
tests/functional/m/mixin_class_rgx.py:55:11: E1101: Instance of 'OutsideInitMixedin' has no 'method' member (no-member)
tests/functional/m/mixin_class_rgx.py:60:17: E1101: Instance of 'NoMemberMixin' has no 'method' member (no-member)
************* Module functional.m.mapping_context
tests/functional/m/mapping_context.py:32:7: E1134: Non-mapping value CustomMapping is used in a mapping context (not-a-mapping)
tests/functional/m/mapping_context.py:37:7: E1134: Non-mapping value NotMapping() is used in a mapping context (not-a-mapping)
tests/functional/m/mapping_context.py:4:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/m/mapping_context.py:4:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
************* Module functional.m.method_hidden
tests/functional/m/method_hidden.py:18:4: E0202: An attribute defined in functional.m.method_hidden line 12 hides this method (method-hidden)
tests/functional/m/method_hidden.py:86:4: E0202: An attribute defined in functional.m.method_hidden line 84 hides this method (method-hidden)
tests/functional/m/method_hidden.py:113:4: E0202: An attribute defined in functional.m.method_hidden line 109 hides this method (method-hidden)
tests/functional/m/method_hidden.py:1:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.m.misplaced_future
tests/functional/m/misplaced_future.py:3:0: W0410: __future__ import is not the first non docstring statement (misplaced-future)
************* Module functional.m.membership_protocol_py3
tests/functional/m/membership_protocol_py3.py:34:9: E1135: Value 'IterableClass()' doesn't support membership test (unsupported-membership-test)
tests/functional/m/membership_protocol_py3.py:35:9: E1135: Value 'OldIterableClass()' doesn't support membership test (unsupported-membership-test)
tests/functional/m/membership_protocol_py3.py:36:9: E1135: Value 'ContainerClass()' doesn't support membership test (unsupported-membership-test)
tests/functional/m/membership_protocol_py3.py:1:0: I0021: Useless suppression of 'unused-argument' (useless-suppression)
************* Module functional.m.modified_iterating
tests/functional/m/modified_iterating.py:8:4: W4701: Iterated list 'item_list' is being modified inside for loop body, consider iterating through a copy of it instead. (modified-iterating-list)
tests/functional/m/modified_iterating.py:11:4: W4701: Iterated list 'item_list' is being modified inside for loop body, consider iterating through a copy of it instead. (modified-iterating-list)
tests/functional/m/modified_iterating.py:29:4: E4702: Iterated dict 'my_dict' is being modified inside for loop body, iterate through a copy of it instead. (modified-iterating-dict)
tests/functional/m/modified_iterating.py:39:4: E4703: Iterated set 'item_set' is being modified inside for loop body, iterate through a copy of it instead. (modified-iterating-set)
tests/functional/m/modified_iterating.py:46:8: W4701: Iterated list 'item_list' is being modified inside for loop body, consider iterating through a copy of it instead. (modified-iterating-list)
tests/functional/m/modified_iterating.py:48:4: W4701: Iterated list 'item_list' is being modified inside for loop body, consider iterating through a copy of it instead. (modified-iterating-list)
tests/functional/m/modified_iterating.py:47:8: E4703: Iterated set 'item_set' is being modified inside for loop body, iterate through a copy of it instead. (modified-iterating-set)
tests/functional/m/modified_iterating.py:52:4: W4701: Iterated list 'item_list' is being modified inside for loop body, consider iterating through a copy of it instead. (modified-iterating-list)
tests/functional/m/modified_iterating.py:55:12: W4701: Iterated list 'item_list' is being modified inside for loop body, consider iterating through a copy of it instead. (modified-iterating-list)
tests/functional/m/modified_iterating.py:57:16: W4701: Iterated list 'item_list' is being modified inside for loop body, consider iterating through a copy of it instead. (modified-iterating-list)
tests/functional/m/modified_iterating.py:53:13: R6102: Consider using an in-place tuple instead of list (consider-using-tuple)
tests/functional/m/modified_iterating.py:54:17: R6102: Consider using an in-place tuple instead of list (consider-using-tuple)
tests/functional/m/modified_iterating.py:56:21: R6102: Consider using an in-place tuple instead of list (consider-using-tuple)
************* Module functional.m.method_cache_max_size_none
tests/functional/m/method_cache_max_size_none.py:25:5: W1518: 'lru_cache(maxsize=None)' or 'cache' will keep all method args alive indefinitely, including 'self' (method-cache-max-size-none)
tests/functional/m/method_cache_max_size_none.py:29:5: W1518: 'lru_cache(maxsize=None)' or 'cache' will keep all method args alive indefinitely, including 'self' (method-cache-max-size-none)
tests/functional/m/method_cache_max_size_none.py:33:5: W1518: 'lru_cache(maxsize=None)' or 'cache' will keep all method args alive indefinitely, including 'self' (method-cache-max-size-none)
tests/functional/m/method_cache_max_size_none.py:37:5: W1518: 'lru_cache(maxsize=None)' or 'cache' will keep all method args alive indefinitely, including 'self' (method-cache-max-size-none)
tests/functional/m/method_cache_max_size_none.py:42:5: W1518: 'lru_cache(maxsize=None)' or 'cache' will keep all method args alive indefinitely, including 'self' (method-cache-max-size-none)
tests/functional/m/method_cache_max_size_none.py:43:5: W1518: 'lru_cache(maxsize=None)' or 'cache' will keep all method args alive indefinitely, including 'self' (method-cache-max-size-none)
tests/functional/m/method_cache_max_size_none.py:73:5: W1518: 'lru_cache(maxsize=None)' or 'cache' will keep all method args alive indefinitely, including 'self' (method-cache-max-size-none)
************* Module functional.m.method_cache_max_size_none_py39
tests/functional/m/method_cache_max_size_none_py39.py:27:5: W1518: 'lru_cache(maxsize=None)' or 'cache' will keep all method args alive indefinitely, including 'self' (method-cache-max-size-none)
tests/functional/m/method_cache_max_size_none_py39.py:31:5: W1518: 'lru_cache(maxsize=None)' or 'cache' will keep all method args alive indefinitely, including 'self' (method-cache-max-size-none)
tests/functional/m/method_cache_max_size_none_py39.py:35:5: W1518: 'lru_cache(maxsize=None)' or 'cache' will keep all method args alive indefinitely, including 'self' (method-cache-max-size-none)
tests/functional/m/method_cache_max_size_none_py39.py:39:5: W1518: 'lru_cache(maxsize=None)' or 'cache' will keep all method args alive indefinitely, including 'self' (method-cache-max-size-none)
tests/functional/m/method_cache_max_size_none_py39.py:45:5: W1518: 'lru_cache(maxsize=None)' or 'cache' will keep all method args alive indefinitely, including 'self' (method-cache-max-size-none)
************* Module functional.o.overloaded_operator
tests/functional/o/overloaded_operator.py:1:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/o/overloaded_operator.py:1:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
************* Module functional.o.overridden_final_method_regression
tests/functional/o/overridden_final_method_regression.py:4:1: E0602: Undefined variable 'unknown_decorator' (undefined-variable)
************* Module functional.o.overridden_final_method_py38
tests/functional/o/overridden_final_method_py38.py:9:5: W2602: typing.final is not supported by all versions included in the py-version setting (using-final-decorator-in-unsupported-version)
tests/functional/o/overridden_final_method_py38.py:24:9: W2602: typing.final is not supported by all versions included in the py-version setting (using-final-decorator-in-unsupported-version)
tests/functional/o/overridden_final_method_py38.py:4:0: I0021: Useless suppression of 'useless-object-inheritance' (useless-suppression)
tests/functional/o/overridden_final_method_py38.py:4:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.t.try_except_raise
tests/functional/t/try_except_raise.py:5:0: W0706: The except handler raises immediately (try-except-raise)
tests/functional/t/try_except_raise.py:16:0: W0706: The except handler raises immediately (try-except-raise)
tests/functional/t/try_except_raise.py:53:4: W0706: The except handler raises immediately (try-except-raise)
tests/functional/t/try_except_raise.py:67:0: W0706: The except handler raises immediately (try-except-raise)
tests/functional/t/try_except_raise.py:72:0: W0706: The except handler raises immediately (try-except-raise)
tests/functional/t/try_except_raise.py:94:0: W0706: The except handler raises immediately (try-except-raise)
tests/functional/t/try_except_raise.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/t/try_except_raise.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/t/try_except_raise.py:2:0: I0021: Useless suppression of 'undefined-variable' (useless-suppression)
************* Module functional.t.tokenize_error
tests/functional/t/tokenize_error.py:7:0: E0001: EOF in multi-line statement (syntax-error)
************* Module functional.t.typevar_naming_style_default
tests/functional/t/typevar_naming_style_default.py:11:0: C0105: Type variable name does not reflect variance. "GoodNameWithoutContra" is contravariant, use "GoodNameWithoutContra_contra" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_naming_style_default.py:19:0: C0131: TypeVar cannot be both covariant and contravariant (typevar-double-variance)
tests/functional/t/typevar_naming_style_default.py:19:0: C0105: Type variable name does not reflect variance (typevar-name-incorrect-variance)
tests/functional/t/typevar_naming_style_default.py:23:0: C0131: TypeVar cannot be both covariant and contravariant (typevar-double-variance)
tests/functional/t/typevar_naming_style_default.py:23:0: C0105: Type variable name does not reflect variance (typevar-name-incorrect-variance)
tests/functional/t/typevar_naming_style_default.py:24:0: C0131: TypeVar cannot be both covariant and contravariant (typevar-double-variance)
tests/functional/t/typevar_naming_style_default.py:24:0: C0105: Type variable name does not reflect variance (typevar-name-incorrect-variance)
tests/functional/t/typevar_naming_style_default.py:47:4: C0105: Type variable name does not reflect variance. "a_BadNameWithoutContra" is contravariant, use "a_BadNameWithoutContra_contra" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_naming_style_default.py:2:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
tests/functional/t/typevar_naming_style_default.py:2:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.t.trailing_whitespaces
tests/functional/t/trailing_whitespaces.py:2:0: I0021: Useless suppression of 'mixed-line-endings' (useless-suppression)
************* Module functional.t.typevar_name_incorrect_variance
tests/functional/t/typevar_name_incorrect_variance.py:7:0: C0105: Type variable name does not reflect variance. "T_co" is invariant, use "T" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:8:0: C0105: Type variable name does not reflect variance. "T_contra" is invariant, use "T" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:9:0: C0105: Type variable name does not reflect variance. "ScoresT_contra" is invariant, use "ScoresT" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:17:0: C0105: Type variable name does not reflect variance. "CT_co" is contravariant, use "CT_contra" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:18:0: C0105: Type variable name does not reflect variance. "CT_contra" is invariant, use "CT" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:22:0: C0105: Type variable name does not reflect variance. "VT" is covariant, use "VT_co" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:23:0: C0105: Type variable name does not reflect variance. "VT_contra" is covariant, use "VT_co" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:28:0: C0105: Type variable name does not reflect variance. "VT_co" is invariant, use "VT" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:29:0: C0105: Type variable name does not reflect variance. "VT_contra" is invariant, use "VT" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:31:0: C0105: Type variable name does not reflect variance. "VT" is covariant, use "VT_co" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:33:0: C0105: Type variable name does not reflect variance. "VT_contra" is covariant, use "VT_co" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:38:0: C0105: Type variable name does not reflect variance. "VT_co" is invariant, use "VT" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:41:0: C0105: Type variable name does not reflect variance. "VT_contra" is invariant, use "VT" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:45:0: C0105: Type variable name does not reflect variance. "VT" is contravariant, use "VT_contra" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:46:0: C0105: Type variable name does not reflect variance. "VT_co" is contravariant, use "VT_contra" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:52:0: C0105: Type variable name does not reflect variance. "VT_co" is invariant, use "VT" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:55:0: C0105: Type variable name does not reflect variance. "VT_contra" is invariant, use "VT" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:61:4: C0105: Type variable name does not reflect variance. "VT" is covariant, use "VT_co" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:62:4: C0105: Type variable name does not reflect variance. "VT_contra" is covariant, use "VT_co" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:64:7: C0105: Type variable name does not reflect variance. "VT_contra" is covariant, use "VT_co" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:67:5: C0105: Type variable name does not reflect variance. "VT_contra" is covariant, use "VT_co" instead (typevar-name-incorrect-variance)
************* Module functional.t.typevar_double_variance
tests/functional/t/typevar_double_variance.py:6:0: C0131: TypeVar cannot be both covariant and contravariant (typevar-double-variance)
tests/functional/t/typevar_double_variance.py:6:0: C0105: Type variable name does not reflect variance (typevar-name-incorrect-variance)
tests/functional/t/typevar_double_variance.py:8:0: C0131: TypeVar cannot be both covariant and contravariant (typevar-double-variance)
tests/functional/t/typevar_double_variance.py:8:0: C0105: Type variable name does not reflect variance (typevar-name-incorrect-variance)
tests/functional/t/typevar_double_variance.py:2:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.t.trailing_comma_tuple
tests/functional/t/trailing_comma_tuple.py:3:0: R1707: Disallow trailing comma tuple (trailing-comma-tuple)
tests/functional/t/trailing_comma_tuple.py:4:0: R1707: Disallow trailing comma tuple (trailing-comma-tuple)
tests/functional/t/trailing_comma_tuple.py:5:0: R1707: Disallow trailing comma tuple (trailing-comma-tuple)
tests/functional/t/trailing_comma_tuple.py:6:0: R1707: Disallow trailing comma tuple (trailing-comma-tuple)
tests/functional/t/trailing_comma_tuple.py:31:0: R1707: Disallow trailing comma tuple (trailing-comma-tuple)
tests/functional/t/trailing_comma_tuple.py:34:0: R1707: Disallow trailing comma tuple (trailing-comma-tuple)
tests/functional/t/trailing_comma_tuple.py:38:0: R1707: Disallow trailing comma tuple (trailing-comma-tuple)
tests/functional/t/trailing_comma_tuple.py:41:0: R1707: Disallow trailing comma tuple (trailing-comma-tuple)
tests/functional/t/trailing_comma_tuple.py:47:0: R1707: Disallow trailing comma tuple (trailing-comma-tuple)
tests/functional/t/trailing_comma_tuple.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/t/trailing_comma_tuple.py:2:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.t.tokenize_error_jython
tests/functional/t/tokenize_error_jython.py:8:0: E0001: EOF in multi-line statement (syntax-error)
************* Module functional.t.typing_use
tests/functional/t/typing_use.py:21:0: E0102: function already defined line 16 (function-redefined)
************* Module functional.t.try_except_raise_crash
tests/functional/t/try_except_raise_crash.py:23:4: W0706: The except handler raises immediately (try-except-raise)
tests/functional/t/try_except_raise_crash.py:23:11: E0712: Catching an exception which doesn't inherit from Exception: TestException (catching-non-exception)
tests/functional/t/try_except_raise_crash.py:6:16: R6002: 'typing.Sized' will be deprecated with PY39, consider using 'collections.abc.Sized' instead (consider-using-alias)
tests/functional/t/try_except_raise_crash.py:1:0: I0021: Useless suppression of 'too-many-ancestors' (useless-suppression)
************* Module functional.t.typevar_name_mismatch
tests/functional/t/typevar_name_mismatch.py:10:0: C0132: TypeVar name "T" does not match assigned variable name "X" (typevar-name-mismatch)
tests/functional/t/typevar_name_mismatch.py:11:0: C0132: TypeVar name "T_co" does not match assigned variable name "X_co" (typevar-name-mismatch)
tests/functional/t/typevar_name_mismatch.py:12:0: C0132: TypeVar name "T_contra" does not match assigned variable name "X_contra" (typevar-name-mismatch)
tests/functional/t/typevar_name_mismatch.py:13:0: C0132: TypeVar name "T" does not match assigned variable name "X_co" (typevar-name-mismatch)
tests/functional/t/typevar_name_mismatch.py:13:6: C0132: TypeVar name "T" does not match assigned variable name "X_contra" (typevar-name-mismatch)
tests/functional/t/typevar_name_mismatch.py:24:0: C0105: Type variable name does not reflect variance. "X" is contravariant, use "X_contra" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_mismatch.py:24:0: C0132: TypeVar name "T" does not match assigned variable name "X" (typevar-name-mismatch)
tests/functional/t/typevar_name_mismatch.py:25:0: C0131: TypeVar cannot be both covariant and contravariant (typevar-double-variance)
tests/functional/t/typevar_name_mismatch.py:25:0: C0105: Type variable name does not reflect variance (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_mismatch.py:25:0: C0132: TypeVar name "T" does not match assigned variable name "X" (typevar-name-mismatch)
tests/functional/t/typevar_name_mismatch.py:30:0: C0105: Type variable name does not reflect variance. "X_co" is invariant, use "X" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_mismatch.py:30:0: C0132: TypeVar name "T_co" does not match assigned variable name "X_co" (typevar-name-mismatch)
tests/functional/t/typevar_name_mismatch.py:31:0: C0105: Type variable name does not reflect variance. "X_contra" is covariant, use "X_co" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_mismatch.py:31:0: C0132: TypeVar name "T_contra" does not match assigned variable name "X_contra" (typevar-name-mismatch)
tests/functional/t/typevar_name_mismatch.py:43:0: C0132: TypeVar name "T" does not match assigned variable name "X" (typevar-name-mismatch)
tests/functional/t/typevar_name_mismatch.py:44:0: C0132: TypeVar name "T_co" does not match assigned variable name "X_co" (typevar-name-mismatch)
tests/functional/t/typevar_name_mismatch.py:45:0: C0132: TypeVar name "T_contra" does not match assigned variable name "X_contra" (typevar-name-mismatch)
tests/functional/t/typevar_name_mismatch.py:46:0: C0132: TypeVar name "T_co" does not match assigned variable name "X_co" (typevar-name-mismatch)
tests/functional/t/typevar_name_mismatch.py:47:0: C0132: TypeVar name "T_contra" does not match assigned variable name "X_contra" (typevar-name-mismatch)
tests/functional/t/typevar_name_mismatch.py:37:0: R0204: Redefinition of T type from type to typing.TypeVar (redefined-variable-type)
tests/functional/t/typevar_name_mismatch.py:38:0: R0204: Redefinition of T_co type from type to typing.TypeVar (redefined-variable-type)
tests/functional/t/typevar_name_mismatch.py:39:0: R0204: Redefinition of T_contra type from type to typing.TypeVar (redefined-variable-type)
tests/functional/t/typevar_name_mismatch.py:43:0: R0204: Redefinition of X type from type to typing.TypeVar (redefined-variable-type)
tests/functional/t/typevar_name_mismatch.py:44:0: R0204: Redefinition of X_co type from type to typing.TypeVar (redefined-variable-type)
tests/functional/t/typevar_name_mismatch.py:45:0: R0204: Redefinition of X_contra type from type to typing.TypeVar (redefined-variable-type)
************* Module functional.t.ternary
tests/functional/t/ternary.py:5:0: R1706: Consider using ternary (true_value if condition else false_value) (consider-using-ternary)
tests/functional/t/ternary.py:15:4: R1706: Consider using ternary (true_value if condition else false_value) (consider-using-ternary)
tests/functional/t/ternary.py:18:0: R1706: Consider using ternary ('ERROR' if some_callable(condition) else 'SUCCESS') (consider-using-ternary)
tests/functional/t/ternary.py:19:0: R1706: Consider using ternary ('greater' if SOME_VALUE1 > 3 else 'not greater') (consider-using-ternary)
tests/functional/t/ternary.py:20:0: R1706: Consider using ternary ('both' if SOME_VALUE2 > 4 and SOME_VALUE3 else 'not') (consider-using-ternary)
tests/functional/t/ternary.py:23:0: R1709: Boolean expression may be simplified to SOME_VALUE2 (simplify-boolean-expression)
tests/functional/t/ternary.py:33:4: R1706: Consider using ternary (truth_value if condition else false_value) (consider-using-ternary)
tests/functional/t/ternary.py:39:4: R1709: Boolean expression may be simplified to false_value (simplify-boolean-expression)
************* Module functional.t.too.too_many_locals
tests/functional/t/too/too_many_locals.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.t.too.too_many_lines
tests/functional/t/too/too_many_lines.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/t/too/too_many_lines.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.t.too.too_many_boolean_expressions
tests/functional/t/too/too_many_boolean_expressions.py:6:3: R0916: Too many boolean expressions in if statement (6/5) (too-many-boolean-expressions)
tests/functional/t/too/too_many_boolean_expressions.py:10:5: R0916: Too many boolean expressions in if statement (7/5) (too-many-boolean-expressions)
tests/functional/t/too/too_many_boolean_expressions.py:12:5: R0916: Too many boolean expressions in if statement (6/5) (too-many-boolean-expressions)
tests/functional/t/too/too_many_boolean_expressions.py:14:5: R0916: Too many boolean expressions in if statement (6/5) (too-many-boolean-expressions)
************* Module functional.t.too.too_many_ancestors
tests/functional/t/too/too_many_ancestors.py:21:0: R0901: Too many ancestors (8/7) (too-many-ancestors)
tests/functional/t/too/too_many_ancestors.py:24:0: R0901: Too many ancestors (9/7) (too-many-ancestors)
tests/functional/t/too/too_many_ancestors.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/t/too/too_many_ancestors.py:1:0: I0021: Useless suppression of 'arguments-differ' (useless-suppression)
************* Module functional.t.too.too_few_public_methods_37
tests/functional/t/too/too_few_public_methods_37.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.t.too.too_many_lines_disabled
tests/functional/t/too/too_many_lines_disabled.py:5:0: I0021: Useless suppression of 'too-many-lines' (useless-suppression)
************* Module functional.t.too.too_many_arguments_issue_1045
tests/functional/t/too/too_many_arguments_issue_1045.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/t/too/too_many_arguments_issue_1045.py:3:0: I0021: Useless suppression of 'unused-import' (useless-suppression)
tests/functional/t/too/too_many_arguments_issue_1045.py:3:0: I0021: Useless suppression of 'undefined-variable' (useless-suppression)
************* Module functional.t.too.too_many_nested_blocks
tests/functional/t/too/too_many_nested_blocks.py:6:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
tests/functional/t/too/too_many_nested_blocks.py:83:12: R5501: Consider using "elif" instead of "else" then "if" to remove one indentation level (else-if-used)
tests/functional/t/too/too_many_nested_blocks.py:86:16: R5501: Consider using "elif" instead of "else" then "if" to remove one indentation level (else-if-used)
tests/functional/t/too/too_many_nested_blocks.py:89:20: R5501: Consider using "elif" instead of "else" then "if" to remove one indentation level (else-if-used)
tests/functional/t/too/too_many_nested_blocks.py:92:24: R5501: Consider using "elif" instead of "else" then "if" to remove one indentation level (else-if-used)
tests/functional/t/too/too_many_nested_blocks.py:95:28: R5501: Consider using "elif" instead of "else" then "if" to remove one indentation level (else-if-used)
tests/functional/t/too/too_many_nested_blocks.py:77:4: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
tests/functional/t/too/too_many_nested_blocks.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/t/too/too_many_nested_blocks.py:3:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/t/too/too_many_nested_blocks.py:3:0: I0021: Useless suppression of 'too-many-return-statements' (useless-suppression)
************* Module functional.t.too.too_many_star_expressions
tests/functional/t/too/too_many_star_expressions.py:3:0: E0112: More than one starred expression in assignment (too-many-star-expressions)
tests/functional/t/too/too_many_star_expressions.py:6:0: E0112: More than one starred expression in assignment (too-many-star-expressions)
************* Module functional.t.too.too_many_ancestors_ignored_parents
tests/functional/t/too/too_many_ancestors_ignored_parents.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/t/too/too_many_ancestors_ignored_parents.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.t.too.too_many_return_statements
tests/functional/t/too/too_many_return_statements.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.t.too.too_many_arguments
tests/functional/t/too/too_many_arguments.py:1:0: I0021: Useless suppression of 'unnecessary-dunder-call' (useless-suppression)
************* Module functional.t.too.too_many_public_methods
tests/functional/t/too/too_many_public_methods.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.t.too.too_many_instance_attributes
tests/functional/t/too/too_many_instance_attributes.py:4:0: R0902: Too many instance attributes (21/11) (too-many-instance-attributes)
tests/functional/t/too/too_many_instance_attributes.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.t.too.too_many_statements
tests/functional/t/too/too_many_statements.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.t.too.too_few_public_methods_excluded
tests/functional/t/too/too_few_public_methods_excluded.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.t.too.too_many_instance_attributes_py37
tests/functional/t/too/too_many_instance_attributes_py37.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/t/too/too_many_instance_attributes_py37.py:1:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
tests/functional/t/too/too_many_instance_attributes_py37.py:1:0: I0021: Useless suppression of 'useless-object-inheritance' (useless-suppression)
************* Module functional.r.repeated_keyword
tests/functional/r/repeated_keyword.py:13:0: E1132: Got multiple values for keyword argument 'b' in function call (repeated-keyword)
tests/functional/r/repeated_keyword.py:6:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/r/repeated_keyword.py:6:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.r.return_in_init
tests/functional/r/return_in_init.py:5:4: E0101: Explicit return in __init__ (return-in-init)
tests/functional/r/return_in_init.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/r/return_in_init.py:1:0: I0021: Useless suppression of 'useless-return' (useless-suppression)
************* Module functional.r.renamed_import_logging_not_lazy
tests/functional/r/renamed_import_logging_not_lazy.py:16:0: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
tests/functional/r/renamed_import_logging_not_lazy.py:17:0: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
tests/functional/r/renamed_import_logging_not_lazy.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/r/renamed_import_logging_not_lazy.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.r.redundant_u_string_prefix
tests/functional/r/redundant_u_string_prefix.py:10:10: W1406: The u prefix for strings is no longer necessary in Python >=3.0 (redundant-u-string-prefix)
tests/functional/r/redundant_u_string_prefix.py:11:10: W1406: The u prefix for strings is no longer necessary in Python >=3.0 (redundant-u-string-prefix)
tests/functional/r/redundant_u_string_prefix.py:12:11: W1406: The u prefix for strings is no longer necessary in Python >=3.0 (redundant-u-string-prefix)
tests/functional/r/redundant_u_string_prefix.py:12:22: W1406: The u prefix for strings is no longer necessary in Python >=3.0 (redundant-u-string-prefix)
tests/functional/r/redundant_u_string_prefix.py:13:11: W1406: The u prefix for strings is no longer necessary in Python >=3.0 (redundant-u-string-prefix)
tests/functional/r/redundant_u_string_prefix.py:13:22: W1406: The u prefix for strings is no longer necessary in Python >=3.0 (redundant-u-string-prefix)
tests/functional/r/redundant_u_string_prefix.py:14:14: W1406: The u prefix for strings is no longer necessary in Python >=3.0 (redundant-u-string-prefix)
************* Module functional.r.return_outside_function
tests/functional/r/return_outside_function.py:2:0: E0104: Return outside function (return-outside-function)
************* Module functional.r.redundant_unittest_assert
tests/functional/r/redundant_unittest_assert.py:17:8: W1503: Redundant use of assertTrue with constant value 'I meant assertEqual not assertTrue' (redundant-unittest-assert)
tests/functional/r/redundant_unittest_assert.py:19:8: W1503: Redundant use of assertFalse with constant value 'I meant assertEqual not assertFalse' (redundant-unittest-assert)
tests/functional/r/redundant_unittest_assert.py:21:8: W1503: Redundant use of assertTrue with constant value True (redundant-unittest-assert)
tests/functional/r/redundant_unittest_assert.py:23:8: W1503: Redundant use of assertFalse with constant value False (redundant-unittest-assert)
tests/functional/r/redundant_unittest_assert.py:25:8: W1503: Redundant use of assertFalse with constant value None (redundant-unittest-assert)
tests/functional/r/redundant_unittest_assert.py:27:8: W1503: Redundant use of assertTrue with constant value 0 (redundant-unittest-assert)
tests/functional/r/redundant_unittest_assert.py:1:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/r/redundant_unittest_assert.py:1:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
************* Module functional.r.raise_missing_from
tests/functional/r/raise_missing_from.py:11:4: W0707: Consider explicitly re-raising using the 'from' keyword (raise-missing-from)
tests/functional/r/raise_missing_from.py:19:4: W0707: Consider explicitly re-raising using the 'from' keyword (raise-missing-from)
tests/functional/r/raise_missing_from.py:25:4: W0707: Consider explicitly re-raising using the 'from' keyword (raise-missing-from)
tests/functional/r/raise_missing_from.py:31:4: W0707: Consider explicitly re-raising using the 'from' keyword (raise-missing-from)
tests/functional/r/raise_missing_from.py:45:20: W0707: Consider explicitly re-raising using the 'from' keyword (raise-missing-from)
tests/functional/r/raise_missing_from.py:53:4: W0707: Consider explicitly re-raising using the 'from' keyword (raise-missing-from)
tests/functional/r/raise_missing_from.py:59:4: W0707: Consider explicitly re-raising using the 'from' keyword (raise-missing-from)
tests/functional/r/raise_missing_from.py:1:0: I0021: Useless suppression of 'unreachable' (useless-suppression)
tests/functional/r/raise_missing_from.py:2:0: I0021: Useless suppression of 'superfluous-parens' (useless-suppression)
************* Module functional.r.redeclared_assigned_name
tests/functional/r/redeclared_assigned_name.py:3:0: W0128: Redeclared variable 'FIRST' in assignment (redeclared-assigned-name)
tests/functional/r/redeclared_assigned_name.py:5:4: W0128: Redeclared variable 'SECOND' in assignment (redeclared-assigned-name)
tests/functional/r/redeclared_assigned_name.py:8:11: W0128: Redeclared variable 'SECOND' in assignment (redeclared-assigned-name)
tests/functional/r/redeclared_assigned_name.py:11:4: W0128: Redeclared variable 'DUMM' in assignment (redeclared-assigned-name)
tests/functional/r/redeclared_assigned_name.py:14:4: W0128: Redeclared variable 'DUMMY' in assignment (redeclared-assigned-name)
tests/functional/r/redeclared_assigned_name.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/r/redeclared_assigned_name.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.r.reimported
tests/functional/r/reimported.py:3:0: W0404: Reimport 'sleep' (imported line 3) (reimported)
tests/functional/r/reimported.py:4:0: W0404: Reimport 'missing' (imported line 4) (reimported)
tests/functional/r/reimported.py:7:0: W0404: Reimport 'missing1' (imported line 6) (reimported)
tests/functional/r/reimported.py:10:0: W0404: Reimport 'deque' (imported line 9) (reimported)
tests/functional/r/reimported.py:24:0: W0404: Reimport 'ElementTree' (imported line 23) (reimported)
tests/functional/r/reimported.py:27:0: W0404: Reimport 'email.encoders' (imported line 26) (reimported)
tests/functional/r/reimported.py:29:0: W0404: Reimport 'sys' (imported line 21) (reimported)
tests/functional/r/reimported.py:40:4: W0621: Redefining name 'sys' from outer scope (line 16) (redefined-outer-name)
tests/functional/r/reimported.py:40:4: W0404: Reimport 'sys' (imported line 21) (reimported)
tests/functional/r/reimported.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/r/reimported.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/r/reimported.py:1:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
tests/functional/r/reimported.py:29:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
tests/functional/r/reimported.py:29:0: I0021: Useless suppression of 'wrong-import-order' (useless-suppression)
************* Module functional.r.reimport
tests/functional/r/reimport.py:8:0: W0404: Reimport 'os' (imported line 6) (reimported)
tests/functional/r/reimport.py:16:4: W0404: Reimport 'exists' (imported line 7) (reimported)
tests/functional/r/reimport.py:21:4: W0404: Reimport 'os' (imported line 6) (reimported)
tests/functional/r/reimport.py:23:4: W0404: Reimport 're' (imported line 9) (reimported)
tests/functional/r/reimport.py:5:0: I0021: Useless suppression of 'using-constant-test' (useless-suppression)
tests/functional/r/reimport.py:5:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
tests/functional/r/reimport.py:5:0: I0021: Useless suppression of 'wrong-import-position' (useless-suppression)
************* Module functional.c.confusing_with_statement
tests/functional/c/confusing_with_statement.py:26:0: W0124: Following "as" with another context manager looks like a tuple. (confusing-with-statement)
tests/functional/c/confusing_with_statement.py:1:0: I0021: Useless suppression of 'not-context-manager' (useless-suppression)
tests/functional/c/confusing_with_statement.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/c/confusing_with_statement.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.c.class_members_py30
tests/functional/c/class_members_py30.py:14:8: E1101: Instance of 'MyClass' has no 'incorrect' member (no-member)
tests/functional/c/class_members_py30.py:15:12: E1101: Instance of 'MyClass' has no 'havenot' member (no-member)
tests/functional/c/class_members_py30.py:16:8: E1101: Instance of 'MyClass' has no 'nonexistent1' member (no-member)
tests/functional/c/class_members_py30.py:17:8: E1101: Instance of 'MyClass' has no 'nonexistent2' member (no-member)
tests/functional/c/class_members_py30.py:24:14: E1101: Instance of 'XYZMixin' has no 'nonexistent' member (no-member)
tests/functional/c/class_members_py30.py:40:4: C0204: Metaclass class method test should have 'mcs' as first argument (bad-mcs-classmethod-argument)
tests/functional/c/class_members_py30.py:48:0: E1101: Instance of 'TestMetaclass' has no 'register' member (no-member)
tests/functional/c/class_members_py30.py:49:0: E1101: Instance of 'UsingMetaclass' has no 'test' member (no-member)
tests/functional/c/class_members_py30.py:63:27: E1101: Class 'MetaClass' has no 'missing' member (no-member)
tests/functional/c/class_members_py30.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/c/class_members_py30.py:2:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/c/class_members_py30.py:2:0: I0021: Useless suppression of 'unnecessary-dunder-call' (useless-suppression)
************* Module functional.c.comparison_with_callable
tests/functional/c/comparison_with_callable.py:8:3: W0143: Comparing against a callable, did you omit the parenthesis? (comparison-with-callable)
tests/functional/c/comparison_with_callable.py:11:3: W0143: Comparing against a callable, did you omit the parenthesis? (comparison-with-callable)
tests/functional/c/comparison_with_callable.py:11:3: C2201: Comparison should be goo == 666 (misplaced-comparison-constant)
tests/functional/c/comparison_with_callable.py:48:3: W0143: Comparing against a callable, did you omit the parenthesis? (comparison-with-callable)
tests/functional/c/comparison_with_callable.py:51:3: W0143: Comparing against a callable, did you omit the parenthesis? (comparison-with-callable)
tests/functional/c/comparison_with_callable.py:1:0: I0021: Useless suppression of 'useless-return' (useless-suppression)
tests/functional/c/comparison_with_callable.py:1:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.c.continue_in_finally
tests/functional/c/continue_in_finally.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/c/continue_in_finally.py:3:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/c/continue_in_finally.py:3:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.c.confidence_filter
tests/functional/c/confidence_filter.py:16:6: E1101: Instance of 'Client' has no 'foo' member (no-member)
************* Module functional.c.cached_property
tests/functional/c/cached_property.py:22:4: W0236: Method 'func' was expected to be 'method', found it instead as 'property' (invalid-overridden-method)
tests/functional/c/cached_property.py:1:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
************* Module functional.c.control_pragmas
tests/functional/c/control_pragmas.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/c/control_pragmas.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/c/control_pragmas.py:17:0: I0021: Useless suppression of 'no-member' (useless-suppression)
tests/functional/c/control_pragmas.py:17:0: I0021: Useless suppression of 'unbalanced-tuple-unpacking' (useless-suppression)
************* Module functional.c.cell_var_from_loop_enabled_regression
tests/functional/c/cell_var_from_loop_enabled_regression.py:3:21: W0640: Cell variable x defined in loop (cell-var-from-loop)
************* Module functional.c.ctor_arguments
tests/functional/c/ctor_arguments.py:35:0: E1120: No value for argument 'first_argument' in constructor call (no-value-for-parameter)
tests/functional/c/ctor_arguments.py:36:0: E1121: Too many positional arguments for constructor call (too-many-function-args)
tests/functional/c/ctor_arguments.py:38:0: E1120: No value for argument 'third_argument' in constructor call (no-value-for-parameter)
tests/functional/c/ctor_arguments.py:40:0: E1120: No value for argument 'first_argument' in constructor call (no-value-for-parameter)
tests/functional/c/ctor_arguments.py:40:0: E1120: No value for argument 'second_argument' in constructor call (no-value-for-parameter)
tests/functional/c/ctor_arguments.py:40:0: E1120: No value for argument 'third_argument' in constructor call (no-value-for-parameter)
tests/functional/c/ctor_arguments.py:42:0: E1121: Too many positional arguments for constructor call (too-many-function-args)
tests/functional/c/ctor_arguments.py:47:0: E1123: Unexpected keyword argument 'bob' in constructor call (unexpected-keyword-arg)
tests/functional/c/ctor_arguments.py:47:0: E1120: No value for argument 'first_argument' in constructor call (no-value-for-parameter)
tests/functional/c/ctor_arguments.py:48:0: E1123: Unexpected keyword argument 'coin' in constructor call (unexpected-keyword-arg)
tests/functional/c/ctor_arguments.py:50:0: E1124: Argument 'one' passed by position and keyword in constructor call (redundant-keyword-arg)
tests/functional/c/ctor_arguments.py:53:0: E1120: No value for argument 'first_argument' in constructor call (no-value-for-parameter)
tests/functional/c/ctor_arguments.py:54:0: E1121: Too many positional arguments for constructor call (too-many-function-args)
tests/functional/c/ctor_arguments.py:60:0: E1121: Too many positional arguments for constructor call (too-many-function-args)
tests/functional/c/ctor_arguments.py:63:0: E1121: Too many positional arguments for constructor call (too-many-function-args)
tests/functional/c/ctor_arguments.py:64:0: E1123: Unexpected keyword argument 'one' in constructor call (unexpected-keyword-arg)
tests/functional/c/ctor_arguments.py:64:0: E1120: No value for argument 'first_argument' in constructor call (no-value-for-parameter)
tests/functional/c/ctor_arguments.py:68:4: C0204: Metaclass class method __new__ should have 'mcs' as first argument (bad-mcs-classmethod-argument)
tests/functional/c/ctor_arguments.py:85:0: E1121: Too many positional arguments for constructor call (too-many-function-args)
tests/functional/c/ctor_arguments.py:85:0: E1123: Unexpected keyword argument 'badarg' in constructor call (unexpected-keyword-arg)
tests/functional/c/ctor_arguments.py:95:15: E1121: Too many positional arguments for constructor call (too-many-function-args)
tests/functional/c/ctor_arguments.py:99:15: E1120: No value for argument 'first' in constructor call (no-value-for-parameter)
tests/functional/c/ctor_arguments.py:99:15: E1120: No value for argument 'second' in constructor call (no-value-for-parameter)
tests/functional/c/ctor_arguments.py:104:15: E1123: Unexpected keyword argument 'not_argument' in constructor call (unexpected-keyword-arg)
tests/functional/c/ctor_arguments.py:104:15: E1120: No value for argument 'second' in constructor call (no-value-for-parameter)
tests/functional/c/ctor_arguments.py:5:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.c.class_protocol_ellipsis
tests/functional/c/class_protocol_ellipsis.py:19:26: R6002: 'typing.Iterator' will be deprecated with PY39, consider using 'collections.abc.Iterator' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/c/class_protocol_ellipsis.py:2:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.c.classes_meth_could_be_a_function
tests/functional/c/classes_meth_could_be_a_function.py:1:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.c.comparison_of_constants
tests/functional/c/comparison_of_constants.py:4:3: R0133: Comparison between constants: '2 is 2' has a constant value (comparison-of-constants)
tests/functional/c/comparison_of_constants.py:4:3: R0123: Comparison to literal (literal-comparison)
tests/functional/c/comparison_of_constants.py:7:6: R0133: Comparison between constants: '2 == 2' has a constant value (comparison-of-constants)
tests/functional/c/comparison_of_constants.py:10:6: R0133: Comparison between constants: '2 > 2' has a constant value (comparison-of-constants)
tests/functional/c/comparison_of_constants.py:14:3: C2201: Comparison should be n != 2 (misplaced-comparison-constant)
tests/functional/c/comparison_of_constants.py:20:3: R0133: Comparison between constants: 'True == True' has a constant value (comparison-of-constants)
tests/functional/c/comparison_of_constants.py:20:3: C0121: Comparison 'True == True' should be 'True is True' if checking for the singleton value True, or 'True' if testing for truthiness (singleton-comparison)
tests/functional/c/comparison_of_constants.py:25:3: R0123: Comparison to literal (literal-comparison)
tests/functional/c/comparison_of_constants.py:28:3: R0123: Comparison to literal (literal-comparison)
tests/functional/c/comparison_of_constants.py:31:3: R0123: Comparison to literal (literal-comparison)
tests/functional/c/comparison_of_constants.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/c/comparison_of_constants.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.c.class_scope
tests/functional/c/class_scope.py:11:30: E0601: Using variable 'revattr' before assignment (used-before-assignment)
tests/functional/c/class_scope.py:11:39: E0602: Undefined variable 'revattr' (undefined-variable)
tests/functional/c/class_scope.py:13:25: E0602: Undefined variable 'get_attr_bad' (undefined-variable)
tests/functional/c/class_scope.py:14:19: E0602: Undefined variable 'attr' (undefined-variable)
tests/functional/c/class_scope.py:20:15: E0602: Undefined variable 'Data' (undefined-variable)
tests/functional/c/class_scope.py:23:15: E0602: Undefined variable 'Sub' (undefined-variable)
tests/functional/c/class_scope.py:41:22: E0602: Undefined variable 'self' (undefined-variable)
************* Module functional.c.crash_missing_module_type
tests/functional/c/crash_missing_module_type.py:4:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
************* Module functional.c.class_members
tests/functional/c/class_members.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.c.condition_evals_to_constant
tests/functional/c/condition_evals_to_constant.py:14:5: R1727: Boolean condition 'CONSTANT or True' will always evaluate to 'True' (condition-evals-to-constant)
tests/functional/c/condition_evals_to_constant.py:15:7: R1727: Boolean condition 'CONSTANT or True' will always evaluate to 'True' (condition-evals-to-constant)
tests/functional/c/condition_evals_to_constant.py:16:3: R1727: Boolean condition 'CONSTANT and False' will always evaluate to 'False' (condition-evals-to-constant)
tests/functional/c/condition_evals_to_constant.py:18:5: R1727: Boolean condition 'CONSTANT and False' will always evaluate to 'False' (condition-evals-to-constant)
tests/functional/c/condition_evals_to_constant.py:20:6: R1727: Boolean condition 'CONSTANT and False' will always evaluate to 'False' (condition-evals-to-constant)
tests/functional/c/condition_evals_to_constant.py:22:5: R1727: Boolean condition 'CONSTANT or True' will always evaluate to 'True' (condition-evals-to-constant)
tests/functional/c/condition_evals_to_constant.py:23:29: R1727: Boolean condition 'x or True' will always evaluate to 'True' (condition-evals-to-constant)
tests/functional/c/condition_evals_to_constant.py:26:7: R1727: Boolean condition 'True or CONSTANT or OTHER' will always evaluate to 'True' (condition-evals-to-constant)
tests/functional/c/condition_evals_to_constant.py:27:7: R1727: Boolean condition 'CONSTANT or True or CONSTANT or True' will always evaluate to 'True' (condition-evals-to-constant)
tests/functional/c/condition_evals_to_constant.py:30:7: R1727: Boolean condition '3 + 4 or CONSTANT' will always evaluate to '3 + 4' (condition-evals-to-constant)
tests/functional/c/condition_evals_to_constant.py:31:7: R1727: Boolean condition 'Unknown or True' will always evaluate to 'True' (condition-evals-to-constant)
tests/functional/c/condition_evals_to_constant.py:33:7: R1727: Boolean condition 'True or True' will always evaluate to 'True' (condition-evals-to-constant)
tests/functional/c/condition_evals_to_constant.py:34:7: R1727: Boolean condition 'False or False' will always evaluate to 'False' (condition-evals-to-constant)
tests/functional/c/condition_evals_to_constant.py:35:7: R1727: Boolean condition 'True and True' will always evaluate to 'True' (condition-evals-to-constant)
tests/functional/c/condition_evals_to_constant.py:36:7: R1727: Boolean condition 'False and False' will always evaluate to 'False' (condition-evals-to-constant)
************* Module functional.c.class_attributes
tests/functional/c/class_attributes.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.c.class_variable_slots_conflict_exempted
tests/functional/c/class_variable_slots_conflict_exempted.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.c.cellvar_escaping_loop
tests/functional/c/cellvar_escaping_loop.py:92:13: R6102: Consider using an in-place tuple instead of list (consider-using-tuple)
tests/functional/c/cellvar_escaping_loop.py:117:27: W0640: Cell variable i defined in loop (cell-var-from-loop)
tests/functional/c/cellvar_escaping_loop.py:122:20: W0640: Cell variable i defined in loop (cell-var-from-loop)
tests/functional/c/cellvar_escaping_loop.py:130:27: W0640: Cell variable j defined in loop (cell-var-from-loop)
tests/functional/c/cellvar_escaping_loop.py:140:19: W0640: Cell variable i defined in loop (cell-var-from-loop)
tests/functional/c/cellvar_escaping_loop.py:161:20: W0640: Cell variable i defined in loop (cell-var-from-loop)
tests/functional/c/cellvar_escaping_loop.py:169:27: W0640: Cell variable i defined in loop (cell-var-from-loop)
tests/functional/c/cellvar_escaping_loop.py:177:12: W0640: Cell variable x defined in loop (cell-var-from-loop)
tests/functional/c/cellvar_escaping_loop.py:178:14: W0640: Cell variable y defined in loop (cell-var-from-loop)
tests/functional/c/cellvar_escaping_loop.py:187:27: W0640: Cell variable j defined in loop (cell-var-from-loop)
tests/functional/c/cellvar_escaping_loop.py:197:27: W0640: Cell variable i defined in loop (cell-var-from-loop)
tests/functional/c/cellvar_escaping_loop.py:206:26: W0640: Cell variable i defined in loop (cell-var-from-loop)
tests/functional/c/cellvar_escaping_loop.py:218:17: W0640: Cell variable n defined in loop (cell-var-from-loop)
tests/functional/c/cellvar_escaping_loop.py:223:18: W0640: Cell variable n defined in loop (cell-var-from-loop)
tests/functional/c/cellvar_escaping_loop.py:1:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/c/cellvar_escaping_loop.py:1:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
************* Module meta
tests/regrtest_data/meta.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/regrtest_data/meta.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/regrtest_data/meta.py:2:0: I0021: Useless suppression of 'unbalanced-tuple-unpacking' (useless-suppression)
************* Module fail_under_minus10
tests/regrtest_data/fail_under_minus10.py:4:0: E0401: Unable to import 'nonexistent' (import-error)
tests/regrtest_data/fail_under_minus10.py:9:5: W0612: Unused variable 'i' (unused-variable)
tests/regrtest_data/fail_under_minus10.py:4:0: W0611: Unused import nonexistent (unused-import)
************* Module fail_on
tests/regrtest_data/fail_on.py:4:0: E0401: Unable to import 'nonexistent' (import-error)
tests/regrtest_data/fail_on.py:4:0: W0611: Unused import nonexistent (unused-import)
tests/regrtest_data/fail_on.py:5:0: I0021: Useless suppression of 'broad-except' (useless-suppression)
************* Module numarray_inf
tests/regrtest_data/numarray_inf.py:3:0: E0401: Unable to import 'numarray' (import-error)
tests/regrtest_data/numarray_inf.py:4:0: E0401: Unable to import 'numarray.random_array' (import-error)
************* Module try_finally_disable_msg_crash
tests/regrtest_data/try_finally_disable_msg_crash.py:4:0: I0023: 'W0201' is cryptic: use '# pylint: disable=attribute-defined-outside-init' instead (use-symbolic-message-instead)
tests/regrtest_data/try_finally_disable_msg_crash.py:4:0: I0021: Useless suppression of 'attribute-defined-outside-init' (useless-suppression)
************* Module no_stdout_encoding
tests/regrtest_data/no_stdout_encoding.py:1:0: C2503: PEP8 recommends UTF-8 as encoding for Python files (bad-file-encoding)
tests/regrtest_data/no_stdout_encoding.py:3:23: W0622: Redefining built-in 'dir' (redefined-builtin)
tests/regrtest_data/no_stdout_encoding.py:4:21: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
tests/regrtest_data/no_stdout_encoding.py:4:21: W1406: The u prefix for strings is no longer necessary in Python >=3.0 (redundant-u-string-prefix)
tests/regrtest_data/no_stdout_encoding.py:4:8: W0612: Unused variable 'testString' (unused-variable)
************* Module special_attr_scope_lookup_crash
tests/regrtest_data/special_attr_scope_lookup_crash.py:1:0: R0205: Class 'Klass' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
************* Module import_something
tests/regrtest_data/import_something.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/regrtest_data/import_something.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module import_package_subpackage_module
tests/regrtest_data/import_package_subpackage_module.py:1:0: I0023: 'I0011' is cryptic: use '# pylint: disable=locally-disabled' instead (use-symbolic-message-instead)
tests/regrtest_data/import_package_subpackage_module.py:1:0: I0023: 'C0301' is cryptic: use '# pylint: disable=line-too-long' instead (use-symbolic-message-instead)
tests/regrtest_data/import_package_subpackage_module.py:1:0: I0023: 'W0611' is cryptic: use '# pylint: disable=unused-import' instead (use-symbolic-message-instead)
tests/regrtest_data/import_package_subpackage_module.py:1:0: I0021: Useless suppression of 'locally-disabled' (useless-suppression)
tests/regrtest_data/import_package_subpackage_module.py:1:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module fail_on_info_only
tests/regrtest_data/fail_on_info_only.py:4:0: I0021: Useless suppression of 'broad-except' (useless-suppression)
************* Module descriptor_crash
tests/regrtest_data/descriptor_crash.py:20:11: E0001: invalid syntax (<unknown>, line 20) (syntax-error)
************* Module numarray_import
tests/regrtest_data/numarray_import.py:5:0: E0401: Unable to import 'numarray' (import-error)
************* Module unused_variable
tests/regrtest_data/unused_variable.py:4:4: W0612: Unused variable 'variable' (unused-variable)
************* Module application_crash
tests/regrtest_data/application_crash.py:1:6: E0602: Undefined variable 'something_undefined' (undefined-variable)
************* Module wrong_import_position
tests/regrtest_data/wrong_import_position.py:7:0: R0205: Class 'Something' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/regrtest_data/wrong_import_position.py:11:0: C0413: Import "import os" should be placed at the top of the module (wrong-import-position)
************* Module syntax_error
tests/regrtest_data/syntax_error.py:1:9: E0001: invalid syntax (<unknown>, line 1) (syntax-error)
************* Module wildcard
tests/regrtest_data/wildcard.py:1:0: W0401: Wildcard import empty (wildcard-import)
************* Module module_global
tests/regrtest_data/module_global.py:1:0: I0023: 'W0603' is cryptic: use '# pylint: disable=global-statement' instead (use-symbolic-message-instead)
tests/regrtest_data/module_global.py:1:0: I0023: 'W0601' is cryptic: use '# pylint: disable=global-variable-undefined' instead (use-symbolic-message-instead)
tests/regrtest_data/module_global.py:1:0: I0023: 'W0604' is cryptic: use '# pylint: disable=global-at-module-level' instead (use-symbolic-message-instead)
tests/regrtest_data/module_global.py:1:0: I0023: 'E0602' is cryptic: use '# pylint: disable=undefined-variable' instead (use-symbolic-message-instead)
tests/regrtest_data/module_global.py:1:0: I0023: 'W0104' is cryptic: use '# pylint: disable=pointless-statement' instead (use-symbolic-message-instead)
tests/regrtest_data/module_global.py:1:0: I0021: Useless suppression of 'global-statement' (useless-suppression)
tests/regrtest_data/module_global.py:1:0: I0021: Useless suppression of 'global-variable-undefined' (useless-suppression)
************* Module func_block_disable_msg
tests/regrtest_data/func_block_disable_msg.py:1:0: I0023: 'C0302' is cryptic: use '# pylint: disable=too-many-lines' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:17:0: I0023: 'W0613' is cryptic: use '# pylint: disable=unused-argument' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:24:0: I0023: 'E1101' is cryptic: use '# pylint: disable=no-member' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:30:0: I0023: 'E1101' is cryptic: use '# pylint: disable=no-member' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:34:0: I0023: 'E1101' is cryptic: use '# pylint: enable=no-member' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:40:0: I0023: 'E1101' is cryptic: use '# pylint: disable=no-member' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:44:0: I0023: 'E1101' is cryptic: use '# pylint: enable=no-member' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:55:0: I0023: 'E1101' is cryptic: use '# pylint: disable=no-member' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:59:0: I0023: 'E1101' is cryptic: use '# pylint: enable=no-member' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:62:0: I0023: 'E0602' is cryptic: use '# pylint: disable=undefined-variable' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:70:0: I0023: 'E1101' is cryptic: use '# pylint: disable=no-member' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:84:0: I0023: 'E1101' is cryptic: use '# pylint: disable=no-member' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:96:0: I0023: 'E1101' is cryptic: use '# pylint: disable=no-member' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:100:0: I0023: 'E1101' is cryptic: use '# pylint: enable=no-member' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:106:0: I0023: 'E1101' is cryptic: use '# pylint: disable=no-member' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:109:0: I0023: 'E1101' is cryptic: use '# pylint: disable=no-member' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:116:0: I0023: 'R0902' is cryptic: use '# pylint: disable=too-many-instance-attributes' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:116:0: I0023: 'R0903' is cryptic: use '# pylint: disable=too-few-public-methods' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:133:0: I0023: 'R0912' is cryptic: use '# pylint: disable=too-many-branches' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:133:0: I0023: 'R0911' is cryptic: use '# pylint: disable=too-many-return-statements' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:11:20: W0613: Unused argument 'arg' (unused-argument)
tests/regrtest_data/func_block_disable_msg.py:26:14: E1101: Instance of 'Foo' has no 'blop' member (no-member)
tests/regrtest_data/func_block_disable_msg.py:36:14: E1101: Instance of 'Foo' has no 'blip' member (no-member)
tests/regrtest_data/func_block_disable_msg.py:46:18: E1101: Instance of 'Foo' has no 'blip' member (no-member)
tests/regrtest_data/func_block_disable_msg.py:61:18: E1101: Instance of 'Foo' has no 'blip' member (no-member)
tests/regrtest_data/func_block_disable_msg.py:72:18: E1101: Instance of 'Foo' has no 'blip' member (no-member)
tests/regrtest_data/func_block_disable_msg.py:75:18: E1101: Instance of 'Foo' has no 'blip' member (no-member)
tests/regrtest_data/func_block_disable_msg.py:77:14: E1101: Instance of 'Foo' has no 'blip' member (no-member)
tests/regrtest_data/func_block_disable_msg.py:83:14: E1101: Instance of 'Foo' has no 'blip' member (no-member)
tests/regrtest_data/func_block_disable_msg.py:102:14: E1101: Instance of 'Foo' has no 'blip' member (no-member)
tests/regrtest_data/func_block_disable_msg.py:144:12: W0120: Else clause on loop without a break statement, remove the else and de-indent all the code inside it (useless-else-on-loop)
tests/regrtest_data/func_block_disable_msg.py:150:12: W0120: Else clause on loop without a break statement, remove the else and de-indent all the code inside it (useless-else-on-loop)
tests/regrtest_data/func_block_disable_msg.py:156:12: W0120: Else clause on loop without a break statement, remove the else and de-indent all the code inside it (useless-else-on-loop)
tests/regrtest_data/func_block_disable_msg.py:1:0: I0021: Useless suppression of 'too-many-lines' (useless-suppression)
tests/regrtest_data/func_block_disable_msg.py:93:0: I0021: Useless suppression of 'using-constant-test' (useless-suppression)
tests/regrtest_data/func_block_disable_msg.py:116:0: I0021: Useless suppression of 'too-many-instance-attributes' (useless-suppression)
tests/regrtest_data/func_block_disable_msg.py:133:0: I0021: Useless suppression of 'too-many-branches' (useless-suppression)
tests/regrtest_data/func_block_disable_msg.py:133:0: I0021: Useless suppression of 'too-many-return-statements' (useless-suppression)
************* Module import_assign
tests/regrtest_data/import_assign.py:1:0: E0401: Unable to import 'shmixml.dom.minidom' (import-error)
tests/regrtest_data/import_assign.py:2:0: C0411: standard import "import xml.dom.minidom" should be placed before "import shmixml.dom.minidom" (wrong-import-order)
************* Module module.sub_module.sub_sub_module.main
tests/regrtest_data/beyond_top_four/module/sub_module/sub_sub_module/main.py:1:0: W0611: Unused function imported from double_name (unused-import)
************* Module plugin_api
tests/regrtest_data/beyond_top_two/namespace_package/plugin_api.py:2:11: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
************* Module helper_function
tests/regrtest_data/beyond_top_two/namespace_package/lower_level/helper_function.py:1:0: E0402: Attempted relative import beyond top-level package (relative-beyond-top-level)
tests/regrtest_data/beyond_top_two/namespace_package/lower_level/helper_function.py:5:11: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
************* Module dummy
tests/regrtest_data/dummy/__init__.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/regrtest_data/dummy/__init__.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module dummy.another
tests/regrtest_data/dummy/another.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/regrtest_data/dummy/another.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module dummy.dummy
tests/regrtest_data/dummy/dummy.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/regrtest_data/dummy/dummy.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module package
tests/regrtest_data/package/__init__.py:1:0: I0023: 'R0903' is cryptic: use '# pylint: disable=too-few-public-methods' instead (use-symbolic-message-instead)
************* Module pkg4972.string
tests/regrtest_data/hang/pkg4972/string/__init__.py:2:0: W0406: Module import itself (import-self)
************* Module useless_suppression.file_one
tests/regrtest_data/duplicate_code/useless_suppression/file_one.py:3:0: W0611: Unused import argparse (unused-import)
tests/regrtest_data/duplicate_code/useless_suppression/file_one.py:4:0: W0611: Unused import math (unused-import)
tests/regrtest_data/duplicate_code/useless_suppression/file_one.py:5:0: W0611: Unused import os (unused-import)
tests/regrtest_data/duplicate_code/useless_suppression/file_one.py:6:0: W0611: Unused import random (unused-import)
tests/regrtest_data/duplicate_code/useless_suppression/file_one.py:7:0: W0611: Unused import sys (unused-import)
************* Module useless_suppression.file_two
tests/regrtest_data/duplicate_code/useless_suppression/file_two.py:1:0: W0611: Unused import argparse (unused-import)
tests/regrtest_data/duplicate_code/useless_suppression/file_two.py:2:0: W0611: Unused import math (unused-import)
tests/regrtest_data/duplicate_code/useless_suppression/file_two.py:3:0: W0611: Unused import os (unused-import)
tests/regrtest_data/duplicate_code/useless_suppression/file_two.py:4:0: W0611: Unused import random (unused-import)
tests/regrtest_data/duplicate_code/useless_suppression/file_two.py:5:0: W0611: Unused import sys (unused-import)
************* Module ignore_imports.file_one
tests/regrtest_data/duplicate_code/ignore_imports/file_one.py:1:0: W0611: Unused import argparse (unused-import)
tests/regrtest_data/duplicate_code/ignore_imports/file_one.py:2:0: W0611: Unused import math (unused-import)
tests/regrtest_data/duplicate_code/ignore_imports/file_one.py:3:0: W0611: Unused import os (unused-import)
tests/regrtest_data/duplicate_code/ignore_imports/file_one.py:4:0: W0611: Unused import random (unused-import)
tests/regrtest_data/duplicate_code/ignore_imports/file_one.py:5:0: W0611: Unused import sys (unused-import)
************* Module ignore_imports.file_two
tests/regrtest_data/duplicate_code/ignore_imports/file_two.py:1:0: W0611: Unused import argparse (unused-import)
tests/regrtest_data/duplicate_code/ignore_imports/file_two.py:2:0: W0611: Unused import math (unused-import)
tests/regrtest_data/duplicate_code/ignore_imports/file_two.py:3:0: W0611: Unused import os (unused-import)
tests/regrtest_data/duplicate_code/ignore_imports/file_two.py:4:0: W0611: Unused import random (unused-import)
tests/regrtest_data/duplicate_code/ignore_imports/file_two.py:5:0: W0611: Unused import sys (unused-import)
************* Module beyond_top_three.a
tests/regrtest_data/beyond_top_three/a.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module beyond_top_three.level1.beyond_top_three
tests/regrtest_data/beyond_top_three/level1/beyond_top_three.py:1:9: W0613: Unused argument 'var' (unused-argument)
tests/regrtest_data/beyond_top_three/level1/beyond_top_three.py:1:14: W0613: Unused argument 'some_other_var' (unused-argument)
************* Module beyond_top_three.level1
tests/regrtest_data/beyond_top_three/level1/__init__.py:1:9: W0613: Unused argument 'var' (unused-argument)
************* Module main
tests/regrtest_data/max_inferable_limit_for_classes/main.py:10:0: R0205: Class 'HasMemoized' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/regrtest_data/max_inferable_limit_for_classes/main.py:18:0: R0901: Too many ancestors (17/7) (too-many-ancestors)
tests/regrtest_data/max_inferable_limit_for_classes/main.py:32:0: R0901: Too many ancestors (31/7) (too-many-ancestors)
tests/regrtest_data/max_inferable_limit_for_classes/main.py:36:0: R0901: Too many ancestors (32/7) (too-many-ancestors)
tests/regrtest_data/max_inferable_limit_for_classes/main.py:37:4: W0235: Useless super delegation in method '__init__' (useless-super-delegation)
************* Module other_funcs
tests/regrtest_data/max_inferable_limit_for_classes/other_funcs.py:6:0: R0205: Class 'HasCacheKey' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/regrtest_data/max_inferable_limit_for_classes/other_funcs.py:10:0: R0205: Class 'HasMemoized' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/regrtest_data/max_inferable_limit_for_classes/other_funcs.py:30:0: R0901: Too many ancestors (17/7) (too-many-ancestors)
************* Module roles
tests/regrtest_data/max_inferable_limit_for_classes/nodes/roles.py:1:0: R0205: Class 'SQLRole' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/regrtest_data/max_inferable_limit_for_classes/nodes/roles.py:5:0: R0205: Class 'UsesInspection' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/regrtest_data/max_inferable_limit_for_classes/nodes/roles.py:9:0: R0205: Class 'AllowsLambdaRole' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/regrtest_data/max_inferable_limit_for_classes/nodes/roles.py:61:0: R0901: Too many ancestors (8/7) (too-many-ancestors)
tests/regrtest_data/max_inferable_limit_for_classes/nodes/roles.py:65:0: R0901: Too many ancestors (9/7) (too-many-ancestors)
************* Module beyond_top
tests/regrtest_data/beyond_top/__init__.py:1:0: E0402: Attempted relative import beyond top-level package (relative-beyond-top-level)
************* Module bad_package
tests/regrtest_data/bad_package/__init__.py:2:23: E0001: invalid syntax (<unknown>, line 2) (syntax-error)
************* Module bad_package.wrong
tests/regrtest_data/bad_package/wrong.py:5:0: E0001: Cannot import '' due to syntax error 'invalid syntax (<unknown>, line 2)' (syntax-error)
tests/regrtest_data/bad_package/wrong.py:5:0: W0611: Unused import missing (unused-import)
************* Module input.w0401_cycle
tests/input/w0401_cycle.py:8:0: W0125: Using a conditional statement with a constant value (using-constant-test)
************* Module input.func_i0011
tests/input/func_i0011.py:1:0: I0023: 'W0404' is cryptic: use '# pylint: disable=reimported' instead (use-symbolic-message-instead)
tests/input/func_i0011.py:1:0: I0021: Useless suppression of 'reimported' (useless-suppression)
************* Module input.func_w0401
tests/input/func_w0401.py:8:0: W0125: Using a conditional statement with a constant value (using-constant-test)
************* Module input.func_w0401_disabled_in_func
tests/input/func_w0401_disabled_in_func.py:10:4: W0125: Using a conditional statement with a constant value (using-constant-test)
************* Module input.func_return_yield_mix_py_33
tests/input/func_return_yield_mix_py_33.py:5:4: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
************* Module input.func_i0012
tests/input/func_i0012.py:1:0: I0023: 'W0404' is cryptic: use '# pylint: enable=reimported' instead (use-symbolic-message-instead)
************* Module input.similar_lines_b
tests/input/similar_lines_b.py:12:18: R1721: Unnecessary use of a comprehension, use list(zip(blandit, metus)) instead. (unnecessary-comprehension)
tests/input/similar_lines_b.py:13:8: W0612: Unused variable 'neque' (unused-variable)
tests/input/similar_lines_b.py:17:8: E0602: Undefined variable 'someother_var' (undefined-variable)
tests/input/similar_lines_b.py:15:39: W0613: Unused argument 'similar' (unused-argument)
tests/input/similar_lines_b.py:26:11: E0602: Undefined variable 'ultricies' (undefined-variable)
tests/input/similar_lines_b.py:27:11: E0602: Undefined variable 'ultricies' (undefined-variable)
tests/input/similar_lines_b.py:24:11: W0613: Unused argument 'self' (unused-argument)
tests/input/similar_lines_b.py:25:4: W0612: Unused variable 'ultrices' (unused-variable)
************* Module input.similar_cls_a
tests/input/similar_cls_a.py:12:12: W0613: Unused argument 'arg1' (unused-argument)
tests/input/similar_cls_a.py:13:12: W0613: Unused argument 'arg2' (unused-argument)
tests/input/similar_cls_a.py:14:12: W0613: Unused argument 'arg3' (unused-argument)
tests/input/similar_cls_a.py:15:12: W0613: Unused argument 'arg4' (unused-argument)
tests/input/similar_cls_a.py:5:8: W0613: Unused argument 'a' (unused-argument)
tests/input/similar_cls_a.py:6:8: W0613: Unused argument 'b' (unused-argument)
tests/input/similar_cls_a.py:7:8: W0613: Unused argument 'c' (unused-argument)
tests/input/similar_cls_a.py:11:8: W0612: Unused variable '_internal_func' (unused-variable)
************* Module input.func_w0401_disabled
tests/input/func_w0401_disabled.py:8:0: W0125: Using a conditional statement with a constant value (using-constant-test)
************* Module input.similar_cls_b
tests/input/similar_cls_b.py:12:12: W0613: Unused argument 'arg1' (unused-argument)
tests/input/similar_cls_b.py:13:12: W0613: Unused argument 'arg2' (unused-argument)
tests/input/similar_cls_b.py:14:12: W0613: Unused argument 'arg3' (unused-argument)
tests/input/similar_cls_b.py:15:12: W0613: Unused argument 'arg4' (unused-argument)
tests/input/similar_cls_b.py:5:8: W0613: Unused argument 'a' (unused-argument)
tests/input/similar_cls_b.py:6:8: W0613: Unused argument 'b' (unused-argument)
tests/input/similar_cls_b.py:7:8: W0613: Unused argument 'c' (unused-argument)
tests/input/similar_cls_b.py:11:8: W0612: Unused variable '_internal_func' (unused-variable)
************* Module input.func_3k_removed_stuff_py_30
tests/input/func_3k_removed_stuff_py_30.py:4:0: E0401: Unable to import 'func_w0401' (import-error)
tests/input/func_3k_removed_stuff_py_30.py:5:28: W0141: Used builtin function 'map'. Using a list comprehension can be clearer. (bad-builtin)
tests/input/func_3k_removed_stuff_py_30.py:11:11: W1406: The u prefix for strings is no longer necessary in Python >=3.0 (redundant-u-string-prefix)
tests/input/func_3k_removed_stuff_py_30.py:12:10: E1101: Instance of 'str' has no 'looower' member (no-member)
************* Module input.func_w0122_py_30
tests/input/func_w0122_py_30.py:5:6: E0001: Missing parentheses in call to 'exec' (<unknown>, line 5) (syntax-error)
************* Module input.func_i0022
tests/input/func_i0022.py:16:0: I0023: 'C0103' is cryptic: use '# pylint: disable=invalid-name' instead (use-symbolic-message-instead)
tests/input/func_i0022.py:18:0: I0023: 'C0103' is cryptic: use '# pylint: enable=invalid-name' instead (use-symbolic-message-instead)
tests/input/func_i0022.py:20:0: I0023: 'C0103' is cryptic: use '# pylint: disable=invalid-name' instead (use-symbolic-message-instead)
tests/input/func_i0022.py:22:0: I0023: 'C0103' is cryptic: use '# pylint: enable=invalid-name' instead (use-symbolic-message-instead)
************* Module input.similar_empty_func_2
tests/input/similar_empty_func_2.py:2:4: W0613: Unused argument 'arg1' (unused-argument)
tests/input/similar_empty_func_2.py:3:4: W0613: Unused argument 'arg2' (unused-argument)
tests/input/similar_empty_func_2.py:4:4: W0613: Unused argument 'arg3' (unused-argument)
tests/input/similar_empty_func_2.py:5:4: W0613: Unused argument 'arg4' (unused-argument)
************* Module input.func_i0020
tests/input/func_i0020.py:7:0: I0023: 'W0612' is cryptic: use '# pylint: disable=unused-variable' instead (use-symbolic-message-instead)
************* Module input.hide_code_with_imports
tests/input/hide_code_with_imports.py:1:12: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:1:72: E0401: Unable to import 'a' (import-error)
tests/input/hide_code_with_imports.py:1:72: C0413: Import "import a" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:2:6: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:2:72: E0401: Unable to import 'b' (import-error)
tests/input/hide_code_with_imports.py:2:72: C0413: Import "import b" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:3:6: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:3:72: E0401: Unable to import 'c' (import-error)
tests/input/hide_code_with_imports.py:3:72: C0413: Import "import c" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:4:6: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:4:72: E0401: Unable to import 'd' (import-error)
tests/input/hide_code_with_imports.py:4:72: C0413: Import "import d" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:5:6: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:5:72: E0401: Unable to import 'e' (import-error)
tests/input/hide_code_with_imports.py:5:72: C0413: Import "import e" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:6:7: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:6:72: E0401: Unable to import 'f' (import-error)
tests/input/hide_code_with_imports.py:6:72: C0413: Import "import f" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:7:7: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:7:72: E0401: Unable to import 'g' (import-error)
tests/input/hide_code_with_imports.py:7:72: C0413: Import "import g" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:8:7: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:8:72: E0401: Unable to import 'h' (import-error)
tests/input/hide_code_with_imports.py:8:72: C0413: Import "import h" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:9:7: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:9:72: E0401: Unable to import 'i' (import-error)
tests/input/hide_code_with_imports.py:9:72: C0413: Import "import i" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:10:7: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:10:72: E0401: Unable to import 'j' (import-error)
tests/input/hide_code_with_imports.py:10:72: C0413: Import "import j" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:11:7: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:11:72: E0401: Unable to import 'k' (import-error)
tests/input/hide_code_with_imports.py:11:72: C0413: Import "import k" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:12:7: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:12:72: E0401: Unable to import 'l' (import-error)
tests/input/hide_code_with_imports.py:12:72: C0413: Import "import l" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:13:7: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:13:72: C0413: Import "import m" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:14:5: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:14:72: E0401: Unable to import 'n' (import-error)
tests/input/hide_code_with_imports.py:14:72: C0413: Import "import n" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:15:6: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:15:72: E0401: Unable to import 'o' (import-error)
tests/input/hide_code_with_imports.py:15:72: C0413: Import "import o" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:16:6: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:16:72: E0401: Unable to import 'p' (import-error)
tests/input/hide_code_with_imports.py:16:72: C0413: Import "import p" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:1:72: W0611: Unused import a (unused-import)
tests/input/hide_code_with_imports.py:2:72: W0611: Unused import b (unused-import)
tests/input/hide_code_with_imports.py:3:72: W0611: Unused import c (unused-import)
tests/input/hide_code_with_imports.py:4:72: W0611: Unused import d (unused-import)
tests/input/hide_code_with_imports.py:5:72: W0611: Unused import e (unused-import)
tests/input/hide_code_with_imports.py:6:72: W0611: Unused import f (unused-import)
tests/input/hide_code_with_imports.py:7:72: W0611: Unused import g (unused-import)
tests/input/hide_code_with_imports.py:8:72: W0611: Unused import h (unused-import)
tests/input/hide_code_with_imports.py:9:72: W0611: Unused import i (unused-import)
tests/input/hide_code_with_imports.py:10:72: W0611: Unused import j (unused-import)
tests/input/hide_code_with_imports.py:11:72: W0611: Unused import k (unused-import)
tests/input/hide_code_with_imports.py:12:72: W0611: Unused import l (unused-import)
tests/input/hide_code_with_imports.py:13:72: W0611: Unused import m (unused-import)
tests/input/hide_code_with_imports.py:14:72: W0611: Unused import n (unused-import)
tests/input/hide_code_with_imports.py:15:72: W0611: Unused import o (unused-import)
tests/input/hide_code_with_imports.py:16:72: W0611: Unused import p (unused-import)
************* Module input.similar_lines_a
tests/input/similar_lines_a.py:6:15: W0613: Unused argument 'elit' (unused-argument)
tests/input/similar_lines_a.py:25:16: E0602: Undefined variable 'lorem' (undefined-variable)
tests/input/similar_lines_a.py:22:20: W0613: Unused argument 'ipsum' (unused-argument)
tests/input/similar_lines_a.py:29:8: E0602: Undefined variable 'someother_var' (undefined-variable)
tests/input/similar_lines_a.py:27:39: W0613: Unused argument 'similar' (unused-argument)
tests/input/similar_lines_a.py:34:4: E0101: Explicit return in __init__ (return-in-init)
tests/input/similar_lines_a.py:34:23: W0613: Unused argument 'moleskie' (unused-argument)
tests/input/similar_lines_a.py:34:33: W0613: Unused argument 'lectus' (unused-argument)
tests/input/similar_lines_a.py:34:50: W0613: Unused argument 'ac' (unused-argument)
tests/input/similar_lines_a.py:59:4: E0102: method already defined line 17 (function-redefined)
************* Module input.similar_empty_func_1
tests/input/similar_empty_func_1.py:2:4: W0613: Unused argument 'arg1' (unused-argument)
tests/input/similar_empty_func_1.py:3:4: W0613: Unused argument 'arg2' (unused-argument)
tests/input/similar_empty_func_1.py:4:4: W0613: Unused argument 'arg3' (unused-argument)
tests/input/similar_empty_func_1.py:5:4: W0613: Unused argument 'arg4' (unused-argument)
************* Module input.func_noerror_cycle.a
tests/input/func_noerror_cycle/a.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/input/func_noerror_cycle/a.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module input.func_noerror_cycle.b
tests/input/func_noerror_cycle/b.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/input/func_noerror_cycle/b.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module data.suppliermodule_test
tests/data/suppliermodule_test.py:22:28: R6003: Consider using alternative Union syntax instead of 'Optional'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
************* Module data.clientmodule_test
tests/data/clientmodule_test.py:10:8: W0612: Unused variable 'local_variable' (unused-variable)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.g.generic_alias.generic_alias_collections:[11:130]
==functional.g.generic_alias.generic_alias_collections_py37_with_typing:[16:135]
tuple[int, int]  # [unsubscriptable-object]
type[int]  # [unsubscriptable-object]
collections.abc.Callable[[int], str]  # [unsubscriptable-object]

# builtins
dict[int, str]  # [unsubscriptable-object]
list[int]  # [unsubscriptable-object]
set[int]  # [unsubscriptable-object]
frozenset[int]  # [unsubscriptable-object]

# collections
collections.defaultdict[int, str]  # [unsubscriptable-object]
collections.OrderedDict[int, str]  # [unsubscriptable-object]
collections.ChainMap[int, str]  # [unsubscriptable-object]
collections.Counter[int]  # [unsubscriptable-object]
collections.deque[int]  # [unsubscriptable-object]

# collections.abc
collections.abc.Set[int]  # [unsubscriptable-object]
collections.abc.Collection[int]  # [unsubscriptable-object]
collections.abc.Container[int]  # [unsubscriptable-object]
collections.abc.ItemsView[int, str]  # [unsubscriptable-object]
collections.abc.KeysView[int]  # [unsubscriptable-object]
collections.abc.Mapping[int, str]  # [unsubscriptable-object]
collections.abc.MappingView[int]  # [unsubscriptable-object]
collections.abc.MutableMapping[int, str]  # [unsubscriptable-object]
collections.abc.MutableSequence[int]  # [unsubscriptable-object]
collections.abc.MutableSet[int]  # [unsubscriptable-object]
collections.abc.Sequence[int]  # [unsubscriptable-object]
collections.abc.ValuesView[int]  # [unsubscriptable-object]

collections.abc.Iterable[int]  # [unsubscriptable-object]
collections.abc.Iterator[int]  # [unsubscriptable-object]
collections.abc.Generator[int, None, None]  # [unsubscriptable-object]
collections.abc.Reversible[int]  # [unsubscriptable-object]

collections.abc.Coroutine[list[str], str, int]  # [unsubscriptable-object,unsubscriptable-object]
collections.abc.AsyncGenerator[int, None]  # [unsubscriptable-object]
collections.abc.AsyncIterable[int]  # [unsubscriptable-object]
collections.abc.AsyncIterator[int]  # [unsubscriptable-object]
collections.abc.Awaitable[int]  # [unsubscriptable-object]

# contextlib
contextlib.AbstractContextManager[int]  # [unsubscriptable-object]
contextlib.AbstractAsyncContextManager[int]  # [unsubscriptable-object]

# re
re.Pattern[str]  # [unsubscriptable-object]
re.Match[str]  # [unsubscriptable-object]


# unsubscriptable types
collections.abc.Hashable
collections.abc.Sized
collections.abc.Hashable[int]  # [unsubscriptable-object]
collections.abc.Sized[int]  # [unsubscriptable-object]

# subscriptable with Python 3.9
collections.abc.ByteString[int]  # [unsubscriptable-object]


# Missing implementation for 'collections.abc' derived classes
class DerivedHashable(collections.abc.Hashable):  # [abstract-method]  # __hash__
    pass

class DerivedIterable(collections.abc.Iterable[int]):  # [unsubscriptable-object]
    pass

class DerivedCollection(collections.abc.Collection[int]):  # [unsubscriptable-object]
    pass


# No implementation required for 'builtins' and 'collections' types
class DerivedList(list[int]):  # [unsubscriptable-object]
    pass

class DerivedSet(set[int]):  # [unsubscriptable-object]
    pass

class DerivedOrderedDict(collections.OrderedDict[int, str]):  # [unsubscriptable-object]
    pass

class DerivedListIterable(list[collections.abc.Iterable[int]]):  # [unsubscriptable-object,unsubscriptable-object]
    pass


# Multiple generic base classes
class DerivedMultiple(collections.abc.Sized, collections.abc.Hashable):  # [abstract-method,abstract-method]
    pass

class CustomAbstractCls1(abc.ABC):
    pass
class CustomAbstractCls2(collections.abc.Sized, collections.abc.Iterable[CustomAbstractCls1]):  # [abstract-method,unsubscriptable-object]  # __len__
    pass
class CustomImplementation(CustomAbstractCls2):  # [abstract-method]  # __len__
    pass


# Type annotations
var_tuple: tuple[int, int]  # [unsubscriptable-object]
var_dict: dict[int, str]  # [unsubscriptable-object]
var_orderedDict: collections.OrderedDict[int, str]  # [unsubscriptable-object]
var_container: collections.abc.Container[int]  # [unsubscriptable-object]
var_sequence: collections.abc.Sequence[int]  # [unsubscriptable-object]
var_iterable: collections.abc.Iterable[int]  # [unsubscriptable-object]
var_awaitable: collections.abc.Awaitable[int]  # [unsubscriptable-object]
var_contextmanager: contextlib.AbstractContextManager[int]  # [unsubscriptable-object]
var_pattern: re.Pattern[int]  # [unsubscriptable-object]
var_bytestring: collections.abc.ByteString
var_hashable: collections.abc.Hashable
var_sized: collections.abc.Sized

# Type annotation with unsubscriptable type
var_int: int[int]  # [unsubscriptable-object]
var_hashable2: collections.abc.Hashable[int]  # [unsubscriptable-object]
var_sized2: collections.abc.Sized[int]  # [unsubscriptable-object]

# subscriptable with Python 3.9
var_bytestring2: collections.abc.ByteString[int]  # [unsubscriptable-object] (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.p.postponed_evaluation_pep585:[16:133]
==functional.p.postponed_evaluation_pep585_py39:[11:128]
class CustomIntList(typing.List[int]):
    pass

class CustomIntListError(list[int]):  # [unsubscriptable-object]
    pass

cast_variable = [1, 2, 3]
cast_variable = typing.cast(list[int], cast_variable)  # [unsubscriptable-object]

T = typing.TypeVar("T", list[int], str)  # [unsubscriptable-object]

(lambda x: 2)(list[int])  # [unsubscriptable-object]


# Check typing.NamedTuple
CustomNamedTuple = typing.NamedTuple(
    "CustomNamedTuple", [("my_var", list[int])])  # [unsubscriptable-object]

class CustomNamedTuple2(NamedTuple):
    my_var: list[int]

class CustomNamedTuple3(typing.NamedTuple):
    my_var: list[int]


# Check typing.TypedDict
CustomTypedDict = TypedDict("CustomTypedDict", my_var=list[int])  # [unsubscriptable-object]

CustomTypedDict2 = TypedDict("CustomTypedDict2", {"my_var": list[int]})  # [unsubscriptable-object]

class CustomTypedDict3(TypedDict):
    my_var: list[int]

class CustomTypedDict4(typing.TypedDict):
    my_var: list[int]


# Check dataclasses
def my_decorator(*args, **kwargs):
    def wraps(*args, **kwargs):
        pass
    return wraps

@dataclass
class CustomDataClass:
    my_var: list[int]

@dataclasses.dataclass
class CustomDataClass2:
    my_var: list[int]

@dataclass()
class CustomDataClass3:
    my_var: list[int]

@my_decorator
@dataclasses.dataclass
class CustomDataClass4:
    my_var: list[int]


var1: set[int]
var2: collections.OrderedDict[str, int]
var3: dict[str, list[int]]
var4: Dict[str, list[int]]
var5: dict[tuple[int, int], str]
var6: Dict[tuple[int, int], str]
var7: list[list[int]]
var8: tuple[list[int]]
var9: int | list[str | int]
var10: Union[list[str], None]
var11: Union[Union[list[int], int]]

def func(arg: list[int]):
    pass

def func2() -> list[int]:
    pass

Alias2 = Union[list[str], None]  # [unsubscriptable-object]
Alias3 = Union[Union[list[int], int]]  # [unsubscriptable-object]
Alias4 = Tuple[list[int]]  # [unsubscriptable-object]
Alias5 = Dict[str, list[int]]  # [unsubscriptable-object]
Alias6 = int | list[int]  # [unsubscriptable-object]
Alias7 = list[list[int]]  # [unsubscriptable-object,unsubscriptable-object]


import collections.abc
import contextlib
import re

class OrderedDict:
    pass

var12: OrderedDict[str, int]  # string annotations aren't checked
var13: list[int]
var14: collections.OrderedDict[str, int]
var15: collections.Counter[int]
var16: collections.abc.Iterable[int]
var17: contextlib.AbstractContextManager[int]
var18: re.Pattern[str]


def func3():
    AliasInvalid2 = list[int]  # [unsubscriptable-object]
    cast_variable2 = [1, 2, 3]
    cast_variable2 = typing.cast(list[int], cast_variable2)  # [unsubscriptable-object]
    var19: list[int]

def func4(arg=list[int]):  # [unsubscriptable-object]
    pass

def func5(arg1: list[int], arg2=set[int]):  # [unsubscriptable-object]
    pass

def func6(arg1: list[int], /, *args: tuple[str], arg2: set[int], **kwargs: dict[str, Any]):
    pass (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.g.generic_alias.generic_alias_collections_py37_with_typing:[16:116]
==functional.g.generic_alias.generic_alias_postponed_evaluation_py37:[19:121]
tuple[int, int]  # [unsubscriptable-object]
type[int]  # [unsubscriptable-object]
collections.abc.Callable[[int], str]  # [unsubscriptable-object]

# builtins
dict[int, str]  # [unsubscriptable-object]
list[int]  # [unsubscriptable-object]
set[int]  # [unsubscriptable-object]
frozenset[int]  # [unsubscriptable-object]

# collections
collections.defaultdict[int, str]  # [unsubscriptable-object]
collections.OrderedDict[int, str]  # [unsubscriptable-object]
collections.ChainMap[int, str]  # [unsubscriptable-object]
collections.Counter[int]  # [unsubscriptable-object]
collections.deque[int]  # [unsubscriptable-object]

# collections.abc
collections.abc.Set[int]  # [unsubscriptable-object]
collections.abc.Collection[int]  # [unsubscriptable-object]
collections.abc.Container[int]  # [unsubscriptable-object]
collections.abc.ItemsView[int, str]  # [unsubscriptable-object]
collections.abc.KeysView[int]  # [unsubscriptable-object]
collections.abc.Mapping[int, str]  # [unsubscriptable-object]
collections.abc.MappingView[int]  # [unsubscriptable-object]
collections.abc.MutableMapping[int, str]  # [unsubscriptable-object]
collections.abc.MutableSequence[int]  # [unsubscriptable-object]
collections.abc.MutableSet[int]  # [unsubscriptable-object]
collections.abc.Sequence[int]  # [unsubscriptable-object]
collections.abc.ValuesView[int]  # [unsubscriptable-object]

collections.abc.Iterable[int]  # [unsubscriptable-object]
collections.abc.Iterator[int]  # [unsubscriptable-object]
collections.abc.Generator[int, None, None]  # [unsubscriptable-object]
collections.abc.Reversible[int]  # [unsubscriptable-object]

collections.abc.Coroutine[list[str], str, int]  # [unsubscriptable-object,unsubscriptable-object]
collections.abc.AsyncGenerator[int, None]  # [unsubscriptable-object]
collections.abc.AsyncIterable[int]  # [unsubscriptable-object]
collections.abc.AsyncIterator[int]  # [unsubscriptable-object]
collections.abc.Awaitable[int]  # [unsubscriptable-object]

# contextlib
contextlib.AbstractContextManager[int]  # [unsubscriptable-object]
contextlib.AbstractAsyncContextManager[int]  # [unsubscriptable-object]

# re
re.Pattern[str]  # [unsubscriptable-object]
re.Match[str]  # [unsubscriptable-object]


# unsubscriptable types
collections.abc.Hashable
collections.abc.Sized
collections.abc.Hashable[int]  # [unsubscriptable-object]
collections.abc.Sized[int]  # [unsubscriptable-object]

# subscriptable with Python 3.9
collections.abc.ByteString[int]  # [unsubscriptable-object]


# Missing implementation for 'collections.abc' derived classes
class DerivedHashable(collections.abc.Hashable):  # [abstract-method]  # __hash__
    pass

class DerivedIterable(collections.abc.Iterable[int]):  # [unsubscriptable-object]
    pass

class DerivedCollection(collections.abc.Collection[int]):  # [unsubscriptable-object]
    pass


# No implementation required for 'builtins' and 'collections' types
class DerivedList(list[int]):  # [unsubscriptable-object]
    pass

class DerivedSet(set[int]):  # [unsubscriptable-object]
    pass

class DerivedOrderedDict(collections.OrderedDict[int, str]):  # [unsubscriptable-object]
    pass

class DerivedListIterable(list[collections.abc.Iterable[int]]):  # [unsubscriptable-object,unsubscriptable-object]
    pass


# Multiple generic base classes
class DerivedMultiple(collections.abc.Sized, collections.abc.Hashable):  # [abstract-method,abstract-method]
    pass

class CustomAbstractCls1(abc.ABC):
    pass
class CustomAbstractCls2(collections.abc.Sized, collections.abc.Iterable[CustomAbstractCls1]):  # [abstract-method,unsubscriptable-object]  # __len__
    pass
class CustomImplementation(CustomAbstractCls2):  # [abstract-method]  # __len__
    pass



# ----- subscriptable (with postponed evaluation) -----
# special
var_tuple: tuple[int, int] (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.p.postponed_evaluation_pep585:[14:97]
==functional.p.postponed_evaluation_pep585_error:[13:96]
AliasInvalid = list[int]  # [unsubscriptable-object]

class CustomIntList(typing.List[int]):
    pass

class CustomIntListError(list[int]):  # [unsubscriptable-object]
    pass

cast_variable = [1, 2, 3]
cast_variable = typing.cast(list[int], cast_variable)  # [unsubscriptable-object]

T = typing.TypeVar("T", list[int], str)  # [unsubscriptable-object]

(lambda x: 2)(list[int])  # [unsubscriptable-object]


# Check typing.NamedTuple
CustomNamedTuple = typing.NamedTuple(
    "CustomNamedTuple", [("my_var", list[int])])  # [unsubscriptable-object]

class CustomNamedTuple2(NamedTuple):
    my_var: list[int]

class CustomNamedTuple3(typing.NamedTuple):
    my_var: list[int]


# Check typing.TypedDict
CustomTypedDict = TypedDict("CustomTypedDict", my_var=list[int])  # [unsubscriptable-object]

CustomTypedDict2 = TypedDict("CustomTypedDict2", {"my_var": list[int]})  # [unsubscriptable-object]

class CustomTypedDict3(TypedDict):
    my_var: list[int]

class CustomTypedDict4(typing.TypedDict):
    my_var: list[int]


# Check dataclasses
def my_decorator(*args, **kwargs):
    def wraps(*args, **kwargs):
        pass
    return wraps

@dataclass
class CustomDataClass:
    my_var: list[int]

@dataclasses.dataclass
class CustomDataClass2:
    my_var: list[int]

@dataclass()
class CustomDataClass3:
    my_var: list[int]

@my_decorator
@dataclasses.dataclass
class CustomDataClass4:
    my_var: list[int]


var1: set[int]
var2: collections.OrderedDict[str, int]
var3: dict[str, list[int]]
var4: Dict[str, list[int]]
var5: dict[tuple[int, int], str]
var6: Dict[tuple[int, int], str]
var7: list[list[int]]
var8: tuple[list[int]]
var9: int | list[str | int]
var10: Union[list[str], None]
var11: Union[Union[list[int], int]]

def func(arg: list[int]):
    pass

def func2() -> list[int]:
    pass

Alias2 = Union[list[str], None]  # [unsubscriptable-object]
Alias3 = Union[Union[list[int], int]]  # [unsubscriptable-object] (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.p.postponed_evaluation_pep585_error:[15:96]
==functional.p.postponed_evaluation_pep585_py39:[11:92]
class CustomIntList(typing.List[int]):
    pass

class CustomIntListError(list[int]):  # [unsubscriptable-object]
    pass

cast_variable = [1, 2, 3]
cast_variable = typing.cast(list[int], cast_variable)  # [unsubscriptable-object]

T = typing.TypeVar("T", list[int], str)  # [unsubscriptable-object]

(lambda x: 2)(list[int])  # [unsubscriptable-object]


# Check typing.NamedTuple
CustomNamedTuple = typing.NamedTuple(
    "CustomNamedTuple", [("my_var", list[int])])  # [unsubscriptable-object]

class CustomNamedTuple2(NamedTuple):
    my_var: list[int]  # [unsubscriptable-object]

class CustomNamedTuple3(typing.NamedTuple):
    my_var: list[int]  # [unsubscriptable-object]


# Check typing.TypedDict
CustomTypedDict = TypedDict("CustomTypedDict", my_var=list[int])  # [unsubscriptable-object]

CustomTypedDict2 = TypedDict("CustomTypedDict2", {"my_var": list[int]})  # [unsubscriptable-object]

class CustomTypedDict3(TypedDict):
    my_var: list[int]  # [unsubscriptable-object]

class CustomTypedDict4(typing.TypedDict):
    my_var: list[int]  # [unsubscriptable-object]


# Check dataclasses
def my_decorator(*args, **kwargs):
    def wraps(*args, **kwargs):
        pass
    return wraps

@dataclass
class CustomDataClass:
    my_var: list[int]  # [unsubscriptable-object]

@dataclasses.dataclass
class CustomDataClass2:
    my_var: list[int]  # [unsubscriptable-object]

@dataclass()
class CustomDataClass3:
    my_var: list[int]  # [unsubscriptable-object]

@my_decorator
@dataclasses.dataclass
class CustomDataClass4:
    my_var: list[int]  # [unsubscriptable-object]


var1: set[int]  # [unsubscriptable-object]
var2: collections.OrderedDict[str, int]  # [unsubscriptable-object]
var3: dict[str, list[int]]  # [unsubscriptable-object,unsubscriptable-object]
var4: Dict[str, list[int]]  # [unsubscriptable-object]
var5: dict[tuple[int, int], str]  # [unsubscriptable-object,unsubscriptable-object]
var6: Dict[tuple[int, int], str]  # [unsubscriptable-object]
var7: list[list[int]]  # [unsubscriptable-object,unsubscriptable-object]
var8: tuple[list[int]]  # [unsubscriptable-object,unsubscriptable-object]
var9: int | list[str | int]   # [unsubscriptable-object]
var10: Union[list[str], None]   # [unsubscriptable-object]
var11: Union[Union[list[int], int]]   # [unsubscriptable-object]

def func(arg: list[int]):  # [unsubscriptable-object]
    pass

def func2() -> list[int]:  # [unsubscriptable-object]
    pass

Alias2 = Union[list[str], None]  # [unsubscriptable-object]
Alias3 = Union[Union[list[int], int]]  # [unsubscriptable-object] (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==func_block_disable_msg:[139:1025]
==functional.t.too.too_many_nested_blocks:[36:57]
        if attr1:
            for i in attr1:
                if attr2:
                    return i
            else:
                return 'duh'
        elif attr2:
            for i in attr2:
                if attr2:
                    return i
            else:
                return 'duh'
        else:
            for i in range(15):
                if attr3:
                    return i
            else:
                return 'doh'
        return None


































































































































































































































































































































































































































































































































































































































































































































































































































































































 (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.g.generic_alias.generic_alias_mixed_py37:[16:41]
==functional.g.generic_alias.generic_alias_mixed_py39:[11:36]
var_orderedDict: collections.OrderedDict[int, str]
var_container: collections.abc.Container[int]
var_sequence: collections.abc.Sequence[int]
var_iterable: collections.abc.Iterable[int]
var_awaitable: collections.abc.Awaitable[int]
var_pattern: re.Pattern[int]
var_bytestring: collections.abc.ByteString
var_hashable: collections.abc.Hashable
var_ContextManager: contextlib.AbstractContextManager[int]


# No implementation required for 'builtins'
class DerivedListIterable(typing.List[typing.Iterable[int]]):
    pass


# Missing implementation for 'collections.abc' derived classes
class DerivedHashable(typing.Hashable):  # [abstract-method]  # __hash__
    pass

class DerivedIterable(typing.Iterable[int]):  # [abstract-method]  # __iter__
    pass

class DerivedCollection(typing.Collection[int]):  # [abstract-method,abstract-method,abstract-method]  # __contains__, __iter__, __len__
    pass (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.m.multiple_statements:[6:30]
==functional.m.multiple_statements_single_line:[6:30]
if True: pass

if True: pass  # [multiple-statements]
else:
    pass

class MyError(Exception): pass

class MyError(Exception): a='a'

class MyError(Exception): a='a'; b='b'  # [multiple-statements]

try:
    pass
except:
    pass
finally:
    pass


@overload
def concat2(arg1: str) -> str: ...

def concat2(arg1: str) -> str: ...  # [multiple-statements] (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.g.generic_alias.generic_alias_related:[29:54]
==functional.g.generic_alias.generic_alias_related_py39:[31:56]
class ClsList(typing.List):
    pass


ClsUnsubscriptable()[1]  # [unsubscriptable-object]
ClsUnsubscriptable[int]  # [unsubscriptable-object]

ClsGetItem()[1]
ClsGetItem[int]  # [unsubscriptable-object]

ClsClassGetItem()[1]  # [unsubscriptable-object]
ClsClassGetItem[int]

# subscriptable because of inheritance
ClsList([0, 1, 2])[1]
ClsList[int]


class ClsAbstract(metaclass=ABCMeta):
    @abstractmethod
    def abstract_method(self):
        pass

class Derived(ClsAbstract):  # [abstract-method]
    pass (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==pylint.extensions.comparetozero:[41:65]
==pylint.extensions.emptystring:[36:60]
        )
    }

    options = ()

    @utils.only_required_for_messages("compare-to-empty-string")
    def visit_compare(self, node: nodes.Compare) -> None:
        _operators = ["!=", "==", "is not", "is"]
        # note: astroid.Compare has the left most operand in node.left
        # while the rest are a list of tuples in node.ops
        # the format of the tuple is ('compare operator sign', node)
        # here we squash everything into `ops` to make it easier for processing later
        ops = [("", node.left)]
        ops.extend(node.ops)
        iter_ops: Iterable[Any] = iter(ops)
        ops = list(itertools.chain(*iter_ops))

        for ops_idx in range(len(ops) - 2):
            op_1 = ops[ops_idx]
            op_2 = ops[ops_idx + 1]
            op_3 = ops[ops_idx + 2]
            error_detected = False

            # x ?? "" (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==pylint.checkers.base.__init__:[6:35]
==pylint.checkers.base.name_checker.__init__:[4:14]
__all__ = [
    "NameChecker",
    "NamingStyle",
    "KNOWN_NAME_TYPES_WITH_STYLE",
    "SnakeCaseStyle",
    "CamelCaseStyle",
    "UpperCaseStyle",
    "PascalCaseStyle",
    "AnyStyle",
] (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.m.method_cache_max_size_none:[12:47]
==functional.m.method_cache_max_size_none_py39:[12:47]
    return param + 1


class MyClassWithMethods:
    @lru_cache()
    def my_func(self, param):
        return param + 1

    @lru_cache(1)
    def my_func(self, param):
        return param + 1

    @lru_cache(None)  # [method-cache-max-size-none]
    def my_func(self, param):
        return param + 1

    @functools.lru_cache(None)  # [method-cache-max-size-none]
    def my_func(self, param):
        return param + 1

    @aliased_functools.lru_cache(None)  # [method-cache-max-size-none]
    def my_func(self, param):
        return param + 1

    @aliased_cache(None)  # [method-cache-max-size-none]
    def my_func(self, param):
        return param + 1

    # Check double decorating to check robustness of checker itself
    @aliased_cache(None)  # [method-cache-max-size-none]
    @aliased_cache(None)  # [method-cache-max-size-none]
    def my_func(self, param):
        return param + 1

 (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.d.dangerous_default_value:[74:110]
==functional.g.generic_alias.generic_alias_side_effects:[20:56]
    return value

def function5(value=frozenset()):
    """frozenset is immutable and safe."""
    return value

def function7(value=dict()): # [dangerous-default-value]
    """dict is mutable and dangerous."""
    return value

def function8(value=list()):  # [dangerous-default-value]
    """list is mutable and dangerous."""
    return value

def function17(value=collections.deque()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function18(value=collections.ChainMap()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function19(value=collections.Counter()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function20(value=collections.OrderedDict()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function21(value=collections.defaultdict()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value


# tests/functional/p/protocol_classes.py  (min py38) (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.p.protected_access_special_methods_off:[8:23]
==functional.p.protected_access_special_methods_on:[8:23]
class Protected:
    """A class"""

    def __init__(self):
        self._protected = 42
        self.public = "A"
        self.__private = None  # [unused-private-member]

    def __eq__(self, other):
        self._protected = other._protected

    def _fake_special_(self, other):
        a = other.public
        self.public = other._protected  # [protected-access]
        self.__private = other.__private  # [protected-access, unused-private-member] (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.c.comparison_of_constants:[20:33]
==functional.l.literal_comparison:[31:48]
    pass

CONST = 24

if CONST is 0:  # [literal-comparison]
    pass

if CONST is 1:  # [literal-comparison]
    pass

if CONST is 42:  # [literal-comparison]
    pass
 (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.d.dangerous_default_value:[82:111]
==functional.g.generic_alias.generic_alias_side_effects:[20:52]
    return value

def function18(value=collections.ChainMap()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function19(value=collections.Counter()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function20(value=collections.OrderedDict()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function21(value=collections.defaultdict()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function22(value=collections.UserDict()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function23(value=collections.UserList()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function24(*, value=[]): # [dangerous-default-value]
    """dangerous default value in kwarg."""
    return value (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.d.dangerous_default_value:[74:106]
==functional.g.generic_alias.generic_alias_side_effects:[24:56]
    return value

def function16(value={1}): # [dangerous-default-value]
    """set literal as default value"""
    return value

def function17(value=collections.deque()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function18(value=collections.ChainMap()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function19(value=collections.Counter()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function20(value=collections.OrderedDict()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function21(value=collections.defaultdict()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function22(value=collections.UserDict()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function23(value=collections.UserList()):  # [dangerous-default-value]
    """mutable, dangerous""" (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==pylint.testutils.lint_module_test:[134:142]
==test_messages_documentation:[111:120]
        messages: MessageCounter = Counter()
        for i, line in enumerate(stream):
            match = _EXPECTED_RE.search(line)
            if match is None:
                continue
            line = match.group("line")
            if line is None:
                lineno = i + 1 (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.m.method_cache_max_size_none:[50:79]
==functional.m.method_cache_max_size_none_py39:[19:47]
        return param + 1

    @cache
    @classmethod
    def my_func(cls, param):
        return param + 1

    @cache  # [method-cache-max-size-none]
    def my_func(self, param):
        return param + 1

    @functools.cache  # [method-cache-max-size-none]
    def my_func(self, param):
        return param + 1

    @aliased_functools.cache  # [method-cache-max-size-none]
    def my_func(self, param):
        return param + 1

    @aliased_cache  # [method-cache-max-size-none]
    def my_func(self, param):
        return param + 1

    # Check double decorating to check robustness of checker itself
    @functools.lru_cache(maxsize=1)
    @aliased_cache  # [method-cache-max-size-none]
    def my_func(self, param):
        return param + 1 (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.g.generic_alias.generic_alias_related:[14:27]
==functional.g.generic_alias.generic_alias_related_py39:[16:29]
class ClsUnsubscriptable:
    def __init__(self):
        pass

class ClsGetItem:
    def __init__(self):
        self.var = [1, 2, 3, 4]
    def __getitem__(self, item):
        return self.var[item]

class ClsClassGetItem:
    def __init__(self):
        pass (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.d.dangerous_default_value:[74:102]
==functional.g.generic_alias.generic_alias_side_effects:[28:56]
    return value

def function16(value={1}): # [dangerous-default-value]
    """set literal as default value"""
    return value

def function17(value=collections.deque()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function18(value=collections.ChainMap()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function19(value=collections.Counter()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function20(value=collections.OrderedDict()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function21(value=collections.defaultdict()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function22(value=collections.UserDict()):  # [dangerous-default-value]
    """mutable, dangerous""" (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.d.dangerous_default_value:[29:55]
==functional.g.generic_alias.generic_alias_side_effects:[20:48]
    return value

def function5(value=frozenset()):
    """frozenset is immutable and safe."""
    return value

def function7(value=dict()): # [dangerous-default-value]
    """dict is mutable and dangerous."""
    return value

def function8(value=list()):  # [dangerous-default-value]
    """list is mutable and dangerous."""
    return value

def function17(value=collections.deque()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function18(value=collections.ChainMap()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function19(value=collections.Counter()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function20(value=collections.OrderedDict()):  # [dangerous-default-value]
    """mutable, dangerous""" (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.l.logging_format_interpolation_style:[4:11]
==logging_format_interpolation_style:[6:13]
logging.error("constant string")
logging.error("{}")
logging.error("{}", 1)
logging.error("{0}", 1)
logging.error("{named}", {"named": 1})
logging.error("{} {named}", 1, {"named": 1})
logging.error("{0} {named}", 1, {"named": 1}) (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==bad:[0:17]
==good:[0:17]
class Drink:
    def mix(self, fluid_one, fluid_two):
        return fluid_one + fluid_two


class Cocktail(Drink):
    def mix(self, fluid_one, fluid_two, alcoholic_fluid_one="Beer"):
        return fluid_one + fluid_two + alcoholic_fluid_one


class Car:
    tank = 0

    def fill_tank(self, gas):
        self.tank += gas

 (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0401: Cyclic import (input.func_w0401 -> input.w0401_cycle) (cyclic-import)
tests/data/clientmodule_test.py:1:0: R0401: Cyclic import (input.func_w0401_package.all_the_things -> input.func_w0401_package.thing2) (cyclic-import)

------------------------------------------------------------------
Your code has been rated at 0.00/10 (previous run: 0.00/10, +0.00)
Error executing command:
Exit code: 31
[STDERR]
Traceback (most recent call last):
  File "/testbed/pylint/checkers/utils.py", line 625, in parse_format_method_string
    keyword_arguments.append((keyname, list(fielditerator)))
ValueError: Only '.' or '[' may follow ']' in format field specifier

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/testbed/pylint/utils/ast_walker.py", line 89, in walk
    callback(astroid)
  File "/testbed/pylint/checkers/refactoring/recommendation_checker.py", line 338, in visit_const
    self._detect_replacable_format_call(node)
  File "/testbed/pylint/checkers/refactoring/recommendation_checker.py", line 368, in _detect_replacable_format_call
    i[0] for i in utils.parse_format_method_string(node.value)[0]
  File "/testbed/pylint/checkers/utils.py", line 627, in parse_format_method_string
    raise IncompleteFormatString() from e
pylint.checkers.utils.IncompleteFormatString
command terminated with exit code 31


=== Iteration 14/100 ===
Calling LLM...
LLM Response: I can see that the pylint command ran and found both files: `.a/foo.py` and `bar.py`. This confirms the issue - pylint is not respecting the ignore patterns in recursive mode. Let me try one of the ig...
Executing tool: r2e_bash_executor
Tool parameters: {
  "command": "pylint --recursive=y --ignore=.a ."
}
Tool execution status: error
Tool stdout:
[STDOUT]
************* Module reproduce_issue
reproduce_issue.py:26:50: W1401: Anomalous backslash in string: '\.'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
reproduce_issue.py:14:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
reproduce_issue.py:17:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
reproduce_issue.py:39:15: W0703: Catching too general exception Exception (broad-except)
reproduce_issue.py:32:21: W1510: Using subprocess.run without explicitly set `check` is not recommended. (subprocess-run-check)
reproduce_issue.py:5:0: W0611: Unused import tempfile (unused-import)
************* Module bar
bar.py:1:0: C0104: Disallowed name "bar" (disallowed-name)
************* Module pylint.testutils.primer
pylint/testutils/primer.py:10:0: E0401: Unable to import 'git' (import-error)
************* Module foo
.a/foo.py:1:0: C0104: Disallowed name "foo" (disallowed-name)
************* Module test_messages_documentation
doc/test_messages_documentation.py:14:4: W0223: Method 'fromkeys' is abstract in class 'Counter' but is not overridden (abstract-method)
doc/test_messages_documentation.py:19:0: C0413: Import "from pathlib import Path" should be placed at the top of the module (wrong-import-position)
doc/test_messages_documentation.py:20:0: C0413: Import "from typing import Counter as CounterType" should be placed at the top of the module (wrong-import-position)
doc/test_messages_documentation.py:21:0: C0413: Import "from typing import List, Optional, TextIO, Tuple" should be placed at the top of the module (wrong-import-position)
doc/test_messages_documentation.py:23:0: C0413: Import "import pytest" should be placed at the top of the module (wrong-import-position)
doc/test_messages_documentation.py:25:0: C0413: Import "from pylint import checkers, config" should be placed at the top of the module (wrong-import-position)
doc/test_messages_documentation.py:26:0: C0413: Import "from pylint.config.config_initialization import _config_initialization" should be placed at the top of the module (wrong-import-position)
doc/test_messages_documentation.py:27:0: C0413: Import "from pylint.lint import PyLinter" should be placed at the top of the module (wrong-import-position)
doc/test_messages_documentation.py:28:0: C0413: Import "from pylint.message.message import Message" should be placed at the top of the module (wrong-import-position)
doc/test_messages_documentation.py:29:0: C0413: Import "from pylint.testutils.constants import _EXPECTED_RE" should be placed at the top of the module (wrong-import-position)
doc/test_messages_documentation.py:30:0: C0413: Import "from pylint.testutils.reporter_for_tests import FunctionalTestReporter" should be placed at the top of the module (wrong-import-position)
doc/test_messages_documentation.py:83:21: R6003: Consider using alternative Union syntax instead of 'Optional'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
doc/test_messages_documentation.py:35:65: R6002: 'typing.List' will be deprecated with PY39, consider using 'list' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
doc/test_messages_documentation.py:35:70: R6002: 'typing.Tuple' will be deprecated with PY39, consider using 'tuple' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
doc/test_messages_documentation.py:40:11: R6002: 'typing.List' will be deprecated with PY39, consider using 'list' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
doc/test_messages_documentation.py:40:16: R6002: 'typing.Tuple' will be deprecated with PY39, consider using 'tuple' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
doc/test_messages_documentation.py:72:34: R6002: 'typing.Tuple' will be deprecated with PY39, consider using 'tuple' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
doc/test_messages_documentation.py:136:18: R6002: 'typing.List' will be deprecated with PY39, consider using 'list' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
doc/test_messages_documentation.py:157:34: R6002: 'typing.Tuple' will be deprecated with PY39, consider using 'tuple' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
************* Module pylint_features
doc/exts/pylint_features.py:12:0: E0401: Unable to import 'sphinx' (import-error)
doc/exts/pylint_features.py:13:0: E0401: Unable to import 'sphinx.application' (import-error)
doc/exts/pylint_features.py:20:24: R6003: Consider using alternative Union syntax instead of 'Optional'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
************* Module pylint_options
doc/exts/pylint_options.py:16:0: E0401: Unable to import 'sphinx.application' (import-error)
************* Module pylint_extensions
doc/exts/pylint_extensions.py:15:0: E0401: Unable to import 'sphinx' (import-error)
doc/exts/pylint_extensions.py:16:0: E0401: Unable to import 'sphinx.application' (import-error)
doc/exts/pylint_extensions.py:24:24: R6003: Consider using alternative Union syntax instead of 'Optional'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
************* Module pylint_messages
doc/exts/pylint_messages.py:14:0: E0401: Unable to import 'sphinx.application' (import-error)
doc/exts/pylint_messages.py:305:30: R6003: Consider using alternative Union syntax instead of 'Optional'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
doc/exts/pylint_messages.py:61:42: R6002: 'typing.Tuple' will be deprecated with PY39, consider using 'tuple' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
doc/exts/pylint_messages.py:111:5: R6002: 'typing.Tuple' will be deprecated with PY39, consider using 'tuple' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
************* Module bad
doc/data/messages/d/duplicate-argument-name/bad.py:1:30: E0108: Duplicate argument name apple in function definition (duplicate-argument-name)
doc/data/messages/d/duplicate-argument-name/bad.py:1:15: W0613: Unused argument 'apple' (unused-argument)
doc/data/messages/d/duplicate-argument-name/bad.py:1:22: W0613: Unused argument 'banana' (unused-argument)
************* Module good
doc/data/messages/d/duplicate-argument-name/good.py:1:15: W0613: Unused argument 'apple' (unused-argument)
doc/data/messages/d/duplicate-argument-name/good.py:1:22: W0613: Unused argument 'banana' (unused-argument)
doc/data/messages/d/duplicate-argument-name/good.py:1:30: W0613: Unused argument 'orange' (unused-argument)
doc/data/messages/d/dict-iter-missing-items/bad.py:2:0: E1141: Unpacking a dictionary in iteration without calling .items() (dict-iter-missing-items)
doc/data/messages/d/duplicate-key/bad.py:1:13: W0109: Duplicate key 'Mathematics' in dictionary (duplicate-key)
doc/data/messages/d/duplicate-bases/bad.py:5:0: E0241: Duplicate bases for class 'Cat' (duplicate-bases)
doc/data/messages/d/duplicate-value/bad.py:1:16: W0130: Duplicate value 'value1' in set (duplicate-value)
doc/data/messages/y/yield-inside-async-function/bad.py:2:4: E1700: Yield inside async function (yield-inside-async-function)
doc/data/messages/y/yield-inside-async-function/bad.py:1:0: C0104: Disallowed name "foo" (disallowed-name)
doc/data/messages/y/yield-inside-async-function/good.py:1:0: C0104: Disallowed name "foo" (disallowed-name)
doc/data/messages/y/yield-inside-async-function/good.py:2:4: W0612: Unused variable '_inner_foo' (unused-variable)
doc/data/messages/y/yield-inside-async-function/good.py:6:0: C0104: Disallowed name "foo" (disallowed-name)
doc/data/messages/y/yield-inside-async-function/good.py:6:0: E0102: function already defined line 1 (function-redefined)
doc/data/messages/e/empty-docstring/bad.py:1:0: C0112: Empty function docstring (empty-docstring)
doc/data/messages/e/empty-docstring/bad.py:1:0: C0104: Disallowed name "foo" (disallowed-name)
doc/data/messages/e/empty-docstring/good.py:1:0: C0104: Disallowed name "foo" (disallowed-name)
doc/data/messages/l/literal-comparison/bad.py:2:11: R0123: Comparison to literal (literal-comparison)
doc/data/messages/l/logging-format-interpolation/bad.py:4:14: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
doc/data/messages/l/logging-format-interpolation/bad.py:4:14: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/l/logging-fstring-interpolation/bad.py:4:0: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
doc/data/messages/s/self-assigning-variable/bad.py:2:0: W0127: Assigning the same variable 'year' to itself (self-assigning-variable)
doc/data/messages/s/subclassed-final-class/bad.py:4:1: W2602: typing.final is not supported by all versions included in the py-version setting (using-final-decorator-in-unsupported-version)
doc/data/messages/s/subclassed-final-class/good.py:4:1: W2602: typing.final is not supported by all versions included in the py-version setting (using-final-decorator-in-unsupported-version)
doc/data/messages/s/super-without-brackets/bad.py:10:8: W0245: Super call without brackets (super-without-brackets)
doc/data/messages/s/super-with-arguments/bad.py:6:4: W0235: Useless super delegation in method '__init__' (useless-super-delegation)
doc/data/messages/s/super-with-arguments/bad.py:7:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
doc/data/messages/s/super-with-arguments/good.py:6:4: W0235: Useless super delegation in method '__init__' (useless-super-delegation)
doc/data/messages/s/singleton-comparison/bad.py:2:3: C0121: Comparison 'game_won == True' should be 'game_won is True' if checking for the singleton value True, or 'game_won' if testing for truthiness (singleton-comparison)
doc/data/messages/g/global-at-module-level/bad.py:2:0: W0604: Using the global statement at the module level (global-at-module-level)
doc/data/messages/g/global-statement/bad.py:4:0: C0104: Disallowed name "foo" (disallowed-name)
doc/data/messages/g/global-statement/bad.py:5:4: W0603: Using the global statement (global-statement)
doc/data/messages/g/global-statement/good.py:4:0: C0104: Disallowed name "foo" (disallowed-name)
doc/data/messages/f/function-redefined/bad.py:5:0: E0102: function already defined line 1 (function-redefined)
doc/data/messages/a/arguments-out-of-order/bad.py:11:4: W1114: Positional arguments appear to be out of order (arguments-out-of-order)
doc/data/messages/a/assert-on-tuple/bad.py:1:0: W0199: Assert called on a 2-item-tuple. Did you mean 'assert x,y'? (assert-on-tuple)
doc/data/messages/a/abstract-class-instantiated/bad.py:10:8: E0110: Abstract class 'Animal' with abstract methods instantiated (abstract-class-instantiated)
doc/data/messages/a/access-member-before-definition/bad.py:3:11: E0203: Access to member 'param' before its definition line 5 (access-member-before-definition)
doc/data/messages/a/assert-on-string-literal/bad.py:3:4: W0129: Assert statement has a string literal as its first argument. The assert will never fail. (assert-on-string-literal)
doc/data/messages/a/assert-on-string-literal/bad.py:2:4: W0612: Unused variable 'a' (unused-variable)
doc/data/messages/a/arguments-renamed/bad.py:2:19: W0621: Redefining name 'ingredient_name' from outer scope (line 12) (redefined-outer-name)
doc/data/messages/a/arguments-renamed/bad.py:9:4: W0237: Parameter 'ingredient_name' has been renamed to 'flavor' in overridden 'Orange.brew' method (arguments-renamed)
doc/data/messages/a/arguments-renamed/bad.py:12:30: R6102: Consider using an in-place tuple instead of list (consider-using-tuple)
doc/data/messages/a/arguments-renamed/bad.py:13:4: E1123: Unexpected keyword argument 'ingredient_name' in method call (unexpected-keyword-arg)
doc/data/messages/a/arguments-renamed/bad.py:13:4: E1120: No value for argument 'flavor' in method call (no-value-for-parameter)
doc/data/messages/a/arguments-renamed/good.py:2:19: W0621: Redefining name 'ingredient_name' from outer scope (line 12) (redefined-outer-name)
doc/data/messages/a/arguments-renamed/good.py:9:19: W0621: Redefining name 'ingredient_name' from outer scope (line 12) (redefined-outer-name)
doc/data/messages/a/arguments-renamed/good.py:12:30: R6102: Consider using an in-place tuple instead of list (consider-using-tuple)
doc/data/messages/a/assigning-non-slot/bad.py:6:8: E0237: Assigning to attribute 'surname' not defined in class slots (assigning-non-slot)
doc/data/messages/a/assignment-from-none/bad.py:5:0: E1128: Assigning result of a function call, where the function returns None (assignment-from-none)
doc/data/messages/a/await-outside-async/bad.py:5:4: E1142: 'await' should be used within an async function (await-outside-async)
doc/data/messages/a/abstract-method/bad.py:6:0: W0223: Method 'make_sound' is abstract in class 'Pet' but is not overridden (abstract-method)
doc/data/messages/a/abstract-method/bad.py:10:0: C0413: Import "import abc" should be placed at the top of the module (wrong-import-position)
doc/data/messages/a/abstract-method/bad.py:19:0: W0223: Method 'make_sound' is abstract in class 'WildAnimal' but is not overridden (abstract-method)
doc/data/messages/a/abstract-method/good.py:11:0: C0413: Import "import abc" should be placed at the top of the module (wrong-import-position)
doc/data/messages/a/arguments-differ/bad.py:7:4: W0221: Number of parameters was 3 in 'Drink.mix' and is now 4 in overridden 'Cocktail.mix' method (arguments-differ)
doc/data/messages/a/arguments-differ/bad.py:21:4: W0221: Number of parameters was 2 in 'Car.fill_tank' and is now 3 in overridden 'Airplane.fill_tank' method (arguments-differ)
doc/data/messages/a/anomalous-unicode-escape-in-string/bad.py:1:8: W1402: Anomalous Unicode escape in byte string: '\u'. String constant might be missing an r or u prefix. (anomalous-unicode-escape-in-string)
doc/data/messages/a/anomalous-unicode-escape-in-string/bad.py:1:6: E1101: Instance of 'bytes' has no 'format' member (no-member)
doc/data/messages/a/anomalous-unicode-escape-in-string/good.py:1:6: E1101: Instance of 'bytes' has no 'format' member (no-member)
doc/data/messages/a/anomalous-backslash-in-string/bad.py:1:10: W1401: Anomalous backslash in string: '\z'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
doc/data/messages/a/assignment-from-no-return/bad.py:5:0: E1111: Assigning result of a function call, where the function has no return (assignment-from-no-return)
doc/data/messages/i/invalid-enum-extension/bad.py:9:0: E0244: Extending inherited Enum class "Color" (invalid-enum-extension)
doc/data/messages/i/import-outside-toplevel/bad.py:2:4: C0415: Import outside toplevel (sys) (import-outside-toplevel)
doc/data/messages/p/potential-index-error/bad.py:1:6: E0643: Invalid index for iterable length (potential-index-error)
doc/data/messages/u/use-maxsplit-arg/bad.py:2:9: C0207: Use url.rsplit('.', maxsplit=1)[-1] instead (use-maxsplit-arg)
doc/data/messages/u/unused-wildcard-import/bad.py:1:0: W0401: Wildcard import abc (wildcard-import)
doc/data/messages/u/unused-wildcard-import/bad.py:1:0: W0614: Unused import(s) abstractmethod, abstractclassmethod, abstractstaticmethod, abstractproperty, ABCMeta and get_cache_token from wildcard import of abc (unused-wildcard-import)
doc/data/messages/u/unspecified-encoding/bad.py:1:0: C0104: Disallowed name "foo" (disallowed-name)
doc/data/messages/u/unspecified-encoding/bad.py:2:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
doc/data/messages/u/unspecified-encoding/bad.py:3:8: W0612: Unused variable 'contents' (unused-variable)
doc/data/messages/u/unspecified-encoding/good.py:1:0: C0104: Disallowed name "foo" (disallowed-name)
doc/data/messages/u/unspecified-encoding/good.py:3:8: W0612: Unused variable 'contents' (unused-variable)
doc/data/messages/u/unidiomatic-typecheck/bad.py:2:3: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
doc/data/messages/u/unnecessary-dunder-call/bad.py:1:8: C2801: Unnecessarily calls dunder method __str__. Use str built-in function. (unnecessary-dunder-call)
doc/data/messages/u/unnecessary-dunder-call/bad.py:2:9: C2801: Unnecessarily calls dunder method __add__. Use + operator. (unnecessary-dunder-call)
doc/data/messages/u/unnecessary-dunder-call/bad.py:6:11: C2801: Unnecessarily calls dunder method __gt__. Use > operator. (unnecessary-dunder-call)
doc/data/messages/u/unreachable/bad.py:3:4: W0101: Unreachable code (unreachable)
doc/data/messages/u/undefined-all-variable/bad.py:1:11: E0603: Undefined variable name 'get_fruit_colour' in __all__ (undefined-all-variable)
doc/data/messages/u/useless-return/bad.py:4:0: R1711: Useless return at end of function or method (useless-return)
doc/data/messages/u/use-list-literal/bad.py:1:13: R1734: Consider using [] instead of list() (use-list-literal)
doc/data/messages/u/ungrouped-imports/bad.py:4:0: C0412: Imports from package logging are not grouped (ungrouped-imports)
doc/data/messages/u/ungrouped-imports/bad.py:1:0: W0611: Unused import logging (unused-import)
doc/data/messages/u/ungrouped-imports/bad.py:2:0: W0611: Unused import os (unused-import)
doc/data/messages/u/ungrouped-imports/bad.py:3:0: W0611: Unused import sys (unused-import)
doc/data/messages/u/ungrouped-imports/bad.py:4:0: W0611: Unused import logging.config (unused-import)
doc/data/messages/u/ungrouped-imports/bad.py:5:0: W0611: Unused WatchedFileHandler imported from logging.handlers (unused-import)
doc/data/messages/u/ungrouped-imports/good.py:5:0: E0611: No name 'FileHandler' in module 'logging.handlers' (no-name-in-module)
doc/data/messages/u/ungrouped-imports/good.py:1:0: W0611: Unused import logging (unused-import)
doc/data/messages/u/ungrouped-imports/good.py:2:0: W0611: Unused import logging.config (unused-import)
doc/data/messages/u/ungrouped-imports/good.py:3:0: W0611: Unused import os (unused-import)
doc/data/messages/u/ungrouped-imports/good.py:4:0: W0611: Unused import sys (unused-import)
doc/data/messages/u/ungrouped-imports/good.py:5:0: W0611: Unused FileHandler imported from logging.handlers (unused-import)
doc/data/messages/u/useless-import-alias/bad.py:1:0: C0414: Import alias does not rename original package (useless-import-alias)
doc/data/messages/u/useless-import-alias/bad.py:1:0: E0401: Unable to import 'pandas' (import-error)
doc/data/messages/u/useless-import-alias/bad.py:1:0: W0611: Unused pandas imported as pandas (unused-import)
doc/data/messages/u/useless-import-alias/good.py:1:0: E0401: Unable to import 'pandas' (import-error)
doc/data/messages/u/useless-import-alias/good.py:1:0: W0611: Unused pandas imported as pd (unused-import)
doc/data/messages/u/use-dict-literal/bad.py:1:13: R1735: Consider using {} instead of dict() (use-dict-literal)
doc/data/messages/u/unnecessary-direct-lambda-call/bad.py:1:4: C3002: Lambda expression called directly. Execute the expression inline instead. (unnecessary-direct-lambda-call)
doc/data/messages/u/unnecessary-direct-lambda-call/bad.py:1:31: E0602: Undefined variable 'a' (undefined-variable)
doc/data/messages/u/unnecessary-direct-lambda-call/good.py:1:4: E0602: Undefined variable 'a' (undefined-variable)
doc/data/messages/u/unnecessary-direct-lambda-call/good.py:1:13: E0602: Undefined variable 'a' (undefined-variable)
doc/data/messages/u/unbalanced-tuple-unpacking/bad.py:2:0: W0632: Possible unbalanced tuple unpacking with sequence defined at line 1: left side has 3 label(s), right side has 4 value(s) (unbalanced-tuple-unpacking)
doc/data/messages/u/undefined-variable/bad.py:1:6: E0602: Undefined variable 'number' (undefined-variable)
doc/data/messages/u/unnecessary-lambda-assignment/bad.py:1:6: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
doc/data/messages/u/unnecessary-lambda-assignment/good.py:1:0: C0104: Disallowed name "foo" (disallowed-name)
doc/data/messages/u/unnecessary-list-index-lookup/bad.py:4:10: R1736: Unnecessary list index lookup, use 'letter' instead (unnecessary-list-index-lookup)
doc/data/messages/u/unnecessary-ellipsis/bad.py:3:4: W2301: Unnecessary ellipsis constant (unnecessary-ellipsis)
doc/data/messages/b/bad-staticmethod-argument/bad.py:3:4: W0211: Static method with 'self' as first argument (bad-staticmethod-argument)
doc/data/messages/b/bad-indentation/bad.py:1:3: W0141: Used builtin function 'input' (bad-builtin)
doc/data/messages/b/bad-indentation/good.py:1:3: W0141: Used builtin function 'input' (bad-builtin)
doc/data/messages/b/bad-format-character/bad.py:1:6: E1300: Unsupported format character 'z' (0x7a) at index 4 (bad-format-character)
doc/data/messages/b/bad-format-character/bad.py:1:6: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/b/bad-format-character/good.py:1:6: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/b/bad-builtin/bad.py:1:15: W0141: Used builtin function 'map'. Using a list comprehension can be clearer. (bad-builtin)
doc/data/messages/b/bad-builtin/good.py:1:26: R6102: Consider using an in-place tuple instead of list (consider-using-tuple)
doc/data/messages/b/bad-open-mode/bad.py:1:0: C0104: Disallowed name "foo" (disallowed-name)
doc/data/messages/b/bad-open-mode/bad.py:2:9: W1501: "rwx" is not a valid mode for open. (bad-open-mode)
doc/data/messages/b/bad-open-mode/bad.py:2:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
doc/data/messages/b/bad-open-mode/bad.py:3:8: W0612: Unused variable 'contents' (unused-variable)
doc/data/messages/b/bad-open-mode/good.py:1:0: C0104: Disallowed name "foo" (disallowed-name)
doc/data/messages/b/bad-open-mode/good.py:2:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
doc/data/messages/b/bad-open-mode/good.py:3:8: W0612: Unused variable 'contents' (unused-variable)
doc/data/messages/b/bad-classmethod-argument/bad.py:4:4: C0202: Class method get_instance should have 'cls' as first argument (bad-classmethod-argument)
doc/data/messages/b/bad-exception-context/bad.py:6:8: E0703: Exception context set to something which is not an exception, nor None (bad-exception-context)
doc/data/messages/b/binary-op-exception/bad.py:3:0: W0711: Exception to catch is the result of a binary "or" operation (binary-op-exception)
doc/data/messages/b/bad-except-order/bad.py:5:0: W0706: The except handler raises immediately (try-except-raise)
doc/data/messages/b/bad-except-order/bad.py:5:7: E0701: Bad except clauses order (Exception is an ancestor class of TypeError) (bad-except-order)
doc/data/messages/b/bad-except-order/bad.py:2:14: W0141: Used builtin function 'input' (bad-builtin)
doc/data/messages/b/bad-except-order/good.py:5:0: W0706: The except handler raises immediately (try-except-raise)
doc/data/messages/b/bad-except-order/good.py:2:14: W0141: Used builtin function 'input' (bad-builtin)
doc/data/messages/b/bad-option-value/bad.py:1:0: E0012: Bad option value for disable. Don't recognize message missing-module-documentation. (bad-option-value)
doc/data/messages/b/broken-collections-callable/bad.py:5:14: R6003: Consider using alternative Union syntax instead of 'Optional'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
doc/data/messages/b/broken-collections-callable/bad.py:5:23: E6005: 'collections.abc.Callable' inside Optional and Union is broken in 3.9.0 / 3.9.1 (use 'typing.Callable' instead) (broken-collections-callable)
doc/data/messages/b/broken-collections-callable/good.py:4:14: R6003: Consider using alternative Union syntax instead of 'Optional'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
doc/data/messages/b/broken-collections-callable/good.py:4:23: R6002: 'typing.Callable' will be deprecated with PY39, consider using 'collections.abc.Callable' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
doc/data/messages/b/broad-except/bad.py:3:7: W0703: Catching too general exception Exception (broad-except)
doc/data/messages/b/bad-string-format-type/bad.py:1:6: E1307: Argument 'builtins.str' does not match format type 'd' (bad-string-format-type)
doc/data/messages/b/bad-string-format-type/bad.py:1:6: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/b/bad-string-format-type/bad.py:1:13: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/b/bad-string-format-type/good.py:1:6: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/b/bad-reversed-sequence/bad.py:1:0: E0111: The first reversed() argument is not a sequence (bad-reversed-sequence)
doc/data/messages/b/bad-super-call/bad.py:7:8: E1003: Bad first argument 'Animal' given to super() (bad-super-call)
doc/data/messages/b/bad-super-call/good.py:6:4: W0235: Useless super delegation in method '__init__' (useless-super-delegation)
doc/data/messages/b/bad-str-strip-call/bad.py:1:0: E1310: Suspicious argument in str.strip call (bad-str-strip-call)
doc/data/messages/b/bad-str-strip-call/bad.py:3:0: E1310: Suspicious argument in str.strip call (bad-str-strip-call)
doc/data/messages/b/bad-format-string/bad.py:1:6: W1302: Invalid format string (bad-format-string)
Exception on node <Const.str l.1 at 0x7f4b80f9fca0> in file '/testbed/doc/data/messages/b/bad-format-string/bad.py'
doc/data/messages/b/bad-format-string/bad.py:1:0: F0001: Fatal error while checking 'doc/data/messages/b/bad-format-string/bad.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/root/.cache/pylint/pylint-crash-2025-10-08-09.txt'. (fatal)
doc/data/messages/b/bare-except/bad.py:3:0: W0702: No exception type(s) specified (bare-except)
doc/data/messages/w/wrong-import-order/bad.py:2:0: E0611: No name 'utils' in module '' (no-name-in-module)
doc/data/messages/w/wrong-import-order/bad.py:3:0: C0411: first party import "import pylint" should be placed before "from . import utils" (wrong-import-order)
doc/data/messages/w/wrong-import-order/bad.py:4:0: C0411: standard import "import sys" should be placed before "import pylint" (wrong-import-order)
doc/data/messages/w/wrong-import-order/bad.py:1:0: W0611: Unused import os (unused-import)
doc/data/messages/w/wrong-import-order/bad.py:2:0: W0611: Unused import utils (unused-import)
doc/data/messages/w/wrong-import-order/bad.py:3:0: W0611: Unused import pylint (unused-import)
doc/data/messages/w/wrong-import-order/bad.py:4:0: W0611: Unused import sys (unused-import)
doc/data/messages/w/wrong-import-order/good.py:6:0: E0611: No name 'utils' in module '' (no-name-in-module)
doc/data/messages/w/wrong-import-order/good.py:1:0: W0611: Unused import os (unused-import)
doc/data/messages/w/wrong-import-order/good.py:2:0: W0611: Unused import sys (unused-import)
doc/data/messages/w/wrong-import-order/good.py:4:0: W0611: Unused import pylint (unused-import)
doc/data/messages/w/wrong-import-order/good.py:6:0: W0611: Unused import utils (unused-import)
doc/data/messages/w/while-used/good.py:4:0: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
doc/data/messages/w/wildcard-import/bad.py:1:0: W0401: Wildcard import abc (wildcard-import)
doc/data/messages/w/wildcard-import/bad.py:1:0: W0614: Unused import(s) abstractmethod, abstractclassmethod, abstractstaticmethod, abstractproperty, ABCMeta, ABC and get_cache_token from wildcard import of abc (unused-wildcard-import)
doc/data/messages/w/wildcard-import/good.py:3:0: W0611: Unused import abc (unused-import)
doc/data/messages/w/wildcard-import/good.py:4:0: W0611: Unused ABC imported from abc (unused-import)
doc/data/messages/w/wildcard-import/good.py:4:0: W0611: Unused abstractmethod imported from abc (unused-import)
doc/data/messages/w/wrong-import-position/bad.py:5:0: C0413: Import "import sys" should be placed at the top of the module (wrong-import-position)
doc/data/messages/n/no-else-break/bad.py:3:8: R1723: Unnecessary "else" after "break", remove the "else" and de-indent the code inside it (no-else-break)
doc/data/messages/n/no-else-return/bad.py:2:4: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
doc/data/messages/n/no-else-continue/bad.py:3:8: R1724: Unnecessary "else" after "continue", remove the "else" and de-indent the code inside it (no-else-continue)
doc/data/messages/n/no-else-raise/bad.py:2:4: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
doc/data/messages/m/missing-format-argument-key/bad.py:1:6: W1303: Missing keyword argument 'last' for format string (missing-format-argument-key)
doc/data/messages/m/missing-format-argument-key/bad.py:1:6: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/m/missing-format-argument-key/good.py:1:6: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/m/missing-param-doc/bad.py:1:0: W9015: "b" missing in parameter documentation (missing-param-doc)
doc/data/messages/m/missing-param-doc/bad.py:1:0: W9016: "b" missing in parameter type documentation (missing-type-doc)
doc/data/messages/m/misplaced-future/bad.py:3:0: W0410: __future__ import is not the first non docstring statement (misplaced-future)
doc/data/messages/m/misplaced-future/bad.py:1:0: W0611: Unused import sys (unused-import)
doc/data/messages/m/misplaced-future/good.py:3:0: W0611: Unused import sys (unused-import)
doc/data/messages/m/missing-yield-doc/good.py:4:33: R6002: 'typing.Iterator' will be deprecated with PY39, consider using 'collections.abc.Iterator' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
doc/data/messages/m/missing-yield-type-doc/good.py:4:33: R6002: 'typing.Iterator' will be deprecated with PY39, consider using 'collections.abc.Iterator' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
doc/data/messages/m/missing-type-doc/bad.py:1:0: W9016: "b" missing in parameter type documentation (missing-type-doc)
doc/data/messages/m/missing-raises-doc/bad.py:1:0: W9006: "ValueError" not documented as being raised (missing-raises-doc)
doc/data/messages/m/method-cache-max-size-none/bad.py:5:5: W1518: 'lru_cache(maxsize=None)' or 'cache' will keep all method args alive indefinitely, including 'self' (method-cache-max-size-none)
doc/data/messages/o/overridden-final-method/bad.py:5:5: W2602: typing.final is not supported by all versions included in the py-version setting (using-final-decorator-in-unsupported-version)
doc/data/messages/o/overridden-final-method/good.py:5:5: W2602: typing.final is not supported by all versions included in the py-version setting (using-final-decorator-in-unsupported-version)
doc/data/messages/t/too-few-format-args/bad.py:1:6: E1306: Not enough arguments for format string (too-few-format-args)
doc/data/messages/t/too-few-format-args/bad.py:1:6: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/t/too-few-format-args/good.py:1:6: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/t/too-many-format-args/bad.py:1:6: E1305: Too many arguments for format string (too-many-format-args)
doc/data/messages/t/too-many-format-args/bad.py:1:6: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/t/too-many-format-args/good.py:1:6: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/t/too-many-arguments/bad.py:1:0: R0913: Too many arguments (13/10) (too-many-arguments)
doc/data/messages/t/too-many-arguments/bad.py:2:4: W0613: Unused argument 'x_white' (unused-argument)
doc/data/messages/t/too-many-arguments/bad.py:3:4: W0613: Unused argument 'y_white' (unused-argument)
doc/data/messages/t/too-many-arguments/bad.py:4:4: W0613: Unused argument 'z_white' (unused-argument)
doc/data/messages/t/too-many-arguments/bad.py:5:4: W0613: Unused argument 'piece_white' (unused-argument)
doc/data/messages/t/too-many-arguments/bad.py:6:4: W0613: Unused argument 'x_black' (unused-argument)
doc/data/messages/t/too-many-arguments/bad.py:7:4: W0613: Unused argument 'y_black' (unused-argument)
doc/data/messages/t/too-many-arguments/bad.py:8:4: W0613: Unused argument 'z_black' (unused-argument)
doc/data/messages/t/too-many-arguments/bad.py:9:4: W0613: Unused argument 'piece_black' (unused-argument)
doc/data/messages/t/too-many-arguments/bad.py:10:4: W0613: Unused argument 'x_blue' (unused-argument)
doc/data/messages/t/too-many-arguments/bad.py:11:4: W0613: Unused argument 'y_blue' (unused-argument)
doc/data/messages/t/too-many-arguments/bad.py:12:4: W0613: Unused argument 'z_blue' (unused-argument)
doc/data/messages/t/too-many-arguments/bad.py:13:4: W0613: Unused argument 'piece_blue' (unused-argument)
doc/data/messages/t/too-many-arguments/bad.py:14:4: W0613: Unused argument 'current_player' (unused-argument)
doc/data/messages/t/too-many-arguments/good.py:13:4: W0613: Unused argument 'white' (unused-argument)
doc/data/messages/t/too-many-arguments/good.py:14:4: W0613: Unused argument 'black' (unused-argument)
doc/data/messages/t/too-many-arguments/good.py:15:4: W0613: Unused argument 'blue' (unused-argument)
doc/data/messages/t/too-many-arguments/good.py:16:4: W0613: Unused argument 'current_player' (unused-argument)
doc/data/messages/t/typevar-double-variance/bad.py:3:0: C0131: TypeVar cannot be both covariant and contravariant (typevar-double-variance)
doc/data/messages/t/typevar-double-variance/bad.py:3:0: C0105: Type variable name does not reflect variance (typevar-name-incorrect-variance)
doc/data/messages/t/typevar-name-mismatch/bad.py:3:0: C0132: TypeVar name "T" does not match assigned variable name "X" (typevar-name-mismatch)
doc/data/messages/t/try-except-raise/bad.py:3:0: W0706: The except handler raises immediately (try-except-raise)
doc/data/messages/t/try-except-raise/good.py:2:0: W0104: Statement seems to have no effect (pointless-statement)
doc/data/messages/r/return-in-init/bad.py:3:4: E0101: Explicit return in __init__ (return-in-init)
doc/data/messages/r/redundant-unittest-assert/bad.py:6:8: W1503: Redundant use of assertTrue with constant value 'foo' (redundant-unittest-assert)
doc/data/messages/r/redefined-loop-name/bad.py:1:12: E0602: Undefined variable 'names' (undefined-variable)
doc/data/messages/r/redefined-loop-name/good.py:1:12: E0602: Undefined variable 'names' (undefined-variable)
doc/data/messages/r/redefined-slots-in-subclass/bad.py:6:16: W0244: Redefined slots ['a'] in subclass (redefined-slots-in-subclass)
doc/data/messages/r/reimported/bad.py:2:0: W0404: Reimport 're' (imported line 1) (reimported)
doc/data/messages/r/reimported/bad.py:1:0: W0611: Unused import re (unused-import)
doc/data/messages/r/reimported/good.py:1:0: W0611: Unused import re (unused-import)
doc/data/messages/c/comparison-with-itself/bad.py:3:11: R0124: Redundant comparison - fruit == fruit (comparison-with-itself)
doc/data/messages/c/comparison-with-itself/bad.py:2:4: W0612: Unused variable 'an_orange' (unused-variable)
doc/data/messages/c/confusing-consecutive-elif/bad.py:3:11: W0141: Used builtin function 'input' (bad-builtin)
doc/data/messages/c/confusing-consecutive-elif/good.py:4:11: W0141: Used builtin function 'input' (bad-builtin)
doc/data/messages/c/confusing-consecutive-elif/good.py:14:7: W0141: Used builtin function 'input' (bad-builtin)
doc/data/messages/c/comparison-of-constants/bad.py:2:11: R0124: Redundant comparison - 42 == 42 (comparison-with-itself)
doc/data/messages/c/comparison-of-constants/bad.py:2:11: R0133: Comparison between constants: '42 == 42' has a constant value (comparison-of-constants)
doc/data/messages/c/consider-using-f-string/bad.py:5:12: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/c/consider-using-f-string/bad.py:8:15: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/c/consider-using-f-string/bad.py:9:21: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
doc/data/messages/c/consider-using-with/bad.py:1:7: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
doc/data/messages/c/catching-non-exception/bad.py:7:7: E0712: Catching an exception which doesn't inherit from Exception: FooError (catching-non-exception)
doc/data/messages/c/comparison-with-callable/bad.py:6:11: W0143: Comparing against a callable, did you omit the parenthesis? (comparison-with-callable)
doc/data/messages/c/cell-var-from-loop/bad.py:1:0: C0104: Disallowed name "foo" (disallowed-name)
doc/data/messages/c/cell-var-from-loop/bad.py:3:8: C0104: Disallowed name "bar" (disallowed-name)
doc/data/messages/c/cell-var-from-loop/bad.py:4:18: W0640: Cell variable i defined in loop (cell-var-from-loop)
doc/data/messages/c/cell-var-from-loop/good.py:1:0: C0104: Disallowed name "bar" (disallowed-name)
doc/data/messages/c/cell-var-from-loop/good.py:5:0: C0104: Disallowed name "foo" (disallowed-name)
doc/data/messages/c/chained-comparison/bad.py:1:8: W0141: Used builtin function 'input' (bad-builtin)
doc/data/messages/c/chained-comparison/bad.py:2:8: W0141: Used builtin function 'input' (bad-builtin)
doc/data/messages/c/chained-comparison/bad.py:3:8: W0141: Used builtin function 'input' (bad-builtin)
doc/data/messages/c/chained-comparison/bad.py:4:3: R1716: Simplify chained comparison between the operands (chained-comparison)
doc/data/messages/c/chained-comparison/good.py:1:8: W0141: Used builtin function 'input' (bad-builtin)
doc/data/messages/c/chained-comparison/good.py:2:8: W0141: Used builtin function 'input' (bad-builtin)
doc/data/messages/c/chained-comparison/good.py:3:8: W0141: Used builtin function 'input' (bad-builtin)
doc/data/messages/c/consider-using-sys-exit/bad.py:2:11: W0141: Used builtin function 'input' (bad-builtin)
doc/data/messages/c/consider-using-sys-exit/bad.py:4:4: R1722: Consider using sys.exit() (consider-using-sys-exit)
doc/data/messages/c/consider-using-sys-exit/good.py:4:11: W0141: Used builtin function 'input' (bad-builtin)
************* Module minimal_messages_config
tests/testutils/data/m/minimal_messages_config.py:8:4: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/testutils/data/m/minimal_messages_config.py:10:6: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
tests/testutils/data/m/minimal_messages_config.py:8:4: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
************* Module logging_format_interpolation_style
tests/config/data/logging_format_interpolation_style.py:9:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/config/data/logging_format_interpolation_style.py:10:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/config/data/logging_format_interpolation_style.py:11:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/config/data/logging_format_interpolation_style.py:12:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/config/data/logging_format_interpolation_style.py:13:0: E1205: Too many arguments for logging format string (logging-too-many-args)
************* Module functional.d.dangerous_default_value
tests/functional/d/dangerous_default_value.py:6:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:10:0: W0102: Dangerous default value HEHE (builtins.dict) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:18:0: W0102: Dangerous default value set() (builtins.set) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:28:0: W0102: Dangerous default value GLOBAL_SET (builtins.set) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:32:0: W0102: Dangerous default value dict() (builtins.dict) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:36:0: W0102: Dangerous default value list() (builtins.list) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:40:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:44:0: W0102: Dangerous default value {} as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:48:0: W0102: Dangerous default value list() (builtins.list) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:52:0: W0102: Dangerous default value dict() (builtins.dict) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:61:0: W0102: Dangerous default value OINK (builtins.dict) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:65:0: W0102: Dangerous default value dict() (builtins.dict) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:73:0: W0102: Dangerous default value INVALID_DICT (builtins.dict) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:77:0: W0102: Dangerous default value set() as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:81:0: W0102: Dangerous default value deque() (collections.deque) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:85:0: W0102: Dangerous default value ChainMap() (collections.ChainMap) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:89:0: W0102: Dangerous default value Counter() (collections.Counter) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:93:0: W0102: Dangerous default value OrderedDict() (collections.OrderedDict) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:97:0: W0102: Dangerous default value defaultdict() (collections.defaultdict) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:101:0: W0102: Dangerous default value UserDict() (collections.UserDict) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:105:0: W0102: Dangerous default value UserList() (collections.UserList) as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:109:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
tests/functional/d/dangerous_default_value.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/d/dangerous_default_value.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.d.defined_and_used_on_same_line
tests/functional/d/defined_and_used_on_same_line.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/d/defined_and_used_on_same_line.py:2:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/d/defined_and_used_on_same_line.py:2:0: I0021: Useless suppression of 'multiple-statements' (useless-suppression)
************* Module functional.d.duplicate_bases
tests/functional/d/duplicate_bases.py:5:0: E0241: Duplicate bases for class 'Duplicates' (duplicate-bases)
tests/functional/d/duplicate_bases.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/d/duplicate_bases.py:2:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/d/duplicate_bases.py:2:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
************* Module functional.d.duplicate_string_formatting_argument
tests/functional/d/duplicate_string_formatting_argument.py:8:8: W1308: Duplicate string formatting argument 'NAME', consider passing as named argument (duplicate-string-formatting-argument)
tests/functional/d/duplicate_string_formatting_argument.py:8:8: W1308: Duplicate string formatting argument 'OTHER_NAME', consider passing as named argument (duplicate-string-formatting-argument)
tests/functional/d/duplicate_string_formatting_argument.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/d/duplicate_string_formatting_argument.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.d.disable_msg_next_line
tests/functional/d/disable_msg_next_line.py:16:11: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
tests/functional/d/disable_msg_next_line.py:15:4: W0612: Unused variable 'x' (unused-variable)
tests/functional/d/disable_msg_next_line.py:19:21: W0613: Unused argument 'arg2' (unused-argument)
tests/functional/d/disable_msg_next_line.py:14:0: I0021: Useless suppression of 'f-string-without-interpolation' (useless-suppression)
************* Module functional.d.disabled_msgid_in_pylintrc
tests/functional/d/disabled_msgid_in_pylintrc.py:5:7: W0703: Catching too general exception Exception (broad-except)
tests/functional/d/disabled_msgid_in_pylintrc.py:4:8: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
************* Module functional.d.dict_iter_missing_items
tests/functional/d/dict_iter_missing_items.py:11:0: E1141: Unpacking a dictionary in iteration without calling .items() (dict-iter-missing-items)
tests/functional/d/dict_iter_missing_items.py:1:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
tests/functional/d/dict_iter_missing_items.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/d/dict_iter_missing_items.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.d.dataclass_with_default_factory
tests/functional/d/dataclass_with_default_factory.py:40:9: E1133: Non-iterable value Test2.int_prop is used in an iterating context (not-an-iterable)
tests/functional/d/dataclass_with_default_factory.py:44:0: E1137: 'Test2.int_prop' does not support item assignment (unsupported-assignment-operation)
************* Module functional.d.disable_wrong_import_order
tests/functional/d/disable_wrong_import_order.py:11:0: C0412: Imports from package first_party are not grouped (ungrouped-imports)
tests/functional/d/disable_wrong_import_order.py:4:0: I0021: Useless suppression of 'no-name-in-module' (useless-suppression)
************* Module functional.d.docstrings
tests/functional/d/docstrings.py:1:0: C0114: Missing module docstring (missing-module-docstring)
tests/functional/d/docstrings.py:6:0: C0112: Empty function docstring (empty-docstring)
tests/functional/d/docstrings.py:10:0: C0116: Missing function or method docstring (missing-function-docstring)
tests/functional/d/docstrings.py:23:0: C0115: Missing class docstring (missing-class-docstring)
tests/functional/d/docstrings.py:40:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/functional/d/docstrings.py:48:4: C0112: Empty method docstring (empty-docstring)
tests/functional/d/docstrings.py:62:4: C0112: Empty method docstring (empty-docstring)
tests/functional/d/docstrings.py:70:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/functional/d/docstrings.py:73:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/d/docstrings.py:73:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.d.dataclass_with_field
tests/functional/d/dataclass_with_field.py:7:0: E0401: Unable to import 'pydantic.dataclasses' (import-error)
tests/functional/d/dataclass_with_field.py:20:11: R6002: 'typing.List' will be deprecated with PY39, consider using 'list' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/d/dataclass_with_field.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/d/dataclass_with_field.py:3:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.d.duplicate_value
tests/functional/d/duplicate_value.py:5:7: W0130: Duplicate value 1 in set (duplicate-value)
tests/functional/d/duplicate_value.py:6:7: W0130: Duplicate value 2 in set (duplicate-value)
tests/functional/d/duplicate_value.py:9:7: W0130: Duplicate value 'one' in set (duplicate-value)
tests/functional/d/duplicate_value.py:10:7: W0130: Duplicate value 'two' in set (duplicate-value)
tests/functional/d/duplicate_value.py:12:12: W0130: Duplicate value True in set (duplicate-value)
tests/functional/d/duplicate_value.py:12:12: W0130: Duplicate value 12 in set (duplicate-value)
tests/functional/d/duplicate_value.py:15:18: W0130: Duplicate value 1 in set (duplicate-value)
tests/functional/d/duplicate_value.py:16:12: W0130: Duplicate value 'arg1' in set (duplicate-value)
tests/functional/d/duplicate_value.py:18:20: W0130: Duplicate value 'arg1' in set (duplicate-value)
tests/functional/d/duplicate_value.py:18:20: W0130: Duplicate value True in set (duplicate-value)
tests/functional/d/duplicate_value.py:1:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
tests/functional/d/duplicate_value.py:1:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.d.disable_ungrouped_imports
tests/functional/d/disable_ungrouped_imports.py:9:0: C0412: Imports from package os are not grouped (ungrouped-imports)
tests/functional/d/disable_ungrouped_imports.py:10:0: C0412: Imports from package logging are not grouped (ungrouped-imports)
tests/functional/d/disable_ungrouped_imports.py:3:0: I0021: Useless suppression of 'wrong-import-position' (useless-suppression)
tests/functional/d/disable_ungrouped_imports.py:3:0: I0021: Useless suppression of 'wrong-import-order' (useless-suppression)
tests/functional/d/disable_ungrouped_imports.py:3:0: I0021: Useless suppression of 'using-constant-test' (useless-suppression)
tests/functional/d/disable_ungrouped_imports.py:4:0: I0021: Useless suppression of 'import-error' (useless-suppression)
tests/functional/d/disable_ungrouped_imports.py:6:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
************* Module functional.d.duplicate_argument_name
tests/functional/d/duplicate_argument_name.py:4:12: E0108: Duplicate argument name _ in function definition (duplicate-argument-name)
tests/functional/d/duplicate_argument_name.py:7:18: E0108: Duplicate argument name _abc in function definition (duplicate-argument-name)
tests/functional/d/duplicate_argument_name.py:10:12: E0108: Duplicate argument name _ in function definition (duplicate-argument-name)
tests/functional/d/duplicate_argument_name.py:13:15: E0108: Duplicate argument name _ in function definition (duplicate-argument-name)
************* Module functional.d.decorator_unused
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'unnecessary-dunder-call' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'bad-file-encoding' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'non-ascii-name' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'non-ascii-module-import' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'typevar-name-incorrect-variance' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'typevar-double-variance' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'typevar-name-mismatch' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'empty-docstring' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'singleton-comparison' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'unidiomatic-typecheck' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'too-many-lines' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'trailing-whitespace' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'missing-final-newline' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'trailing-newlines' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'multiple-statements' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'superfluous-parens' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'mixed-line-endings' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'unexpected-line-ending-format' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'bad-classmethod-argument' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'bad-mcs-method-argument' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'bad-mcs-classmethod-argument' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'single-string-used-for-slots' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'unnecessary-lambda-assignment' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'unnecessary-direct-lambda-call' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'wrong-spelling-in-comment' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'wrong-spelling-in-docstring' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'invalid-characters-in-docstring' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'multiple-imports' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'wrong-import-order' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'wrong-import-position' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'useless-import-alias' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'import-outside-toplevel' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'unneeded-not' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'consider-using-enumerate' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'consider-iterating-dictionary' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'consider-using-dict-items' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'use-maxsplit-arg' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'use-sequence-for-iteration' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'consider-using-f-string' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'use-implicit-booleaness-not-len' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'use-implicit-booleaness-not-comparison' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'consider-using-any-or-all' (useless-suppression)
tests/functional/d/decorator_unused.py:1:0: I0021: Useless suppression of 'misplaced-comparison-constant' (useless-suppression)
************* Module functional.d.duplicate_except
tests/functional/d/duplicate_except.py:9:11: W0705: Catching previously caught exception type ValueError (duplicate-except)
************* Module functional.d.disable_wrong_import_position
tests/functional/d/disable_wrong_import_position.py:5:0: I0021: Useless suppression of 'wrong-import-position' (useless-suppression)
************* Module functional.d.dataclass_typecheck
tests/functional/d/dataclass_typecheck.py:18:11: R6003: Consider using alternative Union syntax instead of 'Optional'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
tests/functional/d/dataclass_typecheck.py:32:6: E1126: Sequence index is not an int, slice, or instance with __index__ (invalid-sequence-index)
tests/functional/d/dataclass_typecheck.py:36:10: E1127: Slice index is not an int, None, or instance with __index__ (invalid-slice-index)
tests/functional/d/dataclass_typecheck.py:39:0: E1102: obj.attr1 is not callable (not-callable)
tests/functional/d/dataclass_typecheck.py:44:6: E1130: bad operand type for unary -: str (invalid-unary-operand-type)
tests/functional/d/dataclass_typecheck.py:51:11: E1135: Value 'obj.attr1' doesn't support membership test (unsupported-membership-test)
tests/functional/d/dataclass_typecheck.py:56:6: E1136: Value 'obj.attr1' is unsubscriptable (unsubscriptable-object)
tests/functional/d/dataclass_typecheck.py:61:0: E1137: 'obj.attr1' does not support item assignment (unsupported-assignment-operation)
tests/functional/d/dataclass_typecheck.py:66:4: E1138: 'obj.attr1' does not support item deletion (unsupported-delete-operation)
tests/functional/d/dataclass_typecheck.py:81:11: R6003: Consider using alternative Union syntax instead of 'Optional'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
tests/functional/d/dataclass_typecheck.py:91:0: E1129: Context manager 'str' doesn't implement __enter__ and __exit__. (not-context-manager)
tests/functional/d/dataclass_typecheck.py:99:0: E1139: Invalid metaclass 'Instance of builtins.int' used (invalid-metaclass)
tests/functional/d/dataclass_typecheck.py:105:0: E1140: Dict key is unhashable (unhashable-dict-key)
tests/functional/d/dataclass_typecheck.py:115:6: W1116: Second argument of isinstance is not a type (isinstance-second-argument-not-valid-type)
tests/functional/d/dataclass_typecheck.py:112:0: R0204: Redefinition of __name__ type from int to str (redefined-variable-type)
tests/functional/d/dataclass_typecheck.py:22:11: R6002: 'typing.Callable' will be deprecated with PY39, consider using 'collections.abc.Callable' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/d/dataclass_typecheck.py:23:11: R6002: 'typing.List' will be deprecated with PY39, consider using 'list' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/d/dataclass_typecheck.py:24:11: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/d/dataclass_typecheck.py:5:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/d/dataclass_typecheck.py:5:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/d/dataclass_typecheck.py:5:0: I0021: Useless suppression of 'pointless-statement' (useless-suppression)
tests/functional/d/dataclass_typecheck.py:5:0: I0021: Useless suppression of 'fixme' (useless-suppression)
************* Module functional.d.disable_msg_github_issue_1389
tests/functional/d/disable_msg_github_issue_1389.py:15:10: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/d/disable_msg_github_issue_1389.py:15:23: R6002: 'typing.Set' will be deprecated with PY39, consider using 'set' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/d/disable_msg_github_issue_1389.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/d/disable_msg_github_issue_1389.py:1:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
tests/functional/d/disable_msg_github_issue_1389.py:5:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
tests/functional/d/disable_msg_github_issue_1389.py:6:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
************* Module functional.d.duplicate_argument_name_py3
tests/functional/d/duplicate_argument_name_py3.py:4:16: E0108: Duplicate argument name _ in function definition (duplicate-argument-name)
************* Module functional.d.duplicate_dict_literal_key
tests/functional/d/duplicate_dict_literal_key.py:18:18: W0109: Duplicate key 'MyEnum.KEY' in dictionary (duplicate-key)
tests/functional/d/duplicate_dict_literal_key.py:23:13: W0109: Duplicate key 'tea' in dictionary (duplicate-key)
tests/functional/d/duplicate_dict_literal_key.py:30:0: W0109: Duplicate key 1 in dictionary (duplicate-key)
tests/functional/d/duplicate_dict_literal_key.py:31:0: W0109: Duplicate key 1.0 in dictionary (duplicate-key)
************* Module functional.y.yield_outside_func
tests/functional/y/yield_outside_func.py:4:0: E0105: Yield outside function (yield-outside-function)
************* Module functional.y.yield_inside_async_function
tests/functional/y/yield_inside_async_function.py:16:4: E1700: Yield inside async function (yield-inside-async-function)
tests/functional/y/yield_inside_async_function.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/y/yield_inside_async_function.py:2:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.y.yield_from_iterable
tests/functional/y/yield_from_iterable.py:7:15: E1133: Non-iterable value 10 is used in an iterating context (not-an-iterable)
tests/functional/y/yield_from_iterable.py:4:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/y/yield_from_iterable.py:4:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.y.yield_from_outside_func
tests/functional/y/yield_from_outside_func.py:4:0: E0105: Yield outside function (yield-outside-function)
************* Module functional.e.exception_is_binary_op
tests/functional/e/exception_is_binary_op.py:5:0: W0711: Exception to catch is the result of a binary "or" operation (binary-op-exception)
tests/functional/e/exception_is_binary_op.py:7:0: W0711: Exception to catch is the result of a binary "and" operation (binary-op-exception)
tests/functional/e/exception_is_binary_op.py:9:0: W0711: Exception to catch is the result of a binary "or" operation (binary-op-exception)
tests/functional/e/exception_is_binary_op.py:11:0: W0711: Exception to catch is the result of a binary "or" operation (binary-op-exception)
************* Module functional.e.enum_self_defined_member_5138
tests/functional/e/enum_self_defined_member_5138.py:25:34: E1101: Instance of 'Day' has no 'foo' member (no-member)
tests/functional/e/enum_self_defined_member_5138.py:29:6: E1101: Instance of 'FRIDAY' has no 'foo' member (no-member)
tests/functional/e/enum_self_defined_member_5138.py:46:6: E1101: Instance of 'MILE' has no 'foo' member (no-member)
tests/functional/e/enum_self_defined_member_5138.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/e/enum_self_defined_member_5138.py:2:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.e.empty_docstring
tests/functional/e/empty_docstring.py:1:0: C0112: Empty module docstring (empty-docstring)
tests/functional/e/empty_docstring.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.e.excess_escapes
tests/functional/e/excess_escapes.py:8:5: W1401: Anomalous backslash in string: '\['. String constant might be missing an r prefix. (anomalous-backslash-in-string)
tests/functional/e/excess_escapes.py:8:7: W1401: Anomalous backslash in string: '\]'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
tests/functional/e/excess_escapes.py:9:8: W1401: Anomalous backslash in string: '\/'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
tests/functional/e/excess_escapes.py:10:20: W1401: Anomalous backslash in string: '\`'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
tests/functional/e/excess_escapes.py:17:15: W1401: Anomalous backslash in string: '\o'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
tests/functional/e/excess_escapes.py:17:20: W1401: Anomalous backslash in string: '\o'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
tests/functional/e/excess_escapes.py:19:13: W1401: Anomalous backslash in string: '\8'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
tests/functional/e/excess_escapes.py:19:17: W1401: Anomalous backslash in string: '\9'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
tests/functional/e/excess_escapes.py:32:42: W1401: Anomalous backslash in string: '\P'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
tests/functional/e/excess_escapes.py:1:0: I0021: Useless suppression of 'pointless-string-statement' (useless-suppression)
tests/functional/e/excess_escapes.py:1:0: I0021: Useless suppression of 'fixme' (useless-suppression)
************* Module functional.e.eval_used
tests/functional/e/eval_used.py:3:0: W0123: Use of eval (eval-used)
tests/functional/e/eval_used.py:4:0: W0123: Use of eval (eval-used)
tests/functional/e/eval_used.py:6:0: W0123: Use of eval (eval-used)
tests/functional/e/eval_used.py:10:4: W0123: Use of eval (eval-used)
************* Module functional.e.exec_used
tests/functional/e/exec_used.py:3:0: W0122: Use of exec (exec-used)
tests/functional/e/exec_used.py:4:0: W0122: Use of exec (exec-used)
tests/functional/e/exec_used.py:6:0: W0122: Use of exec (exec-used)
tests/functional/e/exec_used.py:9:4: W0122: Use of exec (exec-used)
tests/functional/e/exec_used.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.l.logging_format_interpolation_py36
tests/functional/l/logging_format_interpolation_py36.py:5:0: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module functional.l.logging_too_many_args
tests/functional/l/logging_too_many_args.py:4:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/functional/l/logging_too_many_args.py:5:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/functional/l/logging_too_many_args.py:6:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/functional/l/logging_too_many_args.py:7:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/functional/l/logging_too_many_args.py:8:0: E1205: Too many arguments for logging format string (logging-too-many-args)
************* Module functional.l.logging_not_lazy
tests/functional/l/logging_not_lazy.py:11:0: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
tests/functional/l/logging_not_lazy.py:12:0: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
tests/functional/l/logging_not_lazy.py:13:0: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
tests/functional/l/logging_not_lazy.py:14:0: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
tests/functional/l/logging_not_lazy.py:15:0: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
tests/functional/l/logging_not_lazy.py:16:0: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
tests/functional/l/logging_not_lazy.py:27:4: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
tests/functional/l/logging_not_lazy.py:27:4: W1302: Invalid format string (bad-format-string)
tests/functional/l/logging_not_lazy.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/l/logging_not_lazy.py:2:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/l/logging_not_lazy.py:2:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.l.logging_format_interpolation_style
tests/functional/l/logging_format_interpolation_style.py:7:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/functional/l/logging_format_interpolation_style.py:8:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/functional/l/logging_format_interpolation_style.py:9:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/functional/l/logging_format_interpolation_style.py:10:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/functional/l/logging_format_interpolation_style.py:11:0: E1205: Too many arguments for logging format string (logging-too-many-args)
************* Module functional.l.lost_exception
tests/functional/l/lost_exception.py:14:16: W0150: break statement in finally block may swallow exception (lost-exception)
tests/functional/l/lost_exception.py:15:12: W0150: return statement in finally block may swallow exception (lost-exception)
tests/functional/l/lost_exception.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.l.line_too_long_end_of_module
tests/functional/l/line_too_long_end_of_module.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/l/line_too_long_end_of_module.py:1:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.l.loopvar_in_dict_comp
tests/functional/l/loopvar_in_dict_comp.py:8:23: W0640: Cell variable x defined in loop (cell-var-from-loop)
************* Module functional.l.literal_comparison
tests/functional/l/literal_comparison.py:4:3: R0133: Comparison between constants: '2 is 2' has a constant value (comparison-of-constants)
tests/functional/l/literal_comparison.py:4:3: R0123: Comparison to literal (literal-comparison)
tests/functional/l/literal_comparison.py:7:3: R0133: Comparison between constants: 'a is b'a'' has a constant value (comparison-of-constants)
tests/functional/l/literal_comparison.py:7:3: R0123: Comparison to literal (literal-comparison)
tests/functional/l/literal_comparison.py:10:3: R0133: Comparison between constants: '2.0 is 3.0' has a constant value (comparison-of-constants)
tests/functional/l/literal_comparison.py:10:3: R0123: Comparison to literal (literal-comparison)
tests/functional/l/literal_comparison.py:16:3: R0123: Comparison to literal (literal-comparison)
tests/functional/l/literal_comparison.py:19:3: R0123: Comparison to literal (literal-comparison)
tests/functional/l/literal_comparison.py:22:3: R0123: Comparison to literal (literal-comparison)
tests/functional/l/literal_comparison.py:25:3: R0123: Comparison to literal (literal-comparison)
tests/functional/l/literal_comparison.py:28:3: R0123: Comparison to literal (literal-comparison)
tests/functional/l/literal_comparison.py:31:3: R0123: Comparison to literal (literal-comparison)
tests/functional/l/literal_comparison.py:38:3: R0123: Comparison to literal (literal-comparison)
tests/functional/l/literal_comparison.py:41:3: R0123: Comparison to literal (literal-comparison)
tests/functional/l/literal_comparison.py:44:3: R0123: Comparison to literal (literal-comparison)
tests/functional/l/literal_comparison.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.l.line_too_long
tests/functional/l/line_too_long.py:1:0: I0021: Useless suppression of 'fixme' (useless-suppression)
tests/functional/l/line_too_long.py:24:0: I0021: Useless suppression of 'fixme' (useless-suppression)
tests/functional/l/line_too_long.py:27:0: I0021: Useless suppression of 'fixme' (useless-suppression)
tests/functional/l/line_too_long.py:53:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
tests/functional/l/line_too_long.py:77:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.l.logging_fstring_interpolation_py36
tests/functional/l/logging_fstring_interpolation_py36.py:17:0: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
tests/functional/l/logging_fstring_interpolation_py36.py:18:0: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
tests/functional/l/logging_fstring_interpolation_py36.py:19:0: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
tests/functional/l/logging_fstring_interpolation_py36.py:20:0: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
tests/functional/l/logging_fstring_interpolation_py36.py:21:0: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module functional.l.logical_tautology
tests/functional/l/logical_tautology.py:6:7: R0124: Redundant comparison - arg == arg (comparison-with-itself)
tests/functional/l/logical_tautology.py:8:9: R0124: Redundant comparison - arg != arg (comparison-with-itself)
tests/functional/l/logical_tautology.py:10:9: R0124: Redundant comparison - arg > arg (comparison-with-itself)
tests/functional/l/logical_tautology.py:12:9: R0124: Redundant comparison - arg <= arg (comparison-with-itself)
tests/functional/l/logical_tautology.py:14:9: R0124: Redundant comparison - None == None (comparison-with-itself)
tests/functional/l/logical_tautology.py:14:9: R0133: Comparison between constants: 'None == None' has a constant value (comparison-of-constants)
tests/functional/l/logical_tautology.py:16:9: R0124: Redundant comparison - 786 == 786 (comparison-with-itself)
tests/functional/l/logical_tautology.py:16:9: R0133: Comparison between constants: '786 == 786' has a constant value (comparison-of-constants)
tests/functional/l/logical_tautology.py:18:9: R0124: Redundant comparison - 786 is 786 (comparison-with-itself)
tests/functional/l/logical_tautology.py:18:9: R0133: Comparison between constants: '786 is 786' has a constant value (comparison-of-constants)
tests/functional/l/logical_tautology.py:20:9: R0124: Redundant comparison - 786 is not 786 (comparison-with-itself)
tests/functional/l/logical_tautology.py:20:9: R0133: Comparison between constants: '786 is not 786' has a constant value (comparison-of-constants)
tests/functional/l/logical_tautology.py:22:9: R0124: Redundant comparison - arg is arg (comparison-with-itself)
tests/functional/l/logical_tautology.py:24:9: R0124: Redundant comparison - arg is not arg (comparison-with-itself)
tests/functional/l/logical_tautology.py:26:9: R0124: Redundant comparison - True is True (comparison-with-itself)
tests/functional/l/logical_tautology.py:26:9: R0133: Comparison between constants: 'True is True' has a constant value (comparison-of-constants)
tests/functional/l/logical_tautology.py:28:9: R0133: Comparison between constants: '666 == 786' has a constant value (comparison-of-constants)
tests/functional/l/logical_tautology.py:36:18: R0124: Redundant comparison - arg != arg (comparison-with-itself)
tests/functional/l/logical_tautology.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/l/logical_tautology.py:2:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/l/logical_tautology.py:2:0: I0021: Useless suppression of 'inconsistent-return-statements' (useless-suppression)
tests/functional/l/logical_tautology.py:2:0: I0021: Useless suppression of 'too-many-branches' (useless-suppression)
************* Module functional.l.logging_fstring_interpolation_py37
tests/functional/l/logging_fstring_interpolation_py37.py:5:0: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module functional.l.logging_not_lazy_with_logger
tests/functional/l/logging_not_lazy_with_logger.py:9:0: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
tests/functional/l/logging_not_lazy_with_logger.py:10:0: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
tests/functional/l/logging_not_lazy_with_logger.py:12:0: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
tests/functional/l/logging_not_lazy_with_logger.py:14:0: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
************* Module functional.l.logging_format_interpolation
tests/functional/l/logging_format_interpolation.py:16:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
tests/functional/l/logging_format_interpolation.py:17:43: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
tests/functional/l/logging_format_interpolation.py:18:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
tests/functional/l/logging_format_interpolation.py:19:43: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
tests/functional/l/logging_format_interpolation.py:20:21: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
tests/functional/l/logging_format_interpolation.py:36:19: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
tests/functional/l/logging_format_interpolation.py:37:0: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
tests/functional/l/logging_format_interpolation.py:1:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
tests/functional/l/logging_format_interpolation.py:2:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
tests/functional/l/logging_format_interpolation.py:2:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/l/logging_format_interpolation.py:2:0: I0021: Useless suppression of 'wrong-import-position' (useless-suppression)
************* Module functional.l.logging_too_few_args
tests/functional/l/logging_too_few_args.py:5:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/functional/l/logging_too_few_args.py:6:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/functional/l/logging_too_few_args.py:7:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/functional/l/logging_too_few_args.py:8:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/functional/l/logging_too_few_args.py:9:0: E1205: Too many arguments for logging format string (logging-too-many-args)
tests/functional/l/logging_too_few_args.py:10:0: E1205: Too many arguments for logging format string (logging-too-many-args)
************* Module functional.s.subclassed_final_class_py38
tests/functional/s/subclassed_final_class_py38.py:9:1: W2602: typing.final is not supported by all versions included in the py-version setting (using-final-decorator-in-unsupported-version)
tests/functional/s/subclassed_final_class_py38.py:4:0: I0021: Useless suppression of 'useless-object-inheritance' (useless-suppression)
tests/functional/s/subclassed_final_class_py38.py:4:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/s/subclassed_final_class_py38.py:4:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.s.simplify_chained_comparison
tests/functional/s/simplify_chained_comparison.py:10:11: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:15:11: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:23:7: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:25:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:27:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:29:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:31:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:33:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:37:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:39:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:41:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:43:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:45:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:47:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:49:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:51:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:53:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:55:9: R1716: Simplify chained comparison between the operands (chained-comparison)
tests/functional/s/simplify_chained_comparison.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/s/simplify_chained_comparison.py:3:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/s/simplify_chained_comparison.py:3:0: I0021: Useless suppression of 'no-else-return' (useless-suppression)
tests/functional/s/simplify_chained_comparison.py:3:0: I0021: Useless suppression of 'too-many-branches' (useless-suppression)
************* Module functional.s.subprocess_run_check
tests/functional/s/subprocess_run_check.py:6:0: W1510: Using subprocess.run without explicitly set `check` is not recommended. (subprocess-run-check)
tests/functional/s/subprocess_run_check.py:1:0: I0021: Useless suppression of 'disallowed-name' (useless-suppression)
tests/functional/s/subprocess_run_check.py:1:0: I0021: Useless suppression of 'no-value-for-parameter' (useless-suppression)
tests/functional/s/subprocess_run_check.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/s/subprocess_run_check.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.s.suspicious_str_strip_call
tests/functional/s/suspicious_str_strip_call.py:8:0: E1310: Suspicious argument in str.strip call (bad-str-strip-call)
tests/functional/s/suspicious_str_strip_call.py:9:0: E1310: Suspicious argument in str.lstrip call (bad-str-strip-call)
tests/functional/s/suspicious_str_strip_call.py:10:0: E1310: Suspicious argument in bytes.rstrip call (bad-str-strip-call)
************* Module functional.s.subprocess_popen_preexec_fn
tests/functional/s/subprocess_popen_preexec_fn.py:9:0: W1509: Using preexec_fn keyword which may be unsafe in the presence of threads (subprocess-popen-preexec-fn)
tests/functional/s/subprocess_popen_preexec_fn.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.s.shallow_copy_environ
tests/functional/s/shallow_copy_environ.py:7:0: W1507: Using copy.copy(os.environ). Use os.environ.copy() instead.  (shallow-copy-environ)
tests/functional/s/shallow_copy_environ.py:17:0: W1507: Using copy.copy(os.environ). Use os.environ.copy() instead.  (shallow-copy-environ)
tests/functional/s/shallow_copy_environ.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
************* Module functional.s.superfluous_parens
tests/functional/s/superfluous_parens.py:14:10: R6201: Consider using set for membership test (use-set-for-membership)
tests/functional/s/superfluous_parens.py:16:13: R6201: Consider using set for membership test (use-set-for-membership)
tests/functional/s/superfluous_parens.py:48:32: R6201: Consider using set for membership test (use-set-for-membership)
tests/functional/s/superfluous_parens.py:2:0: I0021: Useless suppression of 'fixme' (useless-suppression)
************* Module functional.s.stop_iteration_inside_generator
tests/functional/s/stop_iteration_inside_generator.py:24:4: R1708: Do not raise StopIteration in generator, use return statement instead (stop-iteration-return)
tests/functional/s/stop_iteration_inside_generator.py:32:4: R1708: Do not raise StopIteration in generator, use return statement instead (stop-iteration-return)
tests/functional/s/stop_iteration_inside_generator.py:39:14: R1708: Do not raise StopIteration in generator, use return statement instead (stop-iteration-return)
tests/functional/s/stop_iteration_inside_generator.py:59:18: R1708: Do not raise StopIteration in generator, use return statement instead (stop-iteration-return)
tests/functional/s/stop_iteration_inside_generator.py:72:12: R1708: Do not raise StopIteration in generator, use return statement instead (stop-iteration-return)
tests/functional/s/stop_iteration_inside_generator.py:87:18: R1708: Do not raise StopIteration in generator, use return statement instead (stop-iteration-return)
tests/functional/s/stop_iteration_inside_generator.py:129:10: R1708: Do not raise StopIteration in generator, use return statement instead (stop-iteration-return)
tests/functional/s/stop_iteration_inside_generator.py:4:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/s/stop_iteration_inside_generator.py:4:0: I0021: Useless suppression of 'import-error' (useless-suppression)
tests/functional/s/stop_iteration_inside_generator.py:4:0: I0021: Useless suppression of 'not-callable' (useless-suppression)
tests/functional/s/stop_iteration_inside_generator.py:112:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
************* Module functional.s.slots_checks
tests/functional/s/slots_checks.py:36:0: E0238: Invalid __slots__ object (invalid-slots)
tests/functional/s/slots_checks.py:39:0: E0238: Invalid __slots__ object (invalid-slots)
tests/functional/s/slots_checks.py:43:22: E0236: Invalid object '2' in __slots__, must contain only non empty strings (invalid-slots-object)
tests/functional/s/slots_checks.py:45:0: E0238: Invalid __slots__ object (invalid-slots)
tests/functional/s/slots_checks.py:49:27: E0236: Invalid object "''" in __slots__, must contain only non empty strings (invalid-slots-object)
tests/functional/s/slots_checks.py:51:0: C0205: Class __slots__ should be a non-string iterable (single-string-used-for-slots)
tests/functional/s/slots_checks.py:54:0: C0205: Class __slots__ should be a non-string iterable (single-string-used-for-slots)
tests/functional/s/slots_checks.py:57:0: C0205: Class __slots__ should be a non-string iterable (single-string-used-for-slots)
tests/functional/s/slots_checks.py:61:17: E0236: Invalid object 'str' in __slots__, must contain only non empty strings (invalid-slots-object)
tests/functional/s/slots_checks.py:64:17: E0236: Invalid object '1 + 2 + 3' in __slots__, must contain only non empty strings (invalid-slots-object)
tests/functional/s/slots_checks.py:91:17: E0242: Value 'first' in slots conflicts with class variable (class-variable-slots-conflict)
tests/functional/s/slots_checks.py:91:36: E0242: Value 'third' in slots conflicts with class variable (class-variable-slots-conflict)
tests/functional/s/slots_checks.py:91:45: E0242: Value 'fourth' in slots conflicts with class variable (class-variable-slots-conflict)
tests/functional/s/slots_checks.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/s/slots_checks.py:4:0: I0021: Useless suppression of 'wrong-import-position' (useless-suppression)
tests/functional/s/slots_checks.py:4:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.s.signature_differs
tests/functional/s/signature_differs.py:21:4: W0222: Signature differs from overridden 'abcd' method (signature-differs)
tests/functional/s/signature_differs.py:1:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
************* Module functional.s.statement_without_effect
tests/functional/s/statement_without_effect.py:5:0: W0105: String statement has no effect (pointless-string-statement)
tests/functional/s/statement_without_effect.py:9:0: W0104: Statement seems to have no effect (pointless-statement)
tests/functional/s/statement_without_effect.py:11:0: W0104: Statement seems to have no effect (pointless-statement)
tests/functional/s/statement_without_effect.py:15:0: W0104: Statement seems to have no effect (pointless-statement)
tests/functional/s/statement_without_effect.py:18:0: W0105: String statement has no effect (pointless-string-statement)
tests/functional/s/statement_without_effect.py:23:0: W0106: Expression "list() and tuple()" is assigned to nothing (expression-not-assigned)
tests/functional/s/statement_without_effect.py:30:0: W0106: Expression "ANSWER == to_be()" is assigned to nothing (expression-not-assigned)
tests/functional/s/statement_without_effect.py:32:0: W0106: Expression "to_be() or not to_be()" is assigned to nothing (expression-not-assigned)
tests/functional/s/statement_without_effect.py:33:0: W0106: Expression "to_be().title" is assigned to nothing (expression-not-assigned)
tests/functional/s/statement_without_effect.py:58:8: W0105: String statement has no effect (pointless-string-statement)
tests/functional/s/statement_without_effect.py:65:8: W0105: String statement has no effect (pointless-string-statement)
************* Module functional.s.statement_without_effect_py36
tests/functional/s/statement_without_effect_py36.py:18:4: W0105: String statement has no effect (pointless-string-statement)
************* Module functional.s.singledispatch_functions
tests/functional/s/singledispatch_functions.py:60:4: W0612: Unused variable 'unused' (unused-variable)
tests/functional/s/singledispatch_functions.py:65:24: W0613: Unused argument 'arg' (unused-argument)
tests/functional/s/singledispatch_functions.py:70:24: W0613: Unused argument 'arg' (unused-argument)
tests/functional/s/singledispatch_functions.py:75:0: E0102: function already defined line 70 (function-redefined)
tests/functional/s/singledispatch_functions.py:75:24: W0613: Unused argument 'arg' (unused-argument)
tests/functional/s/singledispatch_functions.py:1:0: I0021: Useless suppression of 'assignment-from-no-return' (useless-suppression)
tests/functional/s/singledispatch_functions.py:2:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
tests/functional/s/singledispatch_functions.py:2:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
************* Module functional.s.sys_stream_regression_1004
tests/functional/s/sys_stream_regression_1004.py:6:0: E1101: Instance of 'TextIOWrapper' has no 'buff' member (no-member)
tests/functional/s/sys_stream_regression_1004.py:7:0: E1101: Instance of 'BufferedWriter' has no 'write1' member; maybe 'write'? (no-member)
tests/functional/s/sys_stream_regression_1004.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/s/sys_stream_regression_1004.py:2:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/s/sys_stream_regression_1004.py:2:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.s.singleton_comparison
tests/functional/s/singleton_comparison.py:4:4: C0121: Comparison 'x == None' should be 'x is None' (singleton-comparison)
tests/functional/s/singleton_comparison.py:5:4: C0121: Comparison 'x == True' should be 'x is True' if checking for the singleton value True, or 'bool(x)' if testing for truthiness (singleton-comparison)
tests/functional/s/singleton_comparison.py:6:4: C0121: Comparison 'x == False' should be 'x is False' if checking for the singleton value False, or 'not x' if testing for falsiness (singleton-comparison)
tests/functional/s/singleton_comparison.py:7:4: C0121: Comparison 'True == True' should be 'True is True' if checking for the singleton value True, or 'bool(True)' if testing for truthiness (singleton-comparison)
tests/functional/s/singleton_comparison.py:11:4: C0121: Comparison 'None == x' should be 'None is x' (singleton-comparison)
tests/functional/s/singleton_comparison.py:11:4: C2201: Comparison should be x == None (misplaced-comparison-constant)
tests/functional/s/singleton_comparison.py:12:5: C0121: Comparison 'True == x' should be 'True is x' if checking for the singleton value True, or 'bool(x)' if testing for truthiness (singleton-comparison)
tests/functional/s/singleton_comparison.py:12:5: C2201: Comparison should be x == True (misplaced-comparison-constant)
tests/functional/s/singleton_comparison.py:13:5: C0121: Comparison 'False == x' should be 'False is x' if checking for the singleton value False, or 'not x' if testing for falsiness (singleton-comparison)
tests/functional/s/singleton_comparison.py:13:5: C2201: Comparison should be x == False (misplaced-comparison-constant)
tests/functional/s/singleton_comparison.py:15:4: C0121: Comparison 'x != True' should be 'x is not True' if checking for the singleton value True, or 'not x' if testing for falsiness (singleton-comparison)
tests/functional/s/singleton_comparison.py:16:5: C0121: Comparison 'x != False' should be 'x is not False' if checking for the singleton value False, or 'bool(x)' if testing for truthiness (singleton-comparison)
tests/functional/s/singleton_comparison.py:17:5: C0121: Comparison 'x != None' should be 'x is not None' (singleton-comparison)
tests/functional/s/singleton_comparison.py:18:7: C0121: Comparison 'x == True' should be 'x is True' if checking for the singleton value True, or 'x' if testing for truthiness (singleton-comparison)
tests/functional/s/singleton_comparison.py:19:7: C0121: Comparison 'x != False' should be 'x is not False' if checking for the singleton value False, or 'x' if testing for truthiness (singleton-comparison)
tests/functional/s/singleton_comparison.py:20:3: C0121: Comparison 'x == True' should be 'x is True' if checking for the singleton value True, or 'x' if testing for truthiness (singleton-comparison)
tests/functional/s/singleton_comparison.py:22:9: C0121: Comparison 'x == True' should be 'x is True' if checking for the singleton value True, or 'x' if testing for truthiness (singleton-comparison)
tests/functional/s/singleton_comparison.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/s/singleton_comparison.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.g.globals
tests/functional/g/globals.py:5:0: W0604: Using the global statement at the module level (global-at-module-level)
tests/functional/g/globals.py:6:6: E0602: Undefined variable 'CSTE' (undefined-variable)
tests/functional/g/globals.py:17:4: W0603: Using the global statement (global-statement)
tests/functional/g/globals.py:24:4: W0602: Using global for 'HOP' but no assignment is done (global-variable-not-assigned)
tests/functional/g/globals.py:25:10: E0602: Undefined variable 'HOP' (undefined-variable)
tests/functional/g/globals.py:30:4: W0601: Global variable 'SOMEVAR' undefined at the module level (global-variable-undefined)
tests/functional/g/globals.py:36:4: W0603: Using the global statement (global-statement)
tests/functional/g/globals.py:42:4: W0602: Using global for 'CONSTANT' but no assignment is done (global-variable-not-assigned)
tests/functional/g/globals.py:48:4: W0603: Using the global statement (global-statement)
tests/functional/g/globals.py:55:4: W0603: Using the global statement (global-statement)
tests/functional/g/globals.py:62:4: W0603: Using the global statement (global-statement)
tests/functional/g/globals.py:72:4: W0603: Using the global statement (global-statement)
tests/functional/g/globals.py:81:4: W0603: Using the global statement (global-statement)
tests/functional/g/globals.py:87:4: W0603: Using the global statement (global-statement)
************* Module functional.g.generated_members
tests/functional/g/generated_members.py:10:6: E1101: Instance of 'Klass' has no 'DoesNotExist' member (no-member)
tests/functional/g/generated_members.py:11:6: E1101: Instance of 'Klass' has no 'aBC_set1' member (no-member)
tests/functional/g/generated_members.py:12:6: E1101: Instance of 'Klass' has no 'ham' member (no-member)
tests/functional/g/generated_members.py:13:6: E1101: Instance of 'Klass' has no 'spam' member (no-member)
tests/functional/g/generated_members.py:15:0: E1101: Module 'pylint.checkers.base' has no 'doesnotexist' member (no-member)
tests/functional/g/generated_members.py:19:0: E1101: Instance of 'Klass' has no 'rollback' member (no-member)
tests/functional/g/generated_members.py:20:0: E1101: Instance of 'Klass' has no 'rollback' member (no-member)
tests/functional/g/generated_members.py:2:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
************* Module functional.g.genexp_in_class_scope
tests/functional/g/genexp_in_class_scope.py:1:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/g/genexp_in_class_scope.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.g.genexpr_variable_scope
tests/functional/g/genexpr_variable_scope.py:5:6: E0602: Undefined variable 'n' (undefined-variable)
************* Module functional.g.generic_alias.generic_alias_related_py39
tests/functional/g/generic_alias/generic_alias_related_py39.py:36:0: E1136: Value 'ClsUnsubscriptable()' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_related_py39.py:37:0: E1136: Value 'ClsUnsubscriptable' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_related_py39.py:40:0: E1136: Value 'ClsGetItem' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_related_py39.py:42:0: E1136: Value 'ClsClassGetItem()' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_related_py39.py:55:0: W0223: Method 'abstract_method' is abstract in class 'ClsAbstract' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_related_py39.py:32:14: R6002: 'typing.List' will be deprecated with PY39, consider using 'list' instead (consider-using-alias)
tests/functional/g/generic_alias/generic_alias_related_py39.py:9:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_related_py39.py:10:0: I0021: Useless suppression of 'multiple-statements' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_related_py39.py:10:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.g.generic_alias.generic_alias_related
tests/functional/g/generic_alias/generic_alias_related.py:34:0: E1136: Value 'ClsUnsubscriptable()' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_related.py:35:0: E1136: Value 'ClsUnsubscriptable' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_related.py:38:0: E1136: Value 'ClsGetItem' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_related.py:40:0: E1136: Value 'ClsClassGetItem()' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_related.py:53:0: W0223: Method 'abstract_method' is abstract in class 'ClsAbstract' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_related.py:30:14: R6002: 'typing.List' will be deprecated with PY39, consider using 'list' instead (consider-using-alias)
tests/functional/g/generic_alias/generic_alias_related.py:9:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_related.py:10:0: I0021: Useless suppression of 'multiple-statements' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_related.py:10:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.g.generic_alias.generic_alias_postponed_evaluation_py37
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:74:0: E1136: Value 'collections.abc.Hashable' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:75:0: E1136: Value 'collections.abc.Sized' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:82:0: W0223: Method '__hash__' is abstract in class 'Hashable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:85:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:88:0: W0223: Method '__contains__' is abstract in class 'Container' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:88:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:88:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:107:0: W0223: Method '__hash__' is abstract in class 'Hashable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:107:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:112:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:112:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:114:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:114:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:188:8: E1136: Value 'A' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:7:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:7:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:8:0: I0021: Useless suppression of 'multiple-statements' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py:8:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.g.generic_alias.generic_alias_collections_py37_with_typing
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:71:0: E1136: Value 'collections.abc.Hashable' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:72:0: E1136: Value 'collections.abc.Sized' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:79:0: W0223: Method '__hash__' is abstract in class 'Hashable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:82:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:85:0: W0223: Method '__contains__' is abstract in class 'Container' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:85:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:85:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:104:0: W0223: Method '__hash__' is abstract in class 'Hashable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:104:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:109:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:109:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:111:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:111:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:130:9: E1136: Value 'int' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:131:15: E1136: Value 'collections.abc.Hashable' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:132:12: E1136: Value 'collections.abc.Sized' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:7:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:7:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:8:0: I0021: Useless suppression of 'multiple-statements' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py:8:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.g.generic_alias.generic_alias_mixed_py39
tests/functional/g/generic_alias/generic_alias_mixed_py39.py:29:0: W0223: Method '__hash__' is abstract in class 'Hashable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_mixed_py39.py:32:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_mixed_py39.py:35:0: W0223: Method '__contains__' is abstract in class 'Container' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_mixed_py39.py:35:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_mixed_py39.py:35:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_mixed_py39.py:29:22: R6002: 'typing.Hashable' will be deprecated with PY39, consider using 'collections.abc.Hashable' instead (consider-using-alias)
tests/functional/g/generic_alias/generic_alias_mixed_py39.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_mixed_py39.py:3:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_mixed_py39.py:3:0: I0021: Useless suppression of 'pointless-statement' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_mixed_py39.py:4:0: I0021: Useless suppression of 'multiple-statements' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_mixed_py39.py:4:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.g.generic_alias.generic_alias_side_effects
tests/functional/g/generic_alias/generic_alias_side_effects.py:19:0: W0102: Dangerous default value set() (builtins.set) as argument (dangerous-default-value)
tests/functional/g/generic_alias/generic_alias_side_effects.py:27:0: W0102: Dangerous default value dict() (builtins.dict) as argument (dangerous-default-value)
tests/functional/g/generic_alias/generic_alias_side_effects.py:31:0: W0102: Dangerous default value list() (builtins.list) as argument (dangerous-default-value)
tests/functional/g/generic_alias/generic_alias_side_effects.py:35:0: W0102: Dangerous default value deque() (collections.deque) as argument (dangerous-default-value)
tests/functional/g/generic_alias/generic_alias_side_effects.py:39:0: W0102: Dangerous default value ChainMap() (collections.ChainMap) as argument (dangerous-default-value)
tests/functional/g/generic_alias/generic_alias_side_effects.py:43:0: W0102: Dangerous default value Counter() (collections.Counter) as argument (dangerous-default-value)
tests/functional/g/generic_alias/generic_alias_side_effects.py:47:0: W0102: Dangerous default value OrderedDict() (collections.OrderedDict) as argument (dangerous-default-value)
tests/functional/g/generic_alias/generic_alias_side_effects.py:51:0: W0102: Dangerous default value defaultdict() (collections.defaultdict) as argument (dangerous-default-value)
tests/functional/g/generic_alias/generic_alias_side_effects.py:1:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_side_effects.py:1:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.g.generic_alias.generic_alias_collections
tests/functional/g/generic_alias/generic_alias_collections.py:66:0: E1136: Value 'collections.abc.Hashable' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections.py:67:0: E1136: Value 'collections.abc.Sized' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections.py:74:0: W0223: Method '__hash__' is abstract in class 'Hashable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections.py:77:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections.py:80:0: W0223: Method '__contains__' is abstract in class 'Container' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections.py:80:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections.py:80:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections.py:99:0: W0223: Method '__hash__' is abstract in class 'Hashable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections.py:99:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections.py:104:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections.py:104:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections.py:106:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections.py:106:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections.py:125:9: E1136: Value 'int' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections.py:126:15: E1136: Value 'collections.abc.Hashable' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections.py:127:12: E1136: Value 'collections.abc.Sized' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_collections.py:3:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_collections.py:4:0: I0021: Useless suppression of 'multiple-statements' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_collections.py:4:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.g.generic_alias.generic_alias_collections_py37
tests/functional/g/generic_alias/generic_alias_collections_py37.py:69:0: E1136: Value 'collections.abc.Hashable' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:70:0: E1136: Value 'collections.abc.Sized' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:77:0: W0223: Method '__hash__' is abstract in class 'Hashable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:80:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:83:0: W0223: Method '__contains__' is abstract in class 'Container' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:83:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:83:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:102:0: W0223: Method '__hash__' is abstract in class 'Hashable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:102:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:107:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:107:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:109:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:109:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:128:9: E1136: Value 'int' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:129:15: E1136: Value 'collections.abc.Hashable' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:130:12: E1136: Value 'collections.abc.Sized' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:6:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:6:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:7:0: I0021: Useless suppression of 'multiple-statements' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_collections_py37.py:7:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.g.generic_alias.generic_alias_typing
tests/functional/g/generic_alias/generic_alias_typing.py:66:0: E1136: Value 'typing.ByteString' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_typing.py:67:0: E1136: Value 'typing.Hashable' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_typing.py:68:0: E1136: Value 'typing.Sized' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_typing.py:72:0: W0223: Method '__hash__' is abstract in class 'Hashable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_typing.py:75:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_typing.py:78:0: W0223: Method '__contains__' is abstract in class 'Container' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_typing.py:78:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_typing.py:78:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_typing.py:100:0: W0223: Method '__hash__' is abstract in class 'Hashable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_typing.py:100:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_typing.py:105:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_typing.py:105:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_typing.py:107:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_typing.py:107:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_typing.py:118:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_typing.py:138:9: E1136: Value 'int' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_typing.py:139:17: E1136: Value 'typing.ByteString' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_typing.py:140:15: E1136: Value 'typing.Hashable' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_typing.py:141:12: E1136: Value 'typing.Sized' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_typing.py:148:8: E1136: Value 'A' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_typing.py:150:8: E1136: Value 'A' is unsubscriptable (unsubscriptable-object)
tests/functional/g/generic_alias/generic_alias_typing.py:112:19: R6002: 'typing.List' will be deprecated with PY39, consider using 'list' instead (consider-using-alias)
tests/functional/g/generic_alias/generic_alias_typing.py:123:11: R6002: 'typing.Tuple' will be deprecated with PY39, consider using 'tuple' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/g/generic_alias/generic_alias_typing.py:124:10: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/g/generic_alias/generic_alias_typing.py:130:20: R6002: 'typing.ContextManager' will be deprecated with PY39, consider using 'contextlib.AbstractContextManager' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/g/generic_alias/generic_alias_typing.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_typing.py:4:0: I0021: Useless suppression of 'multiple-statements' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_typing.py:4:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.g.generic_alias.generic_alias_mixed_py37
tests/functional/g/generic_alias/generic_alias_mixed_py37.py:34:0: W0223: Method '__hash__' is abstract in class 'Hashable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_mixed_py37.py:37:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_mixed_py37.py:40:0: W0223: Method '__contains__' is abstract in class 'Container' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_mixed_py37.py:40:0: W0223: Method '__iter__' is abstract in class 'Iterable' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_mixed_py37.py:40:0: W0223: Method '__len__' is abstract in class 'Sized' but is not overridden (abstract-method)
tests/functional/g/generic_alias/generic_alias_mixed_py37.py:34:22: R6002: 'typing.Hashable' will be deprecated with PY39, consider using 'collections.abc.Hashable' instead (consider-using-alias)
tests/functional/g/generic_alias/generic_alias_mixed_py37.py:6:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_mixed_py37.py:6:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_mixed_py37.py:6:0: I0021: Useless suppression of 'pointless-statement' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_mixed_py37.py:7:0: I0021: Useless suppression of 'multiple-statements' (useless-suppression)
tests/functional/g/generic_alias/generic_alias_mixed_py37.py:7:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.f.forgotten_debug_statement_py37
tests/functional/f/forgotten_debug_statement_py37.py:6:0: W1515: Leaving functions creating breakpoints in production code is not recommended (forgotten-debug-statement)
tests/functional/f/forgotten_debug_statement_py37.py:7:0: W1515: Leaving functions creating breakpoints in production code is not recommended (forgotten-debug-statement)
tests/functional/f/forgotten_debug_statement_py37.py:8:0: W1515: Leaving functions creating breakpoints in production code is not recommended (forgotten-debug-statement)
tests/functional/f/forgotten_debug_statement_py37.py:10:0: W1515: Leaving functions creating breakpoints in production code is not recommended (forgotten-debug-statement)
tests/functional/f/forgotten_debug_statement_py37.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/f/forgotten_debug_statement_py37.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.f.function_redefined
tests/functional/f/function_redefined.py:18:4: E0102: method already defined line 15 (function-redefined)
tests/functional/f/function_redefined.py:21:0: E0102: class already defined line 8 (function-redefined)
tests/functional/f/function_redefined.py:35:0: E0102: function already defined line 32 (function-redefined)
tests/functional/f/function_redefined.py:37:4: W0621: Redefining name '__revision__' from outer scope (line 7) (redefined-outer-name)
tests/functional/f/function_redefined.py:54:4: E0102: function already defined line 48 (function-redefined)
tests/functional/f/function_redefined.py:89:0: E0102: function already defined line 88 (function-redefined)
tests/functional/f/function_redefined.py:93:0: E0102: function already defined line 92 (function-redefined)
tests/functional/f/function_redefined.py:125:14: R6002: 'typing.Callable' will be deprecated with PY39, consider using 'collections.abc.Callable' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/f/function_redefined.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/f/function_redefined.py:1:0: I0021: Useless suppression of 'using-constant-test' (useless-suppression)
************* Module functional.f.first_arg
tests/functional/f/first_arg.py:10:4: C0202: Class method __new__ should have 'cls' as first argument (bad-classmethod-argument)
tests/functional/f/first_arg.py:16:4: R0202: Consider using a decorator instead of calling classmethod (no-classmethod-decorator)
tests/functional/f/first_arg.py:18:4: C0202: Class method class2 should have 'cls' as first argument (bad-classmethod-argument)
tests/functional/f/first_arg.py:20:4: R0202: Consider using a decorator instead of calling classmethod (no-classmethod-decorator)
tests/functional/f/first_arg.py:25:4: C0204: Metaclass class method __new__ should have 'mcs' as first argument (bad-mcs-classmethod-argument)
tests/functional/f/first_arg.py:32:4: C0203: Metaclass method method2 should have 'cls' as first argument (bad-mcs-method-argument)
tests/functional/f/first_arg.py:36:4: C0204: Metaclass class method class1 should have 'mcs' as first argument (bad-mcs-classmethod-argument)
tests/functional/f/first_arg.py:38:4: R0202: Consider using a decorator instead of calling classmethod (no-classmethod-decorator)
tests/functional/f/first_arg.py:40:4: C0204: Metaclass class method class2 should have 'mcs' as first argument (bad-mcs-classmethod-argument)
tests/functional/f/first_arg.py:42:4: R0202: Consider using a decorator instead of calling classmethod (no-classmethod-decorator)
tests/functional/f/first_arg.py:1:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.f.func_disable_linebased
tests/functional/f/func_disable_linebased.py:2:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.f.f_string_without_interpolation
tests/functional/f/f_string_without_interpolation.py:9:6: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
************* Module functional.f.fallback_import_enabled
tests/functional/f/fallback_import_enabled.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/f/fallback_import_enabled.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.f.function_redefined_2540
tests/functional/f/function_redefined_2540.py:1:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
************* Module functional.f.future_unicode_literals
tests/functional/f/future_unicode_literals.py:5:15: W1402: Anomalous Unicode escape in byte string: '\u'. String constant might be missing an r or u prefix. (anomalous-unicode-escape-in-string)
************* Module functional.f.fixme
tests/functional/f/fixme.py:2:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/f/fixme.py:30:0: I0021: Useless suppression of 'fixme' (useless-suppression)
tests/functional/f/fixme.py:31:0: I0021: Useless suppression of 'fixme' (useless-suppression)
tests/functional/f/fixme.py:32:0: I0021: Useless suppression of 'fixme' (useless-suppression)
tests/functional/f/fixme.py:32:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.f.fallback_import_disabled
tests/functional/f/fallback_import_disabled.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/f/fallback_import_disabled.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.f.formatted_string_literal_with_if
tests/functional/f/formatted_string_literal_with_if.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/f/formatted_string_literal_with_if.py:2:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/f/formatted_string_literal_with_if.py:2:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.a.await_outside_async
tests/functional/a/await_outside_async.py:12:10: E1142: 'await' should be used within an async function (await-outside-async)
tests/functional/a/await_outside_async.py:25:8: E1142: 'await' should be used within an async function (await-outside-async)
tests/functional/a/await_outside_async.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.a.arguments_differ
tests/functional/a/arguments_differ.py:12:4: W0221: Number of parameters was 1 in 'Parent.test' and is now 2 in overridden 'Child.test' method (arguments-differ)
tests/functional/a/arguments_differ.py:23:4: W0221: Number of parameters was 3 in 'ParentDefaults.test' and is now 2 in overridden 'ChildDefaults.test' method (arguments-differ)
tests/functional/a/arguments_differ.py:41:4: W0221: Number of parameters was 2 in 'Classmethod.func' and is now 0 in overridden 'ClassmethodChild.func' method (arguments-differ)
tests/functional/a/arguments_differ.py:68:4: W0221: Variadics removed in overridden 'VarargsChild.has_kwargs' method (arguments-differ)
tests/functional/a/arguments_differ.py:71:4: W0237: Parameter 'args' has been renamed to 'arg' in overridden 'VarargsChild.no_kwargs' method (arguments-renamed)
tests/functional/a/arguments_differ.py:144:4: W0221: Number of parameters was 1 in 'Staticmethod.func' and is now 2 in overridden 'StaticmethodChild2.func' method (arguments-differ)
tests/functional/a/arguments_differ.py:180:4: W0221: Number of parameters was 2 in 'FirstHasArgs.test' and is now 4 in overridden 'SecondChangesArgs.test' method (arguments-differ)
tests/functional/a/arguments_differ.py:243:4: W0237: Parameter 'arg' has been renamed to '_arg' in overridden 'ChildClass.meth' method (arguments-renamed)
tests/functional/a/arguments_differ.py:307:4: W0221: Number of parameters was 4 in 'AbstractFoo.kwonly_1' and is now 3 in overridden 'Foo.kwonly_1' method (arguments-differ)
tests/functional/a/arguments_differ.py:310:4: W0221: Number of parameters was 3 in 'AbstractFoo.kwonly_2' and is now 2 in overridden 'Foo.kwonly_2' method (arguments-differ)
tests/functional/a/arguments_differ.py:313:4: W0221: Number of parameters was 3 in 'AbstractFoo.kwonly_3' and is now 3 in overridden 'Foo.kwonly_3' method (arguments-differ)
tests/functional/a/arguments_differ.py:316:4: W0221: Number of parameters was 3 in 'AbstractFoo.kwonly_4' and is now 3 in overridden 'Foo.kwonly_4' method (arguments-differ)
tests/functional/a/arguments_differ.py:319:4: W0221: Variadics removed in overridden 'Foo.kwonly_5' method (arguments-differ)
tests/functional/a/arguments_differ.py:359:4: W0221: Number of parameters was 2 in 'AClass.method' and is now 3 in overridden 'ClassWithNewNonDefaultKeywordOnly.method' method (arguments-differ)
tests/functional/a/arguments_differ.py:257:31: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/a/arguments_differ.py:261:31: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/a/arguments_differ.py:265:37: R6002: 'typing.List' will be deprecated with PY39, consider using 'list' instead (consider-using-alias)
tests/functional/a/arguments_differ.py:269:37: R6002: 'typing.List' will be deprecated with PY39, consider using 'list' instead (consider-using-alias)
tests/functional/a/arguments_differ.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.a.assert_on_string_literal
tests/functional/a/assert_on_string_literal.py:3:0: W0129: Assert statement has a string literal as its first argument. The assert will never fail. (assert-on-string-literal)
tests/functional/a/assert_on_string_literal.py:4:0: W0129: Assert statement has a string literal as its first argument. The assert will always fail. (assert-on-string-literal)
************* Module functional.a.anomalous_backslash_escape
tests/functional/a/anomalous_backslash_escape.py:4:14: W1401: Anomalous backslash in string: '\z'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
tests/functional/a/anomalous_backslash_escape.py:5:27: W1401: Anomalous backslash in string: '\z'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
tests/functional/a/anomalous_backslash_escape.py:6:30: W1401: Anomalous backslash in string: '\z'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
tests/functional/a/anomalous_backslash_escape.py:8:4: W1401: Anomalous backslash in string: '\z'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
tests/functional/a/anomalous_backslash_escape.py:12:4: W1401: Anomalous backslash in string: '\z'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
tests/functional/a/anomalous_backslash_escape.py:15:23: W1401: Anomalous backslash in string: '\z'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
************* Module functional.a.assert_on_tuple
tests/functional/a/assert_on_tuple.py:5:0: W0199: Assert called on a 2-item-tuple. Did you mean 'assert x,y'? (assert-on-tuple)
tests/functional/a/assert_on_tuple.py:11:0: W0199: Assert called on a 2-item-tuple. Did you mean 'assert x,y'? (assert-on-tuple)
************* Module functional.a.arguments_out_of_order
tests/functional/a/arguments_out_of_order.py:22:4: W1114: Positional arguments appear to be out of order (arguments-out-of-order)
tests/functional/a/arguments_out_of_order.py:23:4: W1114: Positional arguments appear to be out of order (arguments-out-of-order)
tests/functional/a/arguments_out_of_order.py:25:4: W1114: Positional arguments appear to be out of order (arguments-out-of-order)
tests/functional/a/arguments_out_of_order.py:51:4: W1114: Positional arguments appear to be out of order (arguments-out-of-order)
tests/functional/a/arguments_out_of_order.py:1:0: I0021: Useless suppression of 'no-method-argument' (useless-suppression)
************* Module functional.a.arguments
tests/functional/a/arguments.py:47:0: E1120: No value for argument 'first_argument' in function call (no-value-for-parameter)
tests/functional/a/arguments.py:48:0: E1121: Too many positional arguments for function call (too-many-function-args)
tests/functional/a/arguments.py:50:0: E1120: No value for argument 'third_argument' in function call (no-value-for-parameter)
tests/functional/a/arguments.py:52:0: E1120: No value for argument 'first_argument' in function call (no-value-for-parameter)
tests/functional/a/arguments.py:52:0: E1120: No value for argument 'second_argument' in function call (no-value-for-parameter)
tests/functional/a/arguments.py:52:0: E1120: No value for argument 'third_argument' in function call (no-value-for-parameter)
tests/functional/a/arguments.py:54:0: E1121: Too many positional arguments for function call (too-many-function-args)
tests/functional/a/arguments.py:59:0: E1123: Unexpected keyword argument 'bob' in function call (unexpected-keyword-arg)
tests/functional/a/arguments.py:59:0: E1120: No value for argument 'first_argument' in function call (no-value-for-parameter)
tests/functional/a/arguments.py:60:0: E1123: Unexpected keyword argument 'coin' in function call (unexpected-keyword-arg)
tests/functional/a/arguments.py:62:0: E1124: Argument 'one' passed by position and keyword in function call (redundant-keyword-arg)
tests/functional/a/arguments.py:67:0: E1120: No value for argument 'arg' in lambda call (no-value-for-parameter)
tests/functional/a/arguments.py:72:4: E1120: No value for argument 'arg' in staticmethod call (no-value-for-parameter)
tests/functional/a/arguments.py:73:4: E1120: No value for argument 'arg' in staticmethod call (no-value-for-parameter)
tests/functional/a/arguments.py:75:4: E1120: No value for argument 'arg' in classmethod call (no-value-for-parameter)
tests/functional/a/arguments.py:76:4: E1120: No value for argument 'arg' in classmethod call (no-value-for-parameter)
tests/functional/a/arguments.py:78:4: E1120: No value for argument 'arg' in method call (no-value-for-parameter)
tests/functional/a/arguments.py:79:4: E1120: No value for argument 'arg' in unbound method call (no-value-for-parameter)
tests/functional/a/arguments.py:81:4: E1120: No value for argument 'arg' in method call (no-value-for-parameter)
tests/functional/a/arguments.py:82:4: E1120: No value for argument 'arg' in unbound method call (no-value-for-parameter)
tests/functional/a/arguments.py:111:8: E1120: No value for argument 'first' in staticmethod call (no-value-for-parameter)
tests/functional/a/arguments.py:112:8: E1121: Too many positional arguments for staticmethod call (too-many-function-args)
tests/functional/a/arguments.py:120:8: E1121: Too many positional arguments for constructor call (too-many-function-args)
tests/functional/a/arguments.py:122:8: E1120: No value for argument 'first' in constructor call (no-value-for-parameter)
tests/functional/a/arguments.py:122:8: E1120: No value for argument 'second' in constructor call (no-value-for-parameter)
tests/functional/a/arguments.py:123:8: E1123: Unexpected keyword argument 'lala' in constructor call (unexpected-keyword-arg)
tests/functional/a/arguments.py:123:8: E1120: No value for argument 'second' in constructor call (no-value-for-parameter)
tests/functional/a/arguments.py:134:8: E1120: No value for argument 'icon' in method call (no-value-for-parameter)
tests/functional/a/arguments.py:135:8: E1121: Too many positional arguments for method call (too-many-function-args)
tests/functional/a/arguments.py:137:0: E1120: No value for argument 'icon' in method call (no-value-for-parameter)
tests/functional/a/arguments.py:164:4: E1120: No value for argument 'two' in function call (no-value-for-parameter)
tests/functional/a/arguments.py:164:4: E1120: No value for argument 'three' in function call (no-value-for-parameter)
tests/functional/a/arguments.py:167:4: E1120: No value for argument 'two' in function call (no-value-for-parameter)
tests/functional/a/arguments.py:167:4: E1120: No value for argument 'three' in function call (no-value-for-parameter)
tests/functional/a/arguments.py:203:23: E1123: Unexpected keyword argument 'd' in method call (unexpected-keyword-arg)
tests/functional/a/arguments.py:203:23: E1123: Unexpected keyword argument 'e' in method call (unexpected-keyword-arg)
tests/functional/a/arguments.py:216:0: E1120: No value for argument 'third' in function call (no-value-for-parameter)
tests/functional/a/arguments.py:217:0: E1120: No value for argument 'second' in function call (no-value-for-parameter)
tests/functional/a/arguments.py:218:0: E1123: Unexpected keyword argument 'fourth' in function call (unexpected-keyword-arg)
tests/functional/a/arguments.py:253:0: E1120: No value for argument 'arg' in function call (no-value-for-parameter)
tests/functional/a/arguments.py:254:0: E1120: No value for argument 'arg' in function call (no-value-for-parameter)
tests/functional/a/arguments.py:256:0: E1120: No value for argument 'arg' in function call (no-value-for-parameter)
************* Module functional.a.async_functions
tests/functional/a/async_functions.py:5:0: W0622: Redefining built-in 'next' (redefined-builtin)
tests/functional/a/async_functions.py:8:30: W0613: Unused argument 'arg2' (unused-argument)
tests/functional/a/async_functions.py:22:8: E1003: Bad first argument 'OtherClass' given to super() (bad-super-call)
tests/functional/a/async_functions.py:57:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
tests/functional/a/async_functions.py:57:18: E0108: Duplicate argument name a in function definition (duplicate-argument-name)
tests/functional/a/async_functions.py:62:0: C0112: Empty function docstring (empty-docstring)
tests/functional/a/async_functions.py:62:0: C0104: Disallowed name "foo" (disallowed-name)
tests/functional/a/async_functions.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.a.anomalous_unicode_escape
tests/functional/a/anomalous_unicode_escape.py:5:16: W1402: Anomalous Unicode escape in byte string: '\u'. String constant might be missing an r or u prefix. (anomalous-unicode-escape-in-string)
tests/functional/a/anomalous_unicode_escape.py:6:21: W1402: Anomalous Unicode escape in byte string: '\U'. String constant might be missing an r or u prefix. (anomalous-unicode-escape-in-string)
tests/functional/a/anomalous_unicode_escape.py:8:22: W1402: Anomalous Unicode escape in byte string: '\N'. String constant might be missing an r or u prefix. (anomalous-unicode-escape-in-string)
tests/functional/a/anomalous_unicode_escape.py:1:0: I0021: Useless suppression of 'pointless-string-statement' (useless-suppression)
************* Module functional.a.arguments_renamed
tests/functional/a/arguments_renamed.py:17:4: W0237: Parameter 'fruit_name' has been renamed to 'orange_name' in overridden 'Orange.brew' method (arguments-renamed)
tests/functional/a/arguments_renamed.py:20:4: W0237: Parameter 'fruit_name' has been renamed to 'orange_name' in overridden 'Orange.eat_with_condiment' method (arguments-renamed)
tests/functional/a/arguments_renamed.py:27:4: W0221: Number of parameters was 3 in 'Fruit.eat_with_condiment' and is now 4 in overridden 'Banana.eat_with_condiment' method (arguments-differ)
tests/functional/a/arguments_renamed.py:40:4: W0237: Parameter 'arg' has been renamed to 'arg1' in overridden 'Child.test' method (arguments-renamed)
tests/functional/a/arguments_renamed.py:43:4: W0221: Number of parameters was 4 in 'Parent.kwargs_test' and is now 4 in overridden 'Child.kwargs_test' method (arguments-differ)
tests/functional/a/arguments_renamed.py:48:4: W0237: Parameter 'arg' has been renamed to 'var' in overridden 'Child2.test' method (arguments-renamed)
tests/functional/a/arguments_renamed.py:51:4: W0221: Number of parameters was 4 in 'Parent.kwargs_test' and is now 3 in overridden 'Child2.kwargs_test' method (arguments-differ)
tests/functional/a/arguments_renamed.py:67:4: W0237: Parameter 'barg' has been renamed to 'param2' in overridden 'ChildDefaults.test1' method (arguments-renamed)
tests/functional/a/arguments_renamed.py:70:4: W0237: Parameter 'arg' has been renamed to '_arg' in overridden 'ChildDefaults.test2' method (arguments-renamed)
tests/functional/a/arguments_renamed.py:70:4: W0237: Parameter 'barg' has been renamed to 'ignored_barg' in overridden 'ChildDefaults.test2' method (arguments-renamed)
tests/functional/a/arguments_renamed.py:95:8: W0237: Parameter 'fruit_name' has been renamed to 'orange_name' in overridden 'FruitOverrideConditional.brew' method (arguments-renamed)
tests/functional/a/arguments_renamed.py:99:12: W0221: Number of parameters was 3 in 'FruitConditional.eat_with_condiment' and is now 4 in overridden 'FruitOverrideConditional.eat_with_condiment' method (arguments-differ)
tests/functional/a/arguments_renamed.py:1:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
tests/functional/a/arguments_renamed.py:1:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
************* Module functional.i.inherit_non_class
tests/functional/i/inherit_non_class.py:21:0: E0239: Inheriting '1', which is not a class. (inherit-non-class)
tests/functional/i/inherit_non_class.py:24:0: E0239: Inheriting 'lambda abc: 42', which is not a class. (inherit-non-class)
tests/functional/i/inherit_non_class.py:27:0: E0239: Inheriting 'object()', which is not a class. (inherit-non-class)
tests/functional/i/inherit_non_class.py:30:0: E0239: Inheriting 'return_class', which is not a class. (inherit-non-class)
tests/functional/i/inherit_non_class.py:33:0: E0239: Inheriting 'Empty()', which is not a class. (inherit-non-class)
tests/functional/i/inherit_non_class.py:68:0: E0239: Inheriting 'bool', which is not a class. (inherit-non-class)
tests/functional/i/inherit_non_class.py:72:0: E0239: Inheriting 'range', which is not a class. (inherit-non-class)
tests/functional/i/inherit_non_class.py:76:0: E0239: Inheriting 'slice', which is not a class. (inherit-non-class)
tests/functional/i/inherit_non_class.py:80:0: E0239: Inheriting 'memoryview', which is not a class. (inherit-non-class)
tests/functional/i/inherit_non_class.py:98:0: E0239: Inheriting 'ParentBad[int]', which is not a class. (inherit-non-class)
tests/functional/i/inherit_non_class.py:102:13: E1136: Value 'Empty' is unsubscriptable (unsubscriptable-object)
tests/functional/i/inherit_non_class.py:5:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/i/inherit_non_class.py:5:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/i/inherit_non_class.py:95:0: I0021: Useless suppression of 'fixme' (useless-suppression)
************* Module functional.i.import_itself
tests/functional/i/import_itself.py:4:0: W0406: Module import itself (import-self)
tests/functional/i/import_itself.py:2:0: I0021: Useless suppression of 'using-constant-test' (useless-suppression)
************* Module functional.i.import_error
tests/functional/i/import_error.py:3:0: E0401: Unable to import 'totally_missing' (import-error)
tests/functional/i/import_error.py:21:4: E0401: Unable to import 'maybe_missing_2' (import-error)
tests/functional/i/import_error.py:33:0: E0001: Cannot import 'functional.s.syntax.syntax_error' due to syntax error 'invalid syntax (<unknown>, line 1)' (syntax-error)
tests/functional/i/import_error.py:33:0: E0611: No name 'syntax_error' in module 'functional.s.syntax' (no-name-in-module)
tests/functional/i/import_error.py:68:0: E0401: Unable to import 'external_module' (import-error)
tests/functional/i/import_error.py:70:0: E0401: Unable to import 'external_module.another_module' (import-error)
tests/functional/i/import_error.py:70:0: W0404: Reimport 'anything' (imported line 68) (reimported)
tests/functional/i/import_error.py:72:0: E0401: Unable to import 'external_module' (import-error)
tests/functional/i/import_error.py:74:0: E0401: Unable to import 'fake_module.submodule' (import-error)
tests/functional/i/import_error.py:74:0: W0404: Reimport 'anything' (imported line 68) (reimported)
tests/functional/i/import_error.py:76:0: E0401: Unable to import 'fake_module.submodule.deeper' (import-error)
tests/functional/i/import_error.py:76:0: W0404: Reimport 'anything' (imported line 68) (reimported)
tests/functional/i/import_error.py:78:0: C0410: Multiple imports on one line (foo, bar) (multiple-imports)
tests/functional/i/import_error.py:80:0: W0404: Reimport 'foo' (imported line 78) (reimported)
tests/functional/i/import_error.py:81:0: W0404: Reimport 'bar' (imported line 78) (reimported)
tests/functional/i/import_error.py:80:0: C0412: Imports from package foo are not grouped (ungrouped-imports)
tests/functional/i/import_error.py:81:0: C0412: Imports from package bar are not grouped (ungrouped-imports)
tests/functional/i/import_error.py:2:0: I0021: Useless suppression of 'bare-except' (useless-suppression)
tests/functional/i/import_error.py:2:0: I0021: Useless suppression of 'broad-except' (useless-suppression)
************* Module functional.i.import_outside_toplevel
tests/functional/i/import_outside_toplevel.py:11:4: C0415: Import outside toplevel (symtable) (import-outside-toplevel)
tests/functional/i/import_outside_toplevel.py:15:4: C0415: Import outside toplevel (os, sys) (import-outside-toplevel)
tests/functional/i/import_outside_toplevel.py:19:4: C0415: Import outside toplevel (time) (import-outside-toplevel)
tests/functional/i/import_outside_toplevel.py:23:4: C0415: Import outside toplevel (random, socket) (import-outside-toplevel)
tests/functional/i/import_outside_toplevel.py:27:4: C0415: Import outside toplevel (tokenize) (import-outside-toplevel)
tests/functional/i/import_outside_toplevel.py:30:8: C0415: Import outside toplevel (turtle) (import-outside-toplevel)
tests/functional/i/import_outside_toplevel.py:35:8: C0415: Import outside toplevel (tabnanny) (import-outside-toplevel)
tests/functional/i/import_outside_toplevel.py:39:4: C0415: Import outside toplevel (collections.defaultdict) (import-outside-toplevel)
tests/functional/i/import_outside_toplevel.py:43:4: C0415: Import outside toplevel (math.sin, math.cos) (import-outside-toplevel)
tests/functional/i/import_outside_toplevel.py:48:4: C0415: Import outside toplevel (astroid) (import-outside-toplevel)
tests/functional/i/import_outside_toplevel.py:51:4: C0415: Import outside toplevel (notastroid) (import-outside-toplevel)
tests/functional/i/import_outside_toplevel.py:51:4: E0401: Unable to import 'notastroid' (import-error)
************* Module functional.i.init_subclass_classmethod
tests/functional/i/init_subclass_classmethod.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.i.inference_crash_4692
tests/functional/i/inference_crash_4692.py:5:0: E0401: Unable to import 'notclick' (import-error)
************* Module functional.i.iterable_context_py36
tests/functional/i/iterable_context_py36.py:11:35: E1133: Non-iterable value self is used in an iterating context (not-an-iterable)
tests/functional/i/iterable_context_py36.py:12:21: E1133: Non-iterable value self is used in an iterating context (not-an-iterable)
tests/functional/i/iterable_context_py36.py:1:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
************* Module functional.i.inner_classes
tests/functional/i/inner_classes.py:1:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
tests/functional/i/inner_classes.py:1:0: I0021: Useless suppression of 'unnecessary-dunder-call' (useless-suppression)
************* Module functional.i.isinstance_second_argument
tests/functional/i/isinstance_second_argument.py:27:0: W1116: Second argument of isinstance is not a type (isinstance-second-argument-not-valid-type)
tests/functional/i/isinstance_second_argument.py:28:0: W1116: Second argument of isinstance is not a type (isinstance-second-argument-not-valid-type)
tests/functional/i/isinstance_second_argument.py:29:0: W1116: Second argument of isinstance is not a type (isinstance-second-argument-not-valid-type)
tests/functional/i/isinstance_second_argument.py:30:0: W1116: Second argument of isinstance is not a type (isinstance-second-argument-not-valid-type)
tests/functional/i/isinstance_second_argument.py:31:0: W1116: Second argument of isinstance is not a type (isinstance-second-argument-not-valid-type)
tests/functional/i/isinstance_second_argument.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/i/isinstance_second_argument.py:1:0: I0021: Useless suppression of 'wrong-import-position' (useless-suppression)
************* Module functional.i.iterable_context
tests/functional/i/iterable_context.py:58:9: E1133: Non-iterable value powers_of_two is used in an iterating context (not-an-iterable)
tests/functional/i/iterable_context.py:93:6: E1133: Non-iterable value A() is used in an iterating context (not-an-iterable)
tests/functional/i/iterable_context.py:95:6: E1133: Non-iterable value B is used in an iterating context (not-an-iterable)
tests/functional/i/iterable_context.py:96:9: E1133: Non-iterable value A() is used in an iterating context (not-an-iterable)
tests/functional/i/iterable_context.py:100:9: E1133: Non-iterable value B is used in an iterating context (not-an-iterable)
tests/functional/i/iterable_context.py:103:9: E1133: Non-iterable value range is used in an iterating context (not-an-iterable)
tests/functional/i/iterable_context.py:107:9: E1133: Non-iterable value True is used in an iterating context (not-an-iterable)
tests/functional/i/iterable_context.py:110:9: E1133: Non-iterable value None is used in an iterating context (not-an-iterable)
tests/functional/i/iterable_context.py:113:9: E1133: Non-iterable value 8.5 is used in an iterating context (not-an-iterable)
tests/functional/i/iterable_context.py:116:9: E1133: Non-iterable value 10 is used in an iterating context (not-an-iterable)
tests/functional/i/iterable_context.py:152:12: C0501: `for` loop could be `any(value == v for v in self.valid_values)` (consider-using-any-or-all)
tests/functional/i/iterable_context.py:196:43: R6102: Consider using an in-place tuple instead of list (consider-using-tuple)
tests/functional/i/iterable_context.py:5:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/i/iterable_context.py:5:0: I0021: Useless suppression of 'unused-argument' (useless-suppression)
tests/functional/i/iterable_context.py:5:0: I0021: Useless suppression of 'bad-mcs-method-argument' (useless-suppression)
************* Module functional.i.iterable_context_py3
tests/functional/i/iterable_context_py3.py:17:9: E1133: Non-iterable value SomeClass() is used in an iterating context (not-an-iterable)
tests/functional/i/iterable_context_py3.py:4:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/i/iterable_context_py3.py:4:0: I0021: Useless suppression of 'unused-argument' (useless-suppression)
************* Module functional.i.init_is_generator
tests/functional/i/init_is_generator.py:4:4: E0100: __init__ method is a generator (init-is-generator)
tests/functional/i/init_is_generator.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.i.init_not_called
tests/functional/i/init_not_called.py:32:4: W0231: __init__ method from base class 'BBBB' is not called (super-init-not-called)
tests/functional/i/init_not_called.py:64:4: W0231: __init__ method from base class 'NewStyleC' is not called (super-init-not-called)
tests/functional/i/init_not_called.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/i/init_not_called.py:1:0: I0021: Useless suppression of 'wrong-import-position' (useless-suppression)
************* Module functional.i.import_aliasing
tests/functional/i/import_aliasing.py:6:0: C0414: Import alias does not rename original package (useless-import-alias)
tests/functional/i/import_aliasing.py:8:0: R0402: Use 'from os import path' instead (consider-using-from-import)
tests/functional/i/import_aliasing.py:10:0: R0402: Use 'from foo.bar import foobar' instead (consider-using-from-import)
tests/functional/i/import_aliasing.py:14:0: C0414: Import alias does not rename original package (useless-import-alias)
tests/functional/i/import_aliasing.py:17:0: C0414: Import alias does not rename original package (useless-import-alias)
tests/functional/i/import_aliasing.py:18:0: C0414: Import alias does not rename original package (useless-import-alias)
tests/functional/i/import_aliasing.py:20:0: C0414: Import alias does not rename original package (useless-import-alias)
tests/functional/i/import_aliasing.py:21:0: C0414: Import alias does not rename original package (useless-import-alias)
tests/functional/i/import_aliasing.py:23:0: C0414: Import alias does not rename original package (useless-import-alias)
tests/functional/i/import_aliasing.py:26:0: E0402: Attempted relative import beyond top-level package (relative-beyond-top-level)
tests/functional/i/import_aliasing.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/i/import_aliasing.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/i/import_aliasing.py:1:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
************* Module functional.p.protected_access_access_different_scopes
tests/functional/p/protected_access_access_different_scopes.py:9:11: E0602: Undefined variable 'self' (undefined-variable)
tests/functional/p/protected_access_access_different_scopes.py:13:4: E0602: Undefined variable 'self' (undefined-variable)
************* Module functional.p.postponed_evaluation_pep585_error
tests/functional/p/postponed_evaluation_pep585_error.py:86:7: R6003: Consider using alternative Union syntax instead of 'Union'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
tests/functional/p/postponed_evaluation_pep585_error.py:87:7: R6003: Consider using alternative Union syntax instead of 'Union'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
tests/functional/p/postponed_evaluation_pep585_error.py:87:13: R6003: Consider using alternative Union syntax instead of 'Union'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
tests/functional/p/postponed_evaluation_pep585_error.py:80:6: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/p/postponed_evaluation_pep585_error.py:82:6: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/p/postponed_evaluation_pep585_error.py:6:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/p/postponed_evaluation_pep585_error.py:6:0: I0021: Useless suppression of 'unused-import' (useless-suppression)
tests/functional/p/postponed_evaluation_pep585_error.py:6:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
tests/functional/p/postponed_evaluation_pep585_error.py:6:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
tests/functional/p/postponed_evaluation_pep585_error.py:6:0: I0021: Useless suppression of 'inherit-non-class' (useless-suppression)
tests/functional/p/postponed_evaluation_pep585_error.py:6:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.p.property_with_parameters
tests/functional/p/property_with_parameters.py:7:4: R0206: Cannot have defined parameters for properties (property-with-parameters)
************* Module functional.p.py_version_35
tests/functional/p/py_version_35.py:5:0: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
tests/functional/p/py_version_35.py:2:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
************* Module functional.p.postponed_evaluation_activated
tests/functional/p/postponed_evaluation_activated.py:1:0: I0021: Useless suppression of 'pointless-statement' (useless-suppression)
tests/functional/p/postponed_evaluation_activated.py:2:0: I0021: Useless suppression of 'no-name-in-module' (useless-suppression)
************* Module functional.p.postponed_evaluation_pep585_py39
tests/functional/p/postponed_evaluation_pep585_py39.py:82:7: R6003: Consider using alternative Union syntax instead of 'Union'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
tests/functional/p/postponed_evaluation_pep585_py39.py:83:7: R6003: Consider using alternative Union syntax instead of 'Union'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
tests/functional/p/postponed_evaluation_pep585_py39.py:83:13: R6003: Consider using alternative Union syntax instead of 'Union'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
tests/functional/p/postponed_evaluation_pep585_py39.py:106:7: E1136: Value 'OrderedDict' is unsubscriptable (unsubscriptable-object)
tests/functional/p/postponed_evaluation_pep585_py39.py:76:6: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/p/postponed_evaluation_pep585_py39.py:78:6: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/p/postponed_evaluation_pep585_py39.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/p/postponed_evaluation_pep585_py39.py:2:0: I0021: Useless suppression of 'unused-import' (useless-suppression)
tests/functional/p/postponed_evaluation_pep585_py39.py:2:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
tests/functional/p/postponed_evaluation_pep585_py39.py:2:0: I0021: Useless suppression of 'inherit-non-class' (useless-suppression)
tests/functional/p/postponed_evaluation_pep585_py39.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
************* Module functional.p.pattern_matching
tests/functional/p/pattern_matching.py:13:7: E0001: invalid syntax (<unknown>, line 13) (syntax-error)
************* Module functional.p.postponed_evaluation_not_activated
tests/functional/p/postponed_evaluation_not_activated.py:6:36: E0602: Undefined variable 'Class' (undefined-variable)
tests/functional/p/postponed_evaluation_not_activated.py:9:30: E0601: Using variable 'OtherClass' before assignment (used-before-assignment)
tests/functional/p/postponed_evaluation_not_activated.py:1:0: I0021: Useless suppression of 'pointless-statement' (useless-suppression)
************* Module functional.p.potential_index_error
tests/functional/p/potential_index_error.py:6:6: E0643: Invalid index for iterable length (potential-index-error)
tests/functional/p/potential_index_error.py:7:6: E0643: Invalid index for iterable length (potential-index-error)
tests/functional/p/potential_index_error.py:8:6: E0643: Invalid index for iterable length (potential-index-error)
************* Module functional.p.postponed_evaluation_activated_with_alias
tests/functional/p/postponed_evaluation_activated_with_alias.py:1:0: I0021: Useless suppression of 'pointless-statement' (useless-suppression)
tests/functional/p/postponed_evaluation_activated_with_alias.py:2:0: I0021: Useless suppression of 'no-name-in-module' (useless-suppression)
************* Module functional.p.protected_access_special_methods_on
tests/functional/p/protected_access_special_methods_on.py:15:8: W0238: Unused private member `Protected.__private` (unused-private-member)
tests/functional/p/protected_access_special_methods_on.py:23:8: W0238: Unused private member `Protected.__private` (unused-private-member)
tests/functional/p/protected_access_special_methods_on.py:5:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.p.postponed_evaluation_pep585
tests/functional/p/postponed_evaluation_pep585.py:87:7: R6003: Consider using alternative Union syntax instead of 'Union' (consider-alternative-union-syntax)
tests/functional/p/postponed_evaluation_pep585.py:88:7: R6003: Consider using alternative Union syntax instead of 'Union' (consider-alternative-union-syntax)
tests/functional/p/postponed_evaluation_pep585.py:88:13: R6003: Consider using alternative Union syntax instead of 'Union' (consider-alternative-union-syntax)
tests/functional/p/postponed_evaluation_pep585.py:81:6: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead (consider-using-alias)
tests/functional/p/postponed_evaluation_pep585.py:83:6: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead (consider-using-alias)
tests/functional/p/postponed_evaluation_pep585.py:6:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/p/postponed_evaluation_pep585.py:6:0: I0021: Useless suppression of 'unused-import' (useless-suppression)
tests/functional/p/postponed_evaluation_pep585.py:6:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
tests/functional/p/postponed_evaluation_pep585.py:6:0: I0021: Useless suppression of 'inherit-non-class' (useless-suppression)
tests/functional/p/postponed_evaluation_pep585.py:6:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
************* Module functional.p.protocol_classes
tests/functional/p/protocol_classes.py:31:21: W0613: Unused argument 'blob' (unused-argument)
************* Module functional.p.protected_access_special_methods_off
tests/functional/p/protected_access_special_methods_off.py:15:8: W0238: Unused private member `Protected.__private` (unused-private-member)
tests/functional/p/protected_access_special_methods_off.py:23:8: W0238: Unused private member `Protected.__private` (unused-private-member)
tests/functional/p/protected_access_special_methods_off.py:5:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.u.unexpected_keyword_arg
tests/functional/u/unexpected_keyword_arg.py:43:0: E1123: Unexpected keyword argument 'internal_arg' in function call (unexpected-keyword-arg)
tests/functional/u/unexpected_keyword_arg.py:73:0: E1123: Unexpected keyword argument 'internal_arg' in function call (unexpected-keyword-arg)
tests/functional/u/unexpected_keyword_arg.py:96:0: E1123: Unexpected keyword argument 'internal_arg' in function call (unexpected-keyword-arg)
tests/functional/u/unexpected_keyword_arg.py:118:0: E1123: Unexpected keyword argument 'internal_arg' in function call (unexpected-keyword-arg)
************* Module functional.u.unspecified_encoding_py38
tests/functional/u/unspecified_encoding_py38.py:13:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:14:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:15:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:16:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:17:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:26:5: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:29:5: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:33:5: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:38:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:39:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:40:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:41:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:50:5: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:53:5: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:57:5: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:66:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:67:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:68:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:75:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:76:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:77:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:81:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:82:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:83:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:84:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:138:14: R6003: Consider using alternative Union syntax instead of 'Optional'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
tests/functional/u/unspecified_encoding_py38.py:149:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:152:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:155:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:158:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:161:0: W1501: "None" is not a valid mode for open. (bad-open-mode)
tests/functional/u/unspecified_encoding_py38.py:161:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:164:0: W1501: "2" is not a valid mode for open. (bad-open-mode)
tests/functional/u/unspecified_encoding_py38.py:164:0: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tests/functional/u/unspecified_encoding_py38.py:2:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
************* Module functional.u.ungrouped_imports
tests/functional/u/ungrouped_imports.py:8:0: C0412: Imports from package logging are not grouped (ungrouped-imports)
tests/functional/u/ungrouped_imports.py:11:4: C0412: Imports from package os are not grouped (ungrouped-imports)
tests/functional/u/ungrouped_imports.py:19:4: C0412: Imports from package logging are not grouped (ungrouped-imports)
tests/functional/u/ungrouped_imports.py:20:0: C0412: Imports from package os are not grouped (ungrouped-imports)
tests/functional/u/ungrouped_imports.py:17:0: C0412: Imports from package astroid are not grouped (ungrouped-imports)
************* Module functional.u.unknown_encoding_jython
tests/functional/u/unknown_encoding_jython.py:1:0: F0001: Fatal error while checking 'tests/functional/u/unknown_encoding_jython.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/root/.cache/pylint/pylint-crash-2025-10-08-09.txt'. (fatal)
************* Module functional.u.unsubscriptable_value_py37
tests/functional/u/unsubscriptable_value_py37.py:15:0: E1136: Value 'Subscriptable()' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value_py37.py:17:3: R6002: 'typing.List' will be deprecated with PY39, consider using 'list' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
************* Module functional.u.unbalanced_tuple_unpacking
tests/functional/u/unbalanced_tuple_unpacking.py:11:4: W0632: Possible unbalanced tuple unpacking with sequence (1, 2, 3): left side has 2 label(s), right side has 3 value(s) (unbalanced-tuple-unpacking)
tests/functional/u/unbalanced_tuple_unpacking.py:17:4: W0632: Possible unbalanced tuple unpacking with sequence [1, 2, 3]: left side has 2 label(s), right side has 3 value(s) (unbalanced-tuple-unpacking)
tests/functional/u/unbalanced_tuple_unpacking.py:23:4: W0632: Possible unbalanced tuple unpacking with sequence (1, 2, 3): left side has 2 label(s), right side has 3 value(s) (unbalanced-tuple-unpacking)
tests/functional/u/unbalanced_tuple_unpacking.py:82:4: W0632: Possible unbalanced tuple unpacking with sequence defined at line 7 of functional.u.unpacking.unpacking: left side has 2 label(s), right side has 3 value(s) (unbalanced-tuple-unpacking)
tests/functional/u/unbalanced_tuple_unpacking.py:96:8: W0632: Possible unbalanced tuple unpacking with sequence defined at line 7 of functional.u.unpacking.unpacking: left side has 2 label(s), right side has 3 value(s) (unbalanced-tuple-unpacking)
tests/functional/u/unbalanced_tuple_unpacking.py:140:8: W0632: Possible unbalanced tuple unpacking with sequence defined at line 128: left side has 4 label(s), right side has 3 value(s) (unbalanced-tuple-unpacking)
tests/functional/u/unbalanced_tuple_unpacking.py:145:8: W0632: Possible unbalanced tuple unpacking with sequence defined at line 128: left side has 2 label(s), right side has 3 value(s) (unbalanced-tuple-unpacking)
tests/functional/u/unbalanced_tuple_unpacking.py:157:0: W0632: Possible unbalanced tuple unpacking with sequence defined at line 151: left side has 2 label(s), right side has 0 value(s) (unbalanced-tuple-unpacking)
tests/functional/u/unbalanced_tuple_unpacking.py:162:0: W0632: Possible unbalanced tuple unpacking with sequence (1, 2): left side has 3 label(s), right side has 2 value(s) (unbalanced-tuple-unpacking)
tests/functional/u/unbalanced_tuple_unpacking.py:6:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/u/unbalanced_tuple_unpacking.py:89:0: I0021: Useless suppression of 'attribute-defined-outside-init' (useless-suppression)
************* Module functional.u.unexpected_special_method_signature
tests/functional/u/unexpected_special_method_signature.py:8:4: E0302: The special method '__enter__' expects 0 param(s), 1 was given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:11:4: E0302: The special method '__del__' expects 0 param(s), 1 was given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:14:4: E0302: The special method '__format__' expects 1 param(s), 2 were given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:17:4: E0302: The special method '__setattr__' expects 2 param(s), 0 was given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:20:4: E0302: The special method '__round__' expects between 0 or 1 param(s), 2 were given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:23:4: E0302: The special method '__deepcopy__' expects 1 param(s), 2 were given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:26:4: E0211: Method has no argument (no-method-argument)
tests/functional/u/unexpected_special_method_signature.py:30:4: E0302: The special method '__getattr__' expects 1 param(s), 2 were given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:33:4: E0302: The special method '__subclasses__' expects 0 param(s), 1 was given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:37:4: E0302: The special method '__init_subclass__' expects 0 param(s), 1 was given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:43:4: E0302: The special method '__exit__' expects 3 param(s), 1 was given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:49:4: E0302: The special method '__exit__' expects 3 param(s), 4 were given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:57:4: E0302: The special method '__exit__' expects 3 param(s), 4 were given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:63:4: E0302: The special method '__aiter__' expects 0 param(s), 1 was given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:65:4: E0302: The special method '__anext__' expects 0 param(s), 2 were given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:67:4: E0302: The special method '__await__' expects 0 param(s), 1 was given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:69:4: E0302: The special method '__aenter__' expects 0 param(s), 1 was given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:71:4: E0302: The special method '__aexit__' expects 3 param(s), 0 was given (unexpected-special-method-signature)
tests/functional/u/unexpected_special_method_signature.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/u/unexpected_special_method_signature.py:3:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/u/unexpected_special_method_signature.py:3:0: I0021: Useless suppression of 'unused-argument' (useless-suppression)
tests/functional/u/unexpected_special_method_signature.py:3:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
tests/functional/u/unexpected_special_method_signature.py:4:0: I0021: Useless suppression of 'too-many-arguments' (useless-suppression)
************* Module functional.u.unhashable_dict_key
tests/functional/u/unhashable_dict_key.py:7:0: E1140: Dict key is unhashable (unhashable-dict-key)
tests/functional/u/unhashable_dict_key.py:8:0: E1140: Dict key is unhashable (unhashable-dict-key)
tests/functional/u/unhashable_dict_key.py:9:0: E1140: Dict key is unhashable (unhashable-dict-key)
tests/functional/u/unhashable_dict_key.py:10:0: E1140: Dict key is unhashable (unhashable-dict-key)
tests/functional/u/unhashable_dict_key.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.u.unidiomatic_typecheck
tests/functional/u/unidiomatic_typecheck.py:5:4: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tests/functional/u/unidiomatic_typecheck.py:6:4: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tests/functional/u/unidiomatic_typecheck.py:7:4: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tests/functional/u/unidiomatic_typecheck.py:8:4: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tests/functional/u/unidiomatic_typecheck.py:12:4: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tests/functional/u/unidiomatic_typecheck.py:13:4: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tests/functional/u/unidiomatic_typecheck.py:14:4: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tests/functional/u/unidiomatic_typecheck.py:15:4: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tests/functional/u/unidiomatic_typecheck.py:65:4: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tests/functional/u/unidiomatic_typecheck.py:66:4: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tests/functional/u/unidiomatic_typecheck.py:67:4: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tests/functional/u/unidiomatic_typecheck.py:68:4: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tests/functional/u/unidiomatic_typecheck.py:69:4: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tests/functional/u/unidiomatic_typecheck.py:70:4: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tests/functional/u/unidiomatic_typecheck.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/u/unidiomatic_typecheck.py:2:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.u.unsubscriptable_value
tests/functional/u/unsubscriptable_value.py:32:0: E1136: Value 'NonSubscriptable()' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:33:0: E1136: Value 'NonSubscriptable' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:35:0: E1136: Value 'Subscriptable' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:44:0: E1136: Value 'powers_of_two()' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:45:0: E1136: Value 'powers_of_two' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:49:0: E1136: Value 'True' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:50:0: E1136: Value 'None' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:51:0: E1136: Value '8.5' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:52:0: E1136: Value '10' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:55:0: E1136: Value '{x**2 for x in range(10)}' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:56:0: E1136: Value 'set(numbers)' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:57:0: E1136: Value 'frozenset(numbers)' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:77:0: E1136: Value 'SubscriptableClass()' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:84:0: E1136: Value 'test' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:127:11: E1136: Value 'var_one' is unsubscriptable (unsubscriptable-object)
tests/functional/u/unsubscriptable_value.py:5:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/u/unsubscriptable_value.py:6:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
************* Module functional.u.unrecognized_inline_option
tests/functional/u/unrecognized_inline_option.py:2:0: E0011: Unrecognized file option 'bouboule' (unrecognized-inline-option)
************* Module functional.u.unreachable
tests/functional/u/unreachable.py:7:4: W0101: Unreachable code (unreachable)
tests/functional/u/unreachable.py:12:8: W0101: Unreachable code (unreachable)
tests/functional/u/unreachable.py:18:8: W0101: Unreachable code (unreachable)
tests/functional/u/unreachable.py:22:4: W0101: Unreachable code (unreachable)
tests/functional/u/unreachable.py:35:4: W0101: Unreachable code (unreachable)
tests/functional/u/unreachable.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.u.using_constant_test
tests/functional/u/using_constant_test.py:22:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:26:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:29:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:32:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:35:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:38:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:41:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:44:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:47:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:50:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:53:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:56:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:59:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:62:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:65:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:68:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:73:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:76:3: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:80:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:81:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:82:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:83:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:84:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:85:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:89:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:93:0: W0125: Using a conditional statement with a constant value (using-constant-test)
tests/functional/u/using_constant_test.py:117:3: R0133: Comparison between constants: '2 < 3' has a constant value (comparison-of-constants)
tests/functional/u/using_constant_test.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.u.ungrouped_imports_suppression
tests/functional/u/ungrouped_imports_suppression.py:13:4: C0412: Imports from package os are not grouped (ungrouped-imports)
tests/functional/u/ungrouped_imports_suppression.py:10:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
************* Module functional.u.unused.unused_name_from_wildcard_import
tests/functional/u/unused/unused_name_from_wildcard_import.py:3:0: W0401: Wildcard import unused_argument_py3 (wildcard-import)
tests/functional/u/unused/unused_name_from_wildcard_import.py:4:0: W0401: Wildcard import unused_global_variable1 (wildcard-import)
tests/functional/u/unused/unused_name_from_wildcard_import.py:5:0: W0401: Wildcard import unused_import_py30 (wildcard-import)
tests/functional/u/unused/unused_name_from_wildcard_import.py:3:0: W0614: Unused import(s) func, only_raises and increment_factory from wildcard import of unused_argument_py3 (unused-wildcard-import)
tests/functional/u/unused/unused_name_from_wildcard_import.py:4:0: W0614: Unused import(s) VAR from wildcard import of unused_global_variable1 (unused-wildcard-import)
tests/functional/u/unused/unused_name_from_wildcard_import.py:5:0: W0614: Unused import(s) abc, sys, Meta, Meta2, Meta3, ABCMeta and SomethingElse from wildcard import of unused_import_py30 (unused-wildcard-import)
tests/functional/u/unused/unused_name_from_wildcard_import.py:2:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.u.unused.unused_variable_py36
tests/functional/u/unused/unused_variable_py36.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.u.unused.unused_global_variable2
tests/functional/u/unused/unused_global_variable2.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/u/unused/unused_global_variable2.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.u.unused.unused_global_variable4
tests/functional/u/unused/unused_global_variable4.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/u/unused/unused_global_variable4.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.u.unused.unused_global_variable3
tests/functional/u/unused/unused_global_variable3.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.u.unused.unused_import
tests/functional/u/unused/unused_import.py:3:0: W0611: Unused import xml.etree (unused-import)
tests/functional/u/unused/unused_import.py:4:0: W0611: Unused import xml.sax (unused-import)
tests/functional/u/unused/unused_import.py:5:0: W0611: Unused os.path imported as test (unused-import)
tests/functional/u/unused/unused_import.py:6:0: W0611: Unused argv imported from sys as test2 (unused-import)
tests/functional/u/unused/unused_import.py:7:0: W0611: Unused flags imported from sys (unused-import)
tests/functional/u/unused/unused_import.py:9:0: W0611: Unused deque imported from collections (unused-import)
tests/functional/u/unused/unused_import.py:9:0: W0611: Unused OrderedDict imported from collections (unused-import)
tests/functional/u/unused/unused_import.py:10:0: W0611: Unused import re (unused-import)
tests/functional/u/unused/unused_import.py:13:0: W0611: Unused SomeOtherName imported from fake (unused-import)
tests/functional/u/unused/unused_import.py:45:0: W0611: Unused import os (unused-import)
tests/functional/u/unused/unused_import.py:2:0: I0021: Useless suppression of 'undefined-all-variable' (useless-suppression)
tests/functional/u/unused/unused_import.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/u/unused/unused_import.py:12:0: I0021: Useless suppression of 'self-assigning-variable' (useless-suppression)
************* Module functional.u.unused.unused_variable
tests/functional/u/unused/unused_variable.py:4:4: W0611: Unused import xml (unused-import)
tests/functional/u/unused/unused_variable.py:7:4: W0611: Unused import unittest.case (unused-import)
tests/functional/u/unused/unused_variable.py:8:4: W0611: Unused xml imported as sql (unused-import)
tests/functional/u/unused/unused_variable.py:11:4: W0612: Unused variable '_foo' (unused-variable)
tests/functional/u/unused/unused_variable.py:13:4: W0612: Unused variable '__a' (unused-variable)
tests/functional/u/unused/unused_variable.py:15:4: W0612: Unused variable '_a_' (unused-variable)
tests/functional/u/unused/unused_variable.py:16:4: W0612: Unused variable '__a__' (unused-variable)
tests/functional/u/unused/unused_variable.py:17:4: W0612: Unused variable '__never_used' (unused-variable)
tests/functional/u/unused/unused_variable.py:20:4: W0612: Unused variable 'flagged_local_field' (unused-variable)
tests/functional/u/unused/unused_variable.py:21:4: W0612: Unused variable 'unused_local_field' (unused-variable)
tests/functional/u/unused/unused_variable.py:22:4: W0612: Unused variable 'ignored_local_field' (unused-variable)
tests/functional/u/unused/unused_variable.py:28:8: W0612: Unused variable '__class__' (unused-variable)
tests/functional/u/unused/unused_variable.py:35:4: W0641: Possibly unused variable 'value' (possibly-unused-variable)
tests/functional/u/unused/unused_variable.py:41:4: W0612: Unused variable 'value' (unused-variable)
tests/functional/u/unused/unused_variable.py:46:4: W0612: Unused variable 'value' (unused-variable)
tests/functional/u/unused/unused_variable.py:54:4: W0611: Unused wraps imported from functools as abc (unused-import)
tests/functional/u/unused/unused_variable.py:55:4: W0611: Unused namedtuple imported from collections (unused-import)
tests/functional/u/unused/unused_variable.py:59:4: W0611: Unused hexdigits imported from string (unused-import)
tests/functional/u/unused/unused_variable.py:64:4: W0612: Unused variable 'my_var' (unused-variable)
tests/functional/u/unused/unused_variable.py:76:4: W0612: Unused variable 'aaaa' (unused-variable)
tests/functional/u/unused/unused_variable.py:98:4: W0602: Using global for 'PATH' but no assignment is done (global-variable-not-assigned)
tests/functional/u/unused/unused_variable.py:98:4: W0602: Using global for 'deque' but no assignment is done (global-variable-not-assigned)
tests/functional/u/unused/unused_variable.py:106:4: W0611: Unused import this (unused-import)
tests/functional/u/unused/unused_variable.py:107:4: W0611: Unused re imported as RE (unused-import)
tests/functional/u/unused/unused_variable.py:104:4: W0611: Unused platform imported from sys (unused-import)
tests/functional/u/unused/unused_variable.py:105:4: W0611: Unused version imported from sys as VERSION (unused-import)
tests/functional/u/unused/unused_variable.py:117:8: W0621: Redefining name 'error' from outer scope (line 114) (redefined-outer-name)
tests/functional/u/unused/unused_variable.py:111:4: W0612: Unused variable 'unused' (unused-variable)
tests/functional/u/unused/unused_variable.py:145:8: W0621: Redefining name 'error' from outer scope (line 141) (redefined-outer-name)
tests/functional/u/unused/unused_variable.py:145:8: W0612: Unused variable 'error' (unused-variable)
tests/functional/u/unused/unused_variable.py:154:8: W0621: Redefining name 'error' from outer scope (line 151) (redefined-outer-name)
tests/functional/u/unused/unused_variable.py:151:4: W0612: Unused variable 'error' (unused-variable)
tests/functional/u/unused/unused_variable.py:169:10: W0631: Using possibly undefined loop variable 'e' (undefined-loop-variable)
tests/functional/u/unused/unused_variable.py:162:4: W0612: Unused variable 'e' (unused-variable)
tests/functional/u/unused/unused_variable.py:1:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
tests/functional/u/unused/unused_variable.py:1:0: I0021: Useless suppression of 'fixme' (useless-suppression)
tests/functional/u/unused/unused_variable.py:1:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.u.unused.unused_import_py30
tests/functional/u/unused/unused_import_py30.py:7:0: W0404: Reimport 'ABCMeta' (imported line 6) (reimported)
tests/functional/u/unused/unused_import_py30.py:2:0: I0021: Useless suppression of 'wrong-import-position' (useless-suppression)
tests/functional/u/unused/unused_import_py30.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
************* Module functional.u.unused.unused_private_member
tests/functional/u/unused/unused_private_member.py:6:4: W0238: Unused private member `AnotherClass.__test(self)` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:14:4: W0238: Unused private member `HasUnusedInClass.__private_class_method_unused(cls)` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:22:4: W0238: Unused private member `HasUnusedInClass.__private_static_method_unused()` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:36:4: W0238: Unused private member `HasUnusedInClass.__test(self, x, y, z)` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:57:4: W0238: Unused private member `HasUnusedInClass.__test_recursive(self)` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:10:4: W0238: Unused private member `HasUnusedInClass.__my_secret` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:30:8: W0238: Unused private member `HasUnusedInClass.__instance_secret` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:140:15: E0602: Undefined variable 'cls' (undefined-variable)
tests/functional/u/unused/unused_private_member.py:135:8: W0238: Unused private member `FalsePositive4657.__attr_c` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:159:8: W0238: Unused private member `FalsePositive4668.__unused` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:183:8: W0612: Unused variable '__true_positive' (unused-variable)
tests/functional/u/unused/unused_private_member.py:203:8: W0612: Unused variable '__inner_4' (unused-variable)
tests/functional/u/unused/unused_private_member.py:183:8: W0238: Unused private member `FalsePositive4673.do_thing.__true_positive(in_thing)` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:203:8: W0238: Unused private member `FalsePositive4673.complicated_example.__inner_4()` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:214:8: W0238: Unused private member `Crash4755Context.__messages` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:244:12: R0204: Redefinition of FalsePositive4681.__instance type from int to bool (redefined-variable-type)
tests/functional/u/unused/unused_private_member.py:231:4: W0238: Unused private member `FalsePositive4681.__should_cause_error` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:241:12: W0238: Unused private member `FalsePositive4681.__should_cause_error` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:245:12: W0238: Unused private member `FalsePositive4681.__should_cause_error` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:263:12: R0204: Redefinition of FalsePositive4681b.__instance type from int to bool (redefined-variable-type)
tests/functional/u/unused/unused_private_member.py:276:4: W0238: Unused private member `FalsePositive4849.__unused_private_method()` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:293:4: W0238: Unused private member `Pony.__init_defaults(self)` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:298:4: W0238: Unused private member `Pony.__get_fur_color(self)` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:343:8: W0238: Unused private member `TypeSelfCallInMethod.__a` (unused-private-member)
tests/functional/u/unused/unused_private_member.py:1:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.u.unused.unused_typing_imports
tests/functional/u/unused/unused_typing_imports.py:27:15: R6003: Consider using alternative Union syntax instead of 'Optional'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
tests/functional/u/unused/unused_typing_imports.py:31:18: R6003: Consider using alternative Union syntax instead of 'Optional'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
tests/functional/u/unused/unused_typing_imports.py:36:13: R6102: Consider using an in-place tuple instead of list (consider-using-tuple)
tests/functional/u/unused/unused_typing_imports.py:27:24: R6002: 'typing.Callable' will be deprecated with PY39, consider using 'collections.abc.Callable' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/u/unused/unused_typing_imports.py:31:27: R6002: 'typing.Iterable' will be deprecated with PY39, consider using 'collections.abc.Iterable' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/u/unused/unused_typing_imports.py:1:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.u.unused.unused_argument
tests/functional/u/unused/unused_argument.py:3:16: W0613: Unused argument 'first' (unused-argument)
tests/functional/u/unused/unused_argument.py:3:23: W0613: Unused argument 'second' (unused-argument)
tests/functional/u/unused/unused_argument.py:7:38: W0613: Unused argument 'ignored_second' (unused-argument)
tests/functional/u/unused/unused_argument.py:11:37: W0613: Unused argument 'unused_second' (unused-argument)
tests/functional/u/unused/unused_argument.py:32:29: W0613: Unused argument 'aay' (unused-argument)
tests/functional/u/unused/unused_argument.py:60:13: W0613: Unused argument 'arg' (unused-argument)
tests/functional/u/unused/unused_argument.py:67:21: W0613: Unused argument 'arg' (unused-argument)
tests/functional/u/unused/unused_argument.py:74:0: W0613: Unused argument 'args' (unused-argument)
tests/functional/u/unused/unused_argument.py:74:0: W0613: Unused argument 'kwargs' (unused-argument)
tests/functional/u/unused/unused_argument.py:93:23: W0613: Unused argument 'arg' (unused-argument)
tests/functional/u/unused/unused_argument.py:104:34: W0613: Unused argument 'other' (unused-argument)
tests/functional/u/unused/unused_argument.py:85:0: I0021: Useless suppression of 'no-member' (useless-suppression)
tests/functional/u/unused/unused_argument.py:87:0: I0021: Useless suppression of 'attribute-defined-outside-init' (useless-suppression)
************* Module functional.u.unused.unused_argument_py3
tests/functional/u/unused/unused_argument_py3.py:3:9: W0613: Unused argument 'first' (unused-argument)
tests/functional/u/unused/unused_argument_py3.py:3:19: W0613: Unused argument 'second' (unused-argument)
tests/functional/u/unused/unused_argument_py3.py:7:23: W0613: Unused argument 'second' (unused-argument)
tests/functional/u/unused/unused_argument_py3.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.u.unused.unused_import_class_def_keyword
tests/functional/u/unused/unused_import_class_def_keyword.py:6:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/u/unused/unused_import_class_def_keyword.py:6:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.u.unused.unused_global_variable1
tests/functional/u/unused/unused_global_variable1.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/u/unused/unused_global_variable1.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.u.unused.unused_import_positional_only_py38
tests/functional/u/unused/unused_import_positional_only_py38.py:8:31: R6002: 'typing.Set' will be deprecated with PY39, consider using 'set' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
************* Module functional.b.bad_reversed_sequence
tests/functional/b/bad_reversed_sequence.py:40:10: E0111: The first reversed() argument is not a sequence (bad-reversed-sequence)
tests/functional/b/bad_reversed_sequence.py:43:10: E0111: The first reversed() argument is not a sequence (bad-reversed-sequence)
tests/functional/b/bad_reversed_sequence.py:44:10: E0111: The first reversed() argument is not a sequence (bad-reversed-sequence)
tests/functional/b/bad_reversed_sequence.py:47:10: E0111: The first reversed() argument is not a sequence (bad-reversed-sequence)
tests/functional/b/bad_reversed_sequence.py:48:10: E0111: The first reversed() argument is not a sequence (bad-reversed-sequence)
tests/functional/b/bad_reversed_sequence.py:50:10: E0111: The first reversed() argument is not a sequence (bad-reversed-sequence)
tests/functional/b/bad_reversed_sequence.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/b/bad_reversed_sequence.py:2:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.b.bad_open_mode
tests/functional/b/bad_open_mode.py:12:0: W1501: "rwx" is not a valid mode for open. (bad-open-mode)
tests/functional/b/bad_open_mode.py:13:0: W1501: "rr" is not a valid mode for open. (bad-open-mode)
tests/functional/b/bad_open_mode.py:14:0: W1501: "+" is not a valid mode for open. (bad-open-mode)
tests/functional/b/bad_open_mode.py:15:0: W1501: "xw" is not a valid mode for open. (bad-open-mode)
tests/functional/b/bad_open_mode.py:21:0: W1501: "Ua" is not a valid mode for open. (bad-open-mode)
tests/functional/b/bad_open_mode.py:22:0: W1501: "Ur++" is not a valid mode for open. (bad-open-mode)
************* Module functional.b.blacklisted_name
tests/functional/b/blacklisted_name.py:3:0: C0104: Disallowed name "baz" (disallowed-name)
tests/functional/b/blacklisted_name.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.b.bad_except_order
tests/functional/b/bad_except_order.py:9:7: E0701: Bad except clauses order (Exception is an ancestor class of TypeError) (bad-except-order)
tests/functional/b/bad_except_order.py:16:7: E0701: Bad except clauses order (LookupError is an ancestor class of IndexError) (bad-except-order)
tests/functional/b/bad_except_order.py:23:7: E0701: Bad except clauses order (LookupError is an ancestor class of IndexError) (bad-except-order)
tests/functional/b/bad_except_order.py:23:7: E0701: Bad except clauses order (NameError is an ancestor class of UnboundLocalError) (bad-except-order)
tests/functional/b/bad_except_order.py:26:0: E0701: Bad except clauses order (empty except clause should always appear last) (bad-except-order)
tests/functional/b/bad_except_order.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/b/bad_except_order.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.b.bad_staticmethod_argument
tests/functional/b/bad_staticmethod_argument.py:5:4: W0211: Static method with 'self' as first argument (bad-staticmethod-argument)
tests/functional/b/bad_staticmethod_argument.py:10:4: W0211: Static method with 'cls' as first argument (bad-staticmethod-argument)
************* Module functional.b.bad_option_value
tests/functional/b/bad_option_value.py:1:0: E0012: Bad option value for enable. Don't recognize message W04044. (bad-option-value)
************* Module functional.b.bad_string_format_type
tests/functional/b/bad_string_format_type.py:5:0: E1101: Instance of 'bytes' has no 'format' member (no-member)
tests/functional/b/bad_string_format_type.py:25:0: E1307: Argument 'builtins.str' does not match format type 'd' (bad-string-format-type)
tests/functional/b/bad_string_format_type.py:26:0: E1307: Argument 'builtins.str' does not match format type 'd' (bad-string-format-type)
tests/functional/b/bad_string_format_type.py:27:0: E1307: Argument 'builtins.float' does not match format type 'x' (bad-string-format-type)
tests/functional/b/bad_string_format_type.py:28:0: E1307: Argument 'builtins.float' does not match format type 'x' (bad-string-format-type)
tests/functional/b/bad_string_format_type.py:29:0: E1307: Argument 'builtins.list' does not match format type 'd' (bad-string-format-type)
tests/functional/b/bad_string_format_type.py:30:0: E1307: Argument 'builtins.list' does not match format type 'd' (bad-string-format-type)
tests/functional/b/bad_string_format_type.py:33:0: E1307: Argument 'builtins.str' does not match format type 'd' (bad-string-format-type)
tests/functional/b/bad_string_format_type.py:34:0: E1307: Argument 'builtins.str' does not match format type 'd' (bad-string-format-type)
tests/functional/b/bad_string_format_type.py:38:0: E1307: Argument 'builtins.str' does not match format type 'd' (bad-string-format-type)
************* Module functional.b.bad_indentation
tests/functional/b/bad_indentation.py:15:15: R6102: Consider using an in-place tuple instead of list (consider-using-tuple)
tests/functional/b/bad_indentation.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.b.base_init_vars
tests/functional/b/base_init_vars.py:1:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
************* Module functional.b.bad_reversed_sequence_py38
tests/functional/b/bad_reversed_sequence_py38.py:12:0: E0111: The first reversed() argument is not a sequence (bad-reversed-sequence)
tests/functional/b/bad_reversed_sequence_py38.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/b/bad_reversed_sequence_py38.py:3:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/b/bad_reversed_sequence_py38.py:3:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.b.bad_reversed_sequence_py37
tests/functional/b/bad_reversed_sequence_py37.py:12:0: E0111: The first reversed() argument is not a sequence (bad-reversed-sequence)
tests/functional/b/bad_reversed_sequence_py37.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/b/bad_reversed_sequence_py37.py:3:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.b.broad_except
tests/functional/b/broad_except.py:7:7: W0703: Catching too general exception Exception (broad-except)
tests/functional/b/broad_except.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/b/broad_except.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.b.bad_exception_context
tests/functional/b/bad_exception_context.py:14:4: E0703: Exception context set to something which is not an exception, nor None (bad-exception-context)
tests/functional/b/bad_exception_context.py:17:4: E0703: Exception context set to something which is not an exception, nor None (bad-exception-context)
tests/functional/b/bad_exception_context.py:23:4: E0703: Exception context set to something which is not an exception, nor None (bad-exception-context)
tests/functional/b/bad_exception_context.py:31:7: E0712: Catching an exception which doesn't inherit from Exception: function (catching-non-exception)
tests/functional/b/bad_exception_context.py:32:4: E0703: Exception context set to something which is not an exception, nor None (bad-exception-context)
************* Module functional.b.bare_except
tests/functional/b/bare_except.py:5:0: W0702: No exception type(s) specified (bare-except)
tests/functional/b/bare_except.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/b/bare_except.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/b/bare_except.py:1:0: I0021: Useless suppression of 'import-error' (useless-suppression)
************* Module functional.b.bad_thread_instantiation
tests/functional/b/bad_thread_instantiation.py:5:0: W1506: threading.Thread needs the target function (bad-thread-instantiation)
tests/functional/b/bad_thread_instantiation.py:8:0: W1506: threading.Thread needs the target function (bad-thread-instantiation)
tests/functional/b/bad_thread_instantiation.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/b/bad_thread_instantiation.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.w.wrong_import_position_exclude_dunder_main
tests/functional/w/wrong_import_position_exclude_dunder_main.py:1:0: I0021: Useless suppression of 'import-error' (useless-suppression)
tests/functional/w/wrong_import_position_exclude_dunder_main.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/w/wrong_import_position_exclude_dunder_main.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.w.wrong_import_position7
tests/functional/w/wrong_import_position7.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
tests/functional/w/wrong_import_position7.py:2:0: I0021: Useless suppression of 'no-name-in-module' (useless-suppression)
tests/functional/w/wrong_import_position7.py:2:0: I0021: Useless suppression of 'relative-beyond-top-level' (useless-suppression)
************* Module functional.w.wildcard_import_allowed
tests/functional/w/wildcard_import_allowed.py:2:0: W0401: Wildcard import csv (wildcard-import)
tests/functional/w/wildcard_import_allowed.py:3:0: W0401: Wildcard import abc (wildcard-import)
tests/functional/w/wildcard_import_allowed.py:4:0: W0401: Wildcard import UNINFERABLE (wildcard-import)
tests/functional/w/wildcard_import_allowed.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/w/wildcard_import_allowed.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.w.wrong_import_order
tests/functional/w/wrong_import_order.py:12:0: C0411: standard import "import os.path" should be placed before "import six" (wrong-import-order)
tests/functional/w/wrong_import_order.py:14:0: C0411: standard import "import sys" should be placed before "import six" (wrong-import-order)
tests/functional/w/wrong_import_order.py:15:0: C0411: standard import "import datetime" should be placed before "import six" (wrong-import-order)
tests/functional/w/wrong_import_order.py:18:0: C0411: third party import "import totally_missing" should be placed before "from .package import Class" (wrong-import-order)
tests/functional/w/wrong_import_order.py:20:0: C0411: third party import "import astroid" should be placed before "from .package import Class" (wrong-import-order)
tests/functional/w/wrong_import_order.py:24:0: C0411: third party import "from six.moves.urllib.parse import quote" should be placed before "from .package import Class" (wrong-import-order)
tests/functional/w/wrong_import_order.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
tests/functional/w/wrong_import_order.py:2:0: I0021: Useless suppression of 'relative-beyond-top-level' (useless-suppression)
************* Module functional.w.wrong_import_position4
tests/functional/w/wrong_import_position4.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
tests/functional/w/wrong_import_position4.py:2:0: I0021: Useless suppression of 'no-name-in-module' (useless-suppression)
tests/functional/w/wrong_import_position4.py:2:0: I0021: Useless suppression of 'relative-beyond-top-level' (useless-suppression)
tests/functional/w/wrong_import_position4.py:2:0: I0021: Useless suppression of 'unused-variable' (useless-suppression)
************* Module functional.w.wrong_import_position6
tests/functional/w/wrong_import_position6.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
tests/functional/w/wrong_import_position6.py:2:0: I0021: Useless suppression of 'no-name-in-module' (useless-suppression)
tests/functional/w/wrong_import_position6.py:2:0: I0021: Useless suppression of 'relative-beyond-top-level' (useless-suppression)
************* Module functional.w.wrong_import_position3
tests/functional/w/wrong_import_position3.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
tests/functional/w/wrong_import_position3.py:2:0: I0021: Useless suppression of 'import-error' (useless-suppression)
tests/functional/w/wrong_import_position3.py:2:0: I0021: Useless suppression of 'no-name-in-module' (useless-suppression)
tests/functional/w/wrong_import_position3.py:2:0: I0021: Useless suppression of 'relative-beyond-top-level' (useless-suppression)
************* Module functional.w.wrong_import_position13
tests/functional/w/wrong_import_position13.py:4:0: C0413: Import "from sys import x" should be placed at the top of the module (wrong-import-position)
************* Module functional.w.wrong_import_position5
tests/functional/w/wrong_import_position5.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
tests/functional/w/wrong_import_position5.py:2:0: I0021: Useless suppression of 'import-error' (useless-suppression)
tests/functional/w/wrong_import_position5.py:2:0: I0021: Useless suppression of 'no-name-in-module' (useless-suppression)
tests/functional/w/wrong_import_position5.py:2:0: I0021: Useless suppression of 'relative-beyond-top-level' (useless-suppression)
************* Module functional.w.wrong_import_position14
tests/functional/w/wrong_import_position14.py:5:0: C0413: Import "import y" should be placed at the top of the module (wrong-import-position)
************* Module functional.w.wrong_import_order2
tests/functional/w/wrong_import_order2.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
************* Module functional.w.with_used_before_assign
tests/functional/w/with_used_before_assign.py:10:39: E0602: Undefined variable 'ctx' (undefined-variable)
tests/functional/w/with_used_before_assign.py:11:8: E0601: Using variable 'context' before assignment (used-before-assignment)
************* Module functional.w.wrong_import_position2
tests/functional/w/wrong_import_position2.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
tests/functional/w/wrong_import_position2.py:2:0: I0021: Useless suppression of 'import-error' (useless-suppression)
tests/functional/w/wrong_import_position2.py:2:0: I0021: Useless suppression of 'no-name-in-module' (useless-suppression)
tests/functional/w/wrong_import_position2.py:2:0: I0021: Useless suppression of 'relative-beyond-top-level' (useless-suppression)
************* Module functional.w.wrong_import_position12
tests/functional/w/wrong_import_position12.py:5:0: C0413: Import "import os" should be placed at the top of the module (wrong-import-position)
************* Module functional.w.wrong_import_position
tests/functional/w/wrong_import_position.py:22:0: C0413: Import "import six" should be placed at the top of the module (wrong-import-position)
tests/functional/w/wrong_import_position.py:26:0: C0413: Import "import datetime" should be placed at the top of the module (wrong-import-position)
tests/functional/w/wrong_import_position.py:32:0: C0413: Import "import scipy" should be placed at the top of the module (wrong-import-position)
tests/functional/w/wrong_import_position.py:33:0: C0413: Import "import astroid" should be placed at the top of the module (wrong-import-position)
tests/functional/w/wrong_import_position.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
tests/functional/w/wrong_import_position.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/w/wrong_import_position.py:3:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.w.with_using_generator
tests/functional/w/with_using_generator.py:14:8: E1129: Context manager 'generator' doesn't implement __enter__ and __exit__. (not-context-manager)
************* Module functional.w.wrong_import_position11
tests/functional/w/wrong_import_position11.py:4:0: C0413: Import "import os" should be placed at the top of the module (wrong-import-position)
tests/functional/w/wrong_import_position11.py:2:0: I0021: Useless suppression of 'pointless-string-statement' (useless-suppression)
************* Module functional.w.wrong_exception_operation
tests/functional/w/wrong_exception_operation.py:6:8: W0716: Invalid exception operation. Did you mean '(ValueError, TypeError)' instead? (wrong-exception-operation)
tests/functional/w/wrong_exception_operation.py:11:8: W0716: Invalid exception operation. Did you mean '(ValueError, TypeError)' instead? (wrong-exception-operation)
tests/functional/w/wrong_exception_operation.py:17:8: W0716: Invalid exception operation. Did you mean '(ValueError, TypeError)' instead? (wrong-exception-operation)
tests/functional/w/wrong_exception_operation.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/w/wrong_exception_operation.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/w/wrong_exception_operation.py:1:0: I0021: Useless suppression of 'superfluous-parens' (useless-suppression)
************* Module functional.w.wrong_import_position9
tests/functional/w/wrong_import_position9.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
tests/functional/w/wrong_import_position9.py:2:0: I0021: Useless suppression of 'no-name-in-module' (useless-suppression)
tests/functional/w/wrong_import_position9.py:2:0: I0021: Useless suppression of 'relative-beyond-top-level' (useless-suppression)
************* Module functional.w.wildcard_import
tests/functional/w/wildcard_import.py:2:0: W0401: Wildcard import indirect1 (wildcard-import)
tests/functional/w/wildcard_import.py:5:0: W0401: Wildcard import unknown.package (wildcard-import)
tests/functional/w/wildcard_import.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/w/wildcard_import.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/w/wildcard_import.py:1:0: I0021: Useless suppression of 'unused-wildcard-import' (useless-suppression)
************* Module functional.w.wrong_import_position8
tests/functional/w/wrong_import_position8.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
tests/functional/w/wrong_import_position8.py:2:0: I0021: Useless suppression of 'import-error' (useless-suppression)
tests/functional/w/wrong_import_position8.py:2:0: I0021: Useless suppression of 'no-name-in-module' (useless-suppression)
tests/functional/w/wrong_import_position8.py:2:0: I0021: Useless suppression of 'relative-beyond-top-level' (useless-suppression)
************* Module functional.n.nonlocal_without_binding
tests/functional/n/nonlocal_without_binding.py:22:8: E0117: nonlocal name b found without binding (nonlocal-without-binding)
tests/functional/n/nonlocal_without_binding.py:25:4: E0117: nonlocal name x found without binding (nonlocal-without-binding)
tests/functional/n/nonlocal_without_binding.py:28:8: E0117: nonlocal name some_attr found without binding (nonlocal-without-binding)
tests/functional/n/nonlocal_without_binding.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.n.names_in__all__
tests/functional/n/names_in__all__.py:19:4: E0602: Undefined variable 'SomeUndefined' (undefined-variable)
tests/functional/n/names_in__all__.py:17:4: E0603: Undefined variable name '' in __all__ (undefined-all-variable)
tests/functional/n/names_in__all__.py:20:4: E0603: Undefined variable name 'NonExistant' in __all__ (undefined-all-variable)
tests/functional/n/names_in__all__.py:22:4: E0603: Undefined variable name 'func' in __all__ (undefined-all-variable)
tests/functional/n/names_in__all__.py:23:4: E0603: Undefined variable name 'inner' in __all__ (undefined-all-variable)
tests/functional/n/names_in__all__.py:24:4: E0603: Undefined variable name 'InnerKlass' in __all__ (undefined-all-variable)
************* Module functional.n.none_dunder_protocols_py38
tests/functional/n/none_dunder_protocols_py38.py:7:20: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
************* Module functional.n.not_in_loop
tests/functional/n/not_in_loop.py:8:8: E0103: 'continue' not properly in loop (not-in-loop)
tests/functional/n/not_in_loop.py:13:4: E0103: 'continue' not properly in loop (not-in-loop)
tests/functional/n/not_in_loop.py:16:4: E0103: 'continue' not properly in loop (not-in-loop)
tests/functional/n/not_in_loop.py:20:8: E0103: 'continue' not properly in loop (not-in-loop)
tests/functional/n/not_in_loop.py:25:4: E0103: 'continue' not properly in loop (not-in-loop)
tests/functional/n/not_in_loop.py:30:4: E0103: 'break' not properly in loop (not-in-loop)
tests/functional/n/not_in_loop.py:33:4: E0103: 'continue' not properly in loop (not-in-loop)
tests/functional/n/not_in_loop.py:35:4: E0103: 'break' not properly in loop (not-in-loop)
tests/functional/n/not_in_loop.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.n.nested_blocks_issue1088
tests/functional/n/nested_blocks_issue1088.py:3:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
tests/functional/n/nested_blocks_issue1088.py:14:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
tests/functional/n/nested_blocks_issue1088.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/n/nested_blocks_issue1088.py:1:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
************* Module functional.n.namePresetCamelCase
tests/functional/n/namePresetCamelCase.py:1:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
************* Module functional.n.nan_comparison_check
tests/functional/n/nan_comparison_check.py:7:4: W0177: Comparison 'x is numpy.NaN' should be 'math.isnan(x)' (nan-comparison)
tests/functional/n/nan_comparison_check.py:8:4: W0177: Comparison 'x == numpy.NaN' should be 'math.isnan(x)' (nan-comparison)
tests/functional/n/nan_comparison_check.py:9:4: W0177: Comparison 'x == float('nan')' should be 'math.isnan(x)' (nan-comparison)
tests/functional/n/nan_comparison_check.py:10:4: W0177: Comparison 'x is float('nan')' should be 'math.isnan(x)' (nan-comparison)
tests/functional/n/nan_comparison_check.py:11:4: W0177: Comparison 'numpy.NaN == numpy.NaN' should be 'math.isnan(numpy.NaN)' (nan-comparison)
tests/functional/n/nan_comparison_check.py:14:4: W0177: Comparison 'numpy.NaN is not x' should be 'not math.isnan(x)' (nan-comparison)
tests/functional/n/nan_comparison_check.py:15:4: W0177: Comparison 'numpy.NaN != x' should be 'not math.isnan(x)' (nan-comparison)
tests/functional/n/nan_comparison_check.py:17:4: W0177: Comparison 'x != numpy.NaN' should be 'not math.isnan(x)' (nan-comparison)
tests/functional/n/nan_comparison_check.py:18:5: W0177: Comparison 'x != float('nan')' should be 'not math.isnan(x)' (nan-comparison)
tests/functional/n/nan_comparison_check.py:19:4: W0177: Comparison 'x is not numpy.NaN' should be 'not math.isnan(x)' (nan-comparison)
tests/functional/n/nan_comparison_check.py:20:7: W0177: Comparison 'x == numpy.NaN' should be 'math.isnan(x)' (nan-comparison)
tests/functional/n/nan_comparison_check.py:21:7: W0177: Comparison 'x is not float('nan')' should be 'not math.isnan(x)' (nan-comparison)
tests/functional/n/nan_comparison_check.py:22:3: W0177: Comparison 'x == numpy.NaN' should be 'math.isnan(x)' (nan-comparison)
tests/functional/n/nan_comparison_check.py:24:9: W0177: Comparison 'x is numpy.NaN' should be 'math.isnan(x)' (nan-comparison)
tests/functional/n/nan_comparison_check.py:1:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/n/nan_comparison_check.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/n/nan_comparison_check.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/n/nan_comparison_check.py:2:0: I0021: Useless suppression of 'comparison-with-itself' (useless-suppression)
************* Module functional.n.none_dunder_protocols
tests/functional/n/none_dunder_protocols.py:38:9: E1135: Value 'NonIterableClass' doesn't support membership test (unsupported-membership-test)
tests/functional/n/none_dunder_protocols.py:39:9: E1135: Value 'OldNonIterableClass' doesn't support membership test (unsupported-membership-test)
tests/functional/n/none_dunder_protocols.py:40:9: E1135: Value 'NonContainerClass' doesn't support membership test (unsupported-membership-test)
tests/functional/n/none_dunder_protocols.py:41:9: E1135: Value 'NonIterableClass()' doesn't support membership test (unsupported-membership-test)
tests/functional/n/none_dunder_protocols.py:42:9: E1135: Value 'OldNonIterableClass()' doesn't support membership test (unsupported-membership-test)
tests/functional/n/none_dunder_protocols.py:43:9: E1135: Value 'NonContainerClass()' doesn't support membership test (unsupported-membership-test)
tests/functional/n/none_dunder_protocols.py:44:9: E1135: Value 'MultipleAssignmentNonesClass()' doesn't support membership test (unsupported-membership-test)
************* Module functional.n.not_context_manager
tests/functional/n/not_context_manager.py:23:0: E1129: Context manager 'NotAManager' doesn't implement __enter__ and __exit__. (not-context-manager)
tests/functional/n/not_context_manager.py:37:0: E1129: Context manager 'dec' doesn't implement __enter__ and __exit__. (not-context-manager)
tests/functional/n/not_context_manager.py:55:0: E1129: Context manager 'int' doesn't implement __enter__ and __exit__. (not-context-manager)
tests/functional/n/not_context_manager.py:90:0: E1129: Context manager 'int' doesn't implement __enter__ and __exit__. (not-context-manager)
tests/functional/n/not_context_manager.py:134:0: E1129: Context manager 'generator' doesn't implement __enter__ and __exit__. (not-context-manager)
tests/functional/n/not_context_manager.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.n.not_async_context_manager_py37
tests/functional/n/not_async_context_manager_py37.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.n.not_callable
tests/functional/n/not_callable.py:6:0: E1102: REVISION is not callable (not-callable)
tests/functional/n/not_callable.py:24:12: E1102: INSTANCE is not callable (not-callable)
tests/functional/n/not_callable.py:26:12: E1102: LIST is not callable (not-callable)
tests/functional/n/not_callable.py:28:12: E1102: DICT is not callable (not-callable)
tests/functional/n/not_callable.py:30:12: E1102: TUPLE is not callable (not-callable)
tests/functional/n/not_callable.py:32:12: E1102: INT is not callable (not-callable)
tests/functional/n/not_callable.py:67:0: E1102: PROP.test is not callable (not-callable)
tests/functional/n/not_callable.py:68:0: E1102: PROP.custom is not callable (not-callable)
tests/functional/n/not_callable.py:137:18: E1102: ClassWithProperty().value is not callable (not-callable)
tests/functional/n/not_callable.py:202:0: E1102: get_number(10) is not callable (not-callable)
tests/functional/n/not_callable.py:1:0: I0021: Useless suppression of 'use-dict-literal' (useless-suppression)
************* Module functional.n.nested_func_defined_in_loop
tests/functional/n/nested_func_defined_in_loop.py:7:18: W0640: Cell variable i defined in loop (cell-var-from-loop)
************* Module functional.n.nonexistent_operator
tests/functional/n/nonexistent_operator.py:6:4: E0107: Use of the non-existent ++ operator (nonexistent-operator)
tests/functional/n/nonexistent_operator.py:7:0: E0107: Use of the non-existent ++ operator (nonexistent-operator)
tests/functional/n/nonexistent_operator.py:8:5: E0107: Use of the non-existent ++ operator (nonexistent-operator)
tests/functional/n/nonexistent_operator.py:12:4: E0107: Use of the non-existent -- operator (nonexistent-operator)
tests/functional/n/nonexistent_operator.py:14:0: E0107: Use of the non-existent -- operator (nonexistent-operator)
tests/functional/n/nonexistent_operator.py:15:5: E0107: Use of the non-existent -- operator (nonexistent-operator)
************* Module functional.n.nonlocal_and_global
tests/functional/n/nonlocal_and_global.py:4:0: E0115: Name 'missing' is nonlocal and global (nonlocal-and-global)
tests/functional/n/nonlocal_and_global.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/n/nonlocal_and_global.py:2:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.n.new_style_class_py_30
tests/functional/n/new_style_class_py_30.py:15:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
tests/functional/n/new_style_class_py_30.py:21:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
tests/functional/n/new_style_class_py_30.py:26:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
tests/functional/n/new_style_class_py_30.py:33:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
************* Module functional.n.namedtuple_member_inference
tests/functional/n/namedtuple_member_inference.py:17:10: E1101: Class 'Thing' has no 'x' member (no-member)
************* Module functional.n.not_async_context_manager
tests/functional/n/not_async_context_manager.py:51:4: E1701: Async context manager 'int' doesn't implement __aenter__ and __aexit__. (not-async-context-manager)
tests/functional/n/not_async_context_manager.py:53:4: E1701: Async context manager 'generator' doesn't implement __aenter__ and __aexit__. (not-async-context-manager)
tests/functional/n/not_async_context_manager.py:55:4: E1701: Async context manager 'ContextManager' doesn't implement __aenter__ and __aexit__. (not-async-context-manager)
tests/functional/n/not_async_context_manager.py:57:4: E1701: Async context manager 'PartialAsyncContextManager' doesn't implement __aenter__ and __aexit__. (not-async-context-manager)
tests/functional/n/not_async_context_manager.py:59:4: E1701: Async context manager 'SecondPartialAsyncContextManager' doesn't implement __aenter__ and __aexit__. (not-async-context-manager)
tests/functional/n/not_async_context_manager.py:66:4: E1701: Async context manager 'AsyncManagerMixin' doesn't implement __aenter__ and __aexit__. (not-async-context-manager)
tests/functional/n/not_async_context_manager.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.n.non_ascii_name_class.non_ascii_name_class
tests/functional/n/non_ascii_name_class/non_ascii_name_class.py:11:0: C2401: Class name "НoldIt" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name_class.non_ascii_name_class_method
tests/functional/n/non_ascii_name_class/non_ascii_name_class_method.py:12:4: C2401: Function name "umlaut_ä" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name_class.non_ascii_name_class_attribute
tests/functional/n/non_ascii_name_class/non_ascii_name_class_attribute.py:12:8: C2401: Attribute name "łoopback" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name_class.non_ascii_name_class_constant
tests/functional/n/non_ascii_name_class/non_ascii_name_class_constant.py:6:4: C2401: Attribute name "ŁOOPBACK" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.no.no_dummy_redefined
tests/functional/n/no/no_dummy_redefined.py:12:4: W0621: Redefining name 'value' from outer scope (line 7) (redefined-outer-name)
************* Module functional.n.no.no_self_argument_py37
tests/functional/n/no/no_self_argument_py37.py:13:4: E0213: Method should have "self" as first argument (no-self-argument)
tests/functional/n/no/no_self_argument_py37.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/n/no/no_self_argument_py37.py:3:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.n.no.no_else_return
tests/functional/n/no/no_else_return.py:6:4: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
tests/functional/n/no/no_else_return.py:15:4: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
tests/functional/n/no/no_else_return.py:29:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
tests/functional/n/no/no_else_return.py:41:4: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
tests/functional/n/no/no_else_return.py:53:4: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
tests/functional/n/no/no_else_return.py:68:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
tests/functional/n/no/no_else_return.py:104:4: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
tests/functional/n/no/no_else_return.py:4:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/n/no/no_else_return.py:4:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.n.no.no_classmethod_decorator
tests/functional/n/no/no_classmethod_decorator.py:14:4: R0202: Consider using a decorator instead of calling classmethod (no-classmethod-decorator)
tests/functional/n/no/no_classmethod_decorator.py:17:8: R0202: Consider using a decorator instead of calling classmethod (no-classmethod-decorator)
tests/functional/n/no/no_classmethod_decorator.py:25:4: R0202: Consider using a decorator instead of calling classmethod (no-classmethod-decorator)
************* Module functional.n.no.no_member_subclassed_dataclasses
tests/functional/n/no/no_member_subclassed_dataclasses.py:10:25: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead (consider-using-alias)
tests/functional/n/no/no_member_subclassed_dataclasses.py:22:25: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead (consider-using-alias)
tests/functional/n/no/no_member_subclassed_dataclasses.py:35:25: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead (consider-using-alias)
************* Module functional.n.no.no_member_dataclasses
tests/functional/n/no/no_member_dataclasses.py:69:26: E1101: Instance of 'Field' has no 'items' member (no-member)
tests/functional/n/no/no_member_dataclasses.py:81:26: E1101: Instance of 'Field' has no 'items' member (no-member)
tests/functional/n/no/no_member_dataclasses.py:15:25: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead (consider-using-alias)
tests/functional/n/no/no_member_dataclasses.py:28:25: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead (consider-using-alias)
tests/functional/n/no/no_member_dataclasses.py:42:25: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead (consider-using-alias)
tests/functional/n/no/no_member_dataclasses.py:55:15: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/n/no/no_member_dataclasses.py:66:15: R6002: 'typing.Dict' will be deprecated with PY39, consider using 'dict' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/n/no/no_member_dataclasses.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.n.no.no_else_break
tests/functional/n/no/no_else_break.py:8:8: R1723: Unnecessary "else" after "break", remove the "else" and de-indent the code inside it (no-else-break)
tests/functional/n/no/no_else_break.py:16:8: R1723: Unnecessary "elif" after "break", remove the leading "el" from "elif" (no-else-break)
tests/functional/n/no/no_else_break.py:28:12: R1723: Unnecessary "else" after "break", remove the "else" and de-indent the code inside it (no-else-break)
tests/functional/n/no/no_else_break.py:41:8: R1723: Unnecessary "else" after "break", remove the "else" and de-indent the code inside it (no-else-break)
tests/functional/n/no/no_else_break.py:54:8: R1723: Unnecessary "elif" after "break", remove the leading "el" from "elif" (no-else-break)
tests/functional/n/no/no_else_break.py:70:12: R1723: Unnecessary "else" after "break", remove the "else" and de-indent the code inside it (no-else-break)
tests/functional/n/no/no_else_break.py:110:8: R1723: Unnecessary "else" after "break", remove the "else" and de-indent the code inside it (no-else-break)
tests/functional/n/no/no_else_break.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/n/no/no_else_break.py:3:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.n.no.no_else_continue
tests/functional/n/no/no_else_continue.py:8:8: R1724: Unnecessary "else" after "continue", remove the "else" and de-indent the code inside it (no-else-continue)
tests/functional/n/no/no_else_continue.py:16:8: R1724: Unnecessary "elif" after "continue", remove the leading "el" from "elif" (no-else-continue)
tests/functional/n/no/no_else_continue.py:28:12: R1724: Unnecessary "else" after "continue", remove the "else" and de-indent the code inside it (no-else-continue)
tests/functional/n/no/no_else_continue.py:41:8: R1724: Unnecessary "else" after "continue", remove the "else" and de-indent the code inside it (no-else-continue)
tests/functional/n/no/no_else_continue.py:54:8: R1724: Unnecessary "elif" after "continue", remove the leading "el" from "elif" (no-else-continue)
tests/functional/n/no/no_else_continue.py:70:12: R1724: Unnecessary "else" after "continue", remove the "else" and de-indent the code inside it (no-else-continue)
tests/functional/n/no/no_else_continue.py:110:8: R1724: Unnecessary "else" after "continue", remove the "else" and de-indent the code inside it (no-else-continue)
tests/functional/n/no/no_else_continue.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/n/no/no_else_continue.py:3:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.n.no.no_else_raise
tests/functional/n/no/no_else_raise.py:6:4: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
tests/functional/n/no/no_else_raise.py:15:4: R1720: Unnecessary "elif" after "raise", remove the leading "el" from "elif" (no-else-raise)
tests/functional/n/no/no_else_raise.py:29:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
tests/functional/n/no/no_else_raise.py:41:4: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
tests/functional/n/no/no_else_raise.py:53:4: R1720: Unnecessary "elif" after "raise", remove the leading "el" from "elif" (no-else-raise)
tests/functional/n/no/no_else_raise.py:68:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
tests/functional/n/no/no_else_raise.py:104:4: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
tests/functional/n/no/no_else_raise.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/n/no/no_else_raise.py:3:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.n.no.no_warning_docstring
tests/functional/n/no/no_warning_docstring.py:4:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
tests/functional/n/no/no_warning_docstring.py:4:0: I0021: Useless suppression of 'using-constant-test' (useless-suppression)
************* Module functional.n.no.no_self_argument
tests/functional/n/no/no_self_argument.py:8:4: E0213: Method should have "self" as first argument (no-self-argument)
tests/functional/n/no/no_self_argument.py:12:4: E0213: Method should have "self" as first argument (no-self-argument)
************* Module functional.n.no.no_member_assign_same_line
tests/functional/n/no/no_member_assign_same_line.py:16:22: E1101: Instance of 'AssignMemberInSameLine' has no 'member' member (no-member)
************* Module functional.n.no.no_member_if_statements
tests/functional/n/no/no_member_if_statements.py:6:0: E1101: Instance of 'str' has no 'isoformat' member (no-member)
tests/functional/n/no/no_member_if_statements.py:12:4: E1101: Instance of 'str' has no 'isoformat' member (no-member)
tests/functional/n/no/no_member_if_statements.py:23:3: E1101: Instance of 'str' has no 'none_existent' member (no-member)
tests/functional/n/no/no_member_if_statements.py:30:17: R6003: Consider using alternative Union syntax instead of 'Union'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
tests/functional/n/no/no_member_if_statements.py:33:23: R6003: Consider using alternative Union syntax instead of 'Union'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
************* Module functional.n.no.no_name_in_module
tests/functional/n/no/no_name_in_module.py:5:0: E0611: No name 'tutu' in module 'collections' (no-name-in-module)
tests/functional/n/no/no_name_in_module.py:6:0: E0611: No name 'toto' in module 'collections' (no-name-in-module)
tests/functional/n/no/no_name_in_module.py:10:0: E1101: Module 'xml.etree.ElementTree' has no 'nonexistant_function' member (no-member)
tests/functional/n/no/no_name_in_module.py:11:0: E1101: Module 'xml.etree.ElementTree' has no 'another' member (no-member)
tests/functional/n/no/no_name_in_module.py:16:6: E1101: Module 'sys' has no 'stdoout' member; maybe 'stdout'? (no-member)
tests/functional/n/no/no_name_in_module.py:23:0: E0611: No name 'findiiter' in module 're' (no-name-in-module)
tests/functional/n/no/no_name_in_module.py:23:0: E0611: No name 'compiile' in module 're' (no-name-in-module)
tests/functional/n/no/no_name_in_module.py:26:0: W0104: Statement seems to have no effect (pointless-statement)
tests/functional/n/no/no_name_in_module.py:34:4: E0611: No name 'anything' in module 'collections' (no-name-in-module)
tests/functional/n/no/no_name_in_module.py:49:4: E0611: No name 'indeed_missing' in module 'collections' (no-name-in-module)
tests/functional/n/no/no_name_in_module.py:54:4: E0611: No name 'emit' in module 'collections' (no-name-in-module)
tests/functional/n/no/no_name_in_module.py:71:8: E0611: No name 'emit2' in module 'collections' (no-name-in-module)
tests/functional/n/no/no_name_in_module.py:76:0: E0611: No name 'lala' in module 'functional.n.no.no_self_argument' (no-name-in-module)
tests/functional/n/no/no_name_in_module.py:77:0: E0611: No name 'bla' in module 'functional.n.no.no_self_argument' (no-name-in-module)
tests/functional/n/no/no_name_in_module.py:80:0: E0611: No name 'THIS_does_not_EXIST' in module 'argparse' (no-name-in-module)
tests/functional/n/no/no_name_in_module.py:2:0: I0021: Useless suppression of 'bare-except' (useless-suppression)
tests/functional/n/no/no_name_in_module.py:2:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
************* Module functional.n.no.no_method_argument_py38
tests/functional/n/no/no_method_argument_py38.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.n.no.no_member_imports
tests/functional/n/no/no_member_imports.py:10:4: E1101: Module 'math' has no 'THIS_does_not_EXIST' member (no-member)
tests/functional/n/no/no_member_imports.py:19:4: E1101: Module 'argparse' has no 'THIS_does_not_EXIST' member (no-member)
tests/functional/n/no/no_member_imports.py:25:4: E1101: Module 'xml.etree' has no 'THIS_does_not_EXIST' member (no-member)
tests/functional/n/no/no_member_imports.py:32:4: E1101: Module 'argparse' has no 'submodule' member (no-member)
tests/functional/n/no/no_member_imports.py:38:4: E1101: Module 'collections.abc' has no 'THIS_does_not_EXIST' member (no-member)
tests/functional/n/no/no_member_imports.py:44:4: E1101: Module 'sys' has no 'THIS_does_not_EXIST' member (no-member)
tests/functional/n/no/no_member_imports.py:59:4: E1101: Class 'Option' has no 'THIS_does_not_EXIST' member (no-member)
************* Module functional.n.no.no_staticmethod_decorator
tests/functional/n/no/no_staticmethod_decorator.py:14:4: R0203: Consider using a decorator instead of calling staticmethod (no-staticmethod-decorator)
tests/functional/n/no/no_staticmethod_decorator.py:17:8: R0203: Consider using a decorator instead of calling staticmethod (no-staticmethod-decorator)
tests/functional/n/no/no_staticmethod_decorator.py:25:4: R0203: Consider using a decorator instead of calling staticmethod (no-staticmethod-decorator)
************* Module functional.n.non.non_str_assignment_to_dunder_name
tests/functional/n/non/non_str_assignment_to_dunder_name.py:37:0: W1115: Non-string value assigned to __name__ (non-str-assignment-to-dunder-name)
tests/functional/n/non/non_str_assignment_to_dunder_name.py:38:0: W1115: Non-string value assigned to __name__ (non-str-assignment-to-dunder-name)
tests/functional/n/non/non_str_assignment_to_dunder_name.py:39:0: W1115: Non-string value assigned to __name__ (non-str-assignment-to-dunder-name)
tests/functional/n/non/non_str_assignment_to_dunder_name.py:40:0: W1115: Non-string value assigned to __name__ (non-str-assignment-to-dunder-name)
tests/functional/n/non/non_str_assignment_to_dunder_name.py:46:0: W1115: Non-string value assigned to __name__ (non-str-assignment-to-dunder-name)
tests/functional/n/non/non_str_assignment_to_dunder_name.py:47:0: W1115: Non-string value assigned to __name__ (non-str-assignment-to-dunder-name)
tests/functional/n/non/non_str_assignment_to_dunder_name.py:48:0: W1115: Non-string value assigned to __name__ (non-str-assignment-to-dunder-name)
tests/functional/n/non/non_str_assignment_to_dunder_name.py:49:0: W1115: Non-string value assigned to __name__ (non-str-assignment-to-dunder-name)
tests/functional/n/non/non_str_assignment_to_dunder_name.py:38:0: R0204: Redefinition of ExampleClass.__name__ type from int to bool (redefined-variable-type)
tests/functional/n/non/non_str_assignment_to_dunder_name.py:47:0: R0204: Redefinition of example_function.__name__ type from int to bool (redefined-variable-type)
************* Module functional.n.non.non_init_parent_called
tests/functional/n/non/non_init_parent_called.py:7:0: E0401: Unable to import 'nonexistant' (import-error)
tests/functional/n/non/non_init_parent_called.py:15:8: W0233: __init__ method from a non direct base class 'BBBBMixin' is called (non-parent-init-called)
tests/functional/n/non/non_init_parent_called.py:23:50: E1101: Module 'functional.n.non.non_init_parent_called' has no 'BBBB' member (no-member)
tests/functional/n/non/non_init_parent_called.py:28:8: E1101: Module 'functional.n.non.non_init_parent_called' has no 'BBBB' member (no-member)
tests/functional/n/non/non_init_parent_called.py:49:4: W0231: __init__ method from base class 'dict' is not called (super-init-not-called)
tests/functional/n/non/non_init_parent_called.py:51:8: E1101: Super of 'Super2' has no '__woohoo__' member (no-member)
tests/functional/n/non/non_init_parent_called.py:1:0: I0021: Useless suppression of 'protected-access' (useless-suppression)
tests/functional/n/non/non_init_parent_called.py:1:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
tests/functional/n/non/non_init_parent_called.py:2:0: I0021: Useless suppression of 'unnecessary-dunder-call' (useless-suppression)
************* Module functional.n.non.non_iterator_returned
tests/functional/n/non/non_iterator_returned.py:79:4: E0301: __iter__ returns non-iterator (non-iterator-returned)
tests/functional/n/non/non_iterator_returned.py:86:4: E0301: __iter__ returns non-iterator (non-iterator-returned)
tests/functional/n/non/non_iterator_returned.py:93:4: E0301: __iter__ returns non-iterator (non-iterator-returned)
tests/functional/n/non/non_iterator_returned.py:100:4: E0301: __iter__ returns non-iterator (non-iterator-returned)
tests/functional/n/non/non_iterator_returned.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.n.non.non_ascii_name
tests/functional/n/non/non_ascii_name.py:3:0: C2401: Variable name "áéíóú" contains a non-ASCII character, consider renaming it. (non-ascii-name)
tests/functional/n/non/non_ascii_name.py:5:0: C2401: Function name "úóíéá" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_import.non_ascii_import_as_bad
tests/functional/n/non_ascii_import/non_ascii_import_as_bad.py:2:0: C2403: Module name "łos" contains a non-ASCII character, use an ASCII-only alias for import. (non-ascii-module-import)
************* Module functional.n.non_ascii_import.non_ascii_import_from_as
tests/functional/n/non_ascii_import/non_ascii_import_from_as.py:2:0: C2403: Module name "łos" contains a non-ASCII character, use an ASCII-only alias for import. (non-ascii-module-import)
************* Module functional.n.non_ascii_name.non_ascii_name_function_argument_py39plus
tests/functional/n/non_ascii_name/non_ascii_name_function_argument_py39plus.py:12:4: C2401: Argument name "łol" contains a non-ASCII character, consider renaming it. (non-ascii-name)
tests/functional/n/non_ascii_name/non_ascii_name_function_argument_py39plus.py:24:4: C2401: Argument name "łol" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name.non_ascii_name_kwargs_py39plus
tests/functional/n/non_ascii_name/non_ascii_name_kwargs_py39plus.py:17:4: C2401: Argument name "łol" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name.non_ascii_name_staticmethod
tests/functional/n/non_ascii_name/non_ascii_name_staticmethod.py:11:4: C2401: Function name "umlaut_ä" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name.non_ascii_name_inline_var
tests/functional/n/non_ascii_name/non_ascii_name_inline_var.py:7:8: C2401: Variable name "łol" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name.non_ascii_name_function_argument_py38
tests/functional/n/non_ascii_name/non_ascii_name_function_argument_py38.py:11:4: C2401: Argument name "łol" contains a non-ASCII character, consider renaming it. (non-ascii-name)
tests/functional/n/non_ascii_name/non_ascii_name_function_argument_py38.py:23:4: C2401: Argument name "łol" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name.non_ascii_name_loł
tests/functional/n/non_ascii_name/non_ascii_name_loł.py:1:0: W2402: File name "non_ascii_name_loł" contains a non-ASCII character. PEP 3131 only allows non-ascii identifiers, not file names. (non-ascii-file-name)
************* Module functional.n.non_ascii_name.non_ascii_name_local
tests/functional/n/non_ascii_name/non_ascii_name_local.py:6:4: C2401: Variable name "łol" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name.non_ascii_name_for_loop
tests/functional/n/non_ascii_name/non_ascii_name_for_loop.py:10:8: C2401: Variable name "łol" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name.non_ascii_name_decorator
tests/functional/n/non_ascii_name/non_ascii_name_decorator.py:16:4: C2401: Argument name "fåling" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name.non_ascii_name_function
tests/functional/n/non_ascii_name/non_ascii_name_function.py:13:0: C2401: Function name "sayНello" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name.non_ascii_name_assignment_expressions
tests/functional/n/non_ascii_name/non_ascii_name_assignment_expressions.py:3:4: C2401: Variable name "loł" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name.non_ascii_name_kwargs_py38
tests/functional/n/non_ascii_name/non_ascii_name_kwargs_py38.py:16:4: C2401: Argument name "łol" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name.non_ascii_name_pos_and_kwonly_function
tests/functional/n/non_ascii_name/non_ascii_name_pos_and_kwonly_function.py:12:4: C2401: Argument name "not_okay_łol" contains a non-ASCII character, consider renaming it. (non-ascii-name)
tests/functional/n/non_ascii_name/non_ascii_name_pos_and_kwonly_function.py:13:4: C2401: Argument name "not_okay_defaułt" contains a non-ASCII character, consider renaming it. (non-ascii-name)
tests/functional/n/non_ascii_name/non_ascii_name_pos_and_kwonly_function.py:16:4: C2401: Argument name "p_or_kw_not_økay" contains a non-ASCII character, consider renaming it. (non-ascii-name)
tests/functional/n/non_ascii_name/non_ascii_name_pos_and_kwonly_function.py:19:4: C2401: Argument name "kw_arg_not_økay" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name.non_ascii_name_try_except
tests/functional/n/non_ascii_name/non_ascii_name_try_except.py:9:0: C2401: Variable name "łol" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.n.non_ascii_name.non_ascii_name_variable
tests/functional/n/non_ascii_name/non_ascii_name_variable.py:7:0: C2401: Variable name "łol" contains a non-ASCII character, consider renaming it. (non-ascii-name)
tests/functional/n/non_ascii_name/non_ascii_name_variable.py:9:0: C2401: Variable name "łol" contains a non-ASCII character, consider renaming it. (non-ascii-name)
************* Module functional.k.keyword_arg_before_vararg
tests/functional/k/keyword_arg_before_vararg.py:5:0: W1113: Keyword argument before variable positional arguments list in the definition of check_kwargs_before_args function (keyword-arg-before-vararg)
tests/functional/k/keyword_arg_before_vararg.py:14:4: W1113: Keyword argument before variable positional arguments list in the definition of func_in_class function (keyword-arg-before-vararg)
tests/functional/k/keyword_arg_before_vararg.py:19:4: W1113: Keyword argument before variable positional arguments list in the definition of static_method_in_class function (keyword-arg-before-vararg)
tests/functional/k/keyword_arg_before_vararg.py:24:4: W1113: Keyword argument before variable positional arguments list in the definition of class_method_in_class function (keyword-arg-before-vararg)
tests/functional/k/keyword_arg_before_vararg.py:11:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
tests/functional/k/keyword_arg_before_vararg.py:11:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
************* Module functional.m.module___dict__
tests/functional/m/module___dict__.py:5:6: E0601: Using variable '__dict__' before assignment (used-before-assignment)
************* Module functional.m.mapping_context_py3
tests/functional/m/mapping_context_py3.py:19:7: E1134: Non-mapping value SomeClass() is used in a mapping context (not-a-mapping)
tests/functional/m/mapping_context_py3.py:1:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
************* Module functional.m.multiple_imports
tests/functional/m/multiple_imports.py:2:0: C0410: Multiple imports on one line (os, socket) (multiple-imports)
tests/functional/m/multiple_imports.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/m/multiple_imports.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.m.misplaced_bare_raise
tests/functional/m/misplaced_bare_raise.py:6:4: E0704: The raise statement is not inside an except clause (misplaced-bare-raise)
tests/functional/m/misplaced_bare_raise.py:36:16: E0704: The raise statement is not inside an except clause (misplaced-bare-raise)
tests/functional/m/misplaced_bare_raise.py:39:4: E0704: The raise statement is not inside an except clause (misplaced-bare-raise)
tests/functional/m/misplaced_bare_raise.py:40:0: E0704: The raise statement is not inside an except clause (misplaced-bare-raise)
tests/functional/m/misplaced_bare_raise.py:49:4: E0704: The raise statement is not inside an except clause (misplaced-bare-raise)
tests/functional/m/misplaced_bare_raise.py:57:4: E0704: The raise statement is not inside an except clause (misplaced-bare-raise)
tests/functional/m/misplaced_bare_raise.py:68:4: E0704: The raise statement is not inside an except clause (misplaced-bare-raise)
************* Module functional.m.misplaced_format_function
tests/functional/m/misplaced_format_function.py:5:0: E0119: format function is not called on str (misplaced-format-function)
tests/functional/m/misplaced_format_function.py:6:0: E0119: format function is not called on str (misplaced-format-function)
tests/functional/m/misplaced_format_function.py:52:8: E0119: format function is not called on str (misplaced-format-function)
tests/functional/m/misplaced_format_function.py:58:0: E0119: format function is not called on str (misplaced-format-function)
tests/functional/m/misplaced_format_function.py:3:0: I0021: Useless suppression of 'pointless-string-statement' (useless-suppression)
tests/functional/m/misplaced_format_function.py:3:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
tests/functional/m/misplaced_format_function.py:3:0: I0021: Useless suppression of 'no-member' (useless-suppression)
tests/functional/m/misplaced_format_function.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/m/misplaced_format_function.py:3:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
************* Module functional.m.membership_protocol
tests/functional/m/membership_protocol.py:4:5: R6201: Consider using set for membership test (use-set-for-membership)
tests/functional/m/membership_protocol.py:7:5: R6201: Consider using set for membership test (use-set-for-membership)
tests/functional/m/membership_protocol.py:113:6: E1135: Value '42' doesn't support membership test (unsupported-membership-test)
tests/functional/m/membership_protocol.py:114:10: E1135: Value 'None' doesn't support membership test (unsupported-membership-test)
tests/functional/m/membership_protocol.py:115:6: E1135: Value '8.5' doesn't support membership test (unsupported-membership-test)
tests/functional/m/membership_protocol.py:120:10: E1135: Value 'EmptyClass()' doesn't support membership test (unsupported-membership-test)
tests/functional/m/membership_protocol.py:121:6: E1135: Value 'EmptyClass' doesn't support membership test (unsupported-membership-test)
tests/functional/m/membership_protocol.py:122:10: E1135: Value 'count' doesn't support membership test (unsupported-membership-test)
tests/functional/m/membership_protocol.py:123:6: E1135: Value 'range' doesn't support membership test (unsupported-membership-test)
************* Module functional.m.monkeypatch_method
tests/functional/m/monkeypatch_method.py:1:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/m/monkeypatch_method.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/m/monkeypatch_method.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.m.mixin_class_rgx
tests/functional/m/mixin_class_rgx.py:24:4: E1701: Async context manager 'AsyncManagerMixedin' doesn't implement __aenter__ and __aexit__. (not-async-context-manager)
tests/functional/m/mixin_class_rgx.py:26:4: E1701: Async context manager 'AsyncManagerMixin' doesn't implement __aenter__ and __aexit__. (not-async-context-manager)
tests/functional/m/mixin_class_rgx.py:55:11: E1101: Instance of 'OutsideInitMixedin' has no 'method' member (no-member)
tests/functional/m/mixin_class_rgx.py:60:17: E1101: Instance of 'NoMemberMixin' has no 'method' member (no-member)
************* Module functional.m.mapping_context
tests/functional/m/mapping_context.py:32:7: E1134: Non-mapping value CustomMapping is used in a mapping context (not-a-mapping)
tests/functional/m/mapping_context.py:37:7: E1134: Non-mapping value NotMapping() is used in a mapping context (not-a-mapping)
tests/functional/m/mapping_context.py:4:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/m/mapping_context.py:4:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
************* Module functional.m.method_hidden
tests/functional/m/method_hidden.py:18:4: E0202: An attribute defined in functional.m.method_hidden line 12 hides this method (method-hidden)
tests/functional/m/method_hidden.py:86:4: E0202: An attribute defined in functional.m.method_hidden line 84 hides this method (method-hidden)
tests/functional/m/method_hidden.py:113:4: E0202: An attribute defined in functional.m.method_hidden line 109 hides this method (method-hidden)
tests/functional/m/method_hidden.py:1:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.m.misplaced_future
tests/functional/m/misplaced_future.py:3:0: W0410: __future__ import is not the first non docstring statement (misplaced-future)
************* Module functional.m.membership_protocol_py3
tests/functional/m/membership_protocol_py3.py:34:9: E1135: Value 'IterableClass()' doesn't support membership test (unsupported-membership-test)
tests/functional/m/membership_protocol_py3.py:35:9: E1135: Value 'OldIterableClass()' doesn't support membership test (unsupported-membership-test)
tests/functional/m/membership_protocol_py3.py:36:9: E1135: Value 'ContainerClass()' doesn't support membership test (unsupported-membership-test)
tests/functional/m/membership_protocol_py3.py:1:0: I0021: Useless suppression of 'unused-argument' (useless-suppression)
************* Module functional.m.modified_iterating
tests/functional/m/modified_iterating.py:8:4: W4701: Iterated list 'item_list' is being modified inside for loop body, consider iterating through a copy of it instead. (modified-iterating-list)
tests/functional/m/modified_iterating.py:11:4: W4701: Iterated list 'item_list' is being modified inside for loop body, consider iterating through a copy of it instead. (modified-iterating-list)
tests/functional/m/modified_iterating.py:29:4: E4702: Iterated dict 'my_dict' is being modified inside for loop body, iterate through a copy of it instead. (modified-iterating-dict)
tests/functional/m/modified_iterating.py:39:4: E4703: Iterated set 'item_set' is being modified inside for loop body, iterate through a copy of it instead. (modified-iterating-set)
tests/functional/m/modified_iterating.py:46:8: W4701: Iterated list 'item_list' is being modified inside for loop body, consider iterating through a copy of it instead. (modified-iterating-list)
tests/functional/m/modified_iterating.py:48:4: W4701: Iterated list 'item_list' is being modified inside for loop body, consider iterating through a copy of it instead. (modified-iterating-list)
tests/functional/m/modified_iterating.py:47:8: E4703: Iterated set 'item_set' is being modified inside for loop body, iterate through a copy of it instead. (modified-iterating-set)
tests/functional/m/modified_iterating.py:52:4: W4701: Iterated list 'item_list' is being modified inside for loop body, consider iterating through a copy of it instead. (modified-iterating-list)
tests/functional/m/modified_iterating.py:55:12: W4701: Iterated list 'item_list' is being modified inside for loop body, consider iterating through a copy of it instead. (modified-iterating-list)
tests/functional/m/modified_iterating.py:57:16: W4701: Iterated list 'item_list' is being modified inside for loop body, consider iterating through a copy of it instead. (modified-iterating-list)
tests/functional/m/modified_iterating.py:53:13: R6102: Consider using an in-place tuple instead of list (consider-using-tuple)
tests/functional/m/modified_iterating.py:54:17: R6102: Consider using an in-place tuple instead of list (consider-using-tuple)
tests/functional/m/modified_iterating.py:56:21: R6102: Consider using an in-place tuple instead of list (consider-using-tuple)
************* Module functional.m.method_cache_max_size_none
tests/functional/m/method_cache_max_size_none.py:25:5: W1518: 'lru_cache(maxsize=None)' or 'cache' will keep all method args alive indefinitely, including 'self' (method-cache-max-size-none)
tests/functional/m/method_cache_max_size_none.py:29:5: W1518: 'lru_cache(maxsize=None)' or 'cache' will keep all method args alive indefinitely, including 'self' (method-cache-max-size-none)
tests/functional/m/method_cache_max_size_none.py:33:5: W1518: 'lru_cache(maxsize=None)' or 'cache' will keep all method args alive indefinitely, including 'self' (method-cache-max-size-none)
tests/functional/m/method_cache_max_size_none.py:37:5: W1518: 'lru_cache(maxsize=None)' or 'cache' will keep all method args alive indefinitely, including 'self' (method-cache-max-size-none)
tests/functional/m/method_cache_max_size_none.py:42:5: W1518: 'lru_cache(maxsize=None)' or 'cache' will keep all method args alive indefinitely, including 'self' (method-cache-max-size-none)
tests/functional/m/method_cache_max_size_none.py:43:5: W1518: 'lru_cache(maxsize=None)' or 'cache' will keep all method args alive indefinitely, including 'self' (method-cache-max-size-none)
tests/functional/m/method_cache_max_size_none.py:73:5: W1518: 'lru_cache(maxsize=None)' or 'cache' will keep all method args alive indefinitely, including 'self' (method-cache-max-size-none)
************* Module functional.m.method_cache_max_size_none_py39
tests/functional/m/method_cache_max_size_none_py39.py:27:5: W1518: 'lru_cache(maxsize=None)' or 'cache' will keep all method args alive indefinitely, including 'self' (method-cache-max-size-none)
tests/functional/m/method_cache_max_size_none_py39.py:31:5: W1518: 'lru_cache(maxsize=None)' or 'cache' will keep all method args alive indefinitely, including 'self' (method-cache-max-size-none)
tests/functional/m/method_cache_max_size_none_py39.py:35:5: W1518: 'lru_cache(maxsize=None)' or 'cache' will keep all method args alive indefinitely, including 'self' (method-cache-max-size-none)
tests/functional/m/method_cache_max_size_none_py39.py:39:5: W1518: 'lru_cache(maxsize=None)' or 'cache' will keep all method args alive indefinitely, including 'self' (method-cache-max-size-none)
tests/functional/m/method_cache_max_size_none_py39.py:45:5: W1518: 'lru_cache(maxsize=None)' or 'cache' will keep all method args alive indefinitely, including 'self' (method-cache-max-size-none)
************* Module functional.o.overloaded_operator
tests/functional/o/overloaded_operator.py:1:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/o/overloaded_operator.py:1:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
************* Module functional.o.overridden_final_method_regression
tests/functional/o/overridden_final_method_regression.py:4:1: E0602: Undefined variable 'unknown_decorator' (undefined-variable)
************* Module functional.o.overridden_final_method_py38
tests/functional/o/overridden_final_method_py38.py:9:5: W2602: typing.final is not supported by all versions included in the py-version setting (using-final-decorator-in-unsupported-version)
tests/functional/o/overridden_final_method_py38.py:24:9: W2602: typing.final is not supported by all versions included in the py-version setting (using-final-decorator-in-unsupported-version)
tests/functional/o/overridden_final_method_py38.py:4:0: I0021: Useless suppression of 'useless-object-inheritance' (useless-suppression)
tests/functional/o/overridden_final_method_py38.py:4:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.t.try_except_raise
tests/functional/t/try_except_raise.py:5:0: W0706: The except handler raises immediately (try-except-raise)
tests/functional/t/try_except_raise.py:16:0: W0706: The except handler raises immediately (try-except-raise)
tests/functional/t/try_except_raise.py:53:4: W0706: The except handler raises immediately (try-except-raise)
tests/functional/t/try_except_raise.py:67:0: W0706: The except handler raises immediately (try-except-raise)
tests/functional/t/try_except_raise.py:72:0: W0706: The except handler raises immediately (try-except-raise)
tests/functional/t/try_except_raise.py:94:0: W0706: The except handler raises immediately (try-except-raise)
tests/functional/t/try_except_raise.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/t/try_except_raise.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/t/try_except_raise.py:2:0: I0021: Useless suppression of 'undefined-variable' (useless-suppression)
************* Module functional.t.tokenize_error
tests/functional/t/tokenize_error.py:7:0: E0001: EOF in multi-line statement (syntax-error)
************* Module functional.t.typevar_naming_style_default
tests/functional/t/typevar_naming_style_default.py:11:0: C0105: Type variable name does not reflect variance. "GoodNameWithoutContra" is contravariant, use "GoodNameWithoutContra_contra" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_naming_style_default.py:19:0: C0131: TypeVar cannot be both covariant and contravariant (typevar-double-variance)
tests/functional/t/typevar_naming_style_default.py:19:0: C0105: Type variable name does not reflect variance (typevar-name-incorrect-variance)
tests/functional/t/typevar_naming_style_default.py:23:0: C0131: TypeVar cannot be both covariant and contravariant (typevar-double-variance)
tests/functional/t/typevar_naming_style_default.py:23:0: C0105: Type variable name does not reflect variance (typevar-name-incorrect-variance)
tests/functional/t/typevar_naming_style_default.py:24:0: C0131: TypeVar cannot be both covariant and contravariant (typevar-double-variance)
tests/functional/t/typevar_naming_style_default.py:24:0: C0105: Type variable name does not reflect variance (typevar-name-incorrect-variance)
tests/functional/t/typevar_naming_style_default.py:47:4: C0105: Type variable name does not reflect variance. "a_BadNameWithoutContra" is contravariant, use "a_BadNameWithoutContra_contra" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_naming_style_default.py:2:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
tests/functional/t/typevar_naming_style_default.py:2:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.t.trailing_whitespaces
tests/functional/t/trailing_whitespaces.py:2:0: I0021: Useless suppression of 'mixed-line-endings' (useless-suppression)
************* Module functional.t.typevar_name_incorrect_variance
tests/functional/t/typevar_name_incorrect_variance.py:7:0: C0105: Type variable name does not reflect variance. "T_co" is invariant, use "T" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:8:0: C0105: Type variable name does not reflect variance. "T_contra" is invariant, use "T" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:9:0: C0105: Type variable name does not reflect variance. "ScoresT_contra" is invariant, use "ScoresT" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:17:0: C0105: Type variable name does not reflect variance. "CT_co" is contravariant, use "CT_contra" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:18:0: C0105: Type variable name does not reflect variance. "CT_contra" is invariant, use "CT" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:22:0: C0105: Type variable name does not reflect variance. "VT" is covariant, use "VT_co" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:23:0: C0105: Type variable name does not reflect variance. "VT_contra" is covariant, use "VT_co" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:28:0: C0105: Type variable name does not reflect variance. "VT_co" is invariant, use "VT" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:29:0: C0105: Type variable name does not reflect variance. "VT_contra" is invariant, use "VT" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:31:0: C0105: Type variable name does not reflect variance. "VT" is covariant, use "VT_co" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:33:0: C0105: Type variable name does not reflect variance. "VT_contra" is covariant, use "VT_co" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:38:0: C0105: Type variable name does not reflect variance. "VT_co" is invariant, use "VT" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:41:0: C0105: Type variable name does not reflect variance. "VT_contra" is invariant, use "VT" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:45:0: C0105: Type variable name does not reflect variance. "VT" is contravariant, use "VT_contra" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:46:0: C0105: Type variable name does not reflect variance. "VT_co" is contravariant, use "VT_contra" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:52:0: C0105: Type variable name does not reflect variance. "VT_co" is invariant, use "VT" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:55:0: C0105: Type variable name does not reflect variance. "VT_contra" is invariant, use "VT" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:61:4: C0105: Type variable name does not reflect variance. "VT" is covariant, use "VT_co" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:62:4: C0105: Type variable name does not reflect variance. "VT_contra" is covariant, use "VT_co" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:64:7: C0105: Type variable name does not reflect variance. "VT_contra" is covariant, use "VT_co" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_incorrect_variance.py:67:5: C0105: Type variable name does not reflect variance. "VT_contra" is covariant, use "VT_co" instead (typevar-name-incorrect-variance)
************* Module functional.t.typevar_double_variance
tests/functional/t/typevar_double_variance.py:6:0: C0131: TypeVar cannot be both covariant and contravariant (typevar-double-variance)
tests/functional/t/typevar_double_variance.py:6:0: C0105: Type variable name does not reflect variance (typevar-name-incorrect-variance)
tests/functional/t/typevar_double_variance.py:8:0: C0131: TypeVar cannot be both covariant and contravariant (typevar-double-variance)
tests/functional/t/typevar_double_variance.py:8:0: C0105: Type variable name does not reflect variance (typevar-name-incorrect-variance)
tests/functional/t/typevar_double_variance.py:2:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.t.trailing_comma_tuple
tests/functional/t/trailing_comma_tuple.py:3:0: R1707: Disallow trailing comma tuple (trailing-comma-tuple)
tests/functional/t/trailing_comma_tuple.py:4:0: R1707: Disallow trailing comma tuple (trailing-comma-tuple)
tests/functional/t/trailing_comma_tuple.py:5:0: R1707: Disallow trailing comma tuple (trailing-comma-tuple)
tests/functional/t/trailing_comma_tuple.py:6:0: R1707: Disallow trailing comma tuple (trailing-comma-tuple)
tests/functional/t/trailing_comma_tuple.py:31:0: R1707: Disallow trailing comma tuple (trailing-comma-tuple)
tests/functional/t/trailing_comma_tuple.py:34:0: R1707: Disallow trailing comma tuple (trailing-comma-tuple)
tests/functional/t/trailing_comma_tuple.py:38:0: R1707: Disallow trailing comma tuple (trailing-comma-tuple)
tests/functional/t/trailing_comma_tuple.py:41:0: R1707: Disallow trailing comma tuple (trailing-comma-tuple)
tests/functional/t/trailing_comma_tuple.py:47:0: R1707: Disallow trailing comma tuple (trailing-comma-tuple)
tests/functional/t/trailing_comma_tuple.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/t/trailing_comma_tuple.py:2:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.t.tokenize_error_jython
tests/functional/t/tokenize_error_jython.py:8:0: E0001: EOF in multi-line statement (syntax-error)
************* Module functional.t.typing_use
tests/functional/t/typing_use.py:21:0: E0102: function already defined line 16 (function-redefined)
************* Module functional.t.try_except_raise_crash
tests/functional/t/try_except_raise_crash.py:23:4: W0706: The except handler raises immediately (try-except-raise)
tests/functional/t/try_except_raise_crash.py:23:11: E0712: Catching an exception which doesn't inherit from Exception: TestException (catching-non-exception)
tests/functional/t/try_except_raise_crash.py:6:16: R6002: 'typing.Sized' will be deprecated with PY39, consider using 'collections.abc.Sized' instead (consider-using-alias)
tests/functional/t/try_except_raise_crash.py:1:0: I0021: Useless suppression of 'too-many-ancestors' (useless-suppression)
************* Module functional.t.typevar_name_mismatch
tests/functional/t/typevar_name_mismatch.py:10:0: C0132: TypeVar name "T" does not match assigned variable name "X" (typevar-name-mismatch)
tests/functional/t/typevar_name_mismatch.py:11:0: C0132: TypeVar name "T_co" does not match assigned variable name "X_co" (typevar-name-mismatch)
tests/functional/t/typevar_name_mismatch.py:12:0: C0132: TypeVar name "T_contra" does not match assigned variable name "X_contra" (typevar-name-mismatch)
tests/functional/t/typevar_name_mismatch.py:13:0: C0132: TypeVar name "T" does not match assigned variable name "X_co" (typevar-name-mismatch)
tests/functional/t/typevar_name_mismatch.py:13:6: C0132: TypeVar name "T" does not match assigned variable name "X_contra" (typevar-name-mismatch)
tests/functional/t/typevar_name_mismatch.py:24:0: C0105: Type variable name does not reflect variance. "X" is contravariant, use "X_contra" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_mismatch.py:24:0: C0132: TypeVar name "T" does not match assigned variable name "X" (typevar-name-mismatch)
tests/functional/t/typevar_name_mismatch.py:25:0: C0131: TypeVar cannot be both covariant and contravariant (typevar-double-variance)
tests/functional/t/typevar_name_mismatch.py:25:0: C0105: Type variable name does not reflect variance (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_mismatch.py:25:0: C0132: TypeVar name "T" does not match assigned variable name "X" (typevar-name-mismatch)
tests/functional/t/typevar_name_mismatch.py:30:0: C0105: Type variable name does not reflect variance. "X_co" is invariant, use "X" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_mismatch.py:30:0: C0132: TypeVar name "T_co" does not match assigned variable name "X_co" (typevar-name-mismatch)
tests/functional/t/typevar_name_mismatch.py:31:0: C0105: Type variable name does not reflect variance. "X_contra" is covariant, use "X_co" instead (typevar-name-incorrect-variance)
tests/functional/t/typevar_name_mismatch.py:31:0: C0132: TypeVar name "T_contra" does not match assigned variable name "X_contra" (typevar-name-mismatch)
tests/functional/t/typevar_name_mismatch.py:43:0: C0132: TypeVar name "T" does not match assigned variable name "X" (typevar-name-mismatch)
tests/functional/t/typevar_name_mismatch.py:44:0: C0132: TypeVar name "T_co" does not match assigned variable name "X_co" (typevar-name-mismatch)
tests/functional/t/typevar_name_mismatch.py:45:0: C0132: TypeVar name "T_contra" does not match assigned variable name "X_contra" (typevar-name-mismatch)
tests/functional/t/typevar_name_mismatch.py:46:0: C0132: TypeVar name "T_co" does not match assigned variable name "X_co" (typevar-name-mismatch)
tests/functional/t/typevar_name_mismatch.py:47:0: C0132: TypeVar name "T_contra" does not match assigned variable name "X_contra" (typevar-name-mismatch)
tests/functional/t/typevar_name_mismatch.py:37:0: R0204: Redefinition of T type from type to typing.TypeVar (redefined-variable-type)
tests/functional/t/typevar_name_mismatch.py:38:0: R0204: Redefinition of T_co type from type to typing.TypeVar (redefined-variable-type)
tests/functional/t/typevar_name_mismatch.py:39:0: R0204: Redefinition of T_contra type from type to typing.TypeVar (redefined-variable-type)
tests/functional/t/typevar_name_mismatch.py:43:0: R0204: Redefinition of X type from type to typing.TypeVar (redefined-variable-type)
tests/functional/t/typevar_name_mismatch.py:44:0: R0204: Redefinition of X_co type from type to typing.TypeVar (redefined-variable-type)
tests/functional/t/typevar_name_mismatch.py:45:0: R0204: Redefinition of X_contra type from type to typing.TypeVar (redefined-variable-type)
************* Module functional.t.ternary
tests/functional/t/ternary.py:5:0: R1706: Consider using ternary (true_value if condition else false_value) (consider-using-ternary)
tests/functional/t/ternary.py:15:4: R1706: Consider using ternary (true_value if condition else false_value) (consider-using-ternary)
tests/functional/t/ternary.py:18:0: R1706: Consider using ternary ('ERROR' if some_callable(condition) else 'SUCCESS') (consider-using-ternary)
tests/functional/t/ternary.py:19:0: R1706: Consider using ternary ('greater' if SOME_VALUE1 > 3 else 'not greater') (consider-using-ternary)
tests/functional/t/ternary.py:20:0: R1706: Consider using ternary ('both' if SOME_VALUE2 > 4 and SOME_VALUE3 else 'not') (consider-using-ternary)
tests/functional/t/ternary.py:23:0: R1709: Boolean expression may be simplified to SOME_VALUE2 (simplify-boolean-expression)
tests/functional/t/ternary.py:33:4: R1706: Consider using ternary (truth_value if condition else false_value) (consider-using-ternary)
tests/functional/t/ternary.py:39:4: R1709: Boolean expression may be simplified to false_value (simplify-boolean-expression)
************* Module functional.t.too.too_many_locals
tests/functional/t/too/too_many_locals.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.t.too.too_many_lines
tests/functional/t/too/too_many_lines.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/t/too/too_many_lines.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.t.too.too_many_boolean_expressions
tests/functional/t/too/too_many_boolean_expressions.py:6:3: R0916: Too many boolean expressions in if statement (6/5) (too-many-boolean-expressions)
tests/functional/t/too/too_many_boolean_expressions.py:10:5: R0916: Too many boolean expressions in if statement (7/5) (too-many-boolean-expressions)
tests/functional/t/too/too_many_boolean_expressions.py:12:5: R0916: Too many boolean expressions in if statement (6/5) (too-many-boolean-expressions)
tests/functional/t/too/too_many_boolean_expressions.py:14:5: R0916: Too many boolean expressions in if statement (6/5) (too-many-boolean-expressions)
************* Module functional.t.too.too_many_ancestors
tests/functional/t/too/too_many_ancestors.py:21:0: R0901: Too many ancestors (8/7) (too-many-ancestors)
tests/functional/t/too/too_many_ancestors.py:24:0: R0901: Too many ancestors (9/7) (too-many-ancestors)
tests/functional/t/too/too_many_ancestors.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/t/too/too_many_ancestors.py:1:0: I0021: Useless suppression of 'arguments-differ' (useless-suppression)
************* Module functional.t.too.too_few_public_methods_37
tests/functional/t/too/too_few_public_methods_37.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.t.too.too_many_lines_disabled
tests/functional/t/too/too_many_lines_disabled.py:5:0: I0021: Useless suppression of 'too-many-lines' (useless-suppression)
************* Module functional.t.too.too_many_arguments_issue_1045
tests/functional/t/too/too_many_arguments_issue_1045.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/t/too/too_many_arguments_issue_1045.py:3:0: I0021: Useless suppression of 'unused-import' (useless-suppression)
tests/functional/t/too/too_many_arguments_issue_1045.py:3:0: I0021: Useless suppression of 'undefined-variable' (useless-suppression)
************* Module functional.t.too.too_many_nested_blocks
tests/functional/t/too/too_many_nested_blocks.py:6:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
tests/functional/t/too/too_many_nested_blocks.py:83:12: R5501: Consider using "elif" instead of "else" then "if" to remove one indentation level (else-if-used)
tests/functional/t/too/too_many_nested_blocks.py:86:16: R5501: Consider using "elif" instead of "else" then "if" to remove one indentation level (else-if-used)
tests/functional/t/too/too_many_nested_blocks.py:89:20: R5501: Consider using "elif" instead of "else" then "if" to remove one indentation level (else-if-used)
tests/functional/t/too/too_many_nested_blocks.py:92:24: R5501: Consider using "elif" instead of "else" then "if" to remove one indentation level (else-if-used)
tests/functional/t/too/too_many_nested_blocks.py:95:28: R5501: Consider using "elif" instead of "else" then "if" to remove one indentation level (else-if-used)
tests/functional/t/too/too_many_nested_blocks.py:77:4: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
tests/functional/t/too/too_many_nested_blocks.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/t/too/too_many_nested_blocks.py:3:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/t/too/too_many_nested_blocks.py:3:0: I0021: Useless suppression of 'too-many-return-statements' (useless-suppression)
************* Module functional.t.too.too_many_star_expressions
tests/functional/t/too/too_many_star_expressions.py:3:0: E0112: More than one starred expression in assignment (too-many-star-expressions)
tests/functional/t/too/too_many_star_expressions.py:6:0: E0112: More than one starred expression in assignment (too-many-star-expressions)
************* Module functional.t.too.too_many_ancestors_ignored_parents
tests/functional/t/too/too_many_ancestors_ignored_parents.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/t/too/too_many_ancestors_ignored_parents.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.t.too.too_many_return_statements
tests/functional/t/too/too_many_return_statements.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.t.too.too_many_arguments
tests/functional/t/too/too_many_arguments.py:1:0: I0021: Useless suppression of 'unnecessary-dunder-call' (useless-suppression)
************* Module functional.t.too.too_many_public_methods
tests/functional/t/too/too_many_public_methods.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.t.too.too_many_instance_attributes
tests/functional/t/too/too_many_instance_attributes.py:4:0: R0902: Too many instance attributes (21/11) (too-many-instance-attributes)
tests/functional/t/too/too_many_instance_attributes.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.t.too.too_many_statements
tests/functional/t/too/too_many_statements.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.t.too.too_few_public_methods_excluded
tests/functional/t/too/too_few_public_methods_excluded.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.t.too.too_many_instance_attributes_py37
tests/functional/t/too/too_many_instance_attributes_py37.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/t/too/too_many_instance_attributes_py37.py:1:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
tests/functional/t/too/too_many_instance_attributes_py37.py:1:0: I0021: Useless suppression of 'useless-object-inheritance' (useless-suppression)
************* Module functional.r.repeated_keyword
tests/functional/r/repeated_keyword.py:13:0: E1132: Got multiple values for keyword argument 'b' in function call (repeated-keyword)
tests/functional/r/repeated_keyword.py:6:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/r/repeated_keyword.py:6:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.r.return_in_init
tests/functional/r/return_in_init.py:5:4: E0101: Explicit return in __init__ (return-in-init)
tests/functional/r/return_in_init.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/r/return_in_init.py:1:0: I0021: Useless suppression of 'useless-return' (useless-suppression)
************* Module functional.r.renamed_import_logging_not_lazy
tests/functional/r/renamed_import_logging_not_lazy.py:16:0: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
tests/functional/r/renamed_import_logging_not_lazy.py:17:0: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
tests/functional/r/renamed_import_logging_not_lazy.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/r/renamed_import_logging_not_lazy.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.r.redundant_u_string_prefix
tests/functional/r/redundant_u_string_prefix.py:10:10: W1406: The u prefix for strings is no longer necessary in Python >=3.0 (redundant-u-string-prefix)
tests/functional/r/redundant_u_string_prefix.py:11:10: W1406: The u prefix for strings is no longer necessary in Python >=3.0 (redundant-u-string-prefix)
tests/functional/r/redundant_u_string_prefix.py:12:11: W1406: The u prefix for strings is no longer necessary in Python >=3.0 (redundant-u-string-prefix)
tests/functional/r/redundant_u_string_prefix.py:12:22: W1406: The u prefix for strings is no longer necessary in Python >=3.0 (redundant-u-string-prefix)
tests/functional/r/redundant_u_string_prefix.py:13:11: W1406: The u prefix for strings is no longer necessary in Python >=3.0 (redundant-u-string-prefix)
tests/functional/r/redundant_u_string_prefix.py:13:22: W1406: The u prefix for strings is no longer necessary in Python >=3.0 (redundant-u-string-prefix)
tests/functional/r/redundant_u_string_prefix.py:14:14: W1406: The u prefix for strings is no longer necessary in Python >=3.0 (redundant-u-string-prefix)
************* Module functional.r.return_outside_function
tests/functional/r/return_outside_function.py:2:0: E0104: Return outside function (return-outside-function)
************* Module functional.r.redundant_unittest_assert
tests/functional/r/redundant_unittest_assert.py:17:8: W1503: Redundant use of assertTrue with constant value 'I meant assertEqual not assertTrue' (redundant-unittest-assert)
tests/functional/r/redundant_unittest_assert.py:19:8: W1503: Redundant use of assertFalse with constant value 'I meant assertEqual not assertFalse' (redundant-unittest-assert)
tests/functional/r/redundant_unittest_assert.py:21:8: W1503: Redundant use of assertTrue with constant value True (redundant-unittest-assert)
tests/functional/r/redundant_unittest_assert.py:23:8: W1503: Redundant use of assertFalse with constant value False (redundant-unittest-assert)
tests/functional/r/redundant_unittest_assert.py:25:8: W1503: Redundant use of assertFalse with constant value None (redundant-unittest-assert)
tests/functional/r/redundant_unittest_assert.py:27:8: W1503: Redundant use of assertTrue with constant value 0 (redundant-unittest-assert)
tests/functional/r/redundant_unittest_assert.py:1:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/r/redundant_unittest_assert.py:1:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
************* Module functional.r.raise_missing_from
tests/functional/r/raise_missing_from.py:11:4: W0707: Consider explicitly re-raising using the 'from' keyword (raise-missing-from)
tests/functional/r/raise_missing_from.py:19:4: W0707: Consider explicitly re-raising using the 'from' keyword (raise-missing-from)
tests/functional/r/raise_missing_from.py:25:4: W0707: Consider explicitly re-raising using the 'from' keyword (raise-missing-from)
tests/functional/r/raise_missing_from.py:31:4: W0707: Consider explicitly re-raising using the 'from' keyword (raise-missing-from)
tests/functional/r/raise_missing_from.py:45:20: W0707: Consider explicitly re-raising using the 'from' keyword (raise-missing-from)
tests/functional/r/raise_missing_from.py:53:4: W0707: Consider explicitly re-raising using the 'from' keyword (raise-missing-from)
tests/functional/r/raise_missing_from.py:59:4: W0707: Consider explicitly re-raising using the 'from' keyword (raise-missing-from)
tests/functional/r/raise_missing_from.py:1:0: I0021: Useless suppression of 'unreachable' (useless-suppression)
tests/functional/r/raise_missing_from.py:2:0: I0021: Useless suppression of 'superfluous-parens' (useless-suppression)
************* Module functional.r.redeclared_assigned_name
tests/functional/r/redeclared_assigned_name.py:3:0: W0128: Redeclared variable 'FIRST' in assignment (redeclared-assigned-name)
tests/functional/r/redeclared_assigned_name.py:5:4: W0128: Redeclared variable 'SECOND' in assignment (redeclared-assigned-name)
tests/functional/r/redeclared_assigned_name.py:8:11: W0128: Redeclared variable 'SECOND' in assignment (redeclared-assigned-name)
tests/functional/r/redeclared_assigned_name.py:11:4: W0128: Redeclared variable 'DUMM' in assignment (redeclared-assigned-name)
tests/functional/r/redeclared_assigned_name.py:14:4: W0128: Redeclared variable 'DUMMY' in assignment (redeclared-assigned-name)
tests/functional/r/redeclared_assigned_name.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/r/redeclared_assigned_name.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.r.reimported
tests/functional/r/reimported.py:3:0: W0404: Reimport 'sleep' (imported line 3) (reimported)
tests/functional/r/reimported.py:4:0: W0404: Reimport 'missing' (imported line 4) (reimported)
tests/functional/r/reimported.py:7:0: W0404: Reimport 'missing1' (imported line 6) (reimported)
tests/functional/r/reimported.py:10:0: W0404: Reimport 'deque' (imported line 9) (reimported)
tests/functional/r/reimported.py:24:0: W0404: Reimport 'ElementTree' (imported line 23) (reimported)
tests/functional/r/reimported.py:27:0: W0404: Reimport 'email.encoders' (imported line 26) (reimported)
tests/functional/r/reimported.py:29:0: W0404: Reimport 'sys' (imported line 21) (reimported)
tests/functional/r/reimported.py:40:4: W0621: Redefining name 'sys' from outer scope (line 16) (redefined-outer-name)
tests/functional/r/reimported.py:40:4: W0404: Reimport 'sys' (imported line 21) (reimported)
tests/functional/r/reimported.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/r/reimported.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/r/reimported.py:1:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
tests/functional/r/reimported.py:29:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
tests/functional/r/reimported.py:29:0: I0021: Useless suppression of 'wrong-import-order' (useless-suppression)
************* Module functional.r.reimport
tests/functional/r/reimport.py:8:0: W0404: Reimport 'os' (imported line 6) (reimported)
tests/functional/r/reimport.py:16:4: W0404: Reimport 'exists' (imported line 7) (reimported)
tests/functional/r/reimport.py:21:4: W0404: Reimport 'os' (imported line 6) (reimported)
tests/functional/r/reimport.py:23:4: W0404: Reimport 're' (imported line 9) (reimported)
tests/functional/r/reimport.py:5:0: I0021: Useless suppression of 'using-constant-test' (useless-suppression)
tests/functional/r/reimport.py:5:0: I0021: Useless suppression of 'ungrouped-imports' (useless-suppression)
tests/functional/r/reimport.py:5:0: I0021: Useless suppression of 'wrong-import-position' (useless-suppression)
************* Module functional.c.confusing_with_statement
tests/functional/c/confusing_with_statement.py:26:0: W0124: Following "as" with another context manager looks like a tuple. (confusing-with-statement)
tests/functional/c/confusing_with_statement.py:1:0: I0021: Useless suppression of 'not-context-manager' (useless-suppression)
tests/functional/c/confusing_with_statement.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/c/confusing_with_statement.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.c.class_members_py30
tests/functional/c/class_members_py30.py:14:8: E1101: Instance of 'MyClass' has no 'incorrect' member (no-member)
tests/functional/c/class_members_py30.py:15:12: E1101: Instance of 'MyClass' has no 'havenot' member (no-member)
tests/functional/c/class_members_py30.py:16:8: E1101: Instance of 'MyClass' has no 'nonexistent1' member (no-member)
tests/functional/c/class_members_py30.py:17:8: E1101: Instance of 'MyClass' has no 'nonexistent2' member (no-member)
tests/functional/c/class_members_py30.py:24:14: E1101: Instance of 'XYZMixin' has no 'nonexistent' member (no-member)
tests/functional/c/class_members_py30.py:40:4: C0204: Metaclass class method test should have 'mcs' as first argument (bad-mcs-classmethod-argument)
tests/functional/c/class_members_py30.py:48:0: E1101: Instance of 'TestMetaclass' has no 'register' member (no-member)
tests/functional/c/class_members_py30.py:49:0: E1101: Instance of 'UsingMetaclass' has no 'test' member (no-member)
tests/functional/c/class_members_py30.py:63:27: E1101: Class 'MetaClass' has no 'missing' member (no-member)
tests/functional/c/class_members_py30.py:2:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/c/class_members_py30.py:2:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/c/class_members_py30.py:2:0: I0021: Useless suppression of 'unnecessary-dunder-call' (useless-suppression)
************* Module functional.c.comparison_with_callable
tests/functional/c/comparison_with_callable.py:8:3: W0143: Comparing against a callable, did you omit the parenthesis? (comparison-with-callable)
tests/functional/c/comparison_with_callable.py:11:3: W0143: Comparing against a callable, did you omit the parenthesis? (comparison-with-callable)
tests/functional/c/comparison_with_callable.py:11:3: C2201: Comparison should be goo == 666 (misplaced-comparison-constant)
tests/functional/c/comparison_with_callable.py:48:3: W0143: Comparing against a callable, did you omit the parenthesis? (comparison-with-callable)
tests/functional/c/comparison_with_callable.py:51:3: W0143: Comparing against a callable, did you omit the parenthesis? (comparison-with-callable)
tests/functional/c/comparison_with_callable.py:1:0: I0021: Useless suppression of 'useless-return' (useless-suppression)
tests/functional/c/comparison_with_callable.py:1:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module functional.c.continue_in_finally
tests/functional/c/continue_in_finally.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/c/continue_in_finally.py:3:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/c/continue_in_finally.py:3:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.c.confidence_filter
tests/functional/c/confidence_filter.py:16:6: E1101: Instance of 'Client' has no 'foo' member (no-member)
************* Module functional.c.cached_property
tests/functional/c/cached_property.py:22:4: W0236: Method 'func' was expected to be 'method', found it instead as 'property' (invalid-overridden-method)
tests/functional/c/cached_property.py:1:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
************* Module functional.c.control_pragmas
tests/functional/c/control_pragmas.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/c/control_pragmas.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/functional/c/control_pragmas.py:17:0: I0021: Useless suppression of 'no-member' (useless-suppression)
tests/functional/c/control_pragmas.py:17:0: I0021: Useless suppression of 'unbalanced-tuple-unpacking' (useless-suppression)
************* Module functional.c.cell_var_from_loop_enabled_regression
tests/functional/c/cell_var_from_loop_enabled_regression.py:3:21: W0640: Cell variable x defined in loop (cell-var-from-loop)
************* Module functional.c.ctor_arguments
tests/functional/c/ctor_arguments.py:35:0: E1120: No value for argument 'first_argument' in constructor call (no-value-for-parameter)
tests/functional/c/ctor_arguments.py:36:0: E1121: Too many positional arguments for constructor call (too-many-function-args)
tests/functional/c/ctor_arguments.py:38:0: E1120: No value for argument 'third_argument' in constructor call (no-value-for-parameter)
tests/functional/c/ctor_arguments.py:40:0: E1120: No value for argument 'first_argument' in constructor call (no-value-for-parameter)
tests/functional/c/ctor_arguments.py:40:0: E1120: No value for argument 'second_argument' in constructor call (no-value-for-parameter)
tests/functional/c/ctor_arguments.py:40:0: E1120: No value for argument 'third_argument' in constructor call (no-value-for-parameter)
tests/functional/c/ctor_arguments.py:42:0: E1121: Too many positional arguments for constructor call (too-many-function-args)
tests/functional/c/ctor_arguments.py:47:0: E1123: Unexpected keyword argument 'bob' in constructor call (unexpected-keyword-arg)
tests/functional/c/ctor_arguments.py:47:0: E1120: No value for argument 'first_argument' in constructor call (no-value-for-parameter)
tests/functional/c/ctor_arguments.py:48:0: E1123: Unexpected keyword argument 'coin' in constructor call (unexpected-keyword-arg)
tests/functional/c/ctor_arguments.py:50:0: E1124: Argument 'one' passed by position and keyword in constructor call (redundant-keyword-arg)
tests/functional/c/ctor_arguments.py:53:0: E1120: No value for argument 'first_argument' in constructor call (no-value-for-parameter)
tests/functional/c/ctor_arguments.py:54:0: E1121: Too many positional arguments for constructor call (too-many-function-args)
tests/functional/c/ctor_arguments.py:60:0: E1121: Too many positional arguments for constructor call (too-many-function-args)
tests/functional/c/ctor_arguments.py:63:0: E1121: Too many positional arguments for constructor call (too-many-function-args)
tests/functional/c/ctor_arguments.py:64:0: E1123: Unexpected keyword argument 'one' in constructor call (unexpected-keyword-arg)
tests/functional/c/ctor_arguments.py:64:0: E1120: No value for argument 'first_argument' in constructor call (no-value-for-parameter)
tests/functional/c/ctor_arguments.py:68:4: C0204: Metaclass class method __new__ should have 'mcs' as first argument (bad-mcs-classmethod-argument)
tests/functional/c/ctor_arguments.py:85:0: E1121: Too many positional arguments for constructor call (too-many-function-args)
tests/functional/c/ctor_arguments.py:85:0: E1123: Unexpected keyword argument 'badarg' in constructor call (unexpected-keyword-arg)
tests/functional/c/ctor_arguments.py:95:15: E1121: Too many positional arguments for constructor call (too-many-function-args)
tests/functional/c/ctor_arguments.py:99:15: E1120: No value for argument 'first' in constructor call (no-value-for-parameter)
tests/functional/c/ctor_arguments.py:99:15: E1120: No value for argument 'second' in constructor call (no-value-for-parameter)
tests/functional/c/ctor_arguments.py:104:15: E1123: Unexpected keyword argument 'not_argument' in constructor call (unexpected-keyword-arg)
tests/functional/c/ctor_arguments.py:104:15: E1120: No value for argument 'second' in constructor call (no-value-for-parameter)
tests/functional/c/ctor_arguments.py:5:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.c.class_protocol_ellipsis
tests/functional/c/class_protocol_ellipsis.py:19:26: R6002: 'typing.Iterator' will be deprecated with PY39, consider using 'collections.abc.Iterator' instead. Add 'from __future__ import annotations' as well (consider-using-alias)
tests/functional/c/class_protocol_ellipsis.py:2:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module functional.c.classes_meth_could_be_a_function
tests/functional/c/classes_meth_could_be_a_function.py:1:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.c.comparison_of_constants
tests/functional/c/comparison_of_constants.py:4:3: R0133: Comparison between constants: '2 is 2' has a constant value (comparison-of-constants)
tests/functional/c/comparison_of_constants.py:4:3: R0123: Comparison to literal (literal-comparison)
tests/functional/c/comparison_of_constants.py:7:6: R0133: Comparison between constants: '2 == 2' has a constant value (comparison-of-constants)
tests/functional/c/comparison_of_constants.py:10:6: R0133: Comparison between constants: '2 > 2' has a constant value (comparison-of-constants)
tests/functional/c/comparison_of_constants.py:14:3: C2201: Comparison should be n != 2 (misplaced-comparison-constant)
tests/functional/c/comparison_of_constants.py:20:3: R0133: Comparison between constants: 'True == True' has a constant value (comparison-of-constants)
tests/functional/c/comparison_of_constants.py:20:3: C0121: Comparison 'True == True' should be 'True is True' if checking for the singleton value True, or 'True' if testing for truthiness (singleton-comparison)
tests/functional/c/comparison_of_constants.py:25:3: R0123: Comparison to literal (literal-comparison)
tests/functional/c/comparison_of_constants.py:28:3: R0123: Comparison to literal (literal-comparison)
tests/functional/c/comparison_of_constants.py:31:3: R0123: Comparison to literal (literal-comparison)
tests/functional/c/comparison_of_constants.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/functional/c/comparison_of_constants.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.c.class_scope
tests/functional/c/class_scope.py:11:30: E0601: Using variable 'revattr' before assignment (used-before-assignment)
tests/functional/c/class_scope.py:11:39: E0602: Undefined variable 'revattr' (undefined-variable)
tests/functional/c/class_scope.py:13:25: E0602: Undefined variable 'get_attr_bad' (undefined-variable)
tests/functional/c/class_scope.py:14:19: E0602: Undefined variable 'attr' (undefined-variable)
tests/functional/c/class_scope.py:20:15: E0602: Undefined variable 'Data' (undefined-variable)
tests/functional/c/class_scope.py:23:15: E0602: Undefined variable 'Sub' (undefined-variable)
tests/functional/c/class_scope.py:41:22: E0602: Undefined variable 'self' (undefined-variable)
************* Module functional.c.crash_missing_module_type
tests/functional/c/crash_missing_module_type.py:4:0: I0021: Useless suppression of 'invalid-name' (useless-suppression)
************* Module functional.c.class_members
tests/functional/c/class_members.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.c.condition_evals_to_constant
tests/functional/c/condition_evals_to_constant.py:14:5: R1727: Boolean condition 'CONSTANT or True' will always evaluate to 'True' (condition-evals-to-constant)
tests/functional/c/condition_evals_to_constant.py:15:7: R1727: Boolean condition 'CONSTANT or True' will always evaluate to 'True' (condition-evals-to-constant)
tests/functional/c/condition_evals_to_constant.py:16:3: R1727: Boolean condition 'CONSTANT and False' will always evaluate to 'False' (condition-evals-to-constant)
tests/functional/c/condition_evals_to_constant.py:18:5: R1727: Boolean condition 'CONSTANT and False' will always evaluate to 'False' (condition-evals-to-constant)
tests/functional/c/condition_evals_to_constant.py:20:6: R1727: Boolean condition 'CONSTANT and False' will always evaluate to 'False' (condition-evals-to-constant)
tests/functional/c/condition_evals_to_constant.py:22:5: R1727: Boolean condition 'CONSTANT or True' will always evaluate to 'True' (condition-evals-to-constant)
tests/functional/c/condition_evals_to_constant.py:23:29: R1727: Boolean condition 'x or True' will always evaluate to 'True' (condition-evals-to-constant)
tests/functional/c/condition_evals_to_constant.py:26:7: R1727: Boolean condition 'True or CONSTANT or OTHER' will always evaluate to 'True' (condition-evals-to-constant)
tests/functional/c/condition_evals_to_constant.py:27:7: R1727: Boolean condition 'CONSTANT or True or CONSTANT or True' will always evaluate to 'True' (condition-evals-to-constant)
tests/functional/c/condition_evals_to_constant.py:30:7: R1727: Boolean condition '3 + 4 or CONSTANT' will always evaluate to '3 + 4' (condition-evals-to-constant)
tests/functional/c/condition_evals_to_constant.py:31:7: R1727: Boolean condition 'Unknown or True' will always evaluate to 'True' (condition-evals-to-constant)
tests/functional/c/condition_evals_to_constant.py:33:7: R1727: Boolean condition 'True or True' will always evaluate to 'True' (condition-evals-to-constant)
tests/functional/c/condition_evals_to_constant.py:34:7: R1727: Boolean condition 'False or False' will always evaluate to 'False' (condition-evals-to-constant)
tests/functional/c/condition_evals_to_constant.py:35:7: R1727: Boolean condition 'True and True' will always evaluate to 'True' (condition-evals-to-constant)
tests/functional/c/condition_evals_to_constant.py:36:7: R1727: Boolean condition 'False and False' will always evaluate to 'False' (condition-evals-to-constant)
************* Module functional.c.class_attributes
tests/functional/c/class_attributes.py:3:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
************* Module functional.c.class_variable_slots_conflict_exempted
tests/functional/c/class_variable_slots_conflict_exempted.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module functional.c.cellvar_escaping_loop
tests/functional/c/cellvar_escaping_loop.py:92:13: R6102: Consider using an in-place tuple instead of list (consider-using-tuple)
tests/functional/c/cellvar_escaping_loop.py:117:27: W0640: Cell variable i defined in loop (cell-var-from-loop)
tests/functional/c/cellvar_escaping_loop.py:122:20: W0640: Cell variable i defined in loop (cell-var-from-loop)
tests/functional/c/cellvar_escaping_loop.py:130:27: W0640: Cell variable j defined in loop (cell-var-from-loop)
tests/functional/c/cellvar_escaping_loop.py:140:19: W0640: Cell variable i defined in loop (cell-var-from-loop)
tests/functional/c/cellvar_escaping_loop.py:161:20: W0640: Cell variable i defined in loop (cell-var-from-loop)
tests/functional/c/cellvar_escaping_loop.py:169:27: W0640: Cell variable i defined in loop (cell-var-from-loop)
tests/functional/c/cellvar_escaping_loop.py:177:12: W0640: Cell variable x defined in loop (cell-var-from-loop)
tests/functional/c/cellvar_escaping_loop.py:178:14: W0640: Cell variable y defined in loop (cell-var-from-loop)
tests/functional/c/cellvar_escaping_loop.py:187:27: W0640: Cell variable j defined in loop (cell-var-from-loop)
tests/functional/c/cellvar_escaping_loop.py:197:27: W0640: Cell variable i defined in loop (cell-var-from-loop)
tests/functional/c/cellvar_escaping_loop.py:206:26: W0640: Cell variable i defined in loop (cell-var-from-loop)
tests/functional/c/cellvar_escaping_loop.py:218:17: W0640: Cell variable n defined in loop (cell-var-from-loop)
tests/functional/c/cellvar_escaping_loop.py:223:18: W0640: Cell variable n defined in loop (cell-var-from-loop)
tests/functional/c/cellvar_escaping_loop.py:1:0: I0021: Useless suppression of 'missing-module-docstring' (useless-suppression)
tests/functional/c/cellvar_escaping_loop.py:1:0: I0021: Useless suppression of 'too-few-public-methods' (useless-suppression)
************* Module meta
tests/regrtest_data/meta.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/regrtest_data/meta.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
tests/regrtest_data/meta.py:2:0: I0021: Useless suppression of 'unbalanced-tuple-unpacking' (useless-suppression)
************* Module fail_under_minus10
tests/regrtest_data/fail_under_minus10.py:4:0: E0401: Unable to import 'nonexistent' (import-error)
tests/regrtest_data/fail_under_minus10.py:9:5: W0612: Unused variable 'i' (unused-variable)
tests/regrtest_data/fail_under_minus10.py:4:0: W0611: Unused import nonexistent (unused-import)
************* Module fail_on
tests/regrtest_data/fail_on.py:4:0: E0401: Unable to import 'nonexistent' (import-error)
tests/regrtest_data/fail_on.py:4:0: W0611: Unused import nonexistent (unused-import)
tests/regrtest_data/fail_on.py:5:0: I0021: Useless suppression of 'broad-except' (useless-suppression)
************* Module numarray_inf
tests/regrtest_data/numarray_inf.py:3:0: E0401: Unable to import 'numarray' (import-error)
tests/regrtest_data/numarray_inf.py:4:0: E0401: Unable to import 'numarray.random_array' (import-error)
************* Module try_finally_disable_msg_crash
tests/regrtest_data/try_finally_disable_msg_crash.py:4:0: I0023: 'W0201' is cryptic: use '# pylint: disable=attribute-defined-outside-init' instead (use-symbolic-message-instead)
tests/regrtest_data/try_finally_disable_msg_crash.py:4:0: I0021: Useless suppression of 'attribute-defined-outside-init' (useless-suppression)
************* Module no_stdout_encoding
tests/regrtest_data/no_stdout_encoding.py:1:0: C2503: PEP8 recommends UTF-8 as encoding for Python files (bad-file-encoding)
tests/regrtest_data/no_stdout_encoding.py:3:23: W0622: Redefining built-in 'dir' (redefined-builtin)
tests/regrtest_data/no_stdout_encoding.py:4:21: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
tests/regrtest_data/no_stdout_encoding.py:4:21: W1406: The u prefix for strings is no longer necessary in Python >=3.0 (redundant-u-string-prefix)
tests/regrtest_data/no_stdout_encoding.py:4:8: W0612: Unused variable 'testString' (unused-variable)
************* Module special_attr_scope_lookup_crash
tests/regrtest_data/special_attr_scope_lookup_crash.py:1:0: R0205: Class 'Klass' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
************* Module import_something
tests/regrtest_data/import_something.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/regrtest_data/import_something.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module import_package_subpackage_module
tests/regrtest_data/import_package_subpackage_module.py:1:0: I0023: 'I0011' is cryptic: use '# pylint: disable=locally-disabled' instead (use-symbolic-message-instead)
tests/regrtest_data/import_package_subpackage_module.py:1:0: I0023: 'C0301' is cryptic: use '# pylint: disable=line-too-long' instead (use-symbolic-message-instead)
tests/regrtest_data/import_package_subpackage_module.py:1:0: I0023: 'W0611' is cryptic: use '# pylint: disable=unused-import' instead (use-symbolic-message-instead)
tests/regrtest_data/import_package_subpackage_module.py:1:0: I0021: Useless suppression of 'locally-disabled' (useless-suppression)
tests/regrtest_data/import_package_subpackage_module.py:1:0: I0021: Useless suppression of 'line-too-long' (useless-suppression)
************* Module fail_on_info_only
tests/regrtest_data/fail_on_info_only.py:4:0: I0021: Useless suppression of 'broad-except' (useless-suppression)
************* Module descriptor_crash
tests/regrtest_data/descriptor_crash.py:20:11: E0001: invalid syntax (<unknown>, line 20) (syntax-error)
************* Module numarray_import
tests/regrtest_data/numarray_import.py:5:0: E0401: Unable to import 'numarray' (import-error)
************* Module unused_variable
tests/regrtest_data/unused_variable.py:4:4: W0612: Unused variable 'variable' (unused-variable)
************* Module application_crash
tests/regrtest_data/application_crash.py:1:6: E0602: Undefined variable 'something_undefined' (undefined-variable)
************* Module wrong_import_position
tests/regrtest_data/wrong_import_position.py:7:0: R0205: Class 'Something' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/regrtest_data/wrong_import_position.py:11:0: C0413: Import "import os" should be placed at the top of the module (wrong-import-position)
************* Module syntax_error
tests/regrtest_data/syntax_error.py:1:9: E0001: invalid syntax (<unknown>, line 1) (syntax-error)
************* Module wildcard
tests/regrtest_data/wildcard.py:1:0: W0401: Wildcard import empty (wildcard-import)
************* Module module_global
tests/regrtest_data/module_global.py:1:0: I0023: 'W0603' is cryptic: use '# pylint: disable=global-statement' instead (use-symbolic-message-instead)
tests/regrtest_data/module_global.py:1:0: I0023: 'W0601' is cryptic: use '# pylint: disable=global-variable-undefined' instead (use-symbolic-message-instead)
tests/regrtest_data/module_global.py:1:0: I0023: 'W0604' is cryptic: use '# pylint: disable=global-at-module-level' instead (use-symbolic-message-instead)
tests/regrtest_data/module_global.py:1:0: I0023: 'E0602' is cryptic: use '# pylint: disable=undefined-variable' instead (use-symbolic-message-instead)
tests/regrtest_data/module_global.py:1:0: I0023: 'W0104' is cryptic: use '# pylint: disable=pointless-statement' instead (use-symbolic-message-instead)
tests/regrtest_data/module_global.py:1:0: I0021: Useless suppression of 'global-statement' (useless-suppression)
tests/regrtest_data/module_global.py:1:0: I0021: Useless suppression of 'global-variable-undefined' (useless-suppression)
************* Module func_block_disable_msg
tests/regrtest_data/func_block_disable_msg.py:1:0: I0023: 'C0302' is cryptic: use '# pylint: disable=too-many-lines' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:17:0: I0023: 'W0613' is cryptic: use '# pylint: disable=unused-argument' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:24:0: I0023: 'E1101' is cryptic: use '# pylint: disable=no-member' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:30:0: I0023: 'E1101' is cryptic: use '# pylint: disable=no-member' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:34:0: I0023: 'E1101' is cryptic: use '# pylint: enable=no-member' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:40:0: I0023: 'E1101' is cryptic: use '# pylint: disable=no-member' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:44:0: I0023: 'E1101' is cryptic: use '# pylint: enable=no-member' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:55:0: I0023: 'E1101' is cryptic: use '# pylint: disable=no-member' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:59:0: I0023: 'E1101' is cryptic: use '# pylint: enable=no-member' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:62:0: I0023: 'E0602' is cryptic: use '# pylint: disable=undefined-variable' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:70:0: I0023: 'E1101' is cryptic: use '# pylint: disable=no-member' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:84:0: I0023: 'E1101' is cryptic: use '# pylint: disable=no-member' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:96:0: I0023: 'E1101' is cryptic: use '# pylint: disable=no-member' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:100:0: I0023: 'E1101' is cryptic: use '# pylint: enable=no-member' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:106:0: I0023: 'E1101' is cryptic: use '# pylint: disable=no-member' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:109:0: I0023: 'E1101' is cryptic: use '# pylint: disable=no-member' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:116:0: I0023: 'R0902' is cryptic: use '# pylint: disable=too-many-instance-attributes' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:116:0: I0023: 'R0903' is cryptic: use '# pylint: disable=too-few-public-methods' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:133:0: I0023: 'R0912' is cryptic: use '# pylint: disable=too-many-branches' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:133:0: I0023: 'R0911' is cryptic: use '# pylint: disable=too-many-return-statements' instead (use-symbolic-message-instead)
tests/regrtest_data/func_block_disable_msg.py:11:20: W0613: Unused argument 'arg' (unused-argument)
tests/regrtest_data/func_block_disable_msg.py:26:14: E1101: Instance of 'Foo' has no 'blop' member (no-member)
tests/regrtest_data/func_block_disable_msg.py:36:14: E1101: Instance of 'Foo' has no 'blip' member (no-member)
tests/regrtest_data/func_block_disable_msg.py:46:18: E1101: Instance of 'Foo' has no 'blip' member (no-member)
tests/regrtest_data/func_block_disable_msg.py:61:18: E1101: Instance of 'Foo' has no 'blip' member (no-member)
tests/regrtest_data/func_block_disable_msg.py:72:18: E1101: Instance of 'Foo' has no 'blip' member (no-member)
tests/regrtest_data/func_block_disable_msg.py:75:18: E1101: Instance of 'Foo' has no 'blip' member (no-member)
tests/regrtest_data/func_block_disable_msg.py:77:14: E1101: Instance of 'Foo' has no 'blip' member (no-member)
tests/regrtest_data/func_block_disable_msg.py:83:14: E1101: Instance of 'Foo' has no 'blip' member (no-member)
tests/regrtest_data/func_block_disable_msg.py:102:14: E1101: Instance of 'Foo' has no 'blip' member (no-member)
tests/regrtest_data/func_block_disable_msg.py:144:12: W0120: Else clause on loop without a break statement, remove the else and de-indent all the code inside it (useless-else-on-loop)
tests/regrtest_data/func_block_disable_msg.py:150:12: W0120: Else clause on loop without a break statement, remove the else and de-indent all the code inside it (useless-else-on-loop)
tests/regrtest_data/func_block_disable_msg.py:156:12: W0120: Else clause on loop without a break statement, remove the else and de-indent all the code inside it (useless-else-on-loop)
tests/regrtest_data/func_block_disable_msg.py:1:0: I0021: Useless suppression of 'too-many-lines' (useless-suppression)
tests/regrtest_data/func_block_disable_msg.py:93:0: I0021: Useless suppression of 'using-constant-test' (useless-suppression)
tests/regrtest_data/func_block_disable_msg.py:116:0: I0021: Useless suppression of 'too-many-instance-attributes' (useless-suppression)
tests/regrtest_data/func_block_disable_msg.py:133:0: I0021: Useless suppression of 'too-many-branches' (useless-suppression)
tests/regrtest_data/func_block_disable_msg.py:133:0: I0021: Useless suppression of 'too-many-return-statements' (useless-suppression)
************* Module import_assign
tests/regrtest_data/import_assign.py:1:0: E0401: Unable to import 'shmixml.dom.minidom' (import-error)
tests/regrtest_data/import_assign.py:2:0: C0411: standard import "import xml.dom.minidom" should be placed before "import shmixml.dom.minidom" (wrong-import-order)
************* Module module.sub_module.sub_sub_module.main
tests/regrtest_data/beyond_top_four/module/sub_module/sub_sub_module/main.py:1:0: W0611: Unused function imported from double_name (unused-import)
************* Module plugin_api
tests/regrtest_data/beyond_top_two/namespace_package/plugin_api.py:2:11: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
************* Module helper_function
tests/regrtest_data/beyond_top_two/namespace_package/lower_level/helper_function.py:1:0: E0402: Attempted relative import beyond top-level package (relative-beyond-top-level)
tests/regrtest_data/beyond_top_two/namespace_package/lower_level/helper_function.py:5:11: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
************* Module dummy
tests/regrtest_data/dummy/__init__.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/regrtest_data/dummy/__init__.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module dummy.another
tests/regrtest_data/dummy/another.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/regrtest_data/dummy/another.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module dummy.dummy
tests/regrtest_data/dummy/dummy.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/regrtest_data/dummy/dummy.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module package
tests/regrtest_data/package/__init__.py:1:0: I0023: 'R0903' is cryptic: use '# pylint: disable=too-few-public-methods' instead (use-symbolic-message-instead)
************* Module pkg4972.string
tests/regrtest_data/hang/pkg4972/string/__init__.py:2:0: W0406: Module import itself (import-self)
************* Module useless_suppression.file_one
tests/regrtest_data/duplicate_code/useless_suppression/file_one.py:3:0: W0611: Unused import argparse (unused-import)
tests/regrtest_data/duplicate_code/useless_suppression/file_one.py:4:0: W0611: Unused import math (unused-import)
tests/regrtest_data/duplicate_code/useless_suppression/file_one.py:5:0: W0611: Unused import os (unused-import)
tests/regrtest_data/duplicate_code/useless_suppression/file_one.py:6:0: W0611: Unused import random (unused-import)
tests/regrtest_data/duplicate_code/useless_suppression/file_one.py:7:0: W0611: Unused import sys (unused-import)
************* Module useless_suppression.file_two
tests/regrtest_data/duplicate_code/useless_suppression/file_two.py:1:0: W0611: Unused import argparse (unused-import)
tests/regrtest_data/duplicate_code/useless_suppression/file_two.py:2:0: W0611: Unused import math (unused-import)
tests/regrtest_data/duplicate_code/useless_suppression/file_two.py:3:0: W0611: Unused import os (unused-import)
tests/regrtest_data/duplicate_code/useless_suppression/file_two.py:4:0: W0611: Unused import random (unused-import)
tests/regrtest_data/duplicate_code/useless_suppression/file_two.py:5:0: W0611: Unused import sys (unused-import)
************* Module ignore_imports.file_one
tests/regrtest_data/duplicate_code/ignore_imports/file_one.py:1:0: W0611: Unused import argparse (unused-import)
tests/regrtest_data/duplicate_code/ignore_imports/file_one.py:2:0: W0611: Unused import math (unused-import)
tests/regrtest_data/duplicate_code/ignore_imports/file_one.py:3:0: W0611: Unused import os (unused-import)
tests/regrtest_data/duplicate_code/ignore_imports/file_one.py:4:0: W0611: Unused import random (unused-import)
tests/regrtest_data/duplicate_code/ignore_imports/file_one.py:5:0: W0611: Unused import sys (unused-import)
************* Module ignore_imports.file_two
tests/regrtest_data/duplicate_code/ignore_imports/file_two.py:1:0: W0611: Unused import argparse (unused-import)
tests/regrtest_data/duplicate_code/ignore_imports/file_two.py:2:0: W0611: Unused import math (unused-import)
tests/regrtest_data/duplicate_code/ignore_imports/file_two.py:3:0: W0611: Unused import os (unused-import)
tests/regrtest_data/duplicate_code/ignore_imports/file_two.py:4:0: W0611: Unused import random (unused-import)
tests/regrtest_data/duplicate_code/ignore_imports/file_two.py:5:0: W0611: Unused import sys (unused-import)
************* Module beyond_top_three.a
tests/regrtest_data/beyond_top_three/a.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
************* Module beyond_top_three.level1.beyond_top_three
tests/regrtest_data/beyond_top_three/level1/beyond_top_three.py:1:9: W0613: Unused argument 'var' (unused-argument)
tests/regrtest_data/beyond_top_three/level1/beyond_top_three.py:1:14: W0613: Unused argument 'some_other_var' (unused-argument)
************* Module beyond_top_three.level1
tests/regrtest_data/beyond_top_three/level1/__init__.py:1:9: W0613: Unused argument 'var' (unused-argument)
************* Module main
tests/regrtest_data/max_inferable_limit_for_classes/main.py:10:0: R0205: Class 'HasMemoized' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/regrtest_data/max_inferable_limit_for_classes/main.py:18:0: R0901: Too many ancestors (17/7) (too-many-ancestors)
tests/regrtest_data/max_inferable_limit_for_classes/main.py:32:0: R0901: Too many ancestors (31/7) (too-many-ancestors)
tests/regrtest_data/max_inferable_limit_for_classes/main.py:36:0: R0901: Too many ancestors (32/7) (too-many-ancestors)
tests/regrtest_data/max_inferable_limit_for_classes/main.py:37:4: W0235: Useless super delegation in method '__init__' (useless-super-delegation)
************* Module other_funcs
tests/regrtest_data/max_inferable_limit_for_classes/other_funcs.py:6:0: R0205: Class 'HasCacheKey' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/regrtest_data/max_inferable_limit_for_classes/other_funcs.py:10:0: R0205: Class 'HasMemoized' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/regrtest_data/max_inferable_limit_for_classes/other_funcs.py:30:0: R0901: Too many ancestors (17/7) (too-many-ancestors)
************* Module roles
tests/regrtest_data/max_inferable_limit_for_classes/nodes/roles.py:1:0: R0205: Class 'SQLRole' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/regrtest_data/max_inferable_limit_for_classes/nodes/roles.py:5:0: R0205: Class 'UsesInspection' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/regrtest_data/max_inferable_limit_for_classes/nodes/roles.py:9:0: R0205: Class 'AllowsLambdaRole' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/regrtest_data/max_inferable_limit_for_classes/nodes/roles.py:61:0: R0901: Too many ancestors (8/7) (too-many-ancestors)
tests/regrtest_data/max_inferable_limit_for_classes/nodes/roles.py:65:0: R0901: Too many ancestors (9/7) (too-many-ancestors)
************* Module beyond_top
tests/regrtest_data/beyond_top/__init__.py:1:0: E0402: Attempted relative import beyond top-level package (relative-beyond-top-level)
************* Module bad_package
tests/regrtest_data/bad_package/__init__.py:2:23: E0001: invalid syntax (<unknown>, line 2) (syntax-error)
************* Module bad_package.wrong
tests/regrtest_data/bad_package/wrong.py:5:0: E0001: Cannot import '' due to syntax error 'invalid syntax (<unknown>, line 2)' (syntax-error)
tests/regrtest_data/bad_package/wrong.py:5:0: W0611: Unused import missing (unused-import)
************* Module input.w0401_cycle
tests/input/w0401_cycle.py:8:0: W0125: Using a conditional statement with a constant value (using-constant-test)
************* Module input.func_i0011
tests/input/func_i0011.py:1:0: I0023: 'W0404' is cryptic: use '# pylint: disable=reimported' instead (use-symbolic-message-instead)
tests/input/func_i0011.py:1:0: I0021: Useless suppression of 'reimported' (useless-suppression)
************* Module input.func_w0401
tests/input/func_w0401.py:8:0: W0125: Using a conditional statement with a constant value (using-constant-test)
************* Module input.func_w0401_disabled_in_func
tests/input/func_w0401_disabled_in_func.py:10:4: W0125: Using a conditional statement with a constant value (using-constant-test)
************* Module input.func_return_yield_mix_py_33
tests/input/func_return_yield_mix_py_33.py:5:4: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
************* Module input.func_i0012
tests/input/func_i0012.py:1:0: I0023: 'W0404' is cryptic: use '# pylint: enable=reimported' instead (use-symbolic-message-instead)
************* Module input.similar_lines_b
tests/input/similar_lines_b.py:12:18: R1721: Unnecessary use of a comprehension, use list(zip(blandit, metus)) instead. (unnecessary-comprehension)
tests/input/similar_lines_b.py:13:8: W0612: Unused variable 'neque' (unused-variable)
tests/input/similar_lines_b.py:17:8: E0602: Undefined variable 'someother_var' (undefined-variable)
tests/input/similar_lines_b.py:15:39: W0613: Unused argument 'similar' (unused-argument)
tests/input/similar_lines_b.py:26:11: E0602: Undefined variable 'ultricies' (undefined-variable)
tests/input/similar_lines_b.py:27:11: E0602: Undefined variable 'ultricies' (undefined-variable)
tests/input/similar_lines_b.py:24:11: W0613: Unused argument 'self' (unused-argument)
tests/input/similar_lines_b.py:25:4: W0612: Unused variable 'ultrices' (unused-variable)
************* Module input.similar_cls_a
tests/input/similar_cls_a.py:12:12: W0613: Unused argument 'arg1' (unused-argument)
tests/input/similar_cls_a.py:13:12: W0613: Unused argument 'arg2' (unused-argument)
tests/input/similar_cls_a.py:14:12: W0613: Unused argument 'arg3' (unused-argument)
tests/input/similar_cls_a.py:15:12: W0613: Unused argument 'arg4' (unused-argument)
tests/input/similar_cls_a.py:5:8: W0613: Unused argument 'a' (unused-argument)
tests/input/similar_cls_a.py:6:8: W0613: Unused argument 'b' (unused-argument)
tests/input/similar_cls_a.py:7:8: W0613: Unused argument 'c' (unused-argument)
tests/input/similar_cls_a.py:11:8: W0612: Unused variable '_internal_func' (unused-variable)
************* Module input.func_w0401_disabled
tests/input/func_w0401_disabled.py:8:0: W0125: Using a conditional statement with a constant value (using-constant-test)
************* Module input.similar_cls_b
tests/input/similar_cls_b.py:12:12: W0613: Unused argument 'arg1' (unused-argument)
tests/input/similar_cls_b.py:13:12: W0613: Unused argument 'arg2' (unused-argument)
tests/input/similar_cls_b.py:14:12: W0613: Unused argument 'arg3' (unused-argument)
tests/input/similar_cls_b.py:15:12: W0613: Unused argument 'arg4' (unused-argument)
tests/input/similar_cls_b.py:5:8: W0613: Unused argument 'a' (unused-argument)
tests/input/similar_cls_b.py:6:8: W0613: Unused argument 'b' (unused-argument)
tests/input/similar_cls_b.py:7:8: W0613: Unused argument 'c' (unused-argument)
tests/input/similar_cls_b.py:11:8: W0612: Unused variable '_internal_func' (unused-variable)
************* Module input.func_3k_removed_stuff_py_30
tests/input/func_3k_removed_stuff_py_30.py:4:0: E0401: Unable to import 'func_w0401' (import-error)
tests/input/func_3k_removed_stuff_py_30.py:5:28: W0141: Used builtin function 'map'. Using a list comprehension can be clearer. (bad-builtin)
tests/input/func_3k_removed_stuff_py_30.py:11:11: W1406: The u prefix for strings is no longer necessary in Python >=3.0 (redundant-u-string-prefix)
tests/input/func_3k_removed_stuff_py_30.py:12:10: E1101: Instance of 'str' has no 'looower' member (no-member)
************* Module input.func_w0122_py_30
tests/input/func_w0122_py_30.py:5:6: E0001: Missing parentheses in call to 'exec' (<unknown>, line 5) (syntax-error)
************* Module input.func_i0022
tests/input/func_i0022.py:16:0: I0023: 'C0103' is cryptic: use '# pylint: disable=invalid-name' instead (use-symbolic-message-instead)
tests/input/func_i0022.py:18:0: I0023: 'C0103' is cryptic: use '# pylint: enable=invalid-name' instead (use-symbolic-message-instead)
tests/input/func_i0022.py:20:0: I0023: 'C0103' is cryptic: use '# pylint: disable=invalid-name' instead (use-symbolic-message-instead)
tests/input/func_i0022.py:22:0: I0023: 'C0103' is cryptic: use '# pylint: enable=invalid-name' instead (use-symbolic-message-instead)
************* Module input.similar_empty_func_2
tests/input/similar_empty_func_2.py:2:4: W0613: Unused argument 'arg1' (unused-argument)
tests/input/similar_empty_func_2.py:3:4: W0613: Unused argument 'arg2' (unused-argument)
tests/input/similar_empty_func_2.py:4:4: W0613: Unused argument 'arg3' (unused-argument)
tests/input/similar_empty_func_2.py:5:4: W0613: Unused argument 'arg4' (unused-argument)
************* Module input.func_i0020
tests/input/func_i0020.py:7:0: I0023: 'W0612' is cryptic: use '# pylint: disable=unused-variable' instead (use-symbolic-message-instead)
************* Module input.hide_code_with_imports
tests/input/hide_code_with_imports.py:1:12: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:1:72: E0401: Unable to import 'a' (import-error)
tests/input/hide_code_with_imports.py:1:72: C0413: Import "import a" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:2:6: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:2:72: E0401: Unable to import 'b' (import-error)
tests/input/hide_code_with_imports.py:2:72: C0413: Import "import b" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:3:6: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:3:72: E0401: Unable to import 'c' (import-error)
tests/input/hide_code_with_imports.py:3:72: C0413: Import "import c" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:4:6: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:4:72: E0401: Unable to import 'd' (import-error)
tests/input/hide_code_with_imports.py:4:72: C0413: Import "import d" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:5:6: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:5:72: E0401: Unable to import 'e' (import-error)
tests/input/hide_code_with_imports.py:5:72: C0413: Import "import e" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:6:7: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:6:72: E0401: Unable to import 'f' (import-error)
tests/input/hide_code_with_imports.py:6:72: C0413: Import "import f" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:7:7: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:7:72: E0401: Unable to import 'g' (import-error)
tests/input/hide_code_with_imports.py:7:72: C0413: Import "import g" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:8:7: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:8:72: E0401: Unable to import 'h' (import-error)
tests/input/hide_code_with_imports.py:8:72: C0413: Import "import h" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:9:7: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:9:72: E0401: Unable to import 'i' (import-error)
tests/input/hide_code_with_imports.py:9:72: C0413: Import "import i" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:10:7: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:10:72: E0401: Unable to import 'j' (import-error)
tests/input/hide_code_with_imports.py:10:72: C0413: Import "import j" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:11:7: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:11:72: E0401: Unable to import 'k' (import-error)
tests/input/hide_code_with_imports.py:11:72: C0413: Import "import k" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:12:7: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:12:72: E0401: Unable to import 'l' (import-error)
tests/input/hide_code_with_imports.py:12:72: C0413: Import "import l" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:13:7: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:13:72: C0413: Import "import m" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:14:5: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:14:72: E0401: Unable to import 'n' (import-error)
tests/input/hide_code_with_imports.py:14:72: C0413: Import "import n" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:15:6: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:15:72: E0401: Unable to import 'o' (import-error)
tests/input/hide_code_with_imports.py:15:72: C0413: Import "import o" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:16:6: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
tests/input/hide_code_with_imports.py:16:72: E0401: Unable to import 'p' (import-error)
tests/input/hide_code_with_imports.py:16:72: C0413: Import "import p" should be placed at the top of the module (wrong-import-position)
tests/input/hide_code_with_imports.py:1:72: W0611: Unused import a (unused-import)
tests/input/hide_code_with_imports.py:2:72: W0611: Unused import b (unused-import)
tests/input/hide_code_with_imports.py:3:72: W0611: Unused import c (unused-import)
tests/input/hide_code_with_imports.py:4:72: W0611: Unused import d (unused-import)
tests/input/hide_code_with_imports.py:5:72: W0611: Unused import e (unused-import)
tests/input/hide_code_with_imports.py:6:72: W0611: Unused import f (unused-import)
tests/input/hide_code_with_imports.py:7:72: W0611: Unused import g (unused-import)
tests/input/hide_code_with_imports.py:8:72: W0611: Unused import h (unused-import)
tests/input/hide_code_with_imports.py:9:72: W0611: Unused import i (unused-import)
tests/input/hide_code_with_imports.py:10:72: W0611: Unused import j (unused-import)
tests/input/hide_code_with_imports.py:11:72: W0611: Unused import k (unused-import)
tests/input/hide_code_with_imports.py:12:72: W0611: Unused import l (unused-import)
tests/input/hide_code_with_imports.py:13:72: W0611: Unused import m (unused-import)
tests/input/hide_code_with_imports.py:14:72: W0611: Unused import n (unused-import)
tests/input/hide_code_with_imports.py:15:72: W0611: Unused import o (unused-import)
tests/input/hide_code_with_imports.py:16:72: W0611: Unused import p (unused-import)
************* Module input.similar_lines_a
tests/input/similar_lines_a.py:6:15: W0613: Unused argument 'elit' (unused-argument)
tests/input/similar_lines_a.py:25:16: E0602: Undefined variable 'lorem' (undefined-variable)
tests/input/similar_lines_a.py:22:20: W0613: Unused argument 'ipsum' (unused-argument)
tests/input/similar_lines_a.py:29:8: E0602: Undefined variable 'someother_var' (undefined-variable)
tests/input/similar_lines_a.py:27:39: W0613: Unused argument 'similar' (unused-argument)
tests/input/similar_lines_a.py:34:4: E0101: Explicit return in __init__ (return-in-init)
tests/input/similar_lines_a.py:34:23: W0613: Unused argument 'moleskie' (unused-argument)
tests/input/similar_lines_a.py:34:33: W0613: Unused argument 'lectus' (unused-argument)
tests/input/similar_lines_a.py:34:50: W0613: Unused argument 'ac' (unused-argument)
tests/input/similar_lines_a.py:59:4: E0102: method already defined line 17 (function-redefined)
************* Module input.similar_empty_func_1
tests/input/similar_empty_func_1.py:2:4: W0613: Unused argument 'arg1' (unused-argument)
tests/input/similar_empty_func_1.py:3:4: W0613: Unused argument 'arg2' (unused-argument)
tests/input/similar_empty_func_1.py:4:4: W0613: Unused argument 'arg3' (unused-argument)
tests/input/similar_empty_func_1.py:5:4: W0613: Unused argument 'arg4' (unused-argument)
************* Module input.func_noerror_cycle.a
tests/input/func_noerror_cycle/a.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/input/func_noerror_cycle/a.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module input.func_noerror_cycle.b
tests/input/func_noerror_cycle/b.py:1:0: I0021: Useless suppression of 'missing-class-docstring' (useless-suppression)
tests/input/func_noerror_cycle/b.py:1:0: I0021: Useless suppression of 'missing-function-docstring' (useless-suppression)
************* Module data.suppliermodule_test
tests/data/suppliermodule_test.py:22:28: R6003: Consider using alternative Union syntax instead of 'Optional'. Add 'from __future__ import annotations' as well (consider-alternative-union-syntax)
************* Module data.clientmodule_test
tests/data/clientmodule_test.py:10:8: W0612: Unused variable 'local_variable' (unused-variable)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.g.generic_alias.generic_alias_collections:[11:130]
==functional.g.generic_alias.generic_alias_collections_py37_with_typing:[16:135]
tuple[int, int]
type[int]
collections.abc.Callable[[int], str]

# builtins
dict[int, str]
list[int]
set[int]
frozenset[int]

# collections
collections.defaultdict[int, str]
collections.OrderedDict[int, str]
collections.ChainMap[int, str]
collections.Counter[int]
collections.deque[int]

# collections.abc
collections.abc.Set[int]
collections.abc.Collection[int]
collections.abc.Container[int]
collections.abc.ItemsView[int, str]
collections.abc.KeysView[int]
collections.abc.Mapping[int, str]
collections.abc.MappingView[int]
collections.abc.MutableMapping[int, str]
collections.abc.MutableSequence[int]
collections.abc.MutableSet[int]
collections.abc.Sequence[int]
collections.abc.ValuesView[int]

collections.abc.Iterable[int]
collections.abc.Iterator[int]
collections.abc.Generator[int, None, None]
collections.abc.Reversible[int]

collections.abc.Coroutine[list[str], str, int]
collections.abc.AsyncGenerator[int, None]
collections.abc.AsyncIterable[int]
collections.abc.AsyncIterator[int]
collections.abc.Awaitable[int]

# contextlib
contextlib.AbstractContextManager[int]
contextlib.AbstractAsyncContextManager[int]

# re
re.Pattern[str]
re.Match[str]


# unsubscriptable types
collections.abc.Hashable
collections.abc.Sized
collections.abc.Hashable[int]  # [unsubscriptable-object]
collections.abc.Sized[int]  # [unsubscriptable-object]

# subscriptable with Python 3.9
collections.abc.ByteString[int]


# Missing implementation for 'collections.abc' derived classes
class DerivedHashable(collections.abc.Hashable):  # [abstract-method]  # __hash__
    pass

class DerivedIterable(collections.abc.Iterable[int]):  # [abstract-method]  # __iter__
    pass

class DerivedCollection(collections.abc.Collection[int]):  # [abstract-method,abstract-method,abstract-method]  # __contains__, __iter__, __len__
    pass


# No implementation required for 'builtins' and 'collections' types
class DerivedList(list[int]):
    pass

class DerivedSet(set[int]):
    pass

class DerivedOrderedDict(collections.OrderedDict[int, str]):
    pass

class DerivedListIterable(list[collections.abc.Iterable[int]]):
    pass


# Multiple generic base classes
class DerivedMultiple(collections.abc.Sized, collections.abc.Hashable):  # [abstract-method,abstract-method]
    pass

class CustomAbstractCls1(abc.ABC):
    pass
class CustomAbstractCls2(collections.abc.Sized, collections.abc.Iterable[CustomAbstractCls1]):  # [abstract-method,abstract-method]  # __iter__, __len__
    pass
class CustomImplementation(CustomAbstractCls2):  # [abstract-method,abstract-method]  # __iter__, __len__
    pass


# Type annotations
var_tuple: tuple[int, int]
var_dict: dict[int, str]
var_orderedDict: collections.OrderedDict[int, str]
var_container: collections.abc.Container[int]
var_sequence: collections.abc.Sequence[int]
var_iterable: collections.abc.Iterable[int]
var_awaitable: collections.abc.Awaitable[int]
var_contextmanager: contextlib.AbstractContextManager[int]
var_pattern: re.Pattern[int]
var_bytestring: collections.abc.ByteString
var_hashable: collections.abc.Hashable
var_sized: collections.abc.Sized

# Type annotation with unsubscriptable type
var_int: int[int]  # [unsubscriptable-object]
var_hashable2: collections.abc.Hashable[int]  # [unsubscriptable-object]
var_sized2: collections.abc.Sized[int]  # [unsubscriptable-object]

# subscriptable with Python 3.9
var_bytestring2: collections.abc.ByteString[int] (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.p.postponed_evaluation_pep585:[16:133]
==functional.p.postponed_evaluation_pep585_py39:[11:128]
class CustomIntList(typing.List[int]):
    pass

class CustomIntListError(list[int]):  # [unsubscriptable-object]
    pass

cast_variable = [1, 2, 3]
cast_variable = typing.cast(list[int], cast_variable)  # [unsubscriptable-object]

T = typing.TypeVar("T", list[int], str)  # [unsubscriptable-object]

(lambda x: 2)(list[int])  # [unsubscriptable-object]


# Check typing.NamedTuple
CustomNamedTuple = typing.NamedTuple(
    "CustomNamedTuple", [("my_var", list[int])])  # [unsubscriptable-object]

class CustomNamedTuple2(NamedTuple):
    my_var: list[int]

class CustomNamedTuple3(typing.NamedTuple):
    my_var: list[int]


# Check typing.TypedDict
CustomTypedDict = TypedDict("CustomTypedDict", my_var=list[int])  # [unsubscriptable-object]

CustomTypedDict2 = TypedDict("CustomTypedDict2", {"my_var": list[int]})  # [unsubscriptable-object]

class CustomTypedDict3(TypedDict):
    my_var: list[int]

class CustomTypedDict4(typing.TypedDict):
    my_var: list[int]


# Check dataclasses
def my_decorator(*args, **kwargs):
    def wraps(*args, **kwargs):
        pass
    return wraps

@dataclass
class CustomDataClass:
    my_var: list[int]

@dataclasses.dataclass
class CustomDataClass2:
    my_var: list[int]

@dataclass()
class CustomDataClass3:
    my_var: list[int]

@my_decorator
@dataclasses.dataclass
class CustomDataClass4:
    my_var: list[int]


var1: set[int]
var2: collections.OrderedDict[str, int]
var3: dict[str, list[int]]
var4: Dict[str, list[int]]
var5: dict[tuple[int, int], str]
var6: Dict[tuple[int, int], str]
var7: list[list[int]]
var8: tuple[list[int]]
var9: int | list[str | int]
var10: Union[list[str], None]
var11: Union[Union[list[int], int]]

def func(arg: list[int]):
    pass

def func2() -> list[int]:
    pass

Alias2 = Union[list[str], None]  # [unsubscriptable-object]
Alias3 = Union[Union[list[int], int]]  # [unsubscriptable-object]
Alias4 = Tuple[list[int]]  # [unsubscriptable-object]
Alias5 = Dict[str, list[int]]  # [unsubscriptable-object]
Alias6 = int | list[int]  # [unsubscriptable-object]
Alias7 = list[list[int]]  # [unsubscriptable-object,unsubscriptable-object]


import collections.abc
import contextlib
import re

class OrderedDict:
    pass

var12: OrderedDict[str, int]  # string annotations aren't checked
var13: list[int]
var14: collections.OrderedDict[str, int]
var15: collections.Counter[int]
var16: collections.abc.Iterable[int]
var17: contextlib.AbstractContextManager[int]
var18: re.Pattern[str]


def func3():
    AliasInvalid2 = list[int]  # [unsubscriptable-object]
    cast_variable2 = [1, 2, 3]
    cast_variable2 = typing.cast(list[int], cast_variable2)  # [unsubscriptable-object]
    var19: list[int]

def func4(arg=list[int]):  # [unsubscriptable-object]
    pass

def func5(arg1: list[int], arg2=set[int]):  # [unsubscriptable-object]
    pass

def func6(arg1: list[int], /, *args: tuple[str], arg2: set[int], **kwargs: dict[str, Any]):
    pass (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.g.generic_alias.generic_alias_collections_py37_with_typing:[16:116]
==functional.g.generic_alias.generic_alias_postponed_evaluation_py37:[19:121]
tuple[int, int]  # [unsubscriptable-object]
type[int]  # [unsubscriptable-object]
collections.abc.Callable[[int], str]  # [unsubscriptable-object]

# builtins
dict[int, str]  # [unsubscriptable-object]
list[int]  # [unsubscriptable-object]
set[int]  # [unsubscriptable-object]
frozenset[int]  # [unsubscriptable-object]

# collections
collections.defaultdict[int, str]  # [unsubscriptable-object]
collections.OrderedDict[int, str]  # [unsubscriptable-object]
collections.ChainMap[int, str]  # [unsubscriptable-object]
collections.Counter[int]  # [unsubscriptable-object]
collections.deque[int]  # [unsubscriptable-object]

# collections.abc
collections.abc.Set[int]  # [unsubscriptable-object]
collections.abc.Collection[int]  # [unsubscriptable-object]
collections.abc.Container[int]  # [unsubscriptable-object]
collections.abc.ItemsView[int, str]  # [unsubscriptable-object]
collections.abc.KeysView[int]  # [unsubscriptable-object]
collections.abc.Mapping[int, str]  # [unsubscriptable-object]
collections.abc.MappingView[int]  # [unsubscriptable-object]
collections.abc.MutableMapping[int, str]  # [unsubscriptable-object]
collections.abc.MutableSequence[int]  # [unsubscriptable-object]
collections.abc.MutableSet[int]  # [unsubscriptable-object]
collections.abc.Sequence[int]  # [unsubscriptable-object]
collections.abc.ValuesView[int]  # [unsubscriptable-object]

collections.abc.Iterable[int]  # [unsubscriptable-object]
collections.abc.Iterator[int]  # [unsubscriptable-object]
collections.abc.Generator[int, None, None]  # [unsubscriptable-object]
collections.abc.Reversible[int]  # [unsubscriptable-object]

collections.abc.Coroutine[list[str], str, int]  # [unsubscriptable-object,unsubscriptable-object]
collections.abc.AsyncGenerator[int, None]  # [unsubscriptable-object]
collections.abc.AsyncIterable[int]  # [unsubscriptable-object]
collections.abc.AsyncIterator[int]  # [unsubscriptable-object]
collections.abc.Awaitable[int]  # [unsubscriptable-object]

# contextlib
contextlib.AbstractContextManager[int]  # [unsubscriptable-object]
contextlib.AbstractAsyncContextManager[int]  # [unsubscriptable-object]

# re
re.Pattern[str]  # [unsubscriptable-object]
re.Match[str]  # [unsubscriptable-object]


# unsubscriptable types
collections.abc.Hashable
collections.abc.Sized
collections.abc.Hashable[int]  # [unsubscriptable-object]
collections.abc.Sized[int]  # [unsubscriptable-object]

# subscriptable with Python 3.9
collections.abc.ByteString[int]  # [unsubscriptable-object]


# Missing implementation for 'collections.abc' derived classes
class DerivedHashable(collections.abc.Hashable):  # [abstract-method]  # __hash__
    pass

class DerivedIterable(collections.abc.Iterable[int]):  # [unsubscriptable-object]
    pass

class DerivedCollection(collections.abc.Collection[int]):  # [unsubscriptable-object]
    pass


# No implementation required for 'builtins' and 'collections' types
class DerivedList(list[int]):  # [unsubscriptable-object]
    pass

class DerivedSet(set[int]):  # [unsubscriptable-object]
    pass

class DerivedOrderedDict(collections.OrderedDict[int, str]):  # [unsubscriptable-object]
    pass

class DerivedListIterable(list[collections.abc.Iterable[int]]):  # [unsubscriptable-object,unsubscriptable-object]
    pass


# Multiple generic base classes
class DerivedMultiple(collections.abc.Sized, collections.abc.Hashable):  # [abstract-method,abstract-method]
    pass

class CustomAbstractCls1(abc.ABC):
    pass
class CustomAbstractCls2(collections.abc.Sized, collections.abc.Iterable[CustomAbstractCls1]):  # [abstract-method,unsubscriptable-object]  # __len__
    pass
class CustomImplementation(CustomAbstractCls2):  # [abstract-method]  # __len__
    pass



# ----- subscriptable (with postponed evaluation) -----
# special
var_tuple: tuple[int, int] (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.p.postponed_evaluation_pep585:[14:97]
==functional.p.postponed_evaluation_pep585_error:[13:96]
AliasInvalid = list[int]  # [unsubscriptable-object]

class CustomIntList(typing.List[int]):
    pass

class CustomIntListError(list[int]):  # [unsubscriptable-object]
    pass

cast_variable = [1, 2, 3]
cast_variable = typing.cast(list[int], cast_variable)  # [unsubscriptable-object]

T = typing.TypeVar("T", list[int], str)  # [unsubscriptable-object]

(lambda x: 2)(list[int])  # [unsubscriptable-object]


# Check typing.NamedTuple
CustomNamedTuple = typing.NamedTuple(
    "CustomNamedTuple", [("my_var", list[int])])  # [unsubscriptable-object]

class CustomNamedTuple2(NamedTuple):
    my_var: list[int]

class CustomNamedTuple3(typing.NamedTuple):
    my_var: list[int]


# Check typing.TypedDict
CustomTypedDict = TypedDict("CustomTypedDict", my_var=list[int])  # [unsubscriptable-object]

CustomTypedDict2 = TypedDict("CustomTypedDict2", {"my_var": list[int]})  # [unsubscriptable-object]

class CustomTypedDict3(TypedDict):
    my_var: list[int]

class CustomTypedDict4(typing.TypedDict):
    my_var: list[int]


# Check dataclasses
def my_decorator(*args, **kwargs):
    def wraps(*args, **kwargs):
        pass
    return wraps

@dataclass
class CustomDataClass:
    my_var: list[int]

@dataclasses.dataclass
class CustomDataClass2:
    my_var: list[int]

@dataclass()
class CustomDataClass3:
    my_var: list[int]

@my_decorator
@dataclasses.dataclass
class CustomDataClass4:
    my_var: list[int]


var1: set[int]
var2: collections.OrderedDict[str, int]
var3: dict[str, list[int]]
var4: Dict[str, list[int]]
var5: dict[tuple[int, int], str]
var6: Dict[tuple[int, int], str]
var7: list[list[int]]
var8: tuple[list[int]]
var9: int | list[str | int]
var10: Union[list[str], None]
var11: Union[Union[list[int], int]]

def func(arg: list[int]):
    pass

def func2() -> list[int]:
    pass

Alias2 = Union[list[str], None]  # [unsubscriptable-object]
Alias3 = Union[Union[list[int], int]]  # [unsubscriptable-object] (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.p.postponed_evaluation_pep585_error:[15:96]
==functional.p.postponed_evaluation_pep585_py39:[11:92]
class CustomIntList(typing.List[int]):
    pass

class CustomIntListError(list[int]):
    pass

cast_variable = [1, 2, 3]
cast_variable = typing.cast(list[int], cast_variable)

T = typing.TypeVar("T", list[int], str)

(lambda x: 2)(list[int])


# Check typing.NamedTuple
CustomNamedTuple = typing.NamedTuple(
    "CustomNamedTuple", [("my_var", list[int])])

class CustomNamedTuple2(NamedTuple):
    my_var: list[int]

class CustomNamedTuple3(typing.NamedTuple):
    my_var: list[int]


# Check typing.TypedDict
CustomTypedDict = TypedDict("CustomTypedDict", my_var=list[int])

CustomTypedDict2 = TypedDict("CustomTypedDict2", {"my_var": list[int]})

class CustomTypedDict3(TypedDict):
    my_var: list[int]

class CustomTypedDict4(typing.TypedDict):
    my_var: list[int]


# Check dataclasses
def my_decorator(*args, **kwargs):
    def wraps(*args, **kwargs):
        pass
    return wraps

@dataclass
class CustomDataClass:
    my_var: list[int]

@dataclasses.dataclass
class CustomDataClass2:
    my_var: list[int]

@dataclass()
class CustomDataClass3:
    my_var: list[int]

@my_decorator
@dataclasses.dataclass
class CustomDataClass4:
    my_var: list[int]


var1: set[int]
var2: collections.OrderedDict[str, int]
var3: dict[str, list[int]]
var4: Dict[str, list[int]]
var5: dict[tuple[int, int], str]
var6: Dict[tuple[int, int], str]
var7: list[list[int]]
var8: tuple[list[int]]
var9: int | list[str | int]
var10: Union[list[str], None]
var11: Union[Union[list[int], int]]

def func(arg: list[int]):
    pass

def func2() -> list[int]:
    pass

Alias2 = Union[list[str], None]
Alias3 = Union[Union[list[int], int]] (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==func_block_disable_msg:[139:1025]
==functional.t.too.too_many_nested_blocks:[36:57]
    if attr1:
        for i in attr1:
            if attr2:
                return i
            else:
                return 'duh'
    elif attr2:
        for i in attr2:
            if attr2:
                return i
            else:
                return 'duh'
    else:
        for i in range(15):
            if attr3:
                return i
            else:
                return 'doh'
            return None

def elif_function(): (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.g.generic_alias.generic_alias_mixed_py37:[16:41]
==functional.g.generic_alias.generic_alias_mixed_py39:[11:36]
var_orderedDict: collections.OrderedDict[int, str]
var_container: collections.abc.Container[int]
var_sequence: collections.abc.Sequence[int]
var_iterable: collections.abc.Iterable[int]
var_awaitable: collections.abc.Awaitable[int]
var_pattern: re.Pattern[int]
var_bytestring: collections.abc.ByteString
var_hashable: collections.abc.Hashable
var_ContextManager: contextlib.AbstractContextManager[int]


# No implementation required for 'builtins'
class DerivedListIterable(typing.List[typing.Iterable[int]]):
    pass


# Missing implementation for 'collections.abc' derived classes
class DerivedHashable(typing.Hashable):  # [abstract-method]  # __hash__
    pass

class DerivedIterable(typing.Iterable[int]):  # [abstract-method]  # __iter__
    pass

class DerivedCollection(typing.Collection[int]):  # [abstract-method,abstract-method,abstract-method]  # __contains__, __iter__, __len__
    pass (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.m.multiple_statements:[6:30]
==functional.m.multiple_statements_single_line:[6:30]
if True: pass  # [multiple-statements]

if True: pass  # [multiple-statements]
else:
    pass

class MyError(Exception): pass  # [multiple-statements]

class MyError(Exception): a='a'  # [multiple-statements]

class MyError(Exception): a='a'; b='b'  # [multiple-statements]

try:  #@
    pass
except:
    pass
finally:
    pass


@overload
def concat2(arg1: str) -> str: ...

def concat2(arg1: str) -> str: ...  # [multiple-statements] (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.g.generic_alias.generic_alias_related:[29:54]
==functional.g.generic_alias.generic_alias_related_py39:[31:56]
class ClsList(typing.List):
    pass


ClsUnsubscriptable()[1]  # [unsubscriptable-object]
ClsUnsubscriptable[int]  # [unsubscriptable-object]

ClsGetItem()[1]
ClsGetItem[int]  # [unsubscriptable-object]

ClsClassGetItem()[1]  # [unsubscriptable-object]
ClsClassGetItem[int]

# subscriptable because of inheritance
ClsList([0, 1, 2])[1]
ClsList[int]


class ClsAbstract(metaclass=ABCMeta):
    @abstractmethod
    def abstract_method(self):
        pass

class Derived(ClsAbstract):  # [abstract-method]
    pass (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==pylint.extensions.comparetozero:[41:65]
==pylint.extensions.emptystring:[36:60]
        )
    }

    options = ()

    @utils.only_required_for_messages("compare-to-empty-string")
    def visit_compare(self, node: nodes.Compare) -> None:
        _operators = ["!=", "==", "is not", "is"]
        # note: astroid.Compare has the left most operand in node.left
        # while the rest are a list of tuples in node.ops
        # the format of the tuple is ('compare operator sign', node)
        # here we squash everything into `ops` to make it easier for processing later
        ops = [("", node.left)]
        ops.extend(node.ops)
        iter_ops: Iterable[Any] = iter(ops)
        ops = list(itertools.chain(*iter_ops))

        for ops_idx in range(len(ops) - 2):
            op_1 = ops[ops_idx]
            op_2 = ops[ops_idx + 1]
            op_3 = ops[ops_idx + 2]
            error_detected = False

            # x ?? "" (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==pylint.checkers.base.__init__:[6:35]
==pylint.checkers.base.name_checker.__init__:[4:14]
__all__ = [
    "NameChecker",
    "NamingStyle",
    "KNOWN_NAME_TYPES_WITH_STYLE",
    "SnakeCaseStyle",
    "CamelCaseStyle",
    "UpperCaseStyle",
    "PascalCaseStyle",
    "AnyStyle",
]

from typing import TYPE_CHECKING

from pylint.checkers.base.basic_checker import BasicChecker
from pylint.checkers.base.basic_error_checker import BasicErrorChecker
from pylint.checkers.base.comparison_checker import ComparisonChecker
from pylint.checkers.base.docstring_checker import DocStringChecker
from pylint.checkers.base.name_checker import (
    KNOWN_NAME_TYPES_WITH_STYLE,
    AnyStyle,
    CamelCaseStyle,
    NamingStyle,
    PascalCaseStyle,
    SnakeCaseStyle,
    UpperCaseStyle,
)
from pylint.checkers.base.name_checker.checker import NameChecker
from pylint.checkers.base.pass_checker import PassChecker
 (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.m.method_cache_max_size_none:[12:47]
==functional.m.method_cache_max_size_none_py39:[12:47]
    return param + 1


class MyClassWithMethods:
    @lru_cache()
    def my_func(self, param):
        return param + 1

    @lru_cache(1)
    def my_func(self, param):
        return param + 1

    @lru_cache(None)  # [method-cache-max-size-none]
    def my_func(self, param):
        return param + 1

    @functools.lru_cache(None)  # [method-cache-max-size-none]
    def my_func(self, param):
        return param + 1

    @aliased_functools.lru_cache(None)  # [method-cache-max-size-none]
    def my_func(self, param):
        return param + 1

    @aliased_cache(None)  # [method-cache-max-size-none]
    def my_func(self, param):
        return param + 1

    # Check double decorating to check robustness of checker itself
    @aliased_cache(None)  # [method-cache-max-size-none]
    @aliased_cache(None)  # [method-cache-max-size-none]
    def my_func(self, param):
        return param + 1

 (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.d.dangerous_default_value:[74:110]
==functional.g.generic_alias.generic_alias_side_effects:[20:56]
    return value

def function5(value=frozenset()):
    """frozenset is immutable and safe."""
    return value

def function7(value=dict()): # [dangerous-default-value]
    """dict is mutable and dangerous."""
    return value

def function8(value=list()):  # [dangerous-default-value]
    """list is mutable and dangerous."""
    return value

def function17(value=collections.deque()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function18(value=collections.ChainMap()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function19(value=collections.Counter()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function20(value=collections.OrderedDict()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function21(value=collections.defaultdict()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value


# tests/functional/p/protocol_classes.py  (min py38) (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.p.protected_access_special_methods_off:[8:23]
==functional.p.protected_access_special_methods_on:[8:23]
class Protected:
    """A class"""

    def __init__(self):
        self._protected = 42
        self.public = "A"
        self.__private = None  # [unused-private-member]

    def __eq__(self, other):
        self._protected = other._protected

    def _fake_special_(self, other):
        a = other.public
        self.public = other._protected  # [protected-access]
        self.__private = other.__private  # [protected-access, unused-private-member] (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.c.comparison_of_constants:[20:33]
==functional.l.literal_comparison:[31:48]
    pass


CONST = 24


if CONST is 0: # [literal-comparison]
    pass

if CONST is 1: # [literal-comparison]
    pass

if CONST is 42: # [literal-comparison]
    pass

# We do not do inference for this check, since the comparing
# object might be used as a sentinel. (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.d.dangerous_default_value:[82:111]
==functional.g.generic_alias.generic_alias_side_effects:[20:52]
    return value

def function5(value=frozenset()):
    """frozenset is immutable and safe."""
    return value

def function7(value=dict()): # [dangerous-default-value]
    """dict is mutable and dangerous."""
    return value

def function8(value=list()):  # [dangerous-default-value]
    """list is mutable and dangerous."""
    return value

def function17(value=collections.deque()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function18(value=collections.ChainMap()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function19(value=collections.Counter()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function20(value=collections.OrderedDict()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function21(value=collections.defaultdict()):  # [dangerous-default-value]
    """mutable, dangerous""" (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.d.dangerous_default_value:[74:106]
==functional.g.generic_alias.generic_alias_side_effects:[24:56]
    return value

def function16(value={1}): # [dangerous-default-value]
    """set literal as default value"""
    return value

def function17(value=collections.deque()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function18(value=collections.ChainMap()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function19(value=collections.Counter()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function20(value=collections.OrderedDict()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function21(value=collections.defaultdict()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function22(value=collections.UserDict()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function23(value=collections.UserList()):  # [dangerous-default-value]
    """mutable, dangerous""" (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==pylint.testutils.lint_module_test:[134:142]
==test_messages_documentation:[111:120]
        messages: MessageCounter = Counter()
        for i, line in enumerate(stream):
            match = _EXPECTED_RE.search(line)
            if match is None:
                continue

            line = match.group("line")
            if line is None:
                lineno = i + 1 (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.m.method_cache_max_size_none:[50:79]
==functional.m.method_cache_max_size_none_py39:[19:47]
        return param + 1

    @lru_cache(maxsize=1)
    def my_func(self, param):
        return param + 1

    @lru_cache(typed=True)
    def my_func(self, param):
        return param + 1

    @lru_cache(typed=True)
    def my_func(self, param):
        return param + 1

    @lru_cache(typed=True, maxsize=1)
    def my_func(self, param):
        return param + 1

    @lru_cache(typed=True, maxsize=1)
    def my_func(self, param):
        return param + 1

    @lru_cache(typed=True, maxsize=None)  # [method-cache-max-size-none]
    def my_func(self, param):
        return param + 1


@lru_cache(maxsize=None)
def my_func(param): (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.g.generic_alias.generic_alias_related:[14:27]
==functional.g.generic_alias.generic_alias_related_py39:[16:29]
class ClsUnsubscriptable:
    def __init__(self):
        pass

class ClsGetItem:
    def __init__(self):
        self.var = [1, 2, 3, 4]
    def __getitem__(self, item):
        return self.var[item]

class ClsClassGetItem:
    def __init__(self):
        pass (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.d.dangerous_default_value:[74:102]
==functional.g.generic_alias.generic_alias_side_effects:[28:56]
    return value

def function16(value={1}): # [dangerous-default-value]
    """set literal as default value"""
    return value

def function17(value=collections.deque()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function18(value=collections.ChainMap()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function19(value=collections.Counter()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function20(value=collections.OrderedDict()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function21(value=collections.defaultdict()):  # [dangerous-default-value]
    """mutable, dangerous"""
    return value

def function22(value=collections.UserDict()):  # [dangerous-default-value]
    """mutable, dangerous""" (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.d.dangerous_default_value:[29:55]
==functional.g.generic_alias.generic_alias_side_effects:[20:48]
    return value

def function7(value=dict()): # [dangerous-default-value]
    """dict is mutable and dangerous."""
    return value

def function8(value=list()):  # [dangerous-default-value]
    """list is mutable and dangerous."""
    return value

def function9(value=[1, 2, 3, 4]): # [dangerous-default-value]
    """list with items should not output item values in error message"""
    return value

def function10(value={'a': 1, 'b': 2}): # [dangerous-default-value]
    """dictionaries with items should not output item values in error message"""
    return value

def function11(value=list([1, 2, 3])): # [dangerous-default-value]
    """list with items should not output item values in error message"""
    return value

def function12(value=dict([('a', 1), ('b', 2)])): # [dangerous-default-value]
    """dictionaries with items should not output item values in error message"""
    return value
 (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==functional.l.logging_format_interpolation_style:[4:11]
==logging_format_interpolation_style:[6:13]
logging.error("constant string")
logging.error("{}")
logging.error("{}", 1)
logging.error("{0}", 1)
logging.error("{named}", {"named": 1})
logging.error("{} {named}", 1, {"named": 1})
logging.error("{0} {named}", 1, {"named": 1}) (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0801: Similar lines in 2 files
==bad:[0:17]
==good:[0:17]
class Drink:
    def mix(self, fluid_one, fluid_two):
        return fluid_one + fluid_two


class Cocktail(Drink):
    def mix(self, fluid_one, fluid_two, alcoholic_fluid_one="Beer"):
        return fluid_one + fluid_two + alcoholic_fluid_one


class Car:
    tank = 0

    def fill_tank(self, gas):
        self.tank += gas

 (duplicate-code)
tests/data/clientmodule_test.py:1:0: R0401: Cyclic import (input.func_w0401 -> input.w0401_cycle) (cyclic-import)
tests/data/clientmodule_test.py:1:0: R0401: Cyclic import (input.func_w0401_package.all_the_things -> input.func_w0401_package.thing2) (cyclic-import)

------------------------------------------------------------------
Your code has been rated at 0.00/10 (previous run: 0.00/10, +0.00)
Error executing command:
Exit code: 31
[STDERR]
Traceback (most recent call last):
  File "/testbed/pylint/checkers/utils.py", line 625, in parse_format_method_string
    keyword_arguments.append((keyname, list(fielditerator)))
ValueError: Only '.' or '[' may follow ']' in format field specifier

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/testbed/pylint/utils/ast_walker.py", line 89, in walk
    callback(astroid)
  File "/testbed/pylint/checkers/refactoring/recommendation_checker.py", line 338, in visit_const
    self._detect_replacable_format_call(node)
  File "/testbed/pylint/checkers/refactoring/recommendation_checker.py", line 368, in _detect_replacable_format_call
    i[0] for i in utils.parse_format_method_string(node.value)[0]
  File "/testbed/pylint/checkers/utils.py", line 627, in parse_format_method_string
    raise IncompleteFormatString() from e
pylint.checkers.utils.IncompleteFormatString
command terminated with exit code 31


=== Iteration 15/100 ===
Calling LLM...
Error in agent loop: RuntimeError: API request failed: 400, message='Bad Request', url='http://211.23.3.237:27544/v1/chat/completions'
Traceback: Traceback (most recent call last):
  File "/root/dongdaxiang/agentic-rollout-library-guru/agentic-rollout-library/src/utils/llm_api_utils.py", line 195, in openai_api_handle_async
    response.raise_for_status()
  File "/root/miniforge3/lib/python3.12/site-packages/aiohttp/client_reqrep.py", line 629, in raise_for_status
    raise ClientResponseError(
aiohttp.client_exceptions.ClientResponseError: 400, message='Bad Request', url='http://211.23.3.237:27544/v1/chat/completions'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/dongdaxiang/agentic-rollout-library-guru/agentic-rollout-library/r2e_k8s_example.py", line 424, in process_single_instance
    llm_response = await llm_node.process_with_timing(messages, event_type="llm_call")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/dongdaxiang/agentic-rollout-library-guru/agentic-rollout-library/src/core/base_node.py", line 74, in process_with_timing
    result = await _execute()
             ^^^^^^^^^^^^^^^^
  File "/root/dongdaxiang/agentic-rollout-library-guru/agentic-rollout-library/src/core/base_node.py", line 64, in _execute
    return await self.process_async(input_data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/dongdaxiang/agentic-rollout-library-guru/agentic-rollout-library/src/core/llm_node.py", line 190, in process_async
    response = await self._retry_with_backoff_async(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/dongdaxiang/agentic-rollout-library-guru/agentic-rollout-library/src/core/llm_node.py", line 133, in _retry_with_backoff_async
    raise last_exception
  File "/root/dongdaxiang/agentic-rollout-library-guru/agentic-rollout-library/src/core/llm_node.py", line 123, in _retry_with_backoff_async
    return await func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/dongdaxiang/agentic-rollout-library-guru/agentic-rollout-library/src/utils/llm_api_utils.py", line 213, in openai_api_handle_async
    raise RuntimeError(f"API request failed: {str(e)}")
RuntimeError: API request failed: 400, message='Bad Request', url='http://211.23.3.237:27544/v1/chat/completions'

Generating patch from testbed changes...
Generating patch against base_commit: 273a8b25620467c1e5686aa8d2a1dbb8c02c78d0
Patch generated successfully, size: 1609 characters
Patch preview (first 5 lines):
  diff --git a/reproduce_issue.py b/reproduce_issue.py
  new file mode 100644
  index 000000000..afc189dde
  --- /dev/null
  +++ b/reproduce_issue.py
  ... (56 more lines)
Saved patch to: single-output-v11/pylint-dev__pylint-6528.patch
Task finished, pod r2e-pylint-dev-pylint-6528-6726 will be deleted by context manager
Context saved to single-output-v11/pylint-dev__pylint-6528.context
=== Task completed with status: failed ===
=== Pod r2e-pylint-dev-pylint-6528-6726 cleanup delegated to context manager ===
