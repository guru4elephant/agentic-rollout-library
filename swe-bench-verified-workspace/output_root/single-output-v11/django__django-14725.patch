diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..a6df1354d0
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,94 @@
+#!/usr/bin/env python3
+
+import os
+import sys
+import django
+from django.conf import settings
+
+# Configure Django settings
+if not settings.configured:
+    settings.configure(
+        DEBUG=True,
+        SECRET_KEY='test-secret-key',
+        USE_TZ=True,
+    )
+
+django.setup()
+
+from django import forms
+from django.forms import modelformset_factory
+
+# Create a simple test model class (not a real Django model)
+class TestModel:
+    def __init__(self, pk=None, name="", description=""):
+        self.pk = pk
+        self.name = name
+        self.description = description
+        
+    def __str__(self):
+        return f"TestModel(pk={self.pk}, name={self.name})"
+
+# Create a form for the model
+class TestForm(forms.Form):
+    id = forms.IntegerField(required=False, widget=forms.HiddenInput)
+    name = forms.CharField(max_length=100)
+    description = forms.CharField(widget=forms.Textarea, required=False)
+    
+    def __init__(self, *args, **kwargs):
+        instance = kwargs.pop('instance', None)
+        super().__init__(*args, **kwargs)
+        if instance:
+            self.instance = instance
+
+def test_formset_with_extra_zero():
+    """Test that extra=0 doesn't prevent new object creation"""
+    print("Testing formset with extra=0...")
+    
+    # Create some initial objects
+    obj1 = TestModel.objects.create(name="Object 1", description="First object")
+    obj2 = TestModel.objects.create(name="Object 2", description="Second object")
+    
+    # Create a formset with extra=0
+    FormSet = modelformset_factory(TestModel, form=TestForm, extra=0)
+    formset = FormSet(queryset=TestModel.objects.all())
+    
+    print(f"Number of forms in formset: {len(formset)}")
+    print(f"Initial form count: {formset.initial_form_count()}")
+    print(f"Total form count: {formset.total_form_count()}")
+    
+    # Simulate POST data with additional forms (what could happen with JavaScript)
+    post_data = {
+        'form-TOTAL_FORMS': '3',  # More forms than initial objects
+        'form-INITIAL_FORMS': '2',
+        'form-0-id': str(obj1.pk),
+        'form-0-name': 'Object 1 updated',
+        'form-0-description': 'Updated first object',
+        'form-1-id': str(obj2.pk),
+        'form-1-name': 'Object 2 updated',
+        'form-1-description': 'Updated second object',
+        'form-2-name': 'New Object',  # This should not be allowed in edit-only mode
+        'form-2-description': 'This is a new object created via POST',
+    }
+    
+    # Create bound formset
+    bound_formset = FormSet(post_data, queryset=TestModel.objects.all())
+    
+    print(f"Bound formset is valid: {bound_formset.is_valid()}")
+    if bound_formset.is_valid():
+        print("Formset validation passed - new objects can be created!")
+        print("This demonstrates the issue: extra=0 doesn't prevent new object creation")
+        
+        # Try to save
+        instances = bound_formset.save()
+        print(f"Saved {len(instances)} instances")
+        for i, instance in enumerate(instances):
+            print(f"Instance {i}: {instance.name} (pk: {instance.pk})")
+    else:
+        print("Formset validation failed")
+        print("Errors:", bound_formset.errors)
+    
+    # Clean up
+    TestModel.objects.all().delete()
+
+if __name__ == '__main__':
+    test_formset_with_extra_zero()
\ No newline at end of file