diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 00000000..e00b64a3
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,11 @@
+import xarray as xr
+
+# Reproduce the issue described in the GitHub issue
+print("Testing xr.where with scalar as second argument and keep_attrs=True...")
+
+try:
+    result = xr.where(xr.DataArray([1, 2, 3]) > 0, 1, 0, keep_attrs=True)
+    print("Success! Result:", result)
+except Exception as e:
+    print("Error occurred:", e)
+    print("Error type:", type(e))
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 00000000..bcec2d92
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,48 @@
+import xarray as xr
+
+print("Testing edge cases for xr.where with keep_attrs=True...")
+
+# Test case 1: Scalar as second argument (original issue)
+print("\n1. Scalar as second argument:")
+try:
+    result = xr.where(xr.DataArray([1, 2, 3]) > 0, 1, 0, keep_attrs=True)
+    print("   Success! Result:", result)
+except Exception as e:
+    print("   Error:", e)
+
+# Test case 2: Scalar as third argument
+print("\n2. Scalar as third argument:")
+try:
+    result = xr.where(xr.DataArray([1, 2, 3]) > 0, xr.DataArray([4, 5, 6]), 0, keep_attrs=True)
+    print("   Success! Result:", result)
+except Exception as e:
+    print("   Error:", e)
+
+# Test case 3: Both scalar arguments
+print("\n3. Both scalar arguments:")
+try:
+    result = xr.where(xr.DataArray([1, 2, 3]) > 0, 1, 0, keep_attrs=True)
+    print("   Success! Result:", result)
+except Exception as e:
+    print("   Error:", e)
+
+# Test case 4: Normal case with DataArrays (should work as before)
+print("\n4. Normal case with DataArrays:")
+try:
+    da1 = xr.DataArray([1, 2, 3], attrs={"test": "value1"})
+    da2 = xr.DataArray([4, 5, 6], attrs={"test": "value2"})
+    result = xr.where(da1 > 0, da1, da2, keep_attrs=True)
+    print("   Success! Result:", result)
+    print("   Attributes:", result.attrs)
+except Exception as e:
+    print("   Error:", e)
+
+# Test case 5: Mixed case with one DataArray and one scalar
+print("\n5. Mixed case with DataArray and scalar:")
+try:
+    da = xr.DataArray([1, 2, 3], attrs={"test": "value"})
+    result = xr.where(da > 0, da, 0, keep_attrs=True)
+    print("   Success! Result:", result)
+    print("   Attributes:", result.attrs)
+except Exception as e:
+    print("   Error:", e)
\ No newline at end of file
diff --git a/xarray/core/computation.py b/xarray/core/computation.py
index 7676d8e5..885c1b51 100644
--- a/xarray/core/computation.py
+++ b/xarray/core/computation.py
@@ -1829,7 +1829,7 @@ def where(cond, x, y, keep_attrs=None):
     if keep_attrs is True:
         # keep the attributes of x, the second parameter, by default to
         # be consistent with the `where` method of `DataArray` and `Dataset`
-        keep_attrs = lambda attrs, context: attrs[1]
+        keep_attrs = lambda attrs, context: attrs[1] if len(attrs) > 1 else {}
 
     # alignment for three arguments is complicated, so don't support it yet
     return apply_ufunc(