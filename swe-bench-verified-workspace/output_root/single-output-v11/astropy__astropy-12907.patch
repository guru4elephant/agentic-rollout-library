diff --git a/astropy/modeling/separable.py b/astropy/modeling/separable.py
index a308e27297..45bea36085 100644
--- a/astropy/modeling/separable.py
+++ b/astropy/modeling/separable.py
@@ -242,7 +242,7 @@ def _cstack(left, right):
         cright = _coord_matrix(right, 'right', noutp)
     else:
         cright = np.zeros((noutp, right.shape[1]))
-        cright[-right.shape[0]:, -right.shape[1]:] = 1
+        cright[-right.shape[0]:, -right.shape[1]:] = right
 
     return np.hstack([cleft, cright])
 
diff --git a/debug_issue.py b/debug_issue.py
new file mode 100644
index 0000000000..71f013f86e
--- /dev/null
+++ b/debug_issue.py
@@ -0,0 +1,29 @@
+from astropy.modeling import models as m
+from astropy.modeling.separable import separability_matrix, _cstack, _separable
+
+# Create the nested compound model
+cm = m.Linear1D(10) & m.Linear1D(5)
+nested_model = m.Pix2Sky_TAN() & cm
+
+print("Nested model structure:")
+print(f"nested_model.left: {nested_model.left}")
+print(f"nested_model.right: {nested_model.right}")
+print(f"nested_model.right.left: {nested_model.right.left}")
+print(f"nested_model.right.right: {nested_model.right.right}")
+print()
+
+# Let's see what _separable returns for each part
+print("_separable(nested_model.left):")
+print(_separable(nested_model.left))
+print()
+
+print("_separable(nested_model.right):")
+right_sep = _separable(nested_model.right)
+print(right_sep)
+print(f"Type: {type(right_sep)}")
+print()
+
+# Now let's see what _cstack does
+print("_cstack result:")
+result = _cstack(_separable(nested_model.left), _separable(nested_model.right))
+print(result)
\ No newline at end of file
diff --git a/pyproject.toml b/pyproject.toml
index 3364d30740..02dddbe713 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -1,5 +1,5 @@
 [build-system]
-requires = ["setuptools",
+requires = ["setuptools==68.0.0",
             "setuptools_scm>=6.2",
             "wheel",
             "cython==0.29.22",
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..adc99bec79
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,17 @@
+from astropy.modeling import models as m
+from astropy.modeling.separable import separability_matrix
+
+# Test case 1: Simple compound model
+cm = m.Linear1D(10) & m.Linear1D(5)
+print("Simple compound model:")
+print(separability_matrix(cm))
+print()
+
+# Test case 2: More complex model
+print("Complex model:")
+print(separability_matrix(m.Pix2Sky_TAN() & m.Linear1D(10) & m.Linear1D(5)))
+print()
+
+# Test case 3: Nested compound model (the problematic case)
+print("Nested compound model:")
+print(separability_matrix(m.Pix2Sky_TAN() & cm))
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..1416e75638
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,33 @@
+from astropy.modeling import models as m
+from astropy.modeling.separable import separability_matrix
+
+# Test 1: Simple non-nested compound model (should still work)
+print("Test 1: Simple compound model")
+cm = m.Linear1D(10) & m.Linear1D(5)
+print(separability_matrix(cm))
+print()
+
+# Test 2: Multiple levels of nesting
+print("Test 2: Multiple levels of nesting")
+cm2 = m.Linear1D(1) & m.Linear1D(2)
+cm3 = m.Linear1D(3) & m.Linear1D(4)
+nested = cm2 & cm3
+print(separability_matrix(nested))
+print()
+
+# Test 3: Mixed models with nesting
+print("Test 3: Mixed models with nesting")
+mixed = m.Pix2Sky_TAN() & (m.Linear1D(10) & m.Linear1D(5))
+print(separability_matrix(mixed))
+print()
+
+# Test 4: Triple nesting
+print("Test 4: Triple nesting")
+triple = m.Pix2Sky_TAN() & (m.Linear1D(10) & (m.Linear1D(5) & m.Linear1D(3)))
+print(separability_matrix(triple))
+print()
+
+# Test 5: Test with pipe operator as well
+print("Test 5: Pipe operator with nesting")
+pipe_nested = (m.Linear1D(10) & m.Linear1D(5)) | m.Scale(1)
+print(separability_matrix(pipe_nested))
\ No newline at end of file