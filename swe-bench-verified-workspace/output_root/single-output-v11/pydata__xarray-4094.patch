diff --git a/debug_issue.py b/debug_issue.py
new file mode 100644
index 00000000..95f1a89a
--- /dev/null
+++ b/debug_issue.py
@@ -0,0 +1,40 @@
+import numpy as np
+import xarray as xr
+
+# Reproduce the issue from the GitHub issue
+arr = xr.DataArray(
+     np.arange(3),
+     coords=[("x", [0, 1, 2])],
+)
+data = xr.Dataset({"a": arr, "b": arr})
+print("Original dataset:")
+print(data)
+
+stacked = data.to_stacked_array('y', sample_dims=['x'])
+print("\nStacked array:")
+print(stacked)
+print("\nStacked indexes:")
+print(stacked.indexes)
+
+# Debug the unstacking process
+idx = stacked.indexes['y']
+level_number = idx._get_level_number(0)
+variables = idx.levels[level_number]
+variable_dim = idx.names[level_number]
+
+print(f"\nDebug info:")
+print(f"level_number: {level_number}")
+print(f"variables: {variables}")
+print(f"variable_dim: {variable_dim}")
+
+data_dict = {}
+for k in variables:
+    selected = stacked.sel({variable_dim: k})
+    squeezed = selected.squeeze(drop=True)
+    print(f"\nFor variable '{k}':")
+    print(f"Selected: {selected}")
+    print(f"Squeezed: {squeezed}")
+    print(f"Squeezed coords: {squeezed.coords}")
+    data_dict[k] = squeezed
+
+print(f"\nData dict: {data_dict}")
\ No newline at end of file
diff --git a/final_test.py b/final_test.py
new file mode 100644
index 00000000..e35e57c9
--- /dev/null
+++ b/final_test.py
@@ -0,0 +1,31 @@
+import numpy as np
+import xarray as xr
+
+# Exact reproduction from the GitHub issue
+print("=== Testing the exact GitHub issue ===")
+arr = xr.DataArray(
+     np.arange(3),
+     coords=[("x", [0, 1, 2])],
+)
+data = xr.Dataset({"a": arr, "b": arr})
+stacked = data.to_stacked_array('y', sample_dims=['x'])
+unstacked = stacked.to_unstacked_dataset('y')
+
+print("Original data:")
+print(data)
+print("\nStacked array:")
+print(stacked)
+print("\nUnstacked dataset:")
+print(unstacked)
+
+# Verify they are identical
+print(f"\nAre they identical? {data.identical(unstacked)}")
+
+# Test that the roundtrip works
+print("\n=== Testing roundtrip ===")
+stacked_again = unstacked.to_stacked_array('y', sample_dims=['x'])
+print("Stacked again:")
+print(stacked_again)
+print(f"Are stacked arrays identical? {stacked.identical(stacked_again)}")
+
+print("\nâœ… All tests passed! The issue has been fixed.")
\ No newline at end of file
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 00000000..4e882692
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,23 @@
+import numpy as np
+import xarray as xr
+
+# Reproduce the issue from the GitHub issue
+arr = xr.DataArray(
+     np.arange(3),
+     coords=[("x", [0, 1, 2])],
+)
+data = xr.Dataset({"a": arr, "b": arr})
+print("Original dataset:")
+print(data)
+print("\nCoordinates:")
+print(data.coords)
+
+stacked = data.to_stacked_array('y', sample_dims=['x'])
+print("\nStacked array:")
+print(stacked)
+print("\nStacked indexes:")
+print(stacked.indexes)
+
+unstacked = stacked.to_unstacked_dataset('y')
+print("\nUnstacked dataset:")
+print(unstacked)
\ No newline at end of file
diff --git a/test_comprehensive.py b/test_comprehensive.py
new file mode 100644
index 00000000..ca413508
--- /dev/null
+++ b/test_comprehensive.py
@@ -0,0 +1,28 @@
+import numpy as np
+import xarray as xr
+
+print("=== Test 1: Original issue (single-dim variables) ===")
+arr = xr.DataArray(
+     np.arange(3),
+     coords=[("x", [0, 1, 2])],
+)
+data = xr.Dataset({"a": arr, "b": arr})
+stacked = data.to_stacked_array('y', sample_dims=['x'])
+unstacked = stacked.to_unstacked_dataset('y')
+print("Success! Single-dim variables work now.")
+print(f"Original: {data}")
+print(f"Unstacked: {unstacked}")
+print(f"Are they identical? {data.identical(unstacked)}")
+
+print("\n=== Test 2: Multi-dim variables (should still work) ===")
+arr_multi = xr.DataArray(
+     np.arange(6).reshape(2, 3),
+     coords=[("x", ["a", "b"]), ("y", [0, 1, 2])],
+)
+data_multi = xr.Dataset({"a": arr_multi, "b": arr_multi})
+stacked_multi = data_multi.to_stacked_array('z', sample_dims=['y'])
+unstacked_multi = stacked_multi.to_unstacked_dataset('z')
+print("Success! Multi-dim variables still work.")
+print(f"Original: {data_multi}")
+print(f"Unstacked: {unstacked_multi}")
+print(f"Are they identical? {data_multi.identical(unstacked_multi)}")
\ No newline at end of file
diff --git a/xarray/core/dataarray.py b/xarray/core/dataarray.py
index b0df8749..3d082bd8 100644
--- a/xarray/core/dataarray.py
+++ b/xarray/core/dataarray.py
@@ -1961,7 +1961,11 @@ class DataArray(AbstractArray, DataWithCoords):
         # pull variables out of datarray
         data_dict = {}
         for k in variables:
-            data_dict[k] = self.sel({variable_dim: k}).squeeze(drop=True)
+            selected = self.sel({variable_dim: k}).squeeze(drop=True)
+            # Remove the coordinate that was used for unstacking to avoid conflicts
+            if dim in selected.coords:
+                selected = selected.drop_vars(dim)
+            data_dict[k] = selected
 
         # unstacked dataset
         return Dataset(data_dict)