diff --git a/comprehensive_test.py b/comprehensive_test.py
new file mode 100644
index 0000000000..872a93789c
--- /dev/null
+++ b/comprehensive_test.py
@@ -0,0 +1,35 @@
+#!/usr/bin/env python3
+"""
+Comprehensive test for Morse encoding fix
+"""
+from sympy.crypto.crypto import morse_char, encode_morse, decode_morse
+
+def test_comprehensive_morse():
+    print("Running comprehensive Morse code tests...")
+    
+    # Test all digits to ensure no regressions
+    digits = "0123456789"
+    print(f"\nTesting digits: {digits}")
+    
+    for digit in digits:
+        encoded = encode_morse(digit)
+        decoded = decode_morse(encoded)
+        print(f"  {digit} -> {encoded} -> {decoded} {'✅' if digit == decoded else '❌'}")
+    
+    # Test some text with digits
+    print(f"\nTesting text with digits:")
+    test_text = "HELLO123WORLD"
+    encoded = encode_morse(test_text)
+    decoded = decode_morse(encoded)
+    print(f"  '{test_text}' -> '{encoded}' -> '{decoded}' {'✅' if test_text == decoded else '❌'}")
+    
+    # Test the specific case mentioned in the issue
+    print(f"\nTesting the specific issue case:")
+    encoded_1 = encode_morse('1')
+    print(f"  '1' encodes to: {encoded_1} {'✅' if encoded_1 == '.----' else '❌'}")
+    
+    decoded_1 = decode_morse('.----')
+    print(f"  '.----' decodes to: {decoded_1} {'✅' if decoded_1 == '1' else '❌'}")
+
+if __name__ == "__main__":
+    test_comprehensive_morse()
\ No newline at end of file
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..b5fa719609
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,31 @@
+#!/usr/bin/env python3
+"""
+Script to reproduce the Morse encoding issue for "1"
+"""
+from sympy.crypto.crypto import morse_char, encode_morse, decode_morse
+
+def test_morse_encoding():
+    print("Testing Morse encoding for '1'...")
+    
+    # Check the current mapping
+    print(f"Current mapping for '1': {morse_char.get('----', 'NOT FOUND')}")
+    
+    # Test encoding '1' to Morse
+    encoded = encode_morse('1')
+    print(f"Encoding '1': {encoded}")
+    
+    # Test decoding the correct Morse code for '1'
+    correct_morse = ".----"
+    decoded = decode_morse(correct_morse)
+    print(f"Decoding '{correct_morse}': {decoded}")
+    
+    # Test what happens with the incorrect mapping
+    incorrect_morse = "----"
+    try:
+        decoded_incorrect = decode_morse(incorrect_morse)
+        print(f"Decoding '{incorrect_morse}': {decoded_incorrect}")
+    except Exception as e:
+        print(f"Error decoding '{incorrect_morse}': {e}")
+
+if __name__ == "__main__":
+    test_morse_encoding()
\ No newline at end of file
diff --git a/sympy/crypto/crypto.py b/sympy/crypto/crypto.py
index ca552191c0..0c556b6efb 100644
--- a/sympy/crypto/crypto.py
+++ b/sympy/crypto/crypto.py
@@ -1520,7 +1520,7 @@ def decipher_kid_rsa(msg, key):
     "..-": "U", "...-": "V",
     ".--": "W", "-..-": "X",
     "-.--": "Y", "--..": "Z",
-    "-----": "0", "----": "1",
+    "-----": "0", ".----": "1",
     "..---": "2", "...--": "3",
     "....-": "4", ".....": "5",
     "-....": "6", "--...": "7",