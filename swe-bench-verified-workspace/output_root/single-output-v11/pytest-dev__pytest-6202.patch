diff --git a/final_verification.py b/final_verification.py
new file mode 100644
index 000000000..60da01d74
--- /dev/null
+++ b/final_verification.py
@@ -0,0 +1,39 @@
+import pytest
+import subprocess
+import sys
+
+# Test various edge cases to ensure our fix works correctly
+@pytest.mark.parametrize("param", [
+    "..[",      # The original issue case
+    ".[",       # Similar case
+    "[",        # Single bracket
+    "]",        # Closing bracket
+    ".[]",      # Bracket with dot
+    "..]",      # Multiple dots with closing bracket
+    "normal",   # Normal string
+    "with.dots", # String with dots
+    "with[brackets]", # String with brackets
+    "complex.[case]", # Complex case
+    "..[complex]", # Complex case with multiple dots
+])
+def test_various_cases(param):
+    # All tests should pass, we're just testing the display
+    assert True
+
+def test_original_issue():
+    """Test the exact case from the original issue"""
+    # Run the original reproduction script and capture output
+    result = subprocess.run([
+        sys.executable, "reproduce_issue.py"
+    ], capture_output=True, text=True, cwd="/testbed")
+    
+    # Check that the output contains the correct test name (with ..[)
+    assert "test_boo[..[]" in result.stdout
+    # Check that it does NOT contain the incorrect replacement (with .[)
+    assert "test_boo[.[]" not in result.stdout
+    # The test should fail (assert 0), but pytest returns 0 even on failures
+    # Instead, check that the output contains the failure indication
+    assert "1 failed" in result.stdout
+
+if __name__ == "__main__":
+    pytest.main([__file__, "-v"])
\ No newline at end of file
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 000000000..c59064e75
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,8 @@
+import pytest
+
+@pytest.mark.parametrize("a", ["..["])
+def test_boo(a):
+    assert 0
+
+if __name__ == "__main__":
+    pytest.main([__file__, "-v"])
\ No newline at end of file
diff --git a/src/_pytest/python.py b/src/_pytest/python.py
index b8b365ad3..5f2af31e2 100644
--- a/src/_pytest/python.py
+++ b/src/_pytest/python.py
@@ -286,7 +286,7 @@ class PyobjMixin(PyobjContext):
             parts.append(name)
         parts.reverse()
         s = ".".join(parts)
-        return s.replace(".[", "[")
+        return s
 
     def reportinfo(self):
         # XXX caching?
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 000000000..8d67ad512
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,13 @@
+import pytest
+
+# Test various edge cases with brackets and dots
+@pytest.mark.parametrize("a", ["..[", ".[", "[", "]", ".[]", "..]"])
+def test_bracket_cases(a):
+    assert 1  # Should pass
+
+@pytest.mark.parametrize("b", ["normal", "with.dots", "with[brackets]"])
+def test_normal_cases(b):
+    assert 1  # Should pass
+
+if __name__ == "__main__":
+    pytest.main([__file__, "-v"])
\ No newline at end of file