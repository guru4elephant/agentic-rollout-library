diff --git a/django/forms/widgets.py b/django/forms/widgets.py
index 338d54d72f..40ac1d3162 100644
--- a/django/forms/widgets.py
+++ b/django/forms/widgets.py
@@ -387,6 +387,9 @@ class FileInput(Input):
     def value_omitted_from_data(self, data, files, name):
         return name not in files
 
+    def use_required_attribute(self, initial):
+        return super().use_required_attribute(initial) and not initial
+
 
 FILE_INPUT_CONTRADICTION = object()
 
@@ -451,9 +454,6 @@ class ClearableFileInput(FileInput):
             return False
         return upload
 
-    def use_required_attribute(self, initial):
-        return super().use_required_attribute(initial) and not initial
-
     def value_omitted_from_data(self, data, files, name):
         return (
             super().value_omitted_from_data(data, files, name) and
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..33d0a13aa8
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,40 @@
+#!/usr/bin/env python3
+
+import os
+import sys
+sys.path.insert(0, '.')
+
+from django.forms import Form
+from django.forms.fields import FileField
+from django.forms.widgets import FileInput, ClearableFileInput
+
+# Test case 1: FileInput with initial data
+print("=== Testing FileInput with initial data ===")
+file_input = FileInput()
+file_input.is_required = True
+
+# Test without initial data
+result_no_initial = file_input.use_required_attribute(None)
+print(f"FileInput without initial data: use_required_attribute = {result_no_initial}")
+
+# Test with initial data
+result_with_initial = file_input.use_required_attribute("existing_file.txt")
+print(f"FileInput with initial data: use_required_attribute = {result_with_initial}")
+
+# Test case 2: ClearableFileInput with initial data
+print("\n=== Testing ClearableFileInput with initial data ===")
+clearable_file_input = ClearableFileInput()
+clearable_file_input.is_required = True
+
+# Test without initial data
+result_no_initial = clearable_file_input.use_required_attribute(None)
+print(f"ClearableFileInput without initial data: use_required_attribute = {result_no_initial}")
+
+# Test with initial data
+result_with_initial = clearable_file_input.use_required_attribute("existing_file.txt")
+print(f"ClearableFileInput with initial data: use_required_attribute = {result_with_initial}")
+
+print("\n=== Issue Analysis ===")
+print("The issue is that FileInput doesn't have the same logic as ClearableFileInput.")
+print("FileInput should return False for use_required_attribute when initial data exists,")
+print("just like ClearableFileInput does.")
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..c0bbb7bb76
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,64 @@
+#!/usr/bin/env python3
+
+import os
+import sys
+sys.path.insert(0, '.')
+
+from django.forms.widgets import FileInput, ClearableFileInput
+
+def test_edge_cases():
+    print("=== Testing Edge Cases ===")
+    
+    # Test case 1: Empty string initial data
+    file_input = FileInput()
+    file_input.is_required = True
+    result = file_input.use_required_attribute("")
+    print(f"FileInput with empty string initial: use_required_attribute = {result}")
+    
+    # Test case 2: None initial data
+    result = file_input.use_required_attribute(None)
+    print(f"FileInput with None initial: use_required_attribute = {result}")
+    
+    # Test case 3: False initial data
+    result = file_input.use_required_attribute(False)
+    print(f"FileInput with False initial: use_required_attribute = {result}")
+    
+    # Test case 4: Zero initial data
+    result = file_input.use_required_attribute(0)
+    print(f"FileInput with 0 initial: use_required_attribute = {result}")
+    
+    # Test case 5: Non-empty string initial data
+    result = file_input.use_required_attribute("file.txt")
+    print(f"FileInput with non-empty string initial: use_required_attribute = {result}")
+    
+    # Test case 6: Not required field
+    file_input.is_required = False
+    result = file_input.use_required_attribute("file.txt")
+    print(f"FileInput not required with initial data: use_required_attribute = {result}")
+    
+    # Test the same with ClearableFileInput
+    print("\n=== Testing ClearableFileInput Edge Cases ===")
+    clearable_file_input = ClearableFileInput()
+    clearable_file_input.is_required = True
+    
+    result = clearable_file_input.use_required_attribute("")
+    print(f"ClearableFileInput with empty string initial: use_required_attribute = {result}")
+    
+    result = clearable_file_input.use_required_attribute(None)
+    print(f"ClearableFileInput with None initial: use_required_attribute = {result}")
+    
+    result = clearable_file_input.use_required_attribute(False)
+    print(f"ClearableFileInput with False initial: use_required_attribute = {result}")
+    
+    result = clearable_file_input.use_required_attribute(0)
+    print(f"ClearableFileInput with 0 initial: use_required_attribute = {result}")
+    
+    result = clearable_file_input.use_required_attribute("file.txt")
+    print(f"ClearableFileInput with non-empty string initial: use_required_attribute = {result}")
+    
+    clearable_file_input.is_required = False
+    result = clearable_file_input.use_required_attribute("file.txt")
+    print(f"ClearableFileInput not required with initial data: use_required_attribute = {result}")
+
+if __name__ == "__main__":
+    test_edge_cases()
\ No newline at end of file
diff --git a/test_fix.py b/test_fix.py
new file mode 100644
index 0000000000..16c0c747e6
--- /dev/null
+++ b/test_fix.py
@@ -0,0 +1,35 @@
+#!/usr/bin/env python3
+
+import os
+import sys
+sys.path.insert(0, '.')
+
+from django.forms.widgets import FileInput, ClearableFileInput
+
+def test_use_required_attribute():
+    """Test the use_required_attribute method for both widgets"""
+    
+    # Test FileInput
+    file_input = FileInput()
+    file_input.is_required = True
+    
+    print("Testing FileInput.use_required_attribute():")
+    print(f"  None: {file_input.use_required_attribute(None)}")  # Should be True
+    print(f"  'resume.txt': {file_input.use_required_attribute('resume.txt')}")  # Should be False
+    
+    # Test ClearableFileInput
+    clearable_file_input = ClearableFileInput()
+    clearable_file_input.is_required = True
+    
+    print("\nTesting ClearableFileInput.use_required_attribute():")
+    print(f"  None: {clearable_file_input.use_required_attribute(None)}")  # Should be True
+    print(f"  'resume.txt': {clearable_file_input.use_required_attribute('resume.txt')}")  # Should be False
+    
+    # Verify both widgets behave the same
+    assert file_input.use_required_attribute(None) == clearable_file_input.use_required_attribute(None)
+    assert file_input.use_required_attribute('resume.txt') == clearable_file_input.use_required_attribute('resume.txt')
+    
+    print("\nâœ“ Both widgets now behave consistently!")
+
+if __name__ == "__main__":
+    test_use_required_attribute()
\ No newline at end of file