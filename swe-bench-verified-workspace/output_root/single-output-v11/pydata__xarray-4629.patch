diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 00000000..a59e0c8f
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,12 @@
+import xarray as xr
+
+# Reproduce the issue described in the GitHub issue
+xds1 = xr.Dataset(attrs={'a':'b'})
+xds2 = xr.Dataset(attrs={'a':'c'})
+print(f"a1: {xds1.attrs['a']}, a2: {xds2.attrs['a']}")
+
+xds3 = xr.merge([xds1, xds2], combine_attrs='override')
+print(f"a1: {xds1.attrs['a']}, a2: {xds2.attrs['a']}, a3: {xds3.attrs['a']}")
+
+xds3.attrs['a'] = 'd'
+print(f"a1: {xds1.attrs['a']}, a2: {xds2.attrs['a']}, a3: {xds3.attrs['a']}")
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 00000000..67db4eaa
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,36 @@
+import xarray as xr
+
+print("Testing edge cases for combine_attrs='override':")
+
+# Test 1: Empty attributes
+print("\n1. Testing with empty attributes:")
+xds1 = xr.Dataset(attrs={})
+xds2 = xr.Dataset(attrs={'a': 'b'})
+xds3 = xr.merge([xds1, xds2], combine_attrs='override')
+print(f"Empty attrs + non-empty attrs: {xds3.attrs}")
+
+# Test 2: Nested structures (should work the same way)
+print("\n2. Testing with nested structures:")
+xds1 = xr.Dataset(attrs={'nested': {'key': 'value1'}})
+xds2 = xr.Dataset(attrs={'nested': {'key': 'value2'}})
+xds3 = xr.merge([xds1, xds2], combine_attrs='override')
+print(f"Before modification: xds1.attrs['nested']['key'] = {xds1.attrs['nested']['key']}")
+print(f"Before modification: xds3.attrs['nested']['key'] = {xds3.attrs['nested']['key']}")
+
+# Modify the nested structure in the merged dataset
+xds3.attrs['nested']['key'] = 'modified'
+print(f"After modification: xds1.attrs['nested']['key'] = {xds1.attrs['nested']['key']}")
+print(f"After modification: xds3.attrs['nested']['key'] = {xds3.attrs['nested']['key']}")
+
+# Test 3: Multiple datasets
+print("\n3. Testing with multiple datasets:")
+xds1 = xr.Dataset(attrs={'a': 'first'})
+xds2 = xr.Dataset(attrs={'a': 'second'}) 
+xds3 = xr.Dataset(attrs={'a': 'third'})
+merged = xr.merge([xds1, xds2, xds3], combine_attrs='override')
+print(f"First dataset attrs used: {merged.attrs}")
+print(f"Before modification: xds1.attrs['a'] = {xds1.attrs['a']}")
+merged.attrs['a'] = 'changed'
+print(f"After modification: xds1.attrs['a'] = {xds1.attrs['a']}")
+
+print("\nAll edge case tests completed!")
\ No newline at end of file
diff --git a/test_nested_consistency.py b/test_nested_consistency.py
new file mode 100644
index 00000000..c1588f22
--- /dev/null
+++ b/test_nested_consistency.py
@@ -0,0 +1,31 @@
+import xarray as xr
+
+print("Testing nested attribute behavior consistency across combine_attrs options:")
+
+# Create datasets with nested attributes
+xds1 = xr.Dataset(attrs={'nested': {'key': 'value1'}})
+xds2 = xr.Dataset(attrs={'nested': {'key': 'value2'}})
+
+print("Testing combine_attrs='no_conflicts' with nested structures:")
+try:
+    xds_no_conflicts = xr.merge([xds1, xds2], combine_attrs='no_conflicts')
+    print("Should have failed due to conflicts")
+except Exception as e:
+    print(f"Expected error: {e}")
+
+print("\nTesting combine_attrs='identical' with nested structures:")
+try:
+    xds_identical = xr.merge([xds1, xr.Dataset(attrs={'nested': {'key': 'value1'}})], combine_attrs='identical')
+    print(f"Before modification: xds1.attrs['nested']['key'] = {xds1.attrs['nested']['key']}")
+    xds_identical.attrs['nested']['key'] = 'modified'
+    print(f"After modification: xds1.attrs['nested']['key'] = {xds1.attrs['nested']['key']}")
+except Exception as e:
+    print(f"Error: {e}")
+
+print("\nTesting combine_attrs='override' with nested structures (our fix):")
+xds_override = xr.merge([xds1, xds2], combine_attrs='override')
+print(f"Before modification: xds1.attrs['nested']['key'] = {xds1.attrs['nested']['key']}")
+xds_override.attrs['nested']['key'] = 'modified'
+print(f"After modification: xds1.attrs['nested']['key'] = {xds1.attrs['nested']['key']}")
+
+print("\nThe behavior is consistent across all combine_attrs options for nested structures.")
\ No newline at end of file
diff --git a/test_other_combine_attrs.py b/test_other_combine_attrs.py
new file mode 100644
index 00000000..93346ecf
--- /dev/null
+++ b/test_other_combine_attrs.py
@@ -0,0 +1,29 @@
+import xarray as xr
+
+# Test other combine_attrs options to ensure they still work correctly
+xds1 = xr.Dataset(attrs={'a':'b', 'common':'value1'})
+xds2 = xr.Dataset(attrs={'a':'c', 'common':'value2'})
+
+print("Testing combine_attrs='drop':")
+xds_drop = xr.merge([xds1, xds2], combine_attrs='drop')
+print(f"xds_drop attrs: {xds_drop.attrs}")
+
+print("\nTesting combine_attrs='no_conflicts':")
+try:
+    xds_no_conflicts = xr.merge([xds1, xds2], combine_attrs='no_conflicts')
+    print(f"xds_no_conflicts attrs: {xds_no_conflicts.attrs}")
+except Exception as e:
+    print(f"Error (expected): {e}")
+
+print("\nTesting combine_attrs='identical':")
+try:
+    xds_identical = xr.merge([xds1, xr.Dataset(attrs={'a':'b', 'common':'value1'})], combine_attrs='identical')
+    print(f"xds_identical attrs: {xds_identical.attrs}")
+except Exception as e:
+    print(f"Error (expected if attrs differ): {e}")
+
+print("\nTesting combine_attrs='override' (our fix):")
+xds_override = xr.merge([xds1, xds2], combine_attrs='override')
+print(f"Before modification - xds1.attrs['a']: {xds1.attrs['a']}, xds_override.attrs['a']: {xds_override.attrs['a']}")
+xds_override.attrs['a'] = 'modified'
+print(f"After modification - xds1.attrs['a']: {xds1.attrs['a']}, xds_override.attrs['a']: {xds_override.attrs['a']}")
\ No newline at end of file
diff --git a/xarray/core/merge.py b/xarray/core/merge.py
index ca4e29b6..dff00804 100644
--- a/xarray/core/merge.py
+++ b/xarray/core/merge.py
@@ -501,7 +501,7 @@ def merge_attrs(variable_attrs, combine_attrs):
     if combine_attrs == "drop":
         return {}
     elif combine_attrs == "override":
-        return variable_attrs[0]
+        return dict(variable_attrs[0])
     elif combine_attrs == "no_conflicts":
         result = dict(variable_attrs[0])
         for attrs in variable_attrs[1:]: