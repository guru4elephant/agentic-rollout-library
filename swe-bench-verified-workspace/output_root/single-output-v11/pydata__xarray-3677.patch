diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 00000000..69c942c3
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,17 @@
+import xarray as xr
+
+ds = xr.Dataset({'a': 0})
+da = xr.DataArray(1, name='b')
+
+expected = xr.merge([ds, da])  # works fine
+print("Expected (using xr.merge):")
+print(expected)
+
+try:
+    actual = ds.merge(da)  # fails
+    print("Actual (using ds.merge):")
+    print(actual)
+except Exception as e:
+    print(f"Error: {e}")
+    import traceback
+    traceback.print_exc()
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 00000000..9d472e5c
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,40 @@
+import xarray as xr
+
+# Test case 1: Basic DataArray with name
+print("Test 1: Basic DataArray with name")
+ds = xr.Dataset({'a': 0})
+da = xr.DataArray(1, name='b')
+result = ds.merge(da)
+print(result)
+
+# Test case 2: DataArray without name (should fail gracefully)
+print("\nTest 2: DataArray without name")
+ds = xr.Dataset({'a': 0})
+da_no_name = xr.DataArray(1)
+try:
+    result = ds.merge(da_no_name)
+    print(result)
+except Exception as e:
+    print(f"Expected error: {e}")
+
+# Test case 3: Multiple DataArrays (should work with top-level merge)
+print("\nTest 3: Multiple DataArrays with top-level merge")
+ds = xr.Dataset({'a': 0})
+da1 = xr.DataArray(1, name='b')
+da2 = xr.DataArray(2, name='c')
+result = xr.merge([ds, da1, da2])
+print(result)
+
+# Test case 4: DataArray with coordinates
+print("\nTest 4: DataArray with coordinates")
+ds = xr.Dataset({'a': 0})
+da_coords = xr.DataArray([1, 2], dims=['x'], coords={'x': [0, 1]}, name='b')
+result = ds.merge(da_coords)
+print(result)
+
+# Test case 5: Regular dict (should still work)
+print("\nTest 5: Regular dict")
+ds = xr.Dataset({'a': 0})
+dict_data = {'b': 1}
+result = ds.merge(dict_data)
+print(result)
\ No newline at end of file
diff --git a/xarray/core/merge.py b/xarray/core/merge.py
index 10c7804d..dad221b8 100644
--- a/xarray/core/merge.py
+++ b/xarray/core/merge.py
@@ -805,6 +805,10 @@ def dataset_merge_method(
 ) -> _MergeResult:
     """Guts of the Dataset.merge method.
     """
+    from .dataarray import DataArray
+    # Convert DataArray to Dataset for compatibility
+    if isinstance(other, DataArray):
+        other = other.to_dataset()
     # we are locked into supporting overwrite_vars for the Dataset.merge
     # method due for backwards compatibility
     # TODO: consider deprecating it?