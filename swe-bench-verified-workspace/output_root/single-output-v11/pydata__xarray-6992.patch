diff --git a/debug_issue.py b/debug_issue.py
new file mode 100644
index 00000000..c0c8685d
--- /dev/null
+++ b/debug_issue.py
@@ -0,0 +1,27 @@
+import xarray as xr
+
+# Reproduce the issue with debug information
+print("Creating dataset with coordinates...")
+ds = xr.Dataset(coords={"a": ("x", [1, 2, 3]), "b": ("x", ['a', 'b', 'c'])})
+print("Dataset created successfully")
+
+print("Setting index...")
+ds_indexed = ds.set_index(z=['a', 'b'])
+print("Index set successfully")
+print(f"After set_index - _variables keys: {list(ds_indexed._variables.keys())}")
+print(f"After set_index - _coord_names: {ds_indexed._coord_names}")
+
+print("Resetting index with drop=True...")
+try:
+    result = ds_indexed.reset_index("z", drop=True)
+    print("Reset index successful")
+    print(f"After reset_index - _variables keys: {list(result._variables.keys())}")
+    print(f"After reset_index - _coord_names: {result._coord_names}")
+    print(f"DataVariables len: {len(result.data_vars)}")
+    print(result)
+except Exception as e:
+    print(f"Error occurred: {e}")
+    print(f"Error type: {type(e)}")
+    # Let's also check the state when the error occurs
+    print(f"During error - _variables keys: {list(ds_indexed._variables.keys())}")
+    print(f"During error - _coord_names: {ds_indexed._coord_names}")
\ No newline at end of file
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 00000000..ceaf2d09
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,19 @@
+import xarray as xr
+
+# Reproduce the issue from the GitHub issue
+print("Creating dataset with coordinates...")
+ds = xr.Dataset(coords={"a": ("x", [1, 2, 3]), "b": ("x", ['a', 'b', 'c'])})
+print("Dataset created successfully")
+
+print("Setting index...")
+ds_indexed = ds.set_index(z=['a', 'b'])
+print("Index set successfully")
+
+print("Resetting index with drop=True...")
+try:
+    result = ds_indexed.reset_index("z", drop=True)
+    print("Reset index successful")
+    print(result)
+except Exception as e:
+    print(f"Error occurred: {e}")
+    print(f"Error type: {type(e)}")
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 00000000..8363ec95
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,36 @@
+import xarray as xr
+
+print("Testing edge cases...")
+
+# Test case 1: Single index with drop=True (original case)
+print("\n1. Testing single index with drop=True")
+ds = xr.Dataset(coords={"a": ("x", [1, 2, 3]), "b": ("x", ['a', 'b', 'c'])})
+ds_indexed = ds.set_index(z=['a', 'b'])
+try:
+    result = ds_indexed.reset_index("z", drop=True)
+    print("✓ Single index with drop=True works")
+    print(f"  DataVariables len: {len(result.data_vars)}")
+except Exception as e:
+    print(f"✗ Error: {e}")
+
+# Test case 2: drop=False (should not be affected)
+print("\n2. Testing drop=False (should work as before)")
+ds = xr.Dataset(coords={"a": ("x", [1, 2, 3]), "b": ("x", ['a', 'b', 'c'])})
+ds_indexed = ds.set_index(z=['a', 'b'])
+try:
+    result = ds_indexed.reset_index("z", drop=False)
+    print("✓ drop=False works")
+    print(f"  DataVariables len: {len(result.data_vars)}")
+except Exception as e:
+    print(f"✗ Error: {e}")
+
+# Test case 3: Regular dataset operations should still work
+print("\n3. Testing regular dataset operations")
+ds = xr.Dataset({"temp": ("x", [1, 2, 3])}, coords={"x": [1, 2, 3]})
+try:
+    print("✓ Regular dataset creation works")
+    print(f"  DataVariables len: {len(ds.data_vars)}")
+except Exception as e:
+    print(f"✗ Error: {e}")
+
+print("\nAll edge case tests completed!")
\ No newline at end of file
diff --git a/test_empty_new_variables.py b/test_empty_new_variables.py
new file mode 100644
index 00000000..89df496b
--- /dev/null
+++ b/test_empty_new_variables.py
@@ -0,0 +1,24 @@
+import xarray as xr
+
+# Test case where new_variables might be empty
+print("Testing edge case with empty new_variables...")
+
+# Create a simple dataset with a multi-index
+ds = xr.Dataset(coords={"a": ("x", [1, 2, 3]), "b": ("x", ['a', 'b', 'c'])})
+ds_indexed = ds.set_index(z=['a', 'b'])
+
+print(f"Before reset_index - _variables keys: {list(ds_indexed._variables.keys())}")
+print(f"Before reset_index - _coord_names: {ds_indexed._coord_names}")
+
+# Reset index with drop=True - this should trigger our fix
+result = ds_indexed.reset_index("z", drop=True)
+
+print(f"After reset_index - _variables keys: {list(result._variables.keys())}")
+print(f"After reset_index - _coord_names: {result._coord_names}")
+print(f"DataVariables len: {len(result.data_vars)}")
+
+# Verify that the coord_names only contains variables that actually exist
+assert result._coord_names.issubset(set(result._variables.keys())), \
+    f"Coord names {result._coord_names} should be subset of variables {set(result._variables.keys())}"
+
+print("✓ Edge case with empty new_variables works correctly!")
\ No newline at end of file
diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py
index 620f32f8..d7311f12 100644
--- a/xarray/core/dataset.py
+++ b/xarray/core/dataset.py
@@ -4177,7 +4177,7 @@ class Dataset(
         }
         variables.update(new_variables)
 
-        coord_names = set(new_variables) | self._coord_names
+        coord_names = set(new_variables) | (self._coord_names - set(drop_variables))
 
         return self._replace(variables, coord_names=coord_names, indexes=indexes)