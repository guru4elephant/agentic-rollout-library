diff --git a/django/contrib/admin/templatetags/admin_modify.py b/django/contrib/admin/templatetags/admin_modify.py
index 9df4b7aadb..5b742af46a 100644
--- a/django/contrib/admin/templatetags/admin_modify.py
+++ b/django/contrib/admin/templatetags/admin_modify.py
@@ -100,6 +100,7 @@ def submit_row(context):
                 and context.get("show_delete", True)
             ),
             "show_save_as_new": not is_popup
+            and has_add_permission
             and has_change_permission
             and change
             and save_as,
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..b3dd7a2b02
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,83 @@
+#!/usr/bin/env python3
+"""
+Script to reproduce the issue with show_save_as_new permission check.
+The issue is that show_save_as_new should require has_add_permission
+since it's essentially creating a new object.
+"""
+
+import os
+import sys
+import django
+from django.conf import settings
+
+# Configure Django settings
+if not settings.configured:
+    settings.configure(
+        DEBUG=True,
+        SECRET_KEY='test-secret-key',
+        INSTALLED_APPS=[
+            'django.contrib.admin',
+            'django.contrib.auth',
+            'django.contrib.contenttypes',
+        ],
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:',
+            }
+        },
+        USE_TZ=True,
+    )
+
+django.setup()
+
+from django.contrib.admin.templatetags.admin_modify import submit_row
+
+def test_submit_row_permissions():
+    """Test the submit_row function with different permission scenarios"""
+    
+    # Test case 1: User has change permission but no add permission
+    context = {
+        'add': False,
+        'change': True,
+        'is_popup': False,
+        'save_as': True,
+        'has_add_permission': False,  # No add permission
+        'has_change_permission': True,  # Has change permission
+        'has_delete_permission': False,
+        'has_view_permission': True,
+        'has_editable_inline_admin_formsets': False,
+        'show_delete': True,
+        'show_save_and_add_another': True,
+        'show_save_and_continue': True,
+    }
+    
+    # Simulate a change view with save_as enabled
+    result = submit_row(context)
+    
+    print("Test Case 1: User has change permission but NO add permission")
+    print(f"show_save_as_new: {result.get('show_save_as_new', 'NOT_SET')}")
+    print(f"Expected: False (since user can't add new objects)")
+    print()
+    
+    # Test case 2: User has both change and add permissions
+    context['has_add_permission'] = True
+    result2 = submit_row(context)
+    
+    print("Test Case 2: User has BOTH change and add permissions")
+    print(f"show_save_as_new: {result2.get('show_save_as_new', 'NOT_SET')}")
+    print(f"Expected: True (since user can add new objects)")
+    print()
+    
+    # Test case 3: User has no permissions at all
+    context['has_add_permission'] = False
+    context['has_change_permission'] = False
+    result3 = submit_row(context)
+    
+    print("Test Case 3: User has NO permissions")
+    print(f"show_save_as_new: {result3.get('show_save_as_new', 'NOT_SET')}")
+    print(f"Expected: False (since user can't do anything)")
+    print()
+
+if __name__ == '__main__':
+    test_submit_row_permissions()
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..7bea7b387c
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,88 @@
+#!/usr/bin/env python3
+"""
+Test edge cases for the show_save_as_new fix.
+"""
+
+import os
+import sys
+import django
+from django.conf import settings
+
+# Configure Django settings
+if not settings.configured:
+    settings.configure(
+        DEBUG=True,
+        SECRET_KEY='test-secret-key',
+        INSTALLED_APPS=[
+            'django.contrib.admin',
+            'django.contrib.auth',
+            'django.contrib.contenttypes',
+        ],
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:',
+            }
+        },
+        USE_TZ=True,
+    )
+
+django.setup()
+
+from django.contrib.admin.templatetags.admin_modify import submit_row
+
+def test_edge_cases():
+    """Test edge cases for the show_save_as_new permission check"""
+    
+    # Test case 1: is_popup = True (should always be False)
+    context = {
+        'add': False,
+        'change': True,
+        'is_popup': True,  # This should prevent show_save_as_new
+        'save_as': True,
+        'has_add_permission': True,
+        'has_change_permission': True,
+        'has_delete_permission': False,
+        'has_view_permission': True,
+        'has_editable_inline_admin_formsets': False,
+        'show_delete': True,
+        'show_save_and_add_another': True,
+        'show_save_and_continue': True,
+    }
+    
+    result = submit_row(context)
+    print("Test Case 1: is_popup = True")
+    print(f"show_save_as_new: {result.get('show_save_as_new', 'NOT_SET')}")
+    print(f"Expected: False (is_popup prevents save_as_new)")
+    print()
+    
+    # Test case 2: save_as = False (should always be False)
+    context['is_popup'] = False
+    context['save_as'] = False
+    
+    result2 = submit_row(context)
+    print("Test Case 2: save_as = False")
+    print(f"show_save_as_new: {result2.get('show_save_as_new', 'NOT_SET')}")
+    print(f"Expected: False (save_as disabled)")
+    print()
+    
+    # Test case 3: change = False (should always be False)
+    context['save_as'] = True
+    context['change'] = False
+    
+    result3 = submit_row(context)
+    print("Test Case 3: change = False")
+    print(f"show_save_as_new: {result3.get('show_save_as_new', 'NOT_SET')}")
+    print(f"Expected: False (not in change mode)")
+    print()
+    
+    # Test case 4: All conditions met
+    context['change'] = True
+    result4 = submit_row(context)
+    print("Test Case 4: All conditions met")
+    print(f"show_save_as_new: {result4.get('show_save_as_new', 'NOT_SET')}")
+    print(f"Expected: True")
+    print()
+
+if __name__ == '__main__':
+    test_edge_cases()
\ No newline at end of file