diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..244001d3a9
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,96 @@
+#!/usr/bin/env python3
+import os
+import sys
+import tempfile
+import sqlite3
+from django.conf import settings
+from django.db import models, migrations
+from django.db.migrations import Migration
+from django.db.migrations.operations import AddField
+from django.db.models.signals import class_prepared
+
+# Configure Django settings
+if not settings.configured:
+    settings.configure(
+        DEBUG=True,
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:',
+            }
+        },
+        INSTALLED_APPS=[
+            'django.contrib.contenttypes',
+            'django.contrib.auth',
+        ],
+        SECRET_KEY='test-secret-key',
+        USE_TZ=True,
+    )
+
+import django
+django.setup()
+
+# Create a simple test model
+class TestModel(models.Model):
+    name = models.CharField(max_length=100)
+    
+    class Meta:
+        app_label = 'test_app'
+
+# Create a migration that adds a nullable OneToOneField
+class TestMigration(Migration):
+    dependencies = []
+    
+    operations = [
+        migrations.CreateModel(
+            name='TestModel',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('name', models.CharField(max_length=100)),
+            ],
+        ),
+        migrations.AddField(
+            model_name='TestModel',
+            name='source_refresh_token',
+            field=models.OneToOneField(
+                blank=True, 
+                null=True, 
+                on_delete=models.deletion.SET_NULL, 
+                to='test_app.TestModel',  # Self-referential for simplicity
+                related_name="refreshed_access_token"
+            ),
+        ),
+    ]
+
+def test_migration():
+    """Test the migration that adds a nullable OneToOneField"""
+    from django.db import connection
+    from django.db.migrations.executor import MigrationExecutor
+    from django.db.migrations.state import ProjectState
+    
+    print("Testing migration with nullable OneToOneField on SQLite...")
+    
+    # Create a project state with our migration
+    project_state = ProjectState()
+    project_state.add_model(TestModel)
+    
+    # Create executor
+    executor = MigrationExecutor(connection)
+    
+    # Apply the migration operations directly
+    for operation in TestMigration.operations:
+        print(f"Executing operation: {operation}")
+        operation.state_forwards('test_app', project_state)
+        operation.database_forwards('test_app', executor.loader, connection, project_state)
+        project_state = operation.state_forwards('test_app', project_state)
+    
+    print("Migration completed successfully!")
+
+if __name__ == '__main__':
+    try:
+        test_migration()
+    except Exception as e:
+        print(f"Error occurred: {e}")
+        import traceback
+        traceback.print_exc()
+        sys.exit(1)
\ No newline at end of file