diff --git a/pyproject.toml b/pyproject.toml
index 7a3b85fc92..83f08ed124 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -1,5 +1,5 @@
 [build-system]
-requires = ["setuptools",
+requires = ["setuptools==68.0.0",
             "setuptools_scm>=6.2",
             "wheel",
             "cython==0.29.30",
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..4588c09f84
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,53 @@
+#!/usr/bin/env python3
+
+import numpy as np
+from astropy import units as u
+from astropy.time import Time
+from astropy.coordinates import EarthLocation, ITRS, AltAz, HADec
+
+def test_current_behavior():
+    """Test the current behavior of ITRS to AltAz/HADec transformations"""
+    
+    # Create a test location (New York City)
+    location = EarthLocation(lat=40.7128*u.deg, lon=-74.0060*u.deg, height=10*u.m)
+    
+    # Create a test time
+    obstime = Time('2023-01-01T12:00:00')
+    
+    # Create an ITRS coordinate (some object above NYC)
+    itrs_coord = ITRS(x=6371*u.km, y=0*u.km, z=0*u.km, obstime=obstime)
+    
+    print("Testing ITRS -> AltAz transformation:")
+    try:
+        altaz_coord = itrs_coord.transform_to(AltAz(obstime=obstime, location=location))
+        print(f"ITRS -> AltAz: {altaz_coord}")
+    except Exception as e:
+        print(f"Error in ITRS -> AltAz: {e}")
+    
+    print("\nTesting ITRS -> HADec transformation:")
+    try:
+        hadec_coord = itrs_coord.transform_to(HADec(obstime=obstime, location=location))
+        print(f"ITRS -> HADec: {hadec_coord}")
+    except Exception as e:
+        print(f"Error in ITRS -> HADec: {e}")
+    
+    print("\nTesting AltAz -> ITRS transformation:")
+    try:
+        # Create an AltAz coordinate
+        altaz_coord = AltAz(az=0*u.deg, alt=45*u.deg, obstime=obstime, location=location)
+        itrs_back = altaz_coord.transform_to(ITRS(obstime=obstime))
+        print(f"AltAz -> ITRS: {itrs_back}")
+    except Exception as e:
+        print(f"Error in AltAz -> ITRS: {e}")
+    
+    print("\nTesting HADec -> ITRS transformation:")
+    try:
+        # Create an HADec coordinate
+        hadec_coord = HADec(ha=0*u.hourangle, dec=45*u.deg, obstime=obstime, location=location)
+        itrs_back = hadec_coord.transform_to(ITRS(obstime=obstime))
+        print(f"HADec -> ITRS: {itrs_back}")
+    except Exception as e:
+        print(f"Error in HADec -> ITRS: {e}")
+
+if __name__ == "__main__":
+    test_current_behavior()
\ No newline at end of file