diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 000000000..c403353b3
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,5 @@
+import pytest
+
+@pytest.mark.parametrize('data', [b'Hello World'])
+def test_data(data):
+    pass
\ No newline at end of file
diff --git a/src/_pytest/setuponly.py b/src/_pytest/setuponly.py
index c9cc589ff..9fc218a3e 100644
--- a/src/_pytest/setuponly.py
+++ b/src/_pytest/setuponly.py
@@ -1,4 +1,5 @@
 import pytest
+from _pytest._io.saferepr import saferepr
 
 
 def pytest_addoption(parser):
@@ -66,7 +67,7 @@ def _show_fixture_action(fixturedef, msg):
             tw.write(" (fixtures used: {})".format(", ".join(deps)))
 
     if hasattr(fixturedef, "cached_param"):
-        tw.write("[{}]".format(fixturedef.cached_param))
+        tw.write("[{}]".format(saferepr(fixturedef.cached_param)))
 
     tw.flush()
 
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 000000000..d3446e7e6
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,21 @@
+import pytest
+
+# Test with different types of parameters
+@pytest.mark.parametrize('data', [b'Hello World', 'Hello World', 123, [1, 2, 3]])
+def test_various_types(data):
+    pass
+
+# Test with None
+@pytest.mark.parametrize('data', [None])
+def test_none(data):
+    pass
+
+# Test with empty bytes
+@pytest.mark.parametrize('data', [b''])
+def test_empty_bytes(data):
+    pass
+
+# Test with special characters
+@pytest.mark.parametrize('data', [b'\x00\x01\x02'])
+def test_special_bytes(data):
+    pass
\ No newline at end of file