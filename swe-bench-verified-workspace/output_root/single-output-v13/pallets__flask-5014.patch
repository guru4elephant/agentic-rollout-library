diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 00000000..438ec398
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,62 @@
+#!/usr/bin/env python3
+"""
+Script to reproduce the issue with empty blueprint names.
+"""
+from flask import Flask, Blueprint
+
+def test_empty_blueprint_name():
+    """Test creating a blueprint with an empty name"""
+    print("Testing empty blueprint name...")
+    
+    try:
+        # This should raise a ValueError according to the issue
+        bp = Blueprint("", __name__)
+        print("ERROR: Blueprint with empty name was created successfully")
+        return False
+    except ValueError as e:
+        print(f"SUCCESS: ValueError raised as expected: {e}")
+        return True
+    except Exception as e:
+        print(f"ERROR: Unexpected exception: {e}")
+        return False
+
+def test_whitespace_blueprint_name():
+    """Test creating a blueprint with whitespace-only name"""
+    print("Testing whitespace-only blueprint name...")
+    
+    try:
+        # This should also raise a ValueError
+        bp = Blueprint("   ", __name__)
+        print("ERROR: Blueprint with whitespace-only name was created successfully")
+        return False
+    except ValueError as e:
+        print(f"SUCCESS: ValueError raised as expected: {e}")
+        return True
+    except Exception as e:
+        print(f"ERROR: Unexpected exception: {e}")
+        return False
+
+def test_valid_blueprint_name():
+    """Test creating a blueprint with a valid name"""
+    print("Testing valid blueprint name...")
+    
+    try:
+        bp = Blueprint("valid_name", __name__)
+        print("SUCCESS: Valid blueprint name was created successfully")
+        return True
+    except Exception as e:
+        print(f"ERROR: Unexpected exception with valid name: {e}")
+        return False
+
+if __name__ == "__main__":
+    print("Reproducing blueprint name validation issue...")
+    
+    results = []
+    results.append(test_empty_blueprint_name())
+    results.append(test_whitespace_blueprint_name())
+    results.append(test_valid_blueprint_name())
+    
+    if all(results):
+        print("\nAll tests passed!")
+    else:
+        print("\nSome tests failed!")
\ No newline at end of file
diff --git a/src/flask/blueprints.py b/src/flask/blueprints.py
index eb50585d..eb53f477 100644
--- a/src/flask/blueprints.py
+++ b/src/flask/blueprints.py
@@ -190,6 +190,9 @@ class Blueprint(Scaffold):
             root_path=root_path,
         )
 
+        if not name or not name.strip():
+            raise ValueError("'name' must not be empty.")
+
         if "." in name:
             raise ValueError("'name' may not contain a dot '.' character.")