diff --git a/debug_vla.py b/debug_vla.py
new file mode 100644
index 0000000000..840d64724f
--- /dev/null
+++ b/debug_vla.py
@@ -0,0 +1,25 @@
+from astropy.io import fits
+import numpy as np
+
+# Create a VLA column and examine its data
+col = fits.Column('a', format='QD', array=[[0], [0, 0]])
+hdu = fits.BinTableHDU.from_columns([col])
+hdu.writeto('vla_test.fits', overwrite=True)
+
+hdul = fits.open('vla_test.fits')
+data = hdul[1].data
+arra = data['a']
+arrb = data['a']  # Same array
+
+print("Array shape:", arra.shape)
+print("Array dtype:", arra.dtype)
+print("Array contents:", arra)
+
+# Test the current comparison logic
+print("\nTesting current comparison logic:")
+for idx in range(len(arra)):
+    print(f"Row {idx}: {arra[idx]} vs {arrb[idx]}")
+    print(f"  np.allclose result: {np.allclose(arra[idx], arrb[idx])}")
+    print(f"  Direct comparison: {arra[idx] == arrb[idx]}")
+
+hdul.close()
\ No newline at end of file
diff --git a/diffbug.fits b/diffbug.fits
new file mode 100644
index 0000000000..fb6df78b71
Binary files /dev/null and b/diffbug.fits differ
diff --git a/pyproject.toml b/pyproject.toml
index b4e9ef8387..ff68a7403d 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -1,5 +1,5 @@
 [build-system]
-requires = ["setuptools",
+requires = ["setuptools==68.0.0",
             "setuptools_scm>=6.2",
             "wheel",
             "cython==0.29.30",
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..a09809a3b6
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,22 @@
+from astropy.io import fits
+
+# Reproduce the issue as described in the GitHub issue
+col = fits.Column('a', format='QD', array=[[0], [0, 0]])
+hdu = fits.BinTableHDU.from_columns([col])
+hdu.writeto('diffbug.fits', overwrite=True)
+
+print("Comparing file to itself:")
+print(fits.FITSDiff('diffbug.fits', 'diffbug.fits').identical)
+fits.printdiff('diffbug.fits', 'diffbug.fits')
+
+# Let's also examine the data to understand what's happening
+print("\nExamining the data:")
+hdul = fits.open('diffbug.fits')
+data = hdul[1].data
+print("Data:", data)
+print("Column format:", hdul[1].columns[0].format)
+print("Data type:", data['a'].dtype)
+print("Data values:", data['a'])
+print("First row:", data['a'][0])
+print("Second row:", data['a'][1])
+hdul.close()
\ No newline at end of file
diff --git a/test_comparison.py b/test_comparison.py
new file mode 100644
index 0000000000..ebc7f2ca95
--- /dev/null
+++ b/test_comparison.py
@@ -0,0 +1,36 @@
+from astropy.io import fits
+import numpy as np
+
+# Create a VLA column and examine its data
+col = fits.Column('a', format='QD', array=[[0], [0, 0]])
+hdu = fits.BinTableHDU.from_columns([col])
+hdu.writeto('vla_test.fits', overwrite=True)
+
+hdul = fits.open('vla_test.fits')
+data = hdul[1].data
+arra = data['a']
+arrb = data['a']  # Same array
+
+print("Testing comparison with rtol=0.0, atol=0.0:")
+print("Array a:", arra)
+print("Array b:", arrb)
+
+# Test what happens with the current logic
+try:
+    result = np.where(arra != arrb)
+    print("np.where(a != b) result:", result)
+except Exception as e:
+    print("Error with np.where(a != b):", e)
+
+# Test what happens with the allclose approach
+try:
+    diffs = [
+        idx
+        for idx in range(len(arra))
+        if not np.allclose(arra[idx], arrb[idx], rtol=0.0, atol=0.0)
+    ]
+    print("List comprehension result:", diffs)
+except Exception as e:
+    print("Error with list comprehension:", e)
+
+hdul.close()
\ No newline at end of file
diff --git a/vla_test.fits b/vla_test.fits
new file mode 100644
index 0000000000..fb6df78b71
Binary files /dev/null and b/vla_test.fits differ