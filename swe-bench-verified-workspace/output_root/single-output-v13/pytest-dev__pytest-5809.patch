diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 000000000..fc9faf6d1
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,72 @@
+#!/usr/bin/env python3
+"""
+Script to reproduce the pastebin lexer issue.
+This reproduces the HTTP 400 error when using lexer="python3" with certain content.
+"""
+import urllib.request
+from urllib.parse import urlencode
+
+# Create test data that causes the issue (similar to the attached data.txt)
+# This is pytest output containing various characters that might cause issues
+test_content = b"""test session starts
+platform linux -- Python 3.8.5, pytest-6.0.1, py-1.9.0, pluggy-0.13.1
+rootdir: /tmp
+collected 1 item
+
+test_file.py F
+
+=================================== FAILURES ===================================
+___________________________________ test_fail ___________________________________
+
+    def test_fail():
+>       assert False
+E       assert False
+
+test_file.py:5: AssertionError
+=========================== short test summary info ============================
+FAILED test_file.py::test_fail - assert False
+============================== 1 failed in 0.12s ===============================
+"""
+
+def test_with_python3_lexer():
+    """Test with python3 lexer (should fail with HTTP 400)"""
+    params = {
+        "code": test_content,
+        "lexer": "python3",
+        "expiry": "1week",
+    }
+    url = "https://bpaste.net"
+    
+    try:
+        response = urllib.request.urlopen(url, data=urlencode(params).encode("ascii"))
+        print("SUCCESS: python3 lexer worked")
+        return True
+    except urllib.error.HTTPError as e:
+        print(f"FAILED: python3 lexer caused HTTP {e.code}: {e.reason}")
+        return False
+
+def test_with_text_lexer():
+    """Test with text lexer (should work)"""
+    params = {
+        "code": test_content,
+        "lexer": "text",
+        "expiry": "1week",
+    }
+    url = "https://bpaste.net"
+    
+    try:
+        response = urllib.request.urlopen(url, data=urlencode(params).encode("ascii"))
+        print("SUCCESS: text lexer worked")
+        return True
+    except urllib.error.HTTPError as e:
+        print(f"FAILED: text lexer caused HTTP {e.code}: {e.reason}")
+        return False
+
+if __name__ == "__main__":
+    print("Testing with python3 lexer:")
+    result1 = test_with_python3_lexer()
+    
+    print("\nTesting with text lexer:")
+    result2 = test_with_text_lexer()
+    
+    print(f"\nResults: python3_lexer={result1}, text_lexer={result2}")
\ No newline at end of file