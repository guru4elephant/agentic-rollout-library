diff --git a/debug_rational.py b/debug_rational.py
new file mode 100644
index 0000000000..efc72ddfa7
--- /dev/null
+++ b/debug_rational.py
@@ -0,0 +1,15 @@
+#!/usr/bin/env python3
+
+from sympy import Rational
+
+# Let's debug what happens step by step
+print("Debugging Rational('0.5', '100')")
+
+# Test what Rational('100') returns
+q_rational = Rational('100')
+print(f"Rational('100') = {q_rational}")
+print(f"q_rational.p = {q_rational.p}, q_rational.q = {q_rational.q}")
+
+# Now let's see what happens in the actual call
+result = Rational('0.5', '100')
+print(f"Rational('0.5', '100') = {result}")
\ No newline at end of file
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..971b9a1bcf
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,19 @@
+#!/usr/bin/env python3
+
+from sympy import Rational
+
+# Test the issue described in the GitHub issue
+print("Testing Rational('0.5', '100') vs Rational(0.5, 100)")
+print()
+
+# Test with string arguments
+result1 = Rational('0.5', '100')
+print(f"Rational('0.5', '100') = {result1}")
+
+# Test with numeric arguments  
+result2 = Rational(0.5, 100)
+print(f"Rational(0.5, 100) = {result2}")
+
+print()
+print(f"Are they equal? {result1 == result2}")
+print(f"Expected: 1/200, Got: {result1} vs {result2}")
\ No newline at end of file
diff --git a/test_fraction.py b/test_fraction.py
new file mode 100644
index 0000000000..974c634b45
--- /dev/null
+++ b/test_fraction.py
@@ -0,0 +1,26 @@
+#!/usr/bin/env python3
+
+from sympy import Rational
+import fractions
+
+# Test what fractions.Fraction('0.5') gives
+f = fractions.Fraction('0.5')
+print(f"fractions.Fraction('0.5') = {f}")
+
+# Test what Rational(1, 2, 100) should give
+result = Rational(f.numerator, f.denominator * 100)
+print(f"Rational({f.numerator}, {f.denominator * 100}) = {result}")
+
+# Test what happens if we do the multiplication manually
+p_num = f.numerator
+p_den = f.denominator
+q_val = 100
+
+# This should be equivalent to (1/2) / 100 = 1/200
+expected = Rational(p_num, p_den * q_val)
+print(f"Expected: {expected}")
+
+# Let's also test what happens with the current code path
+print("\nTesting current behavior:")
+print(f"Rational('0.5') = {Rational('0.5')}")
+print(f"Rational('100') = {Rational('100')}")
\ No newline at end of file