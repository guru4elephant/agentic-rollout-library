diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..f3da3b35df
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,74 @@
+#!/usr/bin/env python3
+"""
+Script to reproduce the admin.E108 issue with fields accessible only via instance.
+This reproduces the issue described in the GitHub issue.
+"""
+
+import os
+import sys
+import django
+from django.conf import settings
+
+# Configure Django settings
+if not settings.configured:
+    settings.configure(
+        DEBUG=True,
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:',
+            }
+        },
+        INSTALLED_APPS=[
+            'django.contrib.admin',
+            'django.contrib.auth',
+            'django.contrib.contenttypes',
+        ],
+        SECRET_KEY='test-secret-key',
+    )
+
+django.setup()
+
+from django.db import models
+from django.contrib import admin
+from django.core.checks import run_checks
+
+# Create a mock PositionField-like descriptor that raises AttributeError when accessed on class
+class PositionDescriptor:
+    def __get__(self, instance, owner):
+        if instance is None:
+            # This simulates the PositionField behavior - raises AttributeError when accessed on class
+            raise AttributeError("Cannot access field on class, only on instance")
+        return 1  # Return some value for instance access
+
+    def __set__(self, instance, value):
+        pass
+
+# Create a model with a descriptor field
+class Thing(models.Model):
+    number = models.IntegerField(default=0)
+    order = PositionDescriptor()  # This acts like PositionField
+    
+    class Meta:
+        app_label = 'test_app'
+
+# Create ModelAdmin
+class ThingAdmin(admin.ModelAdmin):
+    list_display = ['number', 'order']
+
+# Register the admin
+admin.site.register(Thing, ThingAdmin)
+
+# Run checks to see if the issue occurs
+print("Running Django admin checks...")
+errors = run_checks()
+admin_errors = [error for error in errors if error.id == 'admin.E108']
+
+if admin_errors:
+    print("ERROR: admin.E108 detected!")
+    for error in admin_errors:
+        print(f"  - {error}")
+else:
+    print("SUCCESS: No admin.E108 errors found")
+
+print(f"Total errors found: {len(errors)}")
\ No newline at end of file