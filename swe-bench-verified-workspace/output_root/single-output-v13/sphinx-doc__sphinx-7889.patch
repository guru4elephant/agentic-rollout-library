diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 000000000..ae885a5e9
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,38 @@
+#!/usr/bin/env python3
+"""
+Reproduction script for the TypeError in autodoc mock with generic types.
+"""
+
+from typing import TypeVar, Generic
+from sphinx.ext.autodoc.mock import _make_subclass, _MockObject
+
+# Create a TypeVar
+T = TypeVar("T")
+
+# Try to create a mock subclass with a TypeVar as the module parameter
+try:
+    # This should trigger the TypeError mentioned in the issue
+    result = _make_subclass("TestClass", T, _MockObject)
+    print("Success:", result)
+    print("Display name:", result.__display_name__)
+except Exception as e:
+    print("Error:", type(e).__name__, ":", e)
+
+# Let's also test with a generic class
+class GenericClass(Generic[T]):
+    pass
+
+try:
+    # Try to mock a generic class
+    result = _make_subclass("MockGeneric", GenericClass, _MockObject)
+    print("Success with GenericClass:", result)
+    print("Display name:", result.__display_name__)
+except Exception as e:
+    print("Error with GenericClass:", type(e).__name__, ":", e)
+
+# Test what happens when we access the __name__ attribute of a TypeVar
+try:
+    print("TypeVar name:", T.__name__)
+    print("TypeVar module:", getattr(T, '__module__', 'No module'))
+except Exception as e:
+    print("Error accessing TypeVar attributes:", e)
\ No newline at end of file
diff --git a/setup.py b/setup.py
index 3d499983f..e07b2fd4f 100644
--- a/setup.py
+++ b/setup.py
@@ -15,22 +15,22 @@ if sys.version_info < (3, 5):
     sys.exit(1)
 
 install_requires = [
-    'sphinxcontrib-applehelp',
-    'sphinxcontrib-devhelp',
+    'sphinxcontrib-applehelp<=1.0.7',
+    'sphinxcontrib-devhelp<=1.0.5',
     'sphinxcontrib-jsmath',
-    'sphinxcontrib-htmlhelp',
-    'sphinxcontrib-serializinghtml',
-    'sphinxcontrib-qthelp',
-    'Jinja2>=2.3',
+    'sphinxcontrib-htmlhelp<=2.0.4',
+    'sphinxcontrib-serializinghtml<=1.1.9',
+    'sphinxcontrib-qthelp<=1.0.6',
+    'Jinja2<3.0',
     'Pygments>=2.0',
     'docutils>=0.12',
     'snowballstemmer>=1.1',
     'babel>=1.3',
-    'alabaster>=0.7,<0.8',
+    'alabaster>=0.7,<0.7.12',
     'imagesize',
     'requests>=2.5.0',
     'setuptools',
-    'packaging',
+    'packaging', 'markupsafe<=2.0.1',
 ]
 
 extras_require = {
diff --git a/sphinx/ext/autodoc/mock.py b/sphinx/ext/autodoc/mock.py
index 98a3a3a96..401e7585f 100644
--- a/sphinx/ext/autodoc/mock.py
+++ b/sphinx/ext/autodoc/mock.py
@@ -70,7 +70,13 @@ class _MockObject:
 
 def _make_subclass(name: str, module: str, superclass: Any = _MockObject,
                    attributes: Any = None) -> Any:
-    attrs = {'__module__': module, '__display_name__': module + '.' + name}
+    # Handle cases where module might not be a string (e.g., TypeVar objects)
+    if not isinstance(module, str):
+        module_str = str(module)
+    else:
+        module_str = module
+        
+    attrs = {'__module__': module, '__display_name__': module_str + '.' + name}
     attrs.update(attributes or {})
 
     return type(name, (superclass,), attrs)
diff --git a/tox.ini b/tox.ini
index d9f040544..bf39854b6 100644
--- a/tox.ini
+++ b/tox.ini
@@ -28,7 +28,7 @@ extras =
 setenv =
     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils
 commands=
-    pytest --durations 25 {posargs}
+    pytest -rA --durations 25 {posargs}
 
 [testenv:flake8]
 basepython = python3