diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..a770b1682a
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,64 @@
+#!/usr/bin/env python3
+"""
+Script to reproduce the SECRET_KEY_FALLBACKS issue with sessions.
+"""
+
+import os
+import django
+from django.conf import settings
+
+# Configure Django settings first
+if not settings.configured:
+    settings.configure(
+        DEBUG=True,
+        SECRET_KEY='old_secret_key',
+        SECRET_KEY_FALLBACKS=['even_older_secret_key', 'old_secret_key'],
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:',
+            }
+        },
+        INSTALLED_APPS=[
+            'django.contrib.auth',
+            'django.contrib.contenttypes',
+        ],
+        USE_TZ=True,
+    )
+
+django.setup()
+
+# Now import after Django is configured
+from django.contrib.auth.models import User
+
+def test_session_auth_hash():
+    """Test that session auth hash works with SECRET_KEY_FALLBACKS"""
+    
+    # Create a test user
+    user = User(username='testuser')
+    user.set_password('testpassword')
+    user.save()
+    
+    # Get session auth hash with old secret key (should work)
+    hash_with_old_key = user.get_session_auth_hash()
+    print(f"Session auth hash with old key: {hash_with_old_key}")
+    
+    # Now rotate the secret key - move old to fallbacks, set new primary
+    settings.SECRET_KEY = 'new_secret_key'
+    settings.SECRET_KEY_FALLBACKS = ['old_secret_key']
+    
+    # Try to get session auth hash again - this should fail if the issue exists
+    hash_with_new_key = user.get_session_auth_hash()
+    print(f"Session auth hash with new key: {hash_with_new_key}")
+    
+    # The hashes should be different because salted_hmac doesn't use fallbacks
+    if hash_with_old_key != hash_with_new_key:
+        print("❌ ISSUE CONFIRMED: Session auth hash changed after key rotation!")
+        print("This means users will be logged out when SECRET_KEY is rotated.")
+        return False
+    else:
+        print("✅ No issue: Session auth hash remains the same after key rotation")
+        return True
+
+if __name__ == '__main__':
+    test_session_auth_hash()
\ No newline at end of file