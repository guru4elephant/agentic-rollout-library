diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..ed08ffb8d5
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,36 @@
+#!/usr/bin/env python3
+
+from sympy import S
+from sympy.stats import *
+
+print("Testing CDF issues for various distributions...")
+
+# Test cases from the GitHub issue
+test_cases = [
+    ("Arcsin", lambda: cdf(Arcsin("x", 0, 3))(1)),
+    ("Dagum", lambda: cdf(Dagum("x", S(1)/3, S(1)/5, 2))(3)),
+    ("Erlang", lambda: cdf(Erlang("x", 1, 1))(1)),
+    ("Frechet", lambda: cdf(Frechet("x", S(4)/3, 1, 2))(3)),
+    ("Gamma", lambda: cdf(Gamma("x", 0.1, 2))(3)),
+    ("GammaInverse", lambda: cdf(GammaInverse("x", S(5)/7, 2))(3)),
+    ("Kumaraswamy", lambda: cdf(Kumaraswamy("x", S(1)/123, 5))(S(1)/3)),
+    ("Laplace", lambda: cdf(Laplace("x", 2, 3))(5)),
+    ("Logistic", lambda: cdf(Logistic("x", 1, 0.1))(2)),
+    ("Nakagami", lambda: cdf(Nakagami("x", S(7)/3, 1))(2)),
+    ("StudentT", lambda: cdf(StudentT("x", 10))(2)),
+    ("UniformSum", lambda: cdf(UniformSum("x", 5))(2)),
+]
+
+for name, test_func in test_cases:
+    print(f"\nTesting {name}:")
+    try:
+        result = test_func()
+        print(f"  Result: {result}")
+        if hasattr(result, 'doit'):
+            try:
+                evaluated = result.doit()
+                print(f"  After doit(): {evaluated}")
+            except Exception as e:
+                print(f"  doit() failed: {e}")
+    except Exception as e:
+        print(f"  Error: {e}")
\ No newline at end of file