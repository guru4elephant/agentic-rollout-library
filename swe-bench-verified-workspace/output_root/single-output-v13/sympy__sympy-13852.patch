diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..dc9954a41e
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,60 @@
+#!/usr/bin/env python3
+
+from sympy import polylog, Rational, expand_func, log, pi, nsimplify, S
+from sympy.printing import pprint
+
+print("=== Current behavior ===")
+
+# Test case from the issue
+result1 = polylog(2, Rational(1, 2))
+print("polylog(2, Rational(1,2)) =")
+pprint(result1)
+print()
+
+result2 = polylog(2, Rational(1, 2)).expand(func=True)
+print("polylog(2, Rational(1,2)).expand(func=True) =")
+pprint(result2)
+print()
+
+# Expected result should be -log(2)**2/2 + pi**2/12
+expected = -log(2)**2/2 + pi**2/12
+print("Expected result:")
+pprint(expected)
+print()
+
+# Test polylog(1, z) expansion
+z = S('z')
+result3 = expand_func(polylog(1, z))
+print("expand_func(polylog(1, z)) =")
+pprint(result3)
+print()
+
+# Check if it equals -log(1-z)
+log_result = -log(1 - z)
+print("-log(1 - z) =")
+pprint(log_result)
+print()
+
+# Test if they are equal for specific values
+print("Testing equality for specific values:")
+test_values = [0.5, 1.5, 2.0, 3.0]
+for val in test_values:
+    expanded = expand_func(polylog(1, val))
+    log_val = -log(1 - val)
+    print(f"z={val}: expanded={expanded.evalf()}, -log(1-z)={log_val.evalf()}, equal? {abs(expanded.evalf() - log_val.evalf()) < 1e-10}")
+
+print()
+
+# Test derivative consistency
+from sympy import diff
+print("Testing derivative consistency:")
+expr1 = polylog(1, z)
+expr2 = expand_func(polylog(1, z))
+deriv1 = diff(expr1, z)
+deriv2 = diff(expr2, z)
+print("diff(polylog(1, z), z) =")
+pprint(deriv1)
+print("diff(expand_func(polylog(1, z)), z) =")
+pprint(deriv2)
+print("Are derivatives equal?")
+pprint(deriv1.equals(deriv2))
\ No newline at end of file