diff --git a/django/db/models/manager.py b/django/db/models/manager.py
index e37e56cd17..426c9c1092 100644
--- a/django/db/models/manager.py
+++ b/django/db/models/manager.py
@@ -1,4 +1,5 @@
 import copy
+import functools
 import inspect
 from importlib import import_module
 
@@ -81,11 +82,10 @@ class BaseManager:
     @classmethod
     def _get_queryset_methods(cls, queryset_class):
         def create_method(name, method):
+            @functools.wraps(method)
             def manager_method(self, *args, **kwargs):
                 return getattr(self.get_queryset(), name)(*args, **kwargs)
 
-            manager_method.__name__ = method.__name__
-            manager_method.__doc__ = method.__doc__
             return manager_method
 
         new_methods = {}
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..b88f0f46a2
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,58 @@
+#!/usr/bin/env python3
+import inspect
+import django
+from django.conf import settings
+
+# Configure Django settings
+if not settings.configured:
+    settings.configure(
+        DEBUG=True,
+        INSTALLED_APPS=[
+            'django.contrib.contenttypes',
+            'django.contrib.auth',
+        ],
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:',
+            }
+        },
+        USE_TZ=True,
+    )
+    django.setup()
+
+from django.db import models
+
+class Person(models.Model):
+    name = models.CharField(max_length=100)
+    
+    class Meta:
+        app_label = 'test_app'
+
+# Test the issue
+print("Testing inspect.signature on manager methods:")
+print(f"bulk_create signature: {inspect.signature(Person.objects.bulk_create)}")
+print()
+
+# Let's also check what the actual queryset method signature looks like
+print("Actual queryset method signature:")
+print(f"queryset bulk_create signature: {inspect.signature(Person.objects.get_queryset().bulk_create)}")
+print()
+
+# Check if they match
+manager_sig = str(inspect.signature(Person.objects.bulk_create))
+queryset_sig = str(inspect.signature(Person.objects.get_queryset().bulk_create))
+print(f"Signatures match: {manager_sig == queryset_sig}")
+print()
+
+# Test with other manager methods
+print("Testing other manager methods:")
+methods_to_test = ['create', 'get_or_create', 'update_or_create']
+for method_name in methods_to_test:
+    try:
+        manager_sig = str(inspect.signature(getattr(Person.objects, method_name)))
+        queryset_sig = str(inspect.signature(getattr(Person.objects.get_queryset(), method_name)))
+        match = manager_sig == queryset_sig
+        print(f"{method_name}: {manager_sig} (match: {match})")
+    except Exception as e:
+        print(f"{method_name}: Error - {e}")
\ No newline at end of file