diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..1cb342b8e3
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,72 @@
+#!/usr/bin/env python3
+
+import os
+import django
+from django.conf import settings
+
+# Configure Django settings
+if not settings.configured:
+    settings.configure(
+        DEBUG=True,
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:',
+            }
+        },
+        INSTALLED_APPS=[
+            'django.contrib.contenttypes',
+            'django.contrib.auth',
+        ],
+        USE_TZ=True,
+    )
+
+django.setup()
+
+from django.db import models
+
+# Create simple models to reproduce the issue
+class Book(models.Model):
+    title = models.CharField(max_length=100)
+    
+    class Meta:
+        app_label = 'test'
+
+class Chapter(models.Model):
+    book = models.ForeignKey(Book, on_delete=models.CASCADE, related_name='chapters')
+    title = models.CharField(max_length=100)
+    
+    class Meta:
+        app_label = 'test'
+
+# Test the issue without creating actual tables
+# We'll just examine the query generation
+
+# Test the issue
+from django.db.models import Count
+
+print("Testing count queries with annotations...")
+
+# This should include the Count('chapters') annotation in the SQL
+query1 = Book.objects.annotate(Count('chapters')).count()
+print(f"Book.objects.annotate(Count('chapters')).count() = {query1}")
+
+# This should be a simple count without annotations
+query2 = Book.objects.count()
+print(f"Book.objects.count() = {query2}")
+
+# Let's examine the SQL generated
+print("\nExamining SQL queries...")
+
+qs1 = Book.objects.annotate(Count('chapters'))
+print("QuerySet with annotation:")
+print(qs1.query)
+
+print("\nCount query with annotation:")
+count_qs = qs1.query.clone()
+count_qs.add_annotation(Count("*"), alias="__count", is_summary=True)
+print(count_qs)
+
+# Check if annotations are present in the count query
+print("\nAnnotations in count query:")
+print(count_qs.annotations)
\ No newline at end of file