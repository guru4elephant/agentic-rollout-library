diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 000000000..ea13decd5
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,90 @@
+#!/usr/bin/env python3
+"""
+Script to reproduce the viewcode epub issue.
+"""
+
+import os
+import tempfile
+import shutil
+from pathlib import Path
+from sphinx.application import Sphinx
+from sphinx.util.docutils import docutils_namespace
+
+def test_viewcode_epub_issue():
+    # Create a temporary directory for the test
+    with tempfile.TemporaryDirectory() as tmpdir:
+        srcdir = Path(tmpdir) / "source"
+        outdir_html = Path(tmpdir) / "build_html"
+        outdir_epub = Path(tmpdir) / "build_epub"
+        doctreedir_html = outdir_html / ".doctrees"
+        doctreedir_epub = outdir_epub / ".doctrees"
+        
+        # Create source directory and files
+        srcdir.mkdir()
+        
+        # Create conf.py
+        conf_content = '''
+extensions = ['sphinx.ext.viewcode']
+viewcode_enable_epub = False
+
+project = 'Test Project'
+copyright = '2021, Test'
+author = 'Test Author'
+'''
+        (srcdir / "conf.py").write_text(conf_content)
+        
+        # Create index.rst with actual Python content that viewcode can process
+        index_content = '''
+Test Documentation
+==================
+
+.. py:function:: len(obj)
+
+   Return the length (number of items) of an object.
+
+.. py:class:: str(object='')
+
+   String class.
+
+.. py:module:: os
+
+   OS module interface.
+'''
+        (srcdir / "index.rst").write_text(index_content)
+        
+        # First build with html builder to populate the environment
+        print("Building with HTML builder first...")
+        with docutils_namespace():
+            app_html = Sphinx(
+                srcdir=str(srcdir),
+                confdir=str(srcdir),
+                outdir=str(outdir_html),
+                doctreedir=str(doctreedir_html),
+                buildername='html'
+            )
+            app_html.build()
+        
+        # Now build with epub builder - this should NOT create _modules
+        print("Building with EPUB builder...")
+        with docutils_namespace():
+            app_epub = Sphinx(
+                srcdir=str(srcdir),
+                confdir=str(srcdir),
+                outdir=str(outdir_epub),
+                doctreedir=str(doctreedir_epub),
+                buildername='epub'
+            )
+            app_epub.build()
+            
+            # Check if _modules directory was created (it shouldn't be)
+            modules_dir = outdir_epub / "_modules"
+            if modules_dir.exists():
+                print("ISSUE REPRODUCED: _modules directory was created for epub even with viewcode_enable_epub=False")
+                print(f"Contents of _modules: {list(modules_dir.glob('**/*'))}")
+                return True
+            else:
+                print("No issue: _modules directory was not created for epub")
+                return False
+
+if __name__ == "__main__":
+    test_viewcode_epub_issue()
\ No newline at end of file
diff --git a/setup.py b/setup.py
index 8d40de1a8..03f325278 100644
--- a/setup.py
+++ b/setup.py
@@ -15,22 +15,22 @@ if sys.version_info < (3, 5):
     sys.exit(1)
 
 install_requires = [
-    'sphinxcontrib-applehelp',
-    'sphinxcontrib-devhelp',
+    'sphinxcontrib-applehelp<=1.0.7',
+    'sphinxcontrib-devhelp<=1.0.5',
     'sphinxcontrib-jsmath',
-    'sphinxcontrib-htmlhelp',
-    'sphinxcontrib-serializinghtml',
-    'sphinxcontrib-qthelp',
-    'Jinja2>=2.3',
+    'sphinxcontrib-htmlhelp<=2.0.4',
+    'sphinxcontrib-serializinghtml<=1.1.9',
+    'sphinxcontrib-qthelp<=1.0.6',
+    'Jinja2<3.0',
     'Pygments>=2.0',
     'docutils>=0.12',
     'snowballstemmer>=1.1',
     'babel>=1.3',
-    'alabaster>=0.7,<0.8',
+    'alabaster>=0.7,<0.7.12',
     'imagesize',
     'requests>=2.5.0',
     'setuptools',
-    'packaging',
+    'packaging', 'markupsafe<=2.0.1',
 ]
 
 extras_require = {
diff --git a/sphinx/ext/viewcode.py b/sphinx/ext/viewcode.py
index a7d52a91c..060604e25 100644
--- a/sphinx/ext/viewcode.py
+++ b/sphinx/ext/viewcode.py
@@ -182,6 +182,8 @@ def collect_pages(app: Sphinx) -> Generator[Tuple[str, Dict[str, Any], str], Non
     env = app.builder.env
     if not hasattr(env, '_viewcode_modules'):
         return
+    if app.builder.name.startswith("epub") and not env.config.viewcode_enable_epub:
+        return
     highlighter = app.builder.highlighter  # type: ignore
     urito = app.builder.get_relative_uri
 
diff --git a/tox.ini b/tox.ini
index 21a0faec3..be1a9127e 100644
--- a/tox.ini
+++ b/tox.ini
@@ -28,7 +28,7 @@ setenv =
     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils,ignore::DeprecationWarning:pip._vendor.packaging.version
     PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:} --color yes
 commands=
-    python -X dev -m pytest --durations 25 {posargs}
+    python -X dev -m pytest -rA --durations 25 {posargs}
 
 [testenv:flake8]
 basepython = python3