diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 000000000..c6e383e9f
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,40 @@
+#!/usr/bin/env python3
+"""
+Script to reproduce the duplicate locations issue in Message objects.
+"""
+
+from sphinx.builders.gettext import Message
+
+def test_duplicate_locations():
+    """Test that demonstrates the duplicate locations issue."""
+    # Create a message with duplicate locations
+    locations = [
+        ("../../manual/modeling/hair.rst", 0),
+        ("../../manual/modeling/hair.rst", 0),
+        ("../../manual/modeling/hair.rst", 0),
+        ("../../manual/modeling/metas/properties.rst", 92)
+    ]
+    
+    uuids = ["uuid1", "uuid2", "uuid3", "uuid4"]
+    text = "Type"
+    
+    # Create message with duplicate locations
+    message = Message(text, locations, uuids)
+    
+    print("Original locations (with duplicates):")
+    for loc in message.locations:
+        print(f"  {loc}")
+    
+    print(f"\nNumber of locations: {len(message.locations)}")
+    print(f"Number of unique locations: {len(set(message.locations))}")
+    
+    # Check if there are duplicates
+    if len(message.locations) != len(set(message.locations)):
+        print("\n❌ ISSUE REPRODUCED: Duplicate locations found!")
+        return True
+    else:
+        print("\n✅ No duplicates found")
+        return False
+
+if __name__ == "__main__":
+    test_duplicate_locations()
\ No newline at end of file
diff --git a/sphinx/builders/gettext.py b/sphinx/builders/gettext.py
index e8bc547b7..db67aea68 100644
--- a/sphinx/builders/gettext.py
+++ b/sphinx/builders/gettext.py
@@ -32,9 +32,19 @@ class Message:
     """An entry of translatable message."""
     def __init__(self, text: str, locations: List[Tuple[str, int]], uuids: List[str]):
         self.text = text
-        self.locations = locations
+        self.locations = self._unique_locations(locations)
         self.uuids = uuids
 
+    def _unique_locations(self, locations: List[Tuple[str, int]]) -> List[Tuple[str, int]]:
+        """Return unique locations while preserving order."""
+        seen = set()
+        unique_locations = []
+        for loc in locations:
+            if loc not in seen:
+                seen.add(loc)
+                unique_locations.append(loc)
+        return unique_locations
+
 
 class Catalog:
     """Catalog of translatable messages."""
diff --git a/tox.ini b/tox.ini
index 105a02597..90ada0821 100644
--- a/tox.ini
+++ b/tox.ini
@@ -29,7 +29,7 @@ setenv =
     PYTHONWARNINGS = all
     PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:} --color yes
 commands=
-    python -X dev -X warn_default_encoding -m pytest --durations 25 {posargs}
+    python -X dev -X warn_default_encoding -m pytest -rA --durations 25 {posargs}
 
 [testenv:du-latest]
 commands =