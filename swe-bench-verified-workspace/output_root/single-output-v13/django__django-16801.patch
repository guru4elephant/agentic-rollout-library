diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..1fc09e5f75
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,89 @@
+#!/usr/bin/env python3
+"""
+Script to reproduce the ImageField performance issue with post_init signal handler.
+"""
+import os
+import sys
+import time
+from django.conf import settings
+from django.db import models
+
+# Configure Django settings
+if not settings.configured:
+    settings.configure(
+        DEBUG=True,
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:',
+            }
+        },
+        INSTALLED_APPS=[
+            'django.contrib.contenttypes',
+            'django.contrib.auth',
+        ],
+        USE_TZ=True,
+    )
+
+from django import setup
+setup()
+
+# Create a test model with ImageField
+class TestModel(models.Model):
+    name = models.CharField(max_length=100)
+    image = models.ImageField(upload_to='images/')
+    
+    class Meta:
+        app_label = 'test'
+
+# Create another test model with ImageField using width/height fields
+class TestModelWithDimensions(models.Model):
+    name = models.CharField(max_length=100)
+    image = models.ImageField(upload_to='images/', width_field='img_width', height_field='img_height')
+    img_width = models.PositiveIntegerField(null=True)
+    img_height = models.PositiveIntegerField(null=True)
+    
+    class Meta:
+        app_label = 'test'
+
+def test_performance():
+    """Test performance of model initialization with and without dimension fields"""
+    
+    # Create some test instances
+    instances_without_dims = []
+    instances_with_dims = []
+    
+    print("Testing performance of ImageField without dimension fields...")
+    
+    # Time model initialization without dimension fields
+    start_time = time.time()
+    for i in range(1000):
+        instance = TestModel(name=f"test_{i}", image="test.jpg")
+        instances_without_dims.append(instance)
+    time_without_dims = time.time() - start_time
+    
+    print(f"Time without dimension fields: {time_without_dims:.4f} seconds")
+    
+    # Time model initialization with dimension fields
+    print("Testing performance of ImageField with dimension fields...")
+    start_time = time.time()
+    for i in range(1000):
+        instance = TestModelWithDimensions(name=f"test_{i}", image="test.jpg")
+        instances_with_dims.append(instance)
+    time_with_dims = time.time() - start_time
+    
+    print(f"Time with dimension fields: {time_with_dims:.4f} seconds")
+    
+    print(f"\nPerformance difference: {time_without_dims/time_with_dims:.2f}x slower without dimension fields")
+    
+    return time_without_dims, time_with_dims
+
+if __name__ == "__main__":
+    without_dims, with_dims = test_performance()
+    
+    # The issue suggests 30-40% speedup when removing the signal handler
+    # We expect the time without dimension fields to be significantly higher
+    if without_dims > with_dims * 1.2:  # At least 20% slower
+        print("✓ Issue confirmed: ImageField without dimension fields is significantly slower")
+    else:
+        print("✗ Issue not confirmed: No significant performance difference detected")
\ No newline at end of file