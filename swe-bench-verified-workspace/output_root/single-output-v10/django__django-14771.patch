diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py
index cc65c043ab..6a7775cbac 100644
--- a/django/utils/autoreload.py
+++ b/django/utils/autoreload.py
@@ -219,7 +219,16 @@ def get_child_arguments():
     import __main__
     py_script = Path(sys.argv[0])
 
-    args = [sys.executable] + ['-W%s' % o for o in sys.warnoptions]
+    # Preserve -X options
+    x_options = []
+    if hasattr(sys, '_xoptions'):
+        for key, value in sys._xoptions.items():
+            if value is True:
+                x_options.append(f'-X{key}')
+            else:
+                x_options.append(f'-X{key}={value}')
+    
+    args = [sys.executable] + ['-W%s' % o for o in sys.warnoptions] + x_options
     # __spec__ is set when the server was started with the `-m` option,
     # see https://docs.python.org/3/reference/import.html#main-spec
     # __spec__ may not exist, e.g. when running in a Conda env.
diff --git a/test_file.txt b/test_file.txt
new file mode 100644
index 0000000000..08cf610141
--- /dev/null
+++ b/test_file.txt
@@ -0,0 +1 @@
+test content
\ No newline at end of file
diff --git a/test_reloader_xoptions.py b/test_reloader_xoptions.py
new file mode 100644
index 0000000000..49408aa49c
--- /dev/null
+++ b/test_reloader_xoptions.py
@@ -0,0 +1,33 @@
+#!/usr/bin/env python3
+"""
+Test script to verify that -X options are preserved during auto-reload.
+"""
+import sys
+import subprocess
+import os
+from django.utils.autoreload import get_child_arguments
+
+def test_x_options_preservation():
+    """Test that -X options are preserved in get_child_arguments()"""
+    print("=== Testing -X options preservation ===")
+    print(f"sys._xoptions: {getattr(sys, '_xoptions', {})}")
+    print(f"sys.warnoptions: {sys.warnoptions}")
+    
+    # Get the child arguments that would be used for auto-reload
+    child_args = get_child_arguments()
+    print(f"Child arguments: {child_args}")
+    
+    # Check if -X options are preserved
+    x_options_preserved = any(arg.startswith('-X') for arg in child_args)
+    print(f"-X options preserved: {x_options_preserved}")
+    
+    # Check specific -X utf8 option if it was set
+    if hasattr(sys, '_xoptions') and 'utf8' in sys._xoptions:
+        utf8_preserved = any(arg == '-Xutf8' for arg in child_args)
+        print(f"-Xutf8 preserved: {utf8_preserved}")
+    
+    return x_options_preserved
+
+if __name__ == "__main__":
+    success = test_x_options_preservation()
+    print(f"Test result: {'PASS' if success else 'FAIL'}")
\ No newline at end of file