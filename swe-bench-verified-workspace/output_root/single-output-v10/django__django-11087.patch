diff --git a/django/db/models/deletion.py b/django/db/models/deletion.py
index 3a462f1c4c..4de56cf4c8 100644
--- a/django/db/models/deletion.py
+++ b/django/db/models/deletion.py
@@ -231,10 +231,24 @@ class Collector:
     def related_objects(self, related, objs):
         """
         Get a QuerySet of objects related to `objs` via the relation `related`.
+        Only select the fields that are required for deletion to avoid fetching
+        unnecessary data that might cause encoding issues.
         """
-        return related.related_model._base_manager.using(self.using).filter(
+        model = related.related_model
+        # We only need the primary key and the foreign key field for deletion
+        fields_to_select = [model._meta.pk.name]
+        
+        # Add the foreign key field that establishes the relationship
+        # Use getattr for safety in case related.field doesn't have a name attribute
+        field_name = getattr(related.field, 'name', None)
+        if field_name:
+            fields_to_select.append(field_name)
+        
+        # Use only() to limit the fields fetched from the database
+        # This prevents fetching unnecessary fields that might contain invalid encoding
+        return model._base_manager.using(self.using).filter(
             **{"%s__in" % related.field.name: objs}
-        )
+        ).only(*fields_to_select)
 
     def instances_with_model(self):
         for model, instances in self.data.items():