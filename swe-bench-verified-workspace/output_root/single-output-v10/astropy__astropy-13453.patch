diff --git a/astropy/io/ascii/html.py b/astropy/io/ascii/html.py
index 266cf229cc..c5a1105145 100644
--- a/astropy/io/ascii/html.py
+++ b/astropy/io/ascii/html.py
@@ -349,11 +349,13 @@ class HTML(core.BaseReader):
         cols = list(table.columns.values())
 
         self.data.header.cols = cols
+        self.data.cols = cols
 
         if isinstance(self.data.fill_values, tuple):
             self.data.fill_values = [self.data.fill_values]
 
         self.data._set_fill_values(cols)
+        self.data._set_col_formats()
 
         lines = []
 
diff --git a/pyproject.toml b/pyproject.toml
index 7a3b85fc92..83f08ed124 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -1,5 +1,5 @@
 [build-system]
-requires = ["setuptools",
+requires = ["setuptools==68.0.0",
             "setuptools_scm>=6.2",
             "wheel",
             "cython==0.29.30",
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..cc4588ce13
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,22 @@
+from astropy.table import Table
+from io import StringIO
+
+# generate table
+t = Table([(1.23875234858e-24, 3.2348748432e-15), (2, 4)], names=('a', 'b'))
+tc = t.copy()  # copy table
+
+# print HTML table with "a" column formatted to show 2 decimal places
+print("HTML output:")
+with StringIO() as sp:
+    tc.write(sp, format="html", formats={"a": lambda x: f"{x:.2e}"})
+    print(sp.getvalue())
+
+print("\nCSV output:")
+with StringIO() as sp:
+    tc.write(sp, format="csv", formats={"a": lambda x: f"{x:.2e}"})
+    print(sp.getvalue())
+
+print("\nRST output:")
+with StringIO() as sp:
+    tc.write(sp, format="ascii.rst", formats={"a": lambda x: f"{x:.2e}"})
+    print(sp.getvalue())
\ No newline at end of file
diff --git a/test_comprehensive.py b/test_comprehensive.py
new file mode 100644
index 0000000000..561615feda
--- /dev/null
+++ b/test_comprehensive.py
@@ -0,0 +1,37 @@
+from astropy.table import Table
+from io import StringIO
+
+# Test 1: Basic formatting with lambda function
+print("Test 1: Basic lambda formatting")
+t = Table([(1.23875234858e-24, 3.2348748432e-15), (2, 4)], names=('a', 'b'))
+with StringIO() as sp:
+    t.write(sp, format="html", formats={"a": lambda x: f"{x:.2e}"})
+    html_output = sp.getvalue()
+    print("Formatted values found:", "1.24e-24" in html_output and "3.23e-15" in html_output)
+
+# Test 2: Multiple column formatting
+print("\nTest 2: Multiple column formatting")
+t2 = Table([(1.2345, 2.3456), (3.4567, 4.5678)], names=('x', 'y'))
+with StringIO() as sp:
+    t2.write(sp, format="html", formats={"x": lambda x: f"{x:.1f}", "y": lambda x: f"{x:.3f}"})
+    html_output = sp.getvalue()
+    print("x formatted:", "1.2" in html_output)
+    print("y formatted:", "2.346" in html_output or "4.568" in html_output)
+
+# Test 3: String formatting
+print("\nTest 3: String formatting")
+t3 = Table([("hello", "world"), (1, 2)], names=('text', 'num'))
+with StringIO() as sp:
+    t3.write(sp, format="html", formats={"text": lambda x: x.upper()})
+    html_output = sp.getvalue()
+    print("Text uppercase:", "HELLO" in html_output and "WORLD" in html_output)
+
+# Test 4: No formatting (should work normally)
+print("\nTest 4: No formatting applied")
+t4 = Table([(1.23456789,), (2.3456789,)], names=('value', 'other'))
+with StringIO() as sp:
+    t4.write(sp, format="html")  # No formats parameter
+    html_output = sp.getvalue()
+    print("No formatting works:", "1.23456789" in html_output)
+
+print("\nAll tests completed successfully!")
\ No newline at end of file
diff --git a/test_original_issue.py b/test_original_issue.py
new file mode 100644
index 0000000000..fe92cd0a8a
--- /dev/null
+++ b/test_original_issue.py
@@ -0,0 +1,29 @@
+from astropy.table import Table
+from io import StringIO
+
+# Reproduce the exact example from the GitHub issue
+t = Table([(1.23875234858e-24, 3.2348748432e-15), (2, 4)], names=('a', 'b'))
+tc = t.copy()  # copy table
+
+print("Testing HTML output (should now be formatted):")
+with StringIO() as sp:
+    tc.write(sp, format="html", formats={"a": lambda x: f"{x:.2e}"})
+    html_output = sp.getvalue()
+    print("HTML contains formatted values (1.24e-24, 3.23e-15):", 
+          "1.24e-24" in html_output and "3.23e-15" in html_output)
+    print("HTML does NOT contain unformatted values:", 
+          "1.23875234858e-24" not in html_output and "3.2348748432e-15" not in html_output)
+
+print("\nTesting CSV output (should still work):")
+with StringIO() as sp:
+    tc.write(sp, format="csv", formats={"a": lambda x: f"{x:.2e}"})
+    csv_output = sp.getvalue()
+    print("CSV contains formatted values:", "1.24e-24" in csv_output and "3.23e-15" in csv_output)
+
+print("\nTesting RST output (should still work):")
+with StringIO() as sp:
+    tc.write(sp, format="ascii.rst", formats={"a": lambda x: f"{x:.2e}"})
+    rst_output = sp.getvalue()
+    print("RST contains formatted values:", "1.24e-24" in rst_output and "3.23e-15" in rst_output)
+
+print("\nAll outputs should now be consistent!")
\ No newline at end of file