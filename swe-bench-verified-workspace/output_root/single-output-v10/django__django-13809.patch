diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..f3d7c8e262
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,80 @@
+#!/usr/bin/env python3
+
+import os
+import sys
+import subprocess
+import time
+
+# Add the testbed directory to Python path
+sys.path.insert(0, '/testbed')
+
+def test_runserver_with_skip_checks():
+    """Test runserver command with --skip-checks option"""
+    
+    # Create a simple Django project structure for testing
+    test_project_dir = '/tmp/test_project'
+    os.makedirs(test_project_dir, exist_ok=True)
+    
+    # Create a minimal settings file
+    settings_content = '''
+DEBUG = True
+SECRET_KEY = 'test-secret-key'
+ALLOWED_HOSTS = ['localhost']
+INSTALLED_APPS = ['django.contrib.staticfiles']
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': '/tmp/test_db.sqlite3',
+    }
+}
+'''
+    
+    with open(os.path.join(test_project_dir, 'settings.py'), 'w') as f:
+        f.write(settings_content)
+    
+    # Set environment variable for Django settings
+    env = os.environ.copy()
+    env['DJANGO_SETTINGS_MODULE'] = 'settings'
+    
+    # Test 1: Run without --skip-checks (should perform checks)
+    print("Testing runserver without --skip-checks...")
+    try:
+        result = subprocess.run([
+            sys.executable, '-m', 'django', 'runserver', '--noreload', '--nothreading', '8001'
+        ], 
+        cwd=test_project_dir,
+        env=env,
+        capture_output=True,
+        text=True,
+        timeout=10
+        )
+        print(f"Exit code: {result.returncode}")
+        print(f"Output: {result.stdout}")
+        print(f"Error: {result.stderr}")
+    except subprocess.TimeoutExpired:
+        print("Command timed out (expected for runserver)")
+    except Exception as e:
+        print(f"Error: {e}")
+    
+    # Test 2: Run with --skip-checks (should skip checks)
+    print("\nTesting runserver with --skip-checks...")
+    try:
+        result = subprocess.run([
+            sys.executable, '-m', 'django', 'runserver', '--skip-checks', '--noreload', '--nothreading', '8002'
+        ], 
+        cwd=test_project_dir,
+        env=env,
+        capture_output=True,
+        text=True,
+        timeout=10
+        )
+        print(f"Exit code: {result.returncode}")
+        print(f"Output: {result.stdout}")
+        print(f"Error: {result.stderr}")
+    except subprocess.TimeoutExpired:
+        print("Command timed out (expected for runserver)")
+    except Exception as e:
+        print(f"Error: {e}")
+
+if __name__ == '__main__':
+    test_runserver_with_skip_checks()
\ No newline at end of file