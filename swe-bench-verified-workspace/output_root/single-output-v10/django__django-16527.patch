diff --git a/django/contrib/admin/templatetags/admin_modify.py b/django/contrib/admin/templatetags/admin_modify.py
index 9df4b7aadb..5b742af46a 100644
--- a/django/contrib/admin/templatetags/admin_modify.py
+++ b/django/contrib/admin/templatetags/admin_modify.py
@@ -100,6 +100,7 @@ def submit_row(context):
                 and context.get("show_delete", True)
             ),
             "show_save_as_new": not is_popup
+            and has_add_permission
             and has_change_permission
             and change
             and save_as,
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..8fe2a6079f
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,58 @@
+#!/usr/bin/env python3
+"""
+Script to reproduce the issue with show_save_as_new permission check.
+This script simulates the context that would be passed to the submit_row function.
+"""
+
+from django.contrib.admin.templatetags.admin_modify import submit_row
+from django.template.context import Context
+
+def test_show_save_as_new():
+    # Test case 1: User has change permission but no add permission
+    # This should NOT show save_as_new button according to the issue
+    context1 = {
+        "add": False,
+        "change": True,
+        "is_popup": False,
+        "save_as": True,
+        "show_save": True,
+        "show_save_and_add_another": True,
+        "show_save_and_continue": True,
+        "has_add_permission": False,  # No add permission
+        "has_change_permission": True,  # Has change permission
+        "has_view_permission": True,
+        "has_editable_inline_admin_formsets": False,
+        "has_delete_permission": True,
+    }
+    
+    result1 = submit_row(context1)
+    show_save_as_new1 = result1.get("show_save_as_new", False)
+    print(f"Test 1 - No add permission, has change permission:")
+    print(f"  show_save_as_new: {show_save_as_new1}")
+    print(f"  Expected: False (should not show save_as_new without add permission)")
+    
+    # Test case 2: User has both add and change permissions
+    # This should show save_as_new button
+    context2 = {
+        "add": False,
+        "change": True,
+        "is_popup": False,
+        "save_as": True,
+        "show_save": True,
+        "show_save_and_add_another": True,
+        "show_save_and_continue": True,
+        "has_add_permission": True,  # Has add permission
+        "has_change_permission": True,  # Has change permission
+        "has_view_permission": True,
+        "has_editable_inline_admin_formsets": False,
+        "has_delete_permission": True,
+    }
+    
+    result2 = submit_row(context2)
+    show_save_as_new2 = result2.get("show_save_as_new", False)
+    print(f"\nTest 2 - Has both add and change permissions:")
+    print(f"  show_save_as_new: {show_save_as_new2}")
+    print(f"  Expected: True (should show save_as_new with add permission)")
+
+if __name__ == "__main__":
+    test_show_save_as_new()
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..2b4005aefe
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,76 @@
+#!/usr/bin/env python3
+"""
+Script to test edge cases for the show_save_as_new fix.
+"""
+
+from django.contrib.admin.templatetags.admin_modify import submit_row
+
+def test_edge_cases():
+    # Test case 1: is_popup = True (should not show save_as_new)
+    context1 = {
+        "add": False,
+        "change": True,
+        "is_popup": True,  # Popup mode
+        "save_as": True,
+        "show_save": True,
+        "show_save_and_add_another": True,
+        "show_save_and_continue": True,
+        "has_add_permission": True,
+        "has_change_permission": True,
+        "has_view_permission": True,
+        "has_editable_inline_admin_formsets": False,
+        "has_delete_permission": True,
+    }
+    
+    result1 = submit_row(context1)
+    show_save_as_new1 = result1.get("show_save_as_new", False)
+    print(f"Test 1 - Popup mode:")
+    print(f"  show_save_as_new: {show_save_as_new1}")
+    print(f"  Expected: False (should not show in popup mode)")
+    
+    # Test case 2: save_as = False (should not show save_as_new)
+    context2 = {
+        "add": False,
+        "change": True,
+        "is_popup": False,
+        "save_as": False,  # save_as disabled
+        "show_save": True,
+        "show_save_and_add_another": True,
+        "show_save_and_continue": True,
+        "has_add_permission": True,
+        "has_change_permission": True,
+        "has_view_permission": True,
+        "has_editable_inline_admin_formsets": False,
+        "has_delete_permission": True,
+    }
+    
+    result2 = submit_row(context2)
+    show_save_as_new2 = result2.get("show_save_as_new", False)
+    print(f"\nTest 2 - save_as disabled:")
+    print(f"  show_save_as_new: {show_save_as_new2}")
+    print(f"  Expected: False (save_as is False)")
+    
+    # Test case 3: change = False (should not show save_as_new)
+    context3 = {
+        "add": False,
+        "change": False,  # Not in change mode
+        "is_popup": False,
+        "save_as": True,
+        "show_save": True,
+        "show_save_and_add_another": True,
+        "show_save_and_continue": True,
+        "has_add_permission": True,
+        "has_change_permission": True,
+        "has_view_permission": True,
+        "has_editable_inline_admin_formsets": False,
+        "has_delete_permission": True,
+    }
+    
+    result3 = submit_row(context3)
+    show_save_as_new3 = result3.get("show_save_as_new", False)
+    print(f"\nTest 3 - Not in change mode:")
+    print(f"  show_save_as_new: {show_save_as_new3}")
+    print(f"  Expected: False (not in change mode)")
+
+if __name__ == "__main__":
+    test_edge_cases()
\ No newline at end of file