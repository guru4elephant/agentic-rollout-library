diff --git a/django/utils/html.py b/django/utils/html.py
index 9c519978f5..becce9f2e8 100644
--- a/django/utils/html.py
+++ b/django/utils/html.py
@@ -1,5 +1,6 @@
 """HTML utilities suitable for global use."""
 
+import html
 import json
 import re
 from html.parser import HTMLParser
@@ -24,13 +25,7 @@ word_split_re = re.compile(r'''([\s<>"']+)''')
 simple_url_re = re.compile(r'^https?://\[?\w', re.IGNORECASE)
 simple_url_2_re = re.compile(r'^www\.|^(?!http)\w[^@]+\.(com|edu|gov|int|mil|net|org)($|/.*)$', re.IGNORECASE)
 
-_html_escapes = {
-    ord('&'): '&amp;',
-    ord('<'): '&lt;',
-    ord('>'): '&gt;',
-    ord('"'): '&quot;',
-    ord("'"): '&#39;',
-}
+
 
 
 @keep_lazy(str, SafeString)
@@ -43,7 +38,7 @@ def escape(text):
     This may result in double-escaping. If this is a concern, use
     conditional_escape() instead.
     """
-    return mark_safe(str(text).translate(_html_escapes))
+    return mark_safe(html.escape(str(text)))
 
 
 _js_escapes = {
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..e9ee563150
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,51 @@
+#!/usr/bin/env python3
+"""Script to reproduce the issue and compare Django's escape() with Python's html.escape()"""
+
+import html
+from django.utils.html import escape
+
+# Test strings to compare the behavior
+test_strings = [
+    "Hello & World",
+    "Test < > \" ' characters",
+    "Just text",
+    "&amp; already escaped",
+    "Multiple & & &",
+    "'Single quotes' and \"double quotes\"",
+    "<script>alert('test')</script>"
+]
+
+print("Comparing Django.utils.html.escape() vs Python html.escape():")
+print("=" * 60)
+
+for test_str in test_strings:
+    django_result = escape(test_str)
+    python_result = html.escape(test_str)
+    
+    print(f"Input: {test_str}")
+    print(f"Django: {django_result}")
+    print(f"Python: {python_result}")
+    print(f"Equal: {django_result == python_result}")
+    print("-" * 40)
+
+# Performance comparison
+print("\nPerformance comparison:")
+import timeit
+
+test_input = "Test < > & \\\" ' characters"
+
+django_time = timeit.timeit(
+    'escape(test_input)',
+    setup='from django.utils.html import escape; test_input = "Test < > & \\\" \' characters"',
+    number=100000
+)
+
+python_time = timeit.timeit(
+    'html.escape(test_input)',
+    setup='import html; test_input = "Test < > & \\\" \' characters"',
+    number=100000
+)
+
+print(f"Django escape() time: {django_time:.6f}")
+print(f"Python html.escape() time: {python_time:.6f}")
+print(f"Python is {django_time/python_time:.2f}x faster")
\ No newline at end of file
diff --git a/tests/utils_tests/test_html.py b/tests/utils_tests/test_html.py
index d87927cdfe..2c65a98c49 100644
--- a/tests/utils_tests/test_html.py
+++ b/tests/utils_tests/test_html.py
@@ -27,7 +27,7 @@ class TestUtilsHtml(SimpleTestCase):
             ('<', '&lt;'),
             ('>', '&gt;'),
             ('"', '&quot;'),
-            ("'", '&#39;'),
+            ("'", '&#x27;'),
         )
         # Substitution patterns for testing the above items.
         patterns = ("%s", "asdf%sfdsa", "%s1", "1%sb")