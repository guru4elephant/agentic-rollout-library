diff --git a/django/utils/dateparse.py b/django/utils/dateparse.py
index 8d08b7d1d3..a037758784 100644
--- a/django/utils/dateparse.py
+++ b/django/utils/dateparse.py
@@ -29,7 +29,7 @@ datetime_re = re.compile(
 standard_duration_re = re.compile(
     r'^'
     r'(?:(?P<days>-?\d+) (days?, )?)?'
-    r'((?:(?P<hours>-?\d+):)(?=\d+:\d+))?'
+    r'((?:(?P<hours>-?\d+):)(?=-?\d+:-?\d+))?'
     r'(?:(?P<minutes>-?\d+):)?'
     r'(?P<seconds>-?\d+)'
     r'(?:\.(?P<microseconds>\d{1,6})\d{0,6})?'
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..5c1b1eb6fb
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,29 @@
+#!/usr/bin/env python3
+
+import sys
+import os
+sys.path.insert(0, '/testbed')
+
+from django.utils.dateparse import parse_duration
+
+# Test cases for negative durations
+test_cases = [
+    "-1 12:30:45",      # Negative days with time
+    "1 -12:30:45",      # Negative hours
+    "1 12:-30:45",      # Negative minutes  
+    "1 12:30:-45",      # Negative seconds
+    "-1 -12:-30:-45",   # All negative
+    "-1:30:45",         # Negative hours only
+    "1:-30:45",         # Negative minutes only
+    "1:30:-45",         # Negative seconds only
+]
+
+print("Testing parse_duration() with negative durations:")
+print("=" * 50)
+
+for test_case in test_cases:
+    try:
+        result = parse_duration(test_case)
+        print(f"✓ '{test_case}' -> {result}")
+    except (ValueError, TypeError) as e:
+        print(f"✗ '{test_case}' -> ERROR: {e}")
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..75e7f1d787
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,48 @@
+#!/usr/bin/env python3
+
+import sys
+sys.path.insert(0, '/testbed')
+
+from django.utils.dateparse import parse_duration
+
+# Test edge cases for negative durations
+test_cases = [
+    # Mixed positive/negative cases
+    ("-1 12:30:45", "Negative days with positive time"),
+    ("1 -12:30:45", "Positive days with negative hours"),
+    ("1 12:-30:45", "Positive days with negative minutes"),
+    ("1 12:30:-45", "Positive days with negative seconds"),
+    
+    # All negative cases
+    ("-1 -12:-30:-45", "All components negative"),
+    ("-1:-30:-45", "Negative hours, minutes, seconds"),
+    
+    # Edge cases with zero
+    ("0 -1:30:45", "Zero days with negative time"),
+    ("-1 0:-30:0", "Negative days with mixed zero/negative time"),
+    
+    # Boundary cases
+    ("-999 23:59:59.999999", "Large negative duration"),
+    ("1 -23:-59:-59.999999", "Large negative time components"),
+    
+    # Test the specific format mentioned in the issue
+    ("-1:30:45", "Negative hours format"),
+    ("1:-30:45", "Negative minutes format"), 
+    ("1:30:-45", "Negative seconds format"),
+]
+
+print("Testing edge cases for negative durations:")
+print("=" * 60)
+
+for duration_str, description in test_cases:
+    try:
+        result = parse_duration(duration_str)
+        if result is not None:
+            print(f"✓ '{duration_str}' ({description}) -> {result}")
+        else:
+            print(f"✗ '{duration_str}' ({description}) -> None (should not be None)")
+    except Exception as e:
+        print(f"✗ '{duration_str}' ({description}) -> ERROR: {e}")
+
+print("\n" + "=" * 60)
+print("All edge cases tested successfully!")
\ No newline at end of file