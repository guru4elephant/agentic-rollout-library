diff --git a/django/core/mail/message.py b/django/core/mail/message.py
index e393b4cf5c..a293bee747 100644
--- a/django/core/mail/message.py
+++ b/django/core/mail/message.py
@@ -1,3 +1,4 @@
+import encodings.idna
 import mimetypes
 from email import (
     charset as Charset, encoders as Encoders, generator, message_from_string,
@@ -257,7 +258,24 @@ class EmailMessage:
             msg['Date'] = formatdate(localtime=settings.EMAIL_USE_LOCALTIME)
         if 'message-id' not in header_names:
             # Use cached DNS_NAME for performance
-            msg['Message-ID'] = make_msgid(domain=DNS_NAME)
+            # Convert domain to punycode for non-ASCII domain names
+            domain = str(DNS_NAME)
+            try:
+                # Try to encode to ASCII to check if domain contains non-ASCII characters
+                domain.encode('ascii')
+            except UnicodeEncodeError:
+                # Convert to punycode if domain contains non-ASCII characters
+                # Split domain into labels and convert only non-ASCII labels
+                labels = domain.split('.')
+                converted_labels = []
+                for label in labels:
+                    try:
+                        label.encode('ascii')
+                        converted_labels.append(label)
+                    except UnicodeEncodeError:
+                        converted_labels.append(encodings.idna.ToASCII(label).decode('ascii'))
+                domain = '.'.join(converted_labels)
+            msg['Message-ID'] = make_msgid(domain=domain)
         for name, value in self.extra_headers.items():
             if name.lower() != 'from':  # From is already handled
                 msg[name] = value