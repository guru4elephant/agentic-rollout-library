diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py
index 2b59dd301a..c755ae81f4 100644
--- a/django/db/models/expressions.py
+++ b/django/db/models/expressions.py
@@ -567,7 +567,11 @@ class OuterRef(F):
                            summarize=False, for_save=False, simple_col=False):
         if isinstance(self.name, self.__class__):
             return self.name
-        return ResolvedOuterRef(self.name)
+        # Only resolve to ResolvedOuterRef if we're in a subquery context
+        if query and query.subquery:
+            return ResolvedOuterRef(self.name)
+        # Otherwise, return self to avoid premature resolution
+        return self
 
 
 class Func(SQLiteNumericMixin, Expression):
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..96095b5c23
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,66 @@
+#!/usr/bin/env python3
+
+import os
+import sys
+sys.path.insert(0, os.path.join(os.path.dirname(__file__), '.'))
+
+import django
+from django.conf import settings
+
+# Configure Django settings
+if not settings.configured:
+    settings.configure(
+        DEBUG=True,
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:',
+            }
+        },
+        INSTALLED_APPS=[
+            'django.contrib.contenttypes',
+            'django.contrib.auth',
+        ],
+        SECRET_KEY='test-secret-key',
+        USE_TZ=True,
+    )
+
+django.setup()
+
+from django.db.models import Exists, OuterRef, Q
+from tests.queries.models import Number, Item, Tag, NamedCategory
+
+print("Testing OuterRef issue...")
+
+# Test case 1: filter() - should work
+try:
+    qs = Number.objects.annotate(
+        foo=Exists(
+            Item.objects.filter(tags__category_id=OuterRef('pk'))
+        )
+    ).filter(foo=True)
+    print("✓ filter() works:", qs)
+except Exception as e:
+    print("✗ filter() failed:", e)
+
+# Test case 2: exclude() - should crash according to the issue
+try:
+    qs = Number.objects.annotate(
+        foo=Exists(
+            Item.objects.exclude(tags__category_id=OuterRef('pk'))
+        )
+    ).filter(foo=True)
+    print("✓ exclude() works:", qs)
+except Exception as e:
+    print("✗ exclude() failed:", e)
+
+# Test case 3: filter(~Q()) - should crash according to the issue
+try:
+    qs = Number.objects.annotate(
+        foo=Exists(
+            Item.objects.filter(~Q(tags__category_id=OuterRef('pk')))
+        )
+    ).filter(foo=True)
+    print("✓ filter(~Q()) works:", qs)
+except Exception as e:
+    print("✗ filter(~Q()) failed:", e)
\ No newline at end of file