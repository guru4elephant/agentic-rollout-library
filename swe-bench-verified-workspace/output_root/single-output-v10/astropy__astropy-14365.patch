diff --git a/astropy/io/ascii/qdp.py b/astropy/io/ascii/qdp.py
index 83a4f004aa..2d9aa635a6 100644
--- a/astropy/io/ascii/qdp.py
+++ b/astropy/io/ascii/qdp.py
@@ -60,7 +60,7 @@ def _line_type(line, delimiter=None):
     ValueError: Unrecognized QDP line...
     """
     _decimal_re = r"[+-]?(\d+(\.\d*)?|\.\d+)([eE][+-]?\d+)?"
-    _command_re = r"READ [TS]ERR(\s+[0-9]+)+"
+    _command_re = r"[Rr][Ee][Aa][Dd] [SsTt][Ee][Rr][Rr](\s+[0-9]+)+"
 
     sep = delimiter
     if delimiter is None:
diff --git a/pyproject.toml b/pyproject.toml
index 287a356a08..f2ee6c47cc 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -1,5 +1,5 @@
 [build-system]
-requires = ["setuptools",
+requires = ["setuptools==68.0.0",
             "setuptools_scm>=6.2",
             "wheel",
             "cython==0.29.30",
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..b725b0ee55
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,26 @@
+#!/usr/bin/env python3
+
+# Script to reproduce the QDP case sensitivity issue
+import os
+from astropy.table import Table
+
+# Create the test QDP file with lowercase command
+qdp_content = """read serr 1 2
+1 0.5 1 0.5
+"""
+
+with open('test.qdp', 'w') as f:
+    f.write(qdp_content)
+
+print("Created test.qdp file:")
+print(qdp_content)
+
+# Try to read the QDP file
+try:
+    print("\nAttempting to read the QDP file...")
+    table = Table.read('test.qdp', format='ascii.qdp')
+    print("Success! Table:")
+    print(table)
+except Exception as e:
+    print(f"Error: {e}")
+    print(f"Error type: {type(e)}")
\ No newline at end of file
diff --git a/test.qdp b/test.qdp
new file mode 100644
index 0000000000..b5750561d5
--- /dev/null
+++ b/test.qdp
@@ -0,0 +1,2 @@
+read serr 1 2
+1 0.5 1 0.5
diff --git a/test_case.qdp b/test_case.qdp
new file mode 100644
index 0000000000..c1fec2401c
--- /dev/null
+++ b/test_case.qdp
@@ -0,0 +1,2 @@
+Read Terr 1
+1 0.5 1 0.5
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..cb6c60b65b
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,33 @@
+#!/usr/bin/env python3
+
+# Test edge cases for QDP case sensitivity
+from astropy.table import Table
+
+# Test various case combinations
+test_cases = [
+    ("READ SERR 1 2", "UPPERCASE"),
+    ("read serr 1 2", "lowercase"),
+    ("Read Serr 1 2", "Mixed Case"),
+    ("ReAd SeRr 1 2", "Random Case"),
+    ("READ TERR 1", "UPPERCASE TERR"),
+    ("read terr 1", "lowercase TERR"),
+    ("Read Terr 1", "Mixed Case TERR"),
+]
+
+for command, description in test_cases:
+    print(f"\nTesting {description}: '{command}'")
+    
+    # Create the test QDP file
+    qdp_content = f"""{command}
+1 0.5 1 0.5
+"""
+    
+    with open('test_case.qdp', 'w') as f:
+        f.write(qdp_content)
+    
+    # Try to read the QDP file
+    try:
+        table = Table.read('test_case.qdp', format='ascii.qdp')
+        print(f"  Success! Table has {len(table)} rows and {len(table.columns)} columns")
+    except Exception as e:
+        print(f"  Error: {e}")
\ No newline at end of file
diff --git a/test_invalid.qdp b/test_invalid.qdp
new file mode 100644
index 0000000000..104f6ee30e
--- /dev/null
+++ b/test_invalid.qdp
@@ -0,0 +1,2 @@
+write serr 1 2
+1 0.5 1 0.5
diff --git a/test_invalid_commands.py b/test_invalid_commands.py
new file mode 100644
index 0000000000..333e9e5383
--- /dev/null
+++ b/test_invalid_commands.py
@@ -0,0 +1,30 @@
+#!/usr/bin/env python3
+
+# Test that invalid commands are still properly rejected
+from astropy.table import Table
+
+# Test invalid commands
+invalid_cases = [
+    "READ FOO 1 2",  # Invalid error type
+    "WRITE SERR 1 2",  # Invalid command
+    "read foo 1 2",  # Invalid error type (lowercase)
+    "write serr 1 2",  # Invalid command (lowercase)
+]
+
+for command in invalid_cases:
+    print(f"\nTesting invalid command: '{command}'")
+    
+    # Create the test QDP file
+    qdp_content = f"""{command}
+1 0.5 1 0.5
+"""
+    
+    with open('test_invalid.qdp', 'w') as f:
+        f.write(qdp_content)
+    
+    # Try to read the QDP file
+    try:
+        table = Table.read('test_invalid.qdp', format='ascii.qdp')
+        print(f"  Unexpected success! Table has {len(table)} rows")
+    except Exception as e:
+        print(f"  Expected error: {e}")
\ No newline at end of file