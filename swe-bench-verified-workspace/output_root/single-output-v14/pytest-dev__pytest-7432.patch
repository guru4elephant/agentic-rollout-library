diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 000000000..ae230d9d3
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,14 @@
+import pytest
+
+@pytest.mark.skip
+def test_skip_location() -> None:
+    assert 0
+
+if __name__ == "__main__":
+    # Run without --runxfail
+    print("Running without --runxfail:")
+    pytest.main(["-rs", "reproduce_issue.py"])
+    
+    print("\nRunning with --runxfail:")
+    # Run with --runxfail
+    pytest.main(["-rs", "--runxfail", "reproduce_issue.py"])
\ No newline at end of file
diff --git a/src/_pytest/skipping.py b/src/_pytest/skipping.py
index 7bd975e5a..867562c63 100644
--- a/src/_pytest/skipping.py
+++ b/src/_pytest/skipping.py
@@ -291,7 +291,9 @@ def pytest_runtest_makereport(item: Item, call: CallInfo[None]):
             else:
                 rep.outcome = "passed"
                 rep.wasxfail = xfailed.reason
-    elif (
+    # Handle skip location reporting for skip/skipif marks
+    # This should happen regardless of --runxfail setting
+    if (
         item._store.get(skipped_by_mark_key, True)
         and rep.skipped
         and type(rep.longrepr) is tuple
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 000000000..e6c6a275e
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,16 @@
+import pytest
+
+@pytest.mark.skip
+@pytest.mark.xfail
+def test_skip_and_xfail() -> None:
+    assert 0
+
+@pytest.mark.skipif(True, reason="always skip")
+@pytest.mark.xfail
+def test_skipif_and_xfail() -> None:
+    assert 0
+
+if __name__ == "__main__":
+    # Test with --runxfail
+    print("Running with --runxfail:")
+    pytest.main(["-rs", "--runxfail", "test_edge_cases.py"])
\ No newline at end of file
diff --git a/test_normal_behavior.py b/test_normal_behavior.py
new file mode 100644
index 000000000..a78b93b40
--- /dev/null
+++ b/test_normal_behavior.py
@@ -0,0 +1,16 @@
+import pytest
+
+def test_normal_pass() -> None:
+    assert True
+
+def test_normal_fail() -> None:
+    assert False
+
+if __name__ == "__main__":
+    # Test with --runxfail
+    print("Running with --runxfail:")
+    pytest.main(["-v", "--runxfail", "test_normal_behavior.py"])
+    
+    print("\nRunning without --runxfail:")
+    # Test without --runxfail
+    pytest.main(["-v", "test_normal_behavior.py"])
\ No newline at end of file
diff --git a/test_skipif.py b/test_skipif.py
new file mode 100644
index 000000000..eca0a85a2
--- /dev/null
+++ b/test_skipif.py
@@ -0,0 +1,15 @@
+import pytest
+import sys
+
+@pytest.mark.skipif(sys.platform == "linux", reason="skip on linux")
+def test_skipif_location() -> None:
+    assert 0
+
+if __name__ == "__main__":
+    # Run without --runxfail
+    print("Running without --runxfail:")
+    pytest.main(["-rs", "test_skipif.py"])
+    
+    print("\nRunning with --runxfail:")
+    # Run with --runxfail
+    pytest.main(["-rs", "--runxfail", "test_skipif.py"])
\ No newline at end of file
diff --git a/test_xfail_behavior.py b/test_xfail_behavior.py
new file mode 100644
index 000000000..c30bec446
--- /dev/null
+++ b/test_xfail_behavior.py
@@ -0,0 +1,18 @@
+import pytest
+
+@pytest.mark.xfail
+def test_xfail_should_fail() -> None:
+    assert 0  # This should fail and be reported as xfail
+
+@pytest.mark.xfail
+def test_xfail_should_pass() -> None:
+    pass  # This should pass and be reported as xpass
+
+if __name__ == "__main__":
+    # Test with --runxfail
+    print("Running with --runxfail:")
+    pytest.main(["-rs", "--runxfail", "test_xfail_behavior.py"])
+    
+    print("\nRunning without --runxfail:")
+    # Test without --runxfail
+    pytest.main(["-rs", "test_xfail_behavior.py"])
\ No newline at end of file