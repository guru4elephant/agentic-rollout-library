diff --git a/django/forms/models.py b/django/forms/models.py
index dafc11f995..04633c2976 100644
--- a/django/forms/models.py
+++ b/django/forms/models.py
@@ -13,7 +13,7 @@ from django.forms.forms import BaseForm, DeclarativeFieldsMetaclass
 from django.forms.formsets import BaseFormSet, formset_factory
 from django.forms.utils import ErrorList
 from django.forms.widgets import (
-    HiddenInput, MultipleHiddenInput, SelectMultiple,
+    HiddenInput, MultipleHiddenInput, RadioSelect, SelectMultiple,
 )
 from django.utils.text import capfirst, get_text_list
 from django.utils.translation import gettext, gettext_lazy as _
@@ -1146,7 +1146,9 @@ class ModelChoiceIterator:
         self.queryset = field.queryset
 
     def __iter__(self):
-        if self.field.empty_label is not None:
+        # Don't include empty label for RadioSelect widgets when field is required
+        if (self.field.empty_label is not None and 
+            not (isinstance(self.field.widget, RadioSelect) and self.field.required)):
             yield ("", self.field.empty_label)
         queryset = self.queryset
         # Can't use iterator() when queryset uses prefetch_related()
@@ -1159,7 +1161,12 @@ class ModelChoiceIterator:
         # count() adds a query but uses less memory since the QuerySet results
         # won't be cached. In most cases, the choices will only be iterated on,
         # and __len__() won't be called.
-        return self.queryset.count() + (1 if self.field.empty_label is not None else 0)
+        empty_label_count = 1 if self.field.empty_label is not None else 0
+        # Don't count empty label for RadioSelect widgets when field is required
+        if (empty_label_count and 
+            isinstance(self.field.widget, RadioSelect) and self.field.required):
+            empty_label_count = 0
+        return self.queryset.count() + empty_label_count
 
     def __bool__(self):
         return self.field.empty_label is not None or self.queryset.exists()