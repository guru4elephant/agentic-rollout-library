diff --git a/astropy/wcs/wcsapi/wrappers/sliced_wcs.py b/astropy/wcs/wcsapi/wrappers/sliced_wcs.py
index d7605b078c..503d11dafe 100644
--- a/astropy/wcs/wcsapi/wrappers/sliced_wcs.py
+++ b/astropy/wcs/wcsapi/wrappers/sliced_wcs.py
@@ -246,12 +246,17 @@ class SlicedLowLevelWCS(BaseWCSWrapper):
         world_arrays = tuple(map(np.asanyarray, world_arrays))
         world_arrays_new = []
         iworld_curr = -1
+        
+        # First, get the world coordinate values at the slice position
+        slice_world_coords = self._pixel_to_world_values_all(*[0]*len(self._pixel_keep))
+        
         for iworld in range(self._wcs.world_n_dim):
             if iworld in self._world_keep:
                 iworld_curr += 1
                 world_arrays_new.append(world_arrays[iworld_curr])
             else:
-                world_arrays_new.append(1.)
+                # Use the world coordinate value at the slice position for dropped dimensions
+                world_arrays_new.append(slice_world_coords[iworld])
 
         world_arrays_new = np.broadcast_arrays(*world_arrays_new)
         pixel_arrays = list(self._wcs.world_to_pixel_values(*world_arrays_new))
diff --git a/pyproject.toml b/pyproject.toml
index 7a3b85fc92..83f08ed124 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -1,5 +1,5 @@
 [build-system]
-requires = ["setuptools",
+requires = ["setuptools==68.0.0",
             "setuptools_scm>=6.2",
             "wheel",
             "cython==0.29.30",
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..d12fbe1552
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,51 @@
+import numpy as np
+import astropy.wcs
+from astropy.coordinates import SkyCoord
+import astropy.units as u
+
+nx = 100
+ny = 25
+nz = 2
+wcs_header = {
+    'WCSAXES': 3,
+    'CRPIX1': (nx + 1)/2,
+    'CRPIX2': (ny + 1)/2,
+    'CRPIX3': 1.0,
+    'PC1_1': 0.0,
+    'PC1_2': -1.0,
+    'PC1_3': 0.0,
+    'PC2_1': 1.0,
+    'PC2_2': 0.0,
+    'PC2_3': -1.0,
+    'CDELT1': 5,
+    'CDELT2': 5,
+    'CDELT3': 0.055,
+    'CUNIT1': 'deg',
+    'CUNIT2': 'deg',
+    'CUNIT3': 'Angstrom',
+    'CTYPE1': 'RA---TAN',
+    'CTYPE2': 'DEC--TAN',
+    'CTYPE3': 'WAVE',
+    'CRVAL1': 0.0,
+    'CRVAL2': 0.0,
+    'CRVAL3': 1.05,
+}
+
+fits_wcs = astropy.wcs.WCS(header=wcs_header)
+
+# Test unsliced WCS
+print("Testing unsliced WCS:")
+pt = SkyCoord(0*u.deg, 0*u.deg, frame='icrs')
+result_unsliced = fits_wcs.world_to_pixel(pt, 1.05*u.angstrom)
+print("Unsliced result:", result_unsliced)
+
+# Test sliced WCS
+print("\nTesting sliced WCS:")
+ll_sliced_wcs = astropy.wcs.wcsapi.SlicedLowLevelWCS(fits_wcs, 0)
+hl_sliced_wcs = astropy.wcs.wcsapi.HighLevelWCSWrapper(ll_sliced_wcs)
+result_sliced = hl_sliced_wcs.world_to_pixel(pt)
+print("Sliced result:", result_sliced)
+
+# Expected result should be the first two components of unsliced result
+print("\nExpected result (first two components of unsliced):", result_unsliced[:2])
+print("Difference:", np.array(result_sliced) - np.array(result_unsliced[:2]))
\ No newline at end of file