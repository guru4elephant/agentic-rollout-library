diff --git a/example.svg b/example.svg
new file mode 100644
index 0000000000..a3c0b7090c
Binary files /dev/null and b/example.svg differ
diff --git a/final_test.py b/final_test.py
new file mode 100644
index 0000000000..e2a226128f
--- /dev/null
+++ b/final_test.py
@@ -0,0 +1,62 @@
+import matplotlib.pyplot as plt
+from matplotlib.offsetbox import (OffsetImage, AnnotationBbox)
+import numpy as np
+
+# Recreate the exact example from the GitHub issue
+fig, ax = plt.subplots()
+
+# Create a simple array for testing (since we don't have the actual image)
+arr_img = np.random.rand(10, 10, 4)  # RGBA image
+
+xy = [0.3, 0.55]
+
+imagebox = OffsetImage(arr_img, zoom=0.1)
+imagebox.image.axes = ax
+
+ab = AnnotationBbox(imagebox, xy,
+                    xybox=(120., -80.),
+                    xycoords='data',
+                    boxcoords="offset points",
+                    pad=0.5,
+                    arrowprops=dict(
+                        arrowstyle="->",
+                        connectionstyle="angle,angleA=0,angleB=90,rad=3")
+                    )
+ab.set_gid('My_label')
+ax.add_artist(ab)
+
+print(f"GID = {ab.get_gid()}")
+
+fig.savefig("example.svg", format="svg")
+
+# Verify the GID is in the SVG
+with open("example.svg", "r") as f:
+    content = f.read()
+    if 'id="My_label"' in content:
+        print("SUCCESS: GID 'My_label' found in SVG")
+        print("The issue has been fixed!")
+    else:
+        print("FAILURE: GID 'My_label' not found in SVG")
+
+# Also test that the GID is properly formatted as a group
+if '<g id="My_label">' in content:
+    print("SUCCESS: GID is properly formatted as a group element")
+else:
+    print("FAILURE: GID is not properly formatted")
+
+# Test that the AnnotationBbox content is inside the group
+lines = content.split('\n')
+gid_line = None
+for i, line in enumerate(lines):
+    if 'id="My_label"' in line:
+        gid_line = i
+        break
+
+if gid_line is not None:
+    # Check that the group is properly closed
+    if '</g>' in content:
+        print("SUCCESS: Group is properly closed")
+    else:
+        print("FAILURE: Group is not properly closed")
+else:
+    print("FAILURE: Could not find GID line")
\ No newline at end of file
diff --git a/lib/matplotlib/offsetbox.py b/lib/matplotlib/offsetbox.py
index efa34dd078..deb3261ff5 100644
--- a/lib/matplotlib/offsetbox.py
+++ b/lib/matplotlib/offsetbox.py
@@ -1453,12 +1453,14 @@ or callable, default: value of *xycoords*
         if not self.get_visible() or not self._check_xy(renderer):
             return
         self.update_positions(renderer)
+        renderer.open_group('annotation', self.get_gid())
         if self.arrow_patch is not None:
             if self.arrow_patch.figure is None and self.figure is not None:
                 self.arrow_patch.figure = self.figure
             self.arrow_patch.draw(renderer)
         self.patch.draw(renderer)
         self.offsetbox.draw(renderer)
+        renderer.close_group('annotation')
         self.stale = False
 
 
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..4d13e84ff9
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,36 @@
+import matplotlib.pyplot as plt
+from matplotlib.offsetbox import (OffsetImage, AnnotationBbox)
+
+fig, ax = plt.subplots()
+
+# Create a simple array for testing (since we don't have the actual image)
+arr_img = [[[0.5, 0.2, 0.8, 1.0] for _ in range(10)] for _ in range(10)]
+
+xy = [0.3, 0.55]
+
+imagebox = OffsetImage(arr_img, zoom=0.1)
+imagebox.image.axes = ax
+
+ab = AnnotationBbox(imagebox, xy,
+                    xybox=(120., -80.),
+                    xycoords='data',
+                    boxcoords="offset points",
+                    pad=0.5,
+                    arrowprops=dict(
+                        arrowstyle="->",
+                        connectionstyle="angle,angleA=0,angleB=90,rad=3")
+                    )
+ab.set_gid('My_label')
+ax.add_artist(ab)
+
+print(f"GID = {ab.get_gid()}")
+
+fig.savefig("example.svg", format="svg")
+
+# Let's also check the SVG content to see if the gid is present
+with open("example.svg", "r") as f:
+    content = f.read()
+    if 'My_label' in content:
+        print("SUCCESS: GID found in SVG")
+    else:
+        print("FAILURE: GID not found in SVG")
\ No newline at end of file
diff --git a/test_basic.svg b/test_basic.svg
new file mode 100644
index 0000000000..13cb4d1b7f
Binary files /dev/null and b/test_basic.svg differ
diff --git a/test_comprehensive.py b/test_comprehensive.py
new file mode 100644
index 0000000000..67c63776c3
--- /dev/null
+++ b/test_comprehensive.py
@@ -0,0 +1,101 @@
+import matplotlib.pyplot as plt
+from matplotlib.offsetbox import (OffsetImage, AnnotationBbox)
+import numpy as np
+
+# Test 1: Basic AnnotationBbox with GID
+def test_basic_gid():
+    fig, ax = plt.subplots()
+    arr_img = np.random.rand(10, 10, 4)  # RGBA image
+    xy = [0.3, 0.55]
+    
+    imagebox = OffsetImage(arr_img, zoom=0.1)
+    ab = AnnotationBbox(imagebox, xy, xybox=(120., -80.), xycoords='data',
+                       boxcoords="offset points", pad=0.5)
+    ab.set_gid('test_basic')
+    ax.add_artist(ab)
+    
+    fig.savefig("test_basic.svg", format="svg")
+    
+    with open("test_basic.svg", "r") as f:
+        content = f.read()
+        if 'id="test_basic"' in content:
+            print("✓ Basic GID test passed")
+        else:
+            print("✗ Basic GID test failed")
+
+# Test 2: AnnotationBbox without GID (should not have id attribute)
+def test_no_gid():
+    fig, ax = plt.subplots()
+    arr_img = np.random.rand(10, 10, 4)
+    xy = [0.3, 0.55]
+    
+    imagebox = OffsetImage(arr_img, zoom=0.1)
+    ab = AnnotationBbox(imagebox, xy, xybox=(120., -80.), xycoords='data',
+                       boxcoords="offset points", pad=0.5)
+    # Don't set GID
+    ax.add_artist(ab)
+    
+    fig.savefig("test_no_gid.svg", format="svg")
+    
+    with open("test_no_gid.svg", "r") as f:
+        content = f.read()
+        if 'id="test_basic"' not in content:  # Should not have our test ID
+            print("✓ No GID test passed")
+        else:
+            print("✗ No GID test failed")
+
+# Test 3: AnnotationBbox with None GID
+def test_none_gid():
+    fig, ax = plt.subplots()
+    arr_img = np.random.rand(10, 10, 4)
+    xy = [0.3, 0.55]
+    
+    imagebox = OffsetImage(arr_img, zoom=0.1)
+    ab = AnnotationBbox(imagebox, xy, xybox=(120., -80.), xycoords='data',
+                       boxcoords="offset points", pad=0.5)
+    ab.set_gid(None)  # Explicitly set to None
+    ax.add_artist(ab)
+    
+    fig.savefig("test_none_gid.svg", format="svg")
+    
+    with open("test_none_gid.svg", "r") as f:
+        content = f.read()
+        if 'id="test_basic"' not in content:  # Should not have our test ID
+            print("✓ None GID test passed")
+        else:
+            print("✗ None GID test failed")
+
+# Test 4: Multiple AnnotationBbox with different GIDs
+def test_multiple_gids():
+    fig, ax = plt.subplots()
+    arr_img = np.random.rand(10, 10, 4)
+    
+    # First AnnotationBbox
+    imagebox1 = OffsetImage(arr_img, zoom=0.1)
+    ab1 = AnnotationBbox(imagebox1, [0.3, 0.55], xybox=(120., -80.), xycoords='data',
+                        boxcoords="offset points", pad=0.5)
+    ab1.set_gid('first_box')
+    ax.add_artist(ab1)
+    
+    # Second AnnotationBbox
+    imagebox2 = OffsetImage(arr_img, zoom=0.1)
+    ab2 = AnnotationBbox(imagebox2, [0.6, 0.3], xybox=(-120., 80.), xycoords='data',
+                        boxcoords="offset points", pad=0.5)
+    ab2.set_gid('second_box')
+    ax.add_artist(ab2)
+    
+    fig.savefig("test_multiple.svg", format="svg")
+    
+    with open("test_multiple.svg", "r") as f:
+        content = f.read()
+        if 'id="first_box"' in content and 'id="second_box"' in content:
+            print("✓ Multiple GIDs test passed")
+        else:
+            print("✗ Multiple GIDs test failed")
+
+if __name__ == "__main__":
+    test_basic_gid()
+    test_no_gid()
+    test_none_gid()
+    test_multiple_gids()
+    print("All tests completed!")
\ No newline at end of file
diff --git a/test_multiple.svg b/test_multiple.svg
new file mode 100644
index 0000000000..527e5953e3
Binary files /dev/null and b/test_multiple.svg differ
diff --git a/test_no_gid.svg b/test_no_gid.svg
new file mode 100644
index 0000000000..a4f94cfa10
Binary files /dev/null and b/test_no_gid.svg differ
diff --git a/test_none_gid.svg b/test_none_gid.svg
new file mode 100644
index 0000000000..0248e6709a
Binary files /dev/null and b/test_none_gid.svg differ
diff --git a/test_plot.svg b/test_plot.svg
new file mode 100644
index 0000000000..0501ee3718
Binary files /dev/null and b/test_plot.svg differ