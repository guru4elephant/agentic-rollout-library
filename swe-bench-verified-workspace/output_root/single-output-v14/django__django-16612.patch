diff --git a/django/contrib/admin/sites.py b/django/contrib/admin/sites.py
index 61be31d890..2dfebf601a 100644
--- a/django/contrib/admin/sites.py
+++ b/django/contrib/admin/sites.py
@@ -453,7 +453,12 @@ class AdminSite:
                 pass
             else:
                 if getattr(match.func, "should_append_slash", True):
-                    return HttpResponsePermanentRedirect("%s/" % request.path)
+                    # Preserve query string in redirect
+                    query_string = request.META.get('QUERY_STRING', '')
+                    redirect_url = "%s/" % request.path
+                    if query_string:
+                        redirect_url += "?" + query_string
+                    return HttpResponsePermanentRedirect(redirect_url)
         raise Http404
 
     def _build_app_dict(self, request, label=None):
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..dd78e8b167
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,68 @@
+#!/usr/bin/env python3
+
+"""
+Script to reproduce the issue where AdminSite.catch_all_view() 
+drops query string in redirects when APPEND_SLASH = True
+"""
+
+import os
+import sys
+
+# Add the current directory to Python path
+sys.path.insert(0, '.')
+
+from django.conf import settings
+from django.contrib.admin.sites import AdminSite
+from django.http import HttpRequest
+from django.test import RequestFactory
+
+# Configure minimal settings
+settings.configure(
+    DEBUG=True,
+    SECRET_KEY='test-secret-key',
+    APPEND_SLASH=True,
+    ROOT_URLCONF='tests.urls',  # We'll use a simple URL config
+    INSTALLED_APPS=[
+        'django.contrib.admin',
+        'django.contrib.auth',
+        'django.contrib.contenttypes',
+    ],
+)
+
+# Create a simple URL pattern for testing
+from django.urls import path
+urlpatterns = [
+    path('admin/auth/foo/', lambda request: None, name='test-view'),
+]
+
+# Set up the URL config
+settings.ROOT_URLCONF = __name__
+
+def test_catch_all_view_with_query_string():
+    """Test that catch_all_view preserves query string in redirect"""
+    admin_site = AdminSite()
+    factory = RequestFactory()
+    
+    # Create a request with query string
+    request = factory.get('/admin/auth/foo?id=123')
+    request.urlconf = __name__  # Use our URL patterns
+    
+    print(f"Request path: {request.path}")
+    print(f"Request path_info: {request.path_info}")
+    print(f"Query string: {request.META.get('QUERY_STRING', '')}")
+    print(f"Full URL would be: {request.path}?{request.META.get('QUERY_STRING', '')}")
+    
+    # Call catch_all_view
+    try:
+        response = admin_site.catch_all_view(request, 'admin/auth/foo')
+        print(f"Redirect URL: {response.url}")
+        print(f"Expected: http://127.0.0.1:8000/admin/auth/foo/?id=123")
+        print(f"Actual: {response.url}")
+        print("SUCCESS: Query string preserved!" if 'id=123' in response.url else "FAIL: Query string dropped!")
+    except Http404:
+        print("404 raised - this is expected for this test setup")
+    except Exception as e:
+        print(f"Error: {e}")
+
+if __name__ == "__main__":
+    test_catch_all_view_with_query_string()
\ No newline at end of file
diff --git a/test_append_slash_false.py b/test_append_slash_false.py
new file mode 100644
index 0000000000..4031472776
--- /dev/null
+++ b/test_append_slash_false.py
@@ -0,0 +1,58 @@
+#!/usr/bin/env python3
+
+"""
+Test that the fix works correctly when APPEND_SLASH = False
+"""
+
+import os
+import sys
+
+# Add the current directory to Python path
+sys.path.insert(0, '.')
+
+from django.conf import settings
+from django.contrib.admin.sites import AdminSite
+from django.http import Http404
+from django.test import RequestFactory
+
+# Configure minimal settings with APPEND_SLASH = False
+settings.configure(
+    DEBUG=True,
+    SECRET_KEY='test-secret-key',
+    APPEND_SLASH=False,  # Test with APPEND_SLASH disabled
+    ROOT_URLCONF='tests.urls',
+    INSTALLED_APPS=[
+        'django.contrib.admin',
+        'django.contrib.auth',
+        'django.contrib.contenttypes',
+    ],
+)
+
+# Create a simple URL pattern for testing
+from django.urls import path
+urlpatterns = [
+    path('admin/auth/foo/', lambda request: None, name='test-view'),
+]
+
+# Set up the URL config
+settings.ROOT_URLCONF = __name__
+
+def test_append_slash_false():
+    """Test that 404 is raised when APPEND_SLASH = False"""
+    admin_site = AdminSite()
+    factory = RequestFactory()
+    
+    # Test case with query string but APPEND_SLASH = False
+    request = factory.get('/admin/auth/foo?id=123')
+    request.urlconf = __name__
+    
+    try:
+        response = admin_site.catch_all_view(request, 'admin/auth/foo')
+        print("✗ FAIL: Expected 404 but got response")
+    except Http404:
+        print("✓ PASS: 404 raised as expected when APPEND_SLASH = False")
+    except Exception as e:
+        print(f"✗ FAIL: Unexpected error: {e}")
+
+if __name__ == "__main__":
+    test_append_slash_false()
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..6cfa5f71da
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,75 @@
+#!/usr/bin/env python3
+
+"""
+Test edge cases for the query string fix in AdminSite.catch_all_view()
+"""
+
+import os
+import sys
+
+# Add the current directory to Python path
+sys.path.insert(0, '.')
+
+from django.conf import settings
+from django.contrib.admin.sites import AdminSite
+from django.http import HttpRequest
+from django.test import RequestFactory
+
+# Configure minimal settings
+settings.configure(
+    DEBUG=True,
+    SECRET_KEY='test-secret-key',
+    APPEND_SLASH=True,
+    ROOT_URLCONF='tests.urls',
+    INSTALLED_APPS=[
+        'django.contrib.admin',
+        'django.contrib.auth',
+        'django.contrib.contenttypes',
+    ],
+)
+
+# Create a simple URL pattern for testing
+from django.urls import path
+urlpatterns = [
+    path('admin/auth/foo/', lambda request: None, name='test-view'),
+]
+
+# Set up the URL config
+settings.ROOT_URLCONF = __name__
+
+def test_edge_cases():
+    """Test various edge cases for query string handling"""
+    admin_site = AdminSite()
+    factory = RequestFactory()
+    
+    test_cases = [
+        ('/admin/auth/foo?id=123', '/admin/auth/foo/?id=123'),
+        ('/admin/auth/foo?param1=value1&param2=value2', '/admin/auth/foo/?param1=value1&param2=value2'),
+        ('/admin/auth/foo', '/admin/auth/foo/'),  # No query string
+        ('/admin/auth/foo?', '/admin/auth/foo/?'),  # Empty query string
+        ('/admin/auth/foo?special=value%20with%20spaces', '/admin/auth/foo/?special=value%20with%20spaces'),
+    ]
+    
+    for original_url, expected_redirect in test_cases:
+        print(f"\nTesting: {original_url}")
+        print(f"Expected: {expected_redirect}")
+        
+        request = factory.get(original_url)
+        request.urlconf = __name__
+        
+        try:
+            response = admin_site.catch_all_view(request, 'admin/auth/foo')
+            actual_redirect = response.url
+            print(f"Actual: {actual_redirect}")
+            
+            if actual_redirect == expected_redirect:
+                print("✓ PASS")
+            else:
+                print("✗ FAIL")
+        except Http404:
+            print("404 raised (expected for some cases)")
+        except Exception as e:
+            print(f"Error: {e}")
+
+if __name__ == "__main__":
+    test_edge_cases()
\ No newline at end of file
diff --git a/test_final_verification.py b/test_final_verification.py
new file mode 100644
index 0000000000..e166150fd2
--- /dev/null
+++ b/test_final_verification.py
@@ -0,0 +1,102 @@
+#!/usr/bin/env python3
+
+"""
+Final verification test for the query string fix in AdminSite.catch_all_view()
+"""
+
+import os
+import sys
+
+# Add the current directory to Python path
+sys.path.insert(0, '.')
+
+from django.conf import settings
+from django.contrib.admin.sites import AdminSite
+from django.http import HttpRequest, HttpResponsePermanentRedirect
+from django.test import RequestFactory
+
+# Configure minimal settings
+settings.configure(
+    DEBUG=True,
+    SECRET_KEY='test-secret-key',
+    APPEND_SLASH=True,
+    ROOT_URLCONF='tests.urls',
+    INSTALLED_APPS=[
+        'django.contrib.admin',
+        'django.contrib.auth',
+        'django.contrib.contenttypes',
+    ],
+)
+
+# Create a simple URL pattern for testing
+from django.urls import path, resolve
+urlpatterns = [
+    path('admin/auth/foo/', lambda request: None, name='test-view'),
+]
+
+# Set up the URL config
+settings.ROOT_URLCONF = __name__
+
+def test_query_string_preservation():
+    """Test that query strings are preserved in redirects"""
+    admin_site = AdminSite()
+    factory = RequestFactory()
+    
+    # Test case from the GitHub issue
+    request = factory.get('/admin/auth/foo?id=123')
+    request.urlconf = __name__
+    
+    response = admin_site.catch_all_view(request, 'admin/auth/foo')
+    
+    assert isinstance(response, HttpResponsePermanentRedirect)
+    assert response.url == '/admin/auth/foo/?id=123'
+    print("✓ Query string preservation test passed")
+
+def test_no_query_string():
+    """Test that redirect works correctly without query string"""
+    admin_site = AdminSite()
+    factory = RequestFactory()
+    
+    request = factory.get('/admin/auth/foo')
+    request.urlconf = __name__
+    
+    response = admin_site.catch_all_view(request, 'admin/auth/foo')
+    
+    assert isinstance(response, HttpResponsePermanentRedirect)
+    assert response.url == '/admin/auth/foo/'
+    print("✓ No query string test passed")
+
+def test_multiple_query_params():
+    """Test that multiple query parameters are preserved"""
+    admin_site = AdminSite()
+    factory = RequestFactory()
+    
+    request = factory.get('/admin/auth/foo?param1=value1&param2=value2')
+    request.urlconf = __name__
+    
+    response = admin_site.catch_all_view(request, 'admin/auth/foo')
+    
+    assert isinstance(response, HttpResponsePermanentRedirect)
+    assert response.url == '/admin/auth/foo/?param1=value1&param2=value2'
+    print("✓ Multiple query parameters test passed")
+
+def test_url_encoded_query():
+    """Test that URL-encoded query strings are preserved"""
+    admin_site = AdminSite()
+    factory = RequestFactory()
+    
+    request = factory.get('/admin/auth/foo?special=value%20with%20spaces')
+    request.urlconf = __name__
+    
+    response = admin_site.catch_all_view(request, 'admin/auth/foo')
+    
+    assert isinstance(response, HttpResponsePermanentRedirect)
+    assert response.url == '/admin/auth/foo/?special=value%20with%20spaces'
+    print("✓ URL-encoded query string test passed")
+
+if __name__ == "__main__":
+    test_query_string_preservation()
+    test_no_query_string()
+    test_multiple_query_params()
+    test_url_encoded_query()
+    print("\n🎉 All tests passed! The fix is working correctly.")
\ No newline at end of file