diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..8214a82619
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,21 @@
+#!/usr/bin/env python3
+
+from sympy import Min, Max, oo
+
+print("Testing current behavior of Min() and Max() with no arguments...")
+
+try:
+    result = Min()
+    print(f"Min() returned: {result}")
+except ValueError as e:
+    print(f"Min() raised ValueError: {e}")
+
+try:
+    result = Max()
+    print(f"Max() returned: {result}")
+except ValueError as e:
+    print(f"Max() raised ValueError: {e}")
+
+print(f"\nExpected results:")
+print(f"Min() should return: {oo}")
+print(f"Max() should return: {-oo}")
\ No newline at end of file
diff --git a/sympy/functions/elementary/miscellaneous.py b/sympy/functions/elementary/miscellaneous.py
index 5f9fe73c5c..f4294571f8 100644
--- a/sympy/functions/elementary/miscellaneous.py
+++ b/sympy/functions/elementary/miscellaneous.py
@@ -340,7 +340,7 @@ def real_root(arg, n=None, evaluate=None):
 class MinMaxBase(Expr, LatticeOp):
     def __new__(cls, *args, **assumptions):
         if not args:
-            raise ValueError("The Max/Min functions must have arguments.")
+            return cls.identity
 
         args = (sympify(arg) for arg in args)
 
diff --git a/sympy/functions/elementary/tests/test_miscellaneous.py b/sympy/functions/elementary/tests/test_miscellaneous.py
index 00dc946005..9181c64bce 100644
--- a/sympy/functions/elementary/tests/test_miscellaneous.py
+++ b/sympy/functions/elementary/tests/test_miscellaneous.py
@@ -85,7 +85,7 @@ def test_Min():
     assert Min(p, p_).func is Min
 
     # lists
-    raises(ValueError, lambda: Min())
+    assert Min() == oo
     assert Min(x, y) == Min(y, x)
     assert Min(x, y, z) == Min(z, y, x)
     assert Min(x, Min(y, z)) == Min(z, y, x)
@@ -156,7 +156,7 @@ def test_Max():
 
     # lists
 
-    raises(ValueError, lambda: Max())
+    assert Max() == -oo
     assert Max(x, y) == Max(y, x)
     assert Max(x, y, z) == Max(z, y, x)
     assert Max(x, Max(y, z)) == Max(z, y, x)
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..066afe396b
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,40 @@
+#!/usr/bin/env python3
+
+from sympy import Min, Max, oo, Symbol
+
+print("Testing edge cases for Min() and Max()...")
+
+# Test 1: Empty arguments
+print("\n1. Testing empty arguments:")
+print(f"Min() = {Min()}")
+print(f"Max() = {Max()}")
+
+# Test 2: Single argument
+print("\n2. Testing single arguments:")
+print(f"Min(5) = {Min(5)}")
+print(f"Max(5) = {Max(5)}")
+
+# Test 3: Multiple arguments
+print("\n3. Testing multiple arguments:")
+print(f"Min(1, 2, 3) = {Min(1, 2, 3)}")
+print(f"Max(1, 2, 3) = {Max(1, 2, 3)}")
+
+# Test 4: With symbols
+print("\n4. Testing with symbols:")
+x = Symbol('x')
+print(f"Min(x) = {Min(x)}")
+print(f"Max(x) = {Max(x)}")
+
+# Test 5: With infinity
+print("\n5. Testing with infinity:")
+print(f"Min(oo) = {Min(oo)}")
+print(f"Max(oo) = {Max(oo)}")
+print(f"Min(-oo) = {Min(-oo)}")
+print(f"Max(-oo) = {Max(-oo)}")
+
+# Test 6: Mixed arguments
+print("\n6. Testing mixed arguments:")
+print(f"Min(1, x, oo) = {Min(1, x, oo)}")
+print(f"Max(1, x, -oo) = {Max(1, x, -oo)}")
+
+print("\nAll tests completed successfully!")
\ No newline at end of file