diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 00000000..b3264174
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,21 @@
+#!/usr/bin/env python3
+
+import xarray as xr
+import sys
+
+# Reproduce the issue from the GitHub issue
+print("Reproducing the issue...")
+try:
+    ds = xr.Dataset(coords={"a": ("x", [1, 2, 3]), "b": ("x", ['a', 'b', 'c'])})
+    print("Dataset created successfully")
+    indexed_ds = ds.set_index(z=['a', 'b'])
+    print("Index set successfully")
+    result = indexed_ds.reset_index("z", drop=True)
+    print("Index reset successfully")
+    print("Result:", result)
+    sys.exit(0)
+except Exception as e:
+    print(f"Error occurred: {type(e).__name__}: {e}")
+    import traceback
+    traceback.print_exc()
+    sys.exit(1)
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 00000000..4f6d525a
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,49 @@
+#!/usr/bin/env python3
+
+import xarray as xr
+import numpy as np
+
+def test_edge_cases():
+    """Test edge cases for the DataVariables fix"""
+    print("Testing edge cases...")
+    
+    # Test 1: Empty dataset
+    empty_ds = xr.Dataset()
+    print(f"Empty dataset data_vars length: {len(empty_ds.data_vars)}")
+    
+    # Test 2: Dataset with only coordinates
+    coord_only_ds = xr.Dataset(coords={"a": ("x", [1, 2, 3])})
+    print(f"Coord-only dataset data_vars length: {len(coord_only_ds.data_vars)}")
+    
+    # Test 3: Dataset with data variables only
+    data_only_ds = xr.Dataset({"temp": ("x", [20, 21, 22])})
+    print(f"Data-only dataset data_vars length: {len(data_only_ds.data_vars)}")
+    
+    # Test 4: Mixed dataset
+    mixed_ds = xr.Dataset(
+        {"temp": ("x", [20, 21, 22])},
+        coords={"a": ("x", [1, 2, 3])}
+    )
+    print(f"Mixed dataset data_vars length: {len(mixed_ds.data_vars)}")
+    
+    # Test 5: Complex index scenario (original issue)
+    complex_ds = xr.Dataset(
+        {"temp": ("x", [20, 21, 22])},
+        coords={"a": ("x", [1, 2, 3]), "b": ("x", ['a', 'b', 'c'])}
+    )
+    result = complex_ds.set_index(z=['a', 'b']).reset_index("z", drop=True)
+    print(f"Complex index scenario data_vars length: {len(result.data_vars)}")
+    
+    # Test 6: Verify iteration works correctly
+    print("Testing iteration in edge cases:")
+    for ds, name in [(empty_ds, "empty"), (coord_only_ds, "coord-only"), 
+                     (data_only_ds, "data-only"), (mixed_ds, "mixed")]:
+        count = 0
+        for key in ds.data_vars:
+            count += 1
+        print(f"  {name}: {count} items iterated, len() = {len(ds.data_vars)}")
+    
+    print("All edge case tests passed!")
+
+if __name__ == "__main__":
+    test_edge_cases()
\ No newline at end of file
diff --git a/test_fix.py b/test_fix.py
new file mode 100644
index 00000000..26c18545
--- /dev/null
+++ b/test_fix.py
@@ -0,0 +1,47 @@
+#!/usr/bin/env python3
+
+import xarray as xr
+import numpy as np
+
+def test_basic_functionality():
+    """Test basic dataset functionality after the fix"""
+    print("Testing basic functionality...")
+    
+    # Test 1: Original issue reproduction
+    ds = xr.Dataset(coords={"a": ("x", [1, 2, 3]), "b": ("x", ['a', 'b', 'c'])})
+    result = ds.set_index(z=['a', 'b']).reset_index("z", drop=True)
+    print("✓ Original issue fixed")
+    
+    # Test 2: Check that data_vars length is correct
+    print(f"Data variables count: {len(result.data_vars)}")
+    print(f"Data variables: {list(result.data_vars.keys())}")
+    
+    # Test 3: Test with actual data variables
+    ds_with_data = xr.Dataset(
+        {"temp": ("x", [20, 21, 22])},
+        coords={"a": ("x", [1, 2, 3]), "b": ("x", ['a', 'b', 'c'])}
+    )
+    result2 = ds_with_data.set_index(z=['a', 'b']).reset_index("z", drop=True)
+    print(f"Data variables count with data: {len(result2.data_vars)}")
+    print(f"Data variables with data: {list(result2.data_vars.keys())}")
+    
+    # Test 4: Test repr works
+    print("Repr test:")
+    print(repr(result))
+    print("✓ Repr works correctly")
+    
+    # Test 5: Test iteration works
+    print("Iteration test:")
+    for key in result.data_vars:
+        print(f"  {key}: {result.data_vars[key]}")
+    print("✓ Iteration works correctly")
+    
+    # Test 6: Test contains works
+    print("Contains test:")
+    print(f"'temp' in data_vars: {'temp' in result.data_vars}")
+    print(f"'nonexistent' in data_vars: {'nonexistent' in result.data_vars}")
+    print("✓ Contains works correctly")
+
+if __name__ == "__main__":
+    test_basic_functionality()
+    print("All tests passed!")
\ No newline at end of file
diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py
index 620f32f8..db5d5717 100644
--- a/xarray/core/dataset.py
+++ b/xarray/core/dataset.py
@@ -365,7 +365,9 @@ class DataVariables(Mapping[Any, "DataArray"]):
         )
 
     def __len__(self) -> int:
-        return len(self._dataset._variables) - len(self._dataset._coord_names)
+        # Count variables that are not coordinates
+        # Some coordinate names might not exist in _variables after index refactor
+        return sum(1 for key in self._dataset._variables if key not in self._dataset._coord_names)
 
     def __contains__(self, key: Hashable) -> bool:
         return key in self._dataset._variables and key not in self._dataset._coord_names