diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..2949865cd2
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,14 @@
+#!/usr/bin/env python3
+"""Script to reproduce the issue with simplify(cos(x)**I)"""
+
+from sympy import *
+x = Symbol('x')
+
+print("Testing simplify(cos(x)**I)...")
+try:
+    result = simplify(cos(x)**I)
+    print(f"Success: {result}")
+except Exception as e:
+    print(f"Error: {type(e).__name__}: {e}")
+    import traceback
+    traceback.print_exc()
\ No newline at end of file
diff --git a/sympy/simplify/fu.py b/sympy/simplify/fu.py
index ad1130ef96..3e66a1a9aa 100644
--- a/sympy/simplify/fu.py
+++ b/sympy/simplify/fu.py
@@ -501,6 +501,9 @@ def _f(rv):
         if not (rv.is_Pow and rv.base.func == f):
             return rv
 
+        # Skip complex exponents as they cannot be compared with real numbers
+        if not rv.exp.is_real:
+            return rv
         if (rv.exp < 0) == True:
             return rv
         if (rv.exp > max) == True:
diff --git a/test_complex_cases.py b/test_complex_cases.py
new file mode 100644
index 0000000000..fa142c43b5
--- /dev/null
+++ b/test_complex_cases.py
@@ -0,0 +1,21 @@
+#!/usr/bin/env python3
+"""Test more complex cases involving mixed expressions"""
+
+from sympy import *
+x = Symbol('x')
+
+# Test cases with mixed real and complex expressions
+test_cases = [
+    (cos(x)**I + sin(x)**2),
+    (cos(x)**(1 + I) * sin(x)**3),
+    (cos(x)**I / sin(x)**2),
+    (cos(x)**2 + cos(x)**I),
+]
+
+print("Testing mixed real and complex expressions...")
+for i, expr in enumerate(test_cases):
+    try:
+        result = simplify(expr)
+        print(f"Case {i+1}: {expr} -> {result}")
+    except Exception as e:
+        print(f"Case {i+1}: {expr} -> ERROR: {type(e).__name__}: {e}")
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..59c5e97102
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,24 @@
+#!/usr/bin/env python3
+"""Test edge cases for the complex exponent fix"""
+
+from sympy import *
+x = Symbol('x')
+
+test_cases = [
+    cos(x)**I,
+    sin(x)**(2*I),
+    cos(x)**(1 + I),
+    cos(x)**(-I),
+    cos(x)**(I/2),
+    cos(x)**2,  # Real exponent
+    cos(x)**(-1),  # Negative real exponent
+    cos(x)**0,  # Zero exponent
+]
+
+print("Testing various edge cases...")
+for i, expr in enumerate(test_cases):
+    try:
+        result = simplify(expr)
+        print(f"Case {i+1}: {expr} -> {result}")
+    except Exception as e:
+        print(f"Case {i+1}: {expr} -> ERROR: {type(e).__name__}: {e}")
\ No newline at end of file
diff --git a/test_real_exponents.py b/test_real_exponents.py
new file mode 100644
index 0000000000..82f6f86a31
--- /dev/null
+++ b/test_real_exponents.py
@@ -0,0 +1,21 @@
+#!/usr/bin/env python3
+"""Test that real exponents still get simplified properly"""
+
+from sympy import *
+x = Symbol('x')
+
+# Test cases that should still be simplified
+test_cases = [
+    sin(x)**4,
+    cos(x)**6,
+    sin(x)**2,
+    cos(x)**2,
+]
+
+print("Testing that real exponents still get simplified...")
+for i, expr in enumerate(test_cases):
+    try:
+        result = simplify(expr)
+        print(f"Case {i+1}: {expr} -> {result}")
+    except Exception as e:
+        print(f"Case {i+1}: {expr} -> ERROR: {type(e).__name__}: {e}")
\ No newline at end of file