diff --git a/astropy/timeseries/core.py b/astropy/timeseries/core.py
index c279f35f87..fb776a72d8 100644
--- a/astropy/timeseries/core.py
+++ b/astropy/timeseries/core.py
@@ -74,6 +74,14 @@ class BaseTimeSeries(QTable):
                                  "as the first column{} but time series has no columns"
                                  .format(self.__class__.__name__, required_columns[0], plural))
 
+            # First check if all required columns are present
+            missing_columns = [col for col in required_columns if col not in self.colnames]
+            if missing_columns:
+                missing_str = "', '".join(missing_columns)
+                plural_missing = 's' if len(missing_columns) > 1 else ''
+                raise ValueError("{} object is invalid - missing required column{}: '{}'"
+                                 .format(self.__class__.__name__, plural_missing, missing_str))
+
             elif self.colnames[:len(required_columns)] != required_columns:
 
                 raise ValueError("{} object is invalid - expected '{}' "
diff --git a/pyproject.toml b/pyproject.toml
index 32ebe645ce..6ebe80c7a6 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -1,5 +1,5 @@
 [build-system]
-requires = ["setuptools",
+requires = ["setuptools==68.0.0",
             "setuptools_scm>=6.2",
             "wheel",
             "cython==0.29.22",
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..d3a5716bf8
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,8 @@
+from astropy.time import Time
+from astropy.timeseries import TimeSeries
+import numpy as np
+
+time = Time(np.arange(100000, 100003), format='jd')
+ts = TimeSeries(time=time, data={"flux": [99.9, 99.8, 99.7]})
+ts._required_columns = ["time", "flux"]                                   
+ts.remove_column("flux")
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..5f4ec94d1b
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,42 @@
+from astropy.time import Time
+from astropy.timeseries import TimeSeries
+import numpy as np
+
+# Test case 1: Multiple missing required columns
+print("Test 1: Multiple missing required columns")
+time = Time(np.arange(100000, 100003), format='jd')
+ts = TimeSeries(time=time, data={"flux": [99.9, 99.8, 99.7], "error": [0.1, 0.2, 0.3]})
+ts._required_columns = ["time", "flux", "error"]
+try:
+    ts.remove_columns(["flux", "error"])
+except ValueError as e:
+    print("Error:", e)
+
+# Test case 2: No required columns (should not raise error)
+print("\nTest 2: No required columns")
+ts2 = TimeSeries(time=time, data={"flux": [99.9, 99.8, 99.7]})
+ts2._required_columns = None
+try:
+    ts2.remove_column("flux")
+    print("Success: No error raised when no required columns")
+except ValueError as e:
+    print("Unexpected error:", e)
+
+# Test case 3: Empty table with required columns
+print("\nTest 3: Empty table with required columns")
+ts3 = TimeSeries()
+ts3._required_columns = ["time", "flux"]
+try:
+    ts3._check_required_columns()
+except ValueError as e:
+    print("Error:", e)
+
+# Test case 4: Wrong order of columns
+print("\nTest 4: Wrong order of columns")
+time = Time(np.arange(100000, 100003), format='jd')
+ts4 = TimeSeries(time=time, data={"flux": [99.9, 99.8, 99.7]})
+ts4._required_columns = ["flux", "time"]  # Wrong order
+try:
+    ts4._check_required_columns()
+except ValueError as e:
+    print("Error:", e)
\ No newline at end of file
diff --git a/test_empty_table.py b/test_empty_table.py
new file mode 100644
index 0000000000..b6ee745f84
--- /dev/null
+++ b/test_empty_table.py
@@ -0,0 +1,16 @@
+from astropy.timeseries import TimeSeries
+
+# Test case: Empty table with required columns
+print("Test: Empty table with required columns")
+ts = TimeSeries()
+ts._required_columns = ["time", "flux"]
+try:
+    ts._check_required_columns()
+    print("No error raised")
+except ValueError as e:
+    print("Error:", e)
+
+# Check the state of the empty table
+print("Table columns:", ts.colnames)
+print("Required columns:", ts._required_columns)
+print("Table is empty:", len(ts.colnames) == 0)
\ No newline at end of file
diff --git a/test_empty_table_detailed.py b/test_empty_table_detailed.py
new file mode 100644
index 0000000000..1a21d80b1a
--- /dev/null
+++ b/test_empty_table_detailed.py
@@ -0,0 +1,17 @@
+from astropy.timeseries import TimeSeries
+
+# Test case: Empty table with required columns
+print("Test: Empty table with required columns")
+ts = TimeSeries()
+ts._required_columns = ["time", "flux"]
+print("_required_columns_relax:", ts._required_columns_relax)
+print("_required_columns_enabled:", ts._required_columns_enabled)
+print("len(colnames):", len(ts.colnames))
+print("not _required_columns_relax:", not ts._required_columns_relax)
+print("not _required_columns_relax and len(colnames) == 0:", not ts._required_columns_relax and len(ts.colnames) == 0)
+
+try:
+    ts._check_required_columns()
+    print("No error raised")
+except ValueError as e:
+    print("Error:", e)
\ No newline at end of file
diff --git a/test_validation.py b/test_validation.py
new file mode 100644
index 0000000000..55eb2440e3
--- /dev/null
+++ b/test_validation.py
@@ -0,0 +1,20 @@
+from astropy.time import Time
+from astropy.timeseries import TimeSeries
+import numpy as np
+
+time = Time(np.arange(100000, 100003), format='jd')
+ts = TimeSeries(time=time, data={"flux": [99.9, 99.8, 99.7]})
+ts._required_columns = ["time", "flux"]
+
+print("Initial columns:", ts.colnames)
+print("Required columns:", ts._required_columns)
+print("First columns vs required:", ts.colnames[:len(ts._required_columns)] == ts._required_columns)
+
+# Try removing flux
+print("\nTrying to remove flux...")
+try:
+    ts.remove_column("flux")
+except ValueError as e:
+    print("Error:", e)
+    print("Current columns:", ts.colnames)
+    print("First columns vs required:", ts.colnames[:len(ts._required_columns)] == ts._required_columns)
\ No newline at end of file