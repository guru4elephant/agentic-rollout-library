diff --git a/django/contrib/admin/templatetags/admin_modify.py b/django/contrib/admin/templatetags/admin_modify.py
index 9df4b7aadb..5b742af46a 100644
--- a/django/contrib/admin/templatetags/admin_modify.py
+++ b/django/contrib/admin/templatetags/admin_modify.py
@@ -100,6 +100,7 @@ def submit_row(context):
                 and context.get("show_delete", True)
             ),
             "show_save_as_new": not is_popup
+            and has_add_permission
             and has_change_permission
             and change
             and save_as,
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..045c0247dd
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,81 @@
+#!/usr/bin/env python3
+"""
+Script to reproduce the issue with show_save_as_new permission check.
+The issue is that show_save_as_new should require both has_change_permission AND has_add_permission,
+but currently only checks has_change_permission.
+"""
+
+from django.contrib.admin.templatetags.admin_modify import submit_row
+from django.template import Context
+
+def test_show_save_as_new_permissions():
+    print("Testing show_save_as_new permission logic...")
+    
+    # Test case 1: User has change permission but no add permission
+    context1 = {
+        "add": False,
+        "change": True,
+        "is_popup": False,
+        "save_as": True,
+        "has_add_permission": False,  # No add permission
+        "has_change_permission": True,  # Has change permission
+        "has_view_permission": True,
+        "has_delete_permission": True,
+        "has_editable_inline_admin_formsets": False,
+        "show_save": True,
+        "show_save_and_add_another": True,
+        "show_save_and_continue": True,
+    }
+    
+    result1 = submit_row(context1)
+    print(f"Case 1 - Has change perm but no add perm: show_save_as_new = {result1['show_save_as_new']}")
+    print("Expected: False (should not show save as new without add permission)")
+    print(f"Actual: {result1['show_save_as_new']}")
+    print()
+    
+    # Test case 2: User has both change and add permission
+    context2 = {
+        "add": False,
+        "change": True,
+        "is_popup": False,
+        "save_as": True,
+        "has_add_permission": True,  # Has add permission
+        "has_change_permission": True,  # Has change permission
+        "has_view_permission": True,
+        "has_delete_permission": True,
+        "has_editable_inline_admin_formsets": False,
+        "show_save": True,
+        "show_save_and_add_another": True,
+        "show_save_and_continue": True,
+    }
+    
+    result2 = submit_row(context2)
+    print(f"Case 2 - Has both change and add perm: show_save_as_new = {result2['show_save_as_new']}")
+    print("Expected: True (should show save as new with both permissions)")
+    print(f"Actual: {result2['show_save_as_new']}")
+    print()
+    
+    # Test case 3: User has add permission but no change permission
+    context3 = {
+        "add": False,
+        "change": True,
+        "is_popup": False,
+        "save_as": True,
+        "has_add_permission": True,  # Has add permission
+        "has_change_permission": False,  # No change permission
+        "has_view_permission": True,
+        "has_delete_permission": True,
+        "has_editable_inline_admin_formsets": False,
+        "show_save": True,
+        "show_save_and_add_another": True,
+        "show_save_and_continue": True,
+    }
+    
+    result3 = submit_row(context3)
+    print(f"Case 3 - Has add perm but no change perm: show_save_as_new = {result3['show_save_as_new']}")
+    print("Expected: False (should not show save as new without change permission)")
+    print(f"Actual: {result3['show_save_as_new']}")
+    print()
+
+if __name__ == "__main__":
+    test_show_save_as_new_permissions()
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..8fbc95e81c
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,122 @@
+#!/usr/bin/env python3
+"""
+Comprehensive test to ensure the fix handles all edge cases correctly.
+"""
+
+from django.contrib.admin.templatetags.admin_modify import submit_row
+
+def test_edge_cases():
+    print("Testing edge cases for show_save_as_new permission logic...")
+    
+    # Test cases with different combinations of permissions and conditions
+    test_cases = [
+        {
+            "name": "No permissions, should not show",
+            "context": {
+                "add": False,
+                "change": True,
+                "is_popup": False,
+                "save_as": True,
+                "has_add_permission": False,
+                "has_change_permission": False,
+                "has_view_permission": True,
+                "has_delete_permission": True,
+                "has_editable_inline_admin_formsets": False,
+                "show_save": True,
+                "show_save_and_add_another": True,
+                "show_save_and_continue": True,
+            },
+            "expected": False
+        },
+        {
+            "name": "Popup mode, should not show",
+            "context": {
+                "add": False,
+                "change": True,
+                "is_popup": True,  # Popup mode
+                "save_as": True,
+                "has_add_permission": True,
+                "has_change_permission": True,
+                "has_view_permission": True,
+                "has_delete_permission": True,
+                "has_editable_inline_admin_formsets": False,
+                "show_save": True,
+                "show_save_and_add_another": True,
+                "show_save_and_continue": True,
+            },
+            "expected": False
+        },
+        {
+            "name": "Not in change mode, should not show",
+            "context": {
+                "add": True,  # Add mode, not change
+                "change": False,
+                "is_popup": False,
+                "save_as": True,
+                "has_add_permission": True,
+                "has_change_permission": True,
+                "has_view_permission": True,
+                "has_delete_permission": True,
+                "has_editable_inline_admin_formsets": False,
+                "show_save": True,
+                "show_save_and_add_another": True,
+                "show_save_and_continue": True,
+            },
+            "expected": False
+        },
+        {
+            "name": "Save_as disabled, should not show",
+            "context": {
+                "add": False,
+                "change": True,
+                "is_popup": False,
+                "save_as": False,  # Save_as disabled
+                "has_add_permission": True,
+                "has_change_permission": True,
+                "has_view_permission": True,
+                "has_delete_permission": True,
+                "has_editable_inline_admin_formsets": False,
+                "show_save": True,
+                "show_save_and_add_another": True,
+                "show_save_and_continue": True,
+            },
+            "expected": False
+        },
+        {
+            "name": "Ideal case - all conditions met, should show",
+            "context": {
+                "add": False,
+                "change": True,
+                "is_popup": False,
+                "save_as": True,
+                "has_add_permission": True,
+                "has_change_permission": True,
+                "has_view_permission": True,
+                "has_delete_permission": True,
+                "has_editable_inline_admin_formsets": False,
+                "show_save": True,
+                "show_save_and_add_another": True,
+                "show_save_and_continue": True,
+            },
+            "expected": True
+        }
+    ]
+    
+    all_passed = True
+    for i, test_case in enumerate(test_cases, 1):
+        result = submit_row(test_case["context"])
+        actual = result["show_save_as_new"]
+        passed = actual == test_case["expected"]
+        
+        print(f"Test {i}: {test_case['name']}")
+        print(f"  Expected: {test_case['expected']}, Actual: {actual}, {'PASS' if passed else 'FAIL'}")
+        
+        if not passed:
+            all_passed = False
+            print(f"  Context: {test_case['context']}")
+        print()
+    
+    print(f"Overall result: {'ALL TESTS PASSED' if all_passed else 'SOME TESTS FAILED'}")
+
+if __name__ == "__main__":
+    test_edge_cases()
\ No newline at end of file