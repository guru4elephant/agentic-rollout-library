diff --git a/django/contrib/sitemaps/__init__.py b/django/contrib/sitemaps/__init__.py
index 27756d9d96..b40ad806ed 100644
--- a/django/contrib/sitemaps/__init__.py
+++ b/django/contrib/sitemaps/__init__.py
@@ -168,7 +168,7 @@ class Sitemap:
         if callable(self.lastmod):
             try:
                 return max([self.lastmod(item) for item in self.items()])
-            except TypeError:
+            except (TypeError, ValueError):
                 return None
         else:
             return self.lastmod
diff --git a/final_test.py b/final_test.py
new file mode 100644
index 0000000000..5e5e0c3de4
--- /dev/null
+++ b/final_test.py
@@ -0,0 +1,91 @@
+#!/usr/bin/env python3
+"""
+Final comprehensive test to verify the sitemap issue is fixed.
+"""
+
+import django
+from django.conf import settings
+
+# Configure minimal Django settings
+settings.configure(
+    DEBUG=True,
+    SECRET_KEY='test-key',
+    INSTALLED_APPS=[
+        'django.contrib.sitemaps',
+    ],
+    USE_TZ=True,
+)
+django.setup()
+
+from django.contrib.sitemaps import Sitemap
+
+class EmptySitemapWithCallableLastmod(Sitemap):
+    """Sitemap that reproduces the original issue"""
+    
+    def items(self):
+        return []  # Empty list - this causes the ValueError
+    
+    def lastmod(self, item):
+        return "2023-01-01"  # Callable lastmod
+
+def test_original_issue():
+    """Test that the original ValueError issue is fixed"""
+    print("Testing the original issue...")
+    
+    sitemap = EmptySitemapWithCallableLastmod()
+    
+    # Before our fix, this would raise ValueError: max() arg is an empty sequence
+    try:
+        result = sitemap.get_latest_lastmod()
+        print(f"‚úì get_latest_lastmod() returned: {result}")
+        print("‚úì No ValueError raised - issue is fixed!")
+        return True
+    except ValueError as e:
+        print(f"‚úó ValueError still occurs: {e}")
+        return False
+
+def test_other_scenarios():
+    """Test other scenarios to ensure we didn't break anything"""
+    print("\nTesting other scenarios...")
+    
+    # Test 1: Sitemap without lastmod attribute
+    class NoLastmodSitemap(Sitemap):
+        def items(self):
+            return []
+    
+    sitemap1 = NoLastmodSitemap()
+    result1 = sitemap1.get_latest_lastmod()
+    print(f"‚úì No lastmod attribute: {result1}")
+    
+    # Test 2: Sitemap with non-callable lastmod
+    class NonCallableLastmodSitemap(Sitemap):
+        def items(self):
+            return []
+        lastmod = "2023-01-01"
+    
+    sitemap2 = NonCallableLastmodSitemap()
+    result2 = sitemap2.get_latest_lastmod()
+    print(f"‚úì Non-callable lastmod: {result2}")
+    
+    # Test 3: Sitemap with items and callable lastmod (normal case)
+    class NormalSitemap(Sitemap):
+        def items(self):
+            return ["item1", "item2"]
+        
+        def lastmod(self, item):
+            return "2023-01-01"
+    
+    sitemap3 = NormalSitemap()
+    result3 = sitemap3.get_latest_lastmod()
+    print(f"‚úì Normal case with items: {result3}")
+    
+    return True
+
+if __name__ == "__main__":
+    success1 = test_original_issue()
+    success2 = test_other_scenarios()
+    
+    if success1 and success2:
+        print("\nüéâ All tests passed! The issue has been successfully fixed.")
+    else:
+        print("\n‚ùå Some tests failed.")
\ No newline at end of file
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..8552ae3880
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,36 @@
+#!/usr/bin/env python3
+"""
+Script to reproduce the sitemap issue with empty items and callable lastmod.
+"""
+
+from django.contrib.sitemaps import Sitemap
+
+class EmptySitemap(Sitemap):
+    """A sitemap with no items but a callable lastmod method"""
+    
+    def items(self):
+        """Return empty list - no items"""
+        return []
+    
+    def lastmod(self, item):
+        """Callable lastmod method"""
+        return "2023-01-01"  # Return some date
+
+def test_sitemap_issue():
+    """Test the sitemap issue"""
+    sitemap = EmptySitemap()
+    
+    print("Testing sitemap with empty items and callable lastmod...")
+    print(f"Items: {sitemap.items()}")
+    print(f"Has lastmod attribute: {hasattr(sitemap, 'lastmod')}")
+    print(f"lastmod is callable: {callable(sitemap.lastmod)}")
+    
+    try:
+        latest_lastmod = sitemap.get_latest_lastmod()
+        print(f"get_latest_lastmod() returned: {latest_lastmod}")
+    except ValueError as e:
+        print(f"ValueError occurred: {e}")
+        print("This confirms the bug!")
+
+if __name__ == "__main__":
+    test_sitemap_issue()
\ No newline at end of file
diff --git a/test_basic_functionality.py b/test_basic_functionality.py
new file mode 100644
index 0000000000..bbadac4824
--- /dev/null
+++ b/test_basic_functionality.py
@@ -0,0 +1,53 @@
+#!/usr/bin/env python3
+"""
+Test basic sitemap functionality to ensure our fix doesn't break anything.
+"""
+
+import django
+from django.conf import settings
+
+# Configure minimal Django settings
+settings.configure(
+    DEBUG=True,
+    SECRET_KEY='test-key',
+    INSTALLED_APPS=[
+        'django.contrib.sitemaps',
+        'django.contrib.sites',
+    ],
+    USE_TZ=True,
+    SITE_ID=1,
+)
+django.setup()
+
+from django.contrib.sitemaps import Sitemap
+
+class BasicSitemap(Sitemap):
+    """Basic sitemap with items and callable lastmod"""
+    
+    def items(self):
+        return ["item1", "item2", "item3"]
+    
+    def lastmod(self, item):
+        return "2023-01-01"
+
+def test_basic_functionality():
+    """Test that basic sitemap functionality still works"""
+    print("Testing basic sitemap functionality...")
+    
+    sitemap = BasicSitemap()
+    
+    # Test items()
+    items = sitemap.items()
+    print(f"Items: {items}")
+    assert len(items) == 3, "Should have 3 items"
+    
+    # Test get_latest_lastmod() with non-empty items
+    latest_lastmod = sitemap.get_latest_lastmod()
+    print(f"Latest lastmod: {latest_lastmod}")
+    assert latest_lastmod == "2023-01-01", "Should return the lastmod date"
+    
+    print("‚úì Basic functionality test passed!")
+    return True
+
+if __name__ == "__main__":
+    test_basic_functionality()
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..3ec0dd5e3b
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,78 @@
+#!/usr/bin/env python3
+"""
+Test edge cases for the sitemap fix.
+"""
+
+from django.contrib.sitemaps import Sitemap
+
+class EmptySitemapWithCallableLastmod(Sitemap):
+    """Sitemap with empty items and callable lastmod"""
+    
+    def items(self):
+        return []
+    
+    def lastmod(self, item):
+        return "2023-01-01"
+
+class EmptySitemapWithoutLastmod(Sitemap):
+    """Sitemap with empty items and no lastmod attribute"""
+    
+    def items(self):
+        return []
+
+class NonEmptySitemapWithCallableLastmod(Sitemap):
+    """Sitemap with items and callable lastmod"""
+    
+    def items(self):
+        return ["item1", "item2"]
+    
+    def lastmod(self, item):
+        return "2023-01-01"
+
+class NonEmptySitemapWithNonCallableLastmod(Sitemap):
+    """Sitemap with items and non-callable lastmod"""
+    
+    def items(self):
+        return ["item1", "item2"]
+    
+    lastmod = "2023-01-01"
+
+def test_edge_cases():
+    """Test various edge cases"""
+    
+    print("Testing edge cases...")
+    
+    # Test 1: Empty items with callable lastmod
+    sitemap1 = EmptySitemapWithCallableLastmod()
+    result1 = sitemap1.get_latest_lastmod()
+    print(f"Empty items, callable lastmod: {result1}")
+    
+    # Test 2: Empty items without lastmod attribute
+    sitemap2 = EmptySitemapWithoutLastmod()
+    result2 = sitemap2.get_latest_lastmod()
+    print(f"Empty items, no lastmod: {result2}")
+    
+    # Test 3: Non-empty items with callable lastmod
+    sitemap3 = NonEmptySitemapWithCallableLastmod()
+    result3 = sitemap3.get_latest_lastmod()
+    print(f"Non-empty items, callable lastmod: {result3}")
+    
+    # Test 4: Non-empty items with non-callable lastmod
+    sitemap4 = NonEmptySitemapWithNonCallableLastmod()
+    result4 = sitemap4.get_latest_lastmod()
+    print(f"Non-empty items, non-callable lastmod: {result4}")
+    
+    # Test 5: Sitemap with TypeError in lastmod callable
+    class TypeErrorSitemap(Sitemap):
+        def items(self):
+            return ["item1"]
+        
+        def lastmod(self, item):
+            raise TypeError("Some error")
+    
+    sitemap5 = TypeErrorSitemap()
+    result5 = sitemap5.get_latest_lastmod()
+    print(f"TypeError in lastmod callable: {result5}")
+
+if __name__ == "__main__":
+    test_edge_cases()
\ No newline at end of file