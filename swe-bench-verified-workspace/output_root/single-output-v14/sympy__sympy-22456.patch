diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..a9abf94322
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,22 @@
+#!/usr/bin/env python3
+
+from sympy.codegen.ast import String
+
+def test_string_argument_invariance():
+    # Create a String instance
+    expr = String('test_string')
+    
+    print(f"expr: {expr}")
+    print(f"expr.func: {expr.func}")
+    print(f"expr.args: {expr.args}")
+    
+    # Test the invariance: expr.func(*expr.args) == expr
+    reconstructed = expr.func(*expr.args)
+    print(f"reconstructed: {reconstructed}")
+    print(f"Are they equal? {expr == reconstructed}")
+    
+    # This should be True for any Basic subclass
+    print(f"Invariance holds: {expr.func(*expr.args) == expr}")
+
+if __name__ == "__main__":
+    test_string_argument_invariance()
\ No newline at end of file
diff --git a/sympy/codegen/ast.py b/sympy/codegen/ast.py
index a02714b174..38ca097eee 100644
--- a/sympy/codegen/ast.py
+++ b/sympy/codegen/ast.py
@@ -895,7 +895,7 @@ class String(Token):
 
     """
     __slots__ = ('text',)
-    not_in_args = ['text']
+    not_in_args = []
     is_Atom = True
 
     @classmethod
diff --git a/test_comprehensive.py b/test_comprehensive.py
new file mode 100644
index 0000000000..e7dce6125e
--- /dev/null
+++ b/test_comprehensive.py
@@ -0,0 +1,38 @@
+#!/usr/bin/env python3
+
+from sympy.codegen.ast import String, QuotedString, Comment
+
+def test_comprehensive_string_invariance():
+    print("Testing String argument invariance...")
+    
+    # Test empty string
+    empty = String('')
+    print(f"Empty string: {empty.func(*empty.args) == empty}")
+    
+    # Test normal string
+    normal = String('hello world')
+    print(f"Normal string: {normal.func(*normal.args) == normal}")
+    
+    # Test string with special characters
+    special = String('hello\nworld\t"test"')
+    print(f"Special chars: {special.func(*special.args) == special}")
+    
+    # Test unicode string
+    unicode_str = String('héllò wørld')
+    print(f"Unicode string: {unicode_str.func(*unicode_str.args) == unicode_str}")
+    
+    # Test QuotedString
+    quoted = QuotedString('test')
+    print(f"QuotedString: {quoted.func(*quoted.args) == quoted}")
+    
+    # Test Comment
+    comment = Comment('This is a comment')
+    print(f"Comment: {comment.func(*comment.args) == comment}")
+    
+    # Test that the original kwargs() method still works
+    print(f"String kwargs still works: {normal.func(**normal.kwargs()) == normal}")
+    print(f"QuotedString kwargs still works: {quoted.func(**quoted.kwargs()) == quoted}")
+    print(f"Comment kwargs still works: {comment.func(**comment.kwargs()) == comment}")
+
+if __name__ == "__main__":
+    test_comprehensive_string_invariance()
\ No newline at end of file