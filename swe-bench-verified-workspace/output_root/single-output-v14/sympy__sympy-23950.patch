diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..a10a8b7d62
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,22 @@
+#!/usr/bin/env python3
+
+from sympy import Contains, Reals, Piecewise
+from sympy.abc import x
+
+print("Testing the issue with Contains.as_set()")
+print("=" * 50)
+
+# Test the first issue: Contains.as_set() returns Contains instead of a set
+result1 = Contains(x, Reals).as_set()
+print(f"Contains(x, Reals).as_set() = {result1}")
+print(f"Type: {type(result1)}")
+print()
+
+# Test the second issue: Piecewise fails with Contains
+print("Testing Piecewise with Contains:")
+try:
+    result2 = Piecewise((6, Contains(x, Reals)), (7, True))
+    print(f"Piecewise result: {result2}")
+except Exception as e:
+    print(f"Error: {e}")
+    print(f"Error type: {type(e)}")
\ No newline at end of file
diff --git a/sympy/sets/contains.py b/sympy/sets/contains.py
index b2d4268d12..2c6785bf63 100644
--- a/sympy/sets/contains.py
+++ b/sympy/sets/contains.py
@@ -44,5 +44,10 @@ def binary_symbols(self):
             if i.is_Boolean or i.is_Symbol or
             isinstance(i, (Eq, Ne))])
 
-    def as_set(self):
-        raise NotImplementedError()
+    def _eval_as_set(self):
+        """
+        Return the set representation of the Contains expression.
+        
+        Contains(x, S) means x âˆˆ S, so the set representation is S.
+        """
+        return self.args[1]