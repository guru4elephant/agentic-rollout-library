diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 000000000..88f89268c
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,15 @@
+#!/usr/bin/env python3
+
+import sklearn
+from sklearn.utils._show_versions import show_versions
+
+print("Current sklearn version:", sklearn.__version__)
+print("\nCurrent show_versions output:")
+show_versions()
+
+# Check if joblib is available
+try:
+    import joblib
+    print(f"\njoblib version: {joblib.__version__}")
+except ImportError:
+    print("\njoblib is not installed")
\ No newline at end of file
diff --git a/sklearn/utils/_show_versions.py b/sklearn/utils/_show_versions.py
index e5d3141bf..ecba9ec68 100644
--- a/sklearn/utils/_show_versions.py
+++ b/sklearn/utils/_show_versions.py
@@ -48,6 +48,7 @@ def _get_deps_info():
         "Cython",
         "pandas",
         "matplotlib",
+        "joblib",
     ]
 
     def get_version(module):
diff --git a/test_edge_case.py b/test_edge_case.py
new file mode 100644
index 000000000..29de40c84
--- /dev/null
+++ b/test_edge_case.py
@@ -0,0 +1,22 @@
+#!/usr/bin/env python3
+
+# Test edge case: simulate an environment without joblib
+import sys
+from unittest.mock import patch
+
+# Mock importlib to simulate joblib not being available
+def mock_import_module(name):
+    if name == "joblib":
+        raise ImportError("No module named 'joblib'")
+    return __import__(name)
+
+# Test show_versions with joblib not available
+with patch('importlib.import_module', side_effect=mock_import_module):
+    # Also remove joblib from sys.modules if present
+    if 'joblib' in sys.modules:
+        del sys.modules['joblib']
+    
+    from sklearn.utils._show_versions import show_versions
+    
+    print("Testing show_versions when joblib is not available:")
+    show_versions()
\ No newline at end of file