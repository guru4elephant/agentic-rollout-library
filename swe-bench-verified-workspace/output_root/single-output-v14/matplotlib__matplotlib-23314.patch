diff --git a/2d_after_hiding.png b/2d_after_hiding.png
new file mode 100644
index 0000000000..0ac62496a5
Binary files /dev/null and b/2d_after_hiding.png differ
diff --git a/2d_before_hiding.png b/2d_before_hiding.png
new file mode 100644
index 0000000000..f53f6410a5
Binary files /dev/null and b/2d_before_hiding.png differ
diff --git a/after_hiding.png b/after_hiding.png
new file mode 100644
index 0000000000..c0b8aef65f
Binary files /dev/null and b/after_hiding.png differ
diff --git a/before_hiding.png b/before_hiding.png
new file mode 100644
index 0000000000..66db0d75b4
Binary files /dev/null and b/before_hiding.png differ
diff --git a/edge_cases.png b/edge_cases.png
new file mode 100644
index 0000000000..b175bfc5da
Binary files /dev/null and b/edge_cases.png differ
diff --git a/lib/mpl_toolkits/mplot3d/axes3d.py b/lib/mpl_toolkits/mplot3d/axes3d.py
index 9db44b7994..5479bc1af0 100644
--- a/lib/mpl_toolkits/mplot3d/axes3d.py
+++ b/lib/mpl_toolkits/mplot3d/axes3d.py
@@ -387,6 +387,8 @@ class Axes3D(Axes):
 
     @martist.allow_rasterization
     def draw(self, renderer):
+        if not self.get_visible():
+            return
         self._unstale_viewLim()
 
         # draw the background patch
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..0f5978ab79
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,10 @@
+import matplotlib.pyplot as plt
+from matplotlib.gridspec import GridSpec
+
+fig, (ax1, ax2) = plt.subplots(1, 2, subplot_kw={'projection': '3d'})
+ax1.scatter(1,1,1)
+ax2.scatter(1,1,1, c='r')
+ax1.set_visible(False)
+
+plt.savefig('test_visible.png')
+plt.show()
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..da0d57cff7
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,33 @@
+import matplotlib.pyplot as plt
+
+print("Testing edge cases for set_visible() with 3D axes...")
+
+# Test 1: Toggle visibility multiple times
+fig, ax = plt.subplots(subplot_kw={'projection': '3d'})
+ax.scatter(1, 1, 1)
+print(f"Initial visibility: {ax.get_visible()}")
+
+ax.set_visible(False)
+print(f"After set_visible(False): {ax.get_visible()}")
+
+ax.set_visible(True)
+print(f"After set_visible(True): {ax.get_visible()}")
+
+ax.set_visible(False)
+print(f"After set_visible(False) again: {ax.get_visible()}")
+
+# Test 2: Check that other properties still work when hidden
+ax.set_title("Test Title")
+print(f"Title set while hidden: {ax.get_title()}")
+
+# Test 3: Multiple axes with mixed visibility
+fig, (ax1, ax2, ax3) = plt.subplots(1, 3, subplot_kw={'projection': '3d'})
+ax1.scatter(1, 1, 1, c='r')
+ax2.scatter(2, 2, 2, c='g') 
+ax3.scatter(3, 3, 3, c='b')
+
+ax2.set_visible(False)
+print(f"Mixed visibility - ax1: {ax1.get_visible()}, ax2: {ax2.get_visible()}, ax3: {ax3.get_visible()}")
+
+plt.savefig('edge_cases.png', dpi=100)
+print("Edge case test completed and saved as edge_cases.png")
\ No newline at end of file
diff --git a/test_fix.png b/test_fix.png
new file mode 100644
index 0000000000..0cc9d3daa8
Binary files /dev/null and b/test_fix.png differ
diff --git a/test_fix.py b/test_fix.py
new file mode 100644
index 0000000000..37da874ef7
--- /dev/null
+++ b/test_fix.py
@@ -0,0 +1,44 @@
+import matplotlib.pyplot as plt
+import matplotlib.backends.backend_agg as agg
+import numpy as np
+
+# Create figure and 3D axes
+fig, (ax1, ax2) = plt.subplots(1, 2, subplot_kw={'projection': '3d'})
+
+# Add some data to both axes
+ax1.scatter(1, 1, 1, s=100, c='b')
+ax2.scatter(1, 1, 1, s=100, c='r')
+
+# Save the figure before hiding ax1
+fig.canvas.draw()
+renderer = fig.canvas.get_renderer()
+bbox1_before = ax1.get_window_extent(renderer)
+bbox2_before = ax2.get_window_extent(renderer)
+print(f"Before hiding - ax1 bbox: {bbox1_before}, ax2 bbox: {bbox2_before}")
+
+# Hide ax1
+ax1.set_visible(False)
+
+# Save the figure after hiding ax1
+fig.canvas.draw()
+renderer = fig.canvas.get_renderer()
+
+# Check if ax1 is actually hidden by checking its bounding box
+try:
+    bbox1_after = ax1.get_window_extent(renderer)
+    print(f"After hiding - ax1 bbox: {bbox1_after}")
+except Exception as e:
+    print(f"ax1 get_window_extent failed (expected if hidden): {e}")
+
+try:
+    bbox2_after = ax2.get_window_extent(renderer)
+    print(f"After hiding - ax2 bbox: {bbox2_after}")
+except Exception as e:
+    print(f"ax2 get_window_extent failed: {e}")
+
+# Also check the visible property
+print(f"ax1 visible: {ax1.get_visible()}")
+print(f"ax2 visible: {ax2.get_visible()}")
+
+plt.savefig('test_fix.png', dpi=100)
+print("Figure saved as test_fix.png")
\ No newline at end of file
diff --git a/test_visible.png b/test_visible.png
new file mode 100644
index 0000000000..755fe85543
Binary files /dev/null and b/test_visible.png differ
diff --git a/visual_test.py b/visual_test.py
new file mode 100644
index 0000000000..a58be749c6
--- /dev/null
+++ b/visual_test.py
@@ -0,0 +1,38 @@
+import matplotlib.pyplot as plt
+import numpy as np
+
+# Create figure and 3D axes
+fig, (ax1, ax2) = plt.subplots(1, 2, subplot_kw={'projection': '3d'}, figsize=(10, 5))
+
+# Add some data to both axes
+ax1.scatter([1, 2, 3], [1, 2, 3], [1, 2, 3], s=100, c='b', marker='o')
+ax2.scatter([1, 2, 3], [1, 2, 3], [1, 2, 3], s=100, c='r', marker='^')
+
+# Set titles to identify which is which
+ax1.set_title('Left Axes (will be hidden)')
+ax2.set_title('Right Axes (stays visible)')
+
+# Save before hiding
+plt.savefig('before_hiding.png', dpi=100)
+print("Saved before_hiding.png")
+
+# Hide ax1
+ax1.set_visible(False)
+
+# Save after hiding
+plt.savefig('after_hiding.png', dpi=100)
+print("Saved after_hiding.png")
+
+# Also test with regular 2D axes for comparison
+fig2, (ax3, ax4) = plt.subplots(1, 2, figsize=(10, 5))
+ax3.plot([1, 2, 3], [1, 2, 3], 'b-o')
+ax4.plot([1, 2, 3], [1, 2, 3], 'r-^')
+ax3.set_title('Left 2D Axes (will be hidden)')
+ax4.set_title('Right 2D Axes (stays visible)')
+plt.savefig('2d_before_hiding.png', dpi=100)
+
+ax3.set_visible(False)
+plt.savefig('2d_after_hiding.png', dpi=100)
+print("Saved 2D comparison images")
+
+print("Test completed. Check the generated images to see if the left axes disappears in after_hiding.png")
\ No newline at end of file