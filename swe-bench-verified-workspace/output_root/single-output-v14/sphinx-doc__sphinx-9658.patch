diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 000000000..b49313b50
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,55 @@
+#!/usr/bin/env python3
+"""
+Reproduction script for the mocked inheritance documentation issue.
+"""
+
+import sys
+import os
+sys.path.insert(0, '/testbed')
+
+from importlib import import_module
+from sphinx.ext.autodoc.mock import _MockObject, _MockModule, mock, ismock
+from sphinx.util.typing import restify
+
+# Create a mock module and class to simulate the issue
+print("=== Testing mocked inheritance documentation ===")
+
+# Create a mock module similar to torch.nn
+with mock(['unknown.module']):
+    # Import the mocked module using import_module
+    unknown_module = import_module('unknown.module')
+    
+    print(f"Mocked module: {unknown_module}")
+    print(f"Is mock: {ismock(unknown_module)}")
+    
+    # Create a class that inherits from the mocked module
+    class DeepKernel(unknown_module.Class):
+        """A test class that inherits from mocked torch.nn.Module"""
+        pass
+    
+    print(f"DeepKernel class: {DeepKernel}")
+    print(f"DeepKernel bases: {DeepKernel.__bases__}")
+    print(f"Base class: {DeepKernel.__bases__[0]}")
+    print(f"Is base class mock: {ismock(DeepKernel.__bases__[0])}")
+    
+    # Test the restify function on the mocked base class
+    base_class = DeepKernel.__bases__[0]
+    restified = restify(base_class)
+    print(f"Restified base class: '{restified}'")
+    
+    # The issue: restify should return "torch.nn.Module" but might return "torch.nn."
+
+print("\n=== Testing with real module for comparison ===")
+
+# Test with a real module for comparison
+import types
+class RealBase:
+    pass
+
+class RealClass(RealBase):
+    pass
+
+real_base = RealClass.__bases__[0]
+real_restified = restify(real_base)
+print(f"Real base class: {real_base}")
+print(f"Restified real base class: '{real_restified}'")
\ No newline at end of file
diff --git a/setup.py b/setup.py
index 2b4504101..d865b8b37 100644
--- a/setup.py
+++ b/setup.py
@@ -15,22 +15,22 @@ if sys.version_info < (3, 6):
     sys.exit(1)
 
 install_requires = [
-    'sphinxcontrib-applehelp',
-    'sphinxcontrib-devhelp',
+    'sphinxcontrib-applehelp<=1.0.7',
+    'sphinxcontrib-devhelp<=1.0.5',
     'sphinxcontrib-jsmath',
-    'sphinxcontrib-htmlhelp>=2.0.0',
-    'sphinxcontrib-serializinghtml>=1.1.5',
-    'sphinxcontrib-qthelp',
-    'Jinja2>=2.3',
+    'sphinxcontrib-htmlhelp>=2.0.0,<=2.0.4',
+    'sphinxcontrib-serializinghtml>=1.1.5,<=1.1.9',
+    'sphinxcontrib-qthelp<=1.0.6',
+    'Jinja2<3.0',
     'Pygments>=2.0',
     'docutils>=0.14,<0.18',
     'snowballstemmer>=1.1',
     'babel>=1.3',
-    'alabaster>=0.7,<0.8',
+    'alabaster>=0.7,<0.7.12',
     'imagesize',
     'requests>=2.5.0',
     'setuptools',
-    'packaging',
+    'packaging', 'markupsafe<=2.0.1',
 ]
 
 extras_require = {
diff --git a/test_restify_mock.py b/test_restify_mock.py
new file mode 100644
index 000000000..f801366ab
--- /dev/null
+++ b/test_restify_mock.py
@@ -0,0 +1,34 @@
+#!/usr/bin/env python3
+"""
+Test script to reproduce the restify issue with mocked objects.
+"""
+
+import sys
+sys.path.insert(0, '/testbed')
+
+from sphinx.ext.autodoc.mock import _MockObject, _make_subclass
+from sphinx.util.typing import restify
+
+# Create a mocked object similar to what would be created for torch.nn.Module
+print("=== Testing restify with mocked objects ===")
+
+# Create a mock object that simulates torch.nn.Module
+mock_module = _make_subclass('Module', 'torch.nn', _MockObject)()
+print(f"Mock object: {mock_module}")
+print(f"Mock object repr: {repr(mock_module)}")
+
+# Test the restify function on the mocked object
+restified = restify(mock_module)
+print(f"Restified mock object: '{restified}'")
+
+# The issue: restify should return "torch.nn.Module" but might return "torch.nn." or something incomplete
+
+print("\n=== Testing with a real class for comparison ===")
+
+# Test with a real class for comparison
+class RealClass:
+    pass
+
+real_restified = restify(RealClass)
+print(f"Real class: {RealClass}")
+print(f"Restified real class: '{real_restified}'")
\ No newline at end of file
diff --git a/tox.ini b/tox.ini
index b6a67fd85..483f2df92 100644
--- a/tox.ini
+++ b/tox.ini
@@ -28,7 +28,7 @@ setenv =
     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils,ignore::DeprecationWarning:pip._vendor.packaging.version
     PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:} --color yes
 commands=
-    python -X dev -m pytest --durations 25 {posargs}
+    python -X dev -m pytest -rA --durations 25 {posargs}
 
 [testenv:flake8]
 basepython = python3