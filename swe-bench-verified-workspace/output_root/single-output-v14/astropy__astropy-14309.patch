diff --git a/astropy/io/fits/connect.py b/astropy/io/fits/connect.py
index 4b6150f4ac..1f51fe4835 100644
--- a/astropy/io/fits/connect.py
+++ b/astropy/io/fits/connect.py
@@ -69,7 +69,7 @@ def is_fits(origin, filepath, fileobj, *args, **kwargs):
             (".fits", ".fits.gz", ".fit", ".fit.gz", ".fts", ".fts.gz")
         ):
             return True
-    return isinstance(args[0], (HDUList, TableHDU, BinTableHDU, GroupsHDU))
+    return len(args) > 0 and isinstance(args[0], (HDUList, TableHDU, BinTableHDU, GroupsHDU))
 
 
 def _decode_mixins(tbl):
diff --git a/pyproject.toml b/pyproject.toml
index 41865a87d1..922d14bf49 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -1,5 +1,5 @@
 [build-system]
-requires = ["setuptools",
+requires = ["setuptools==68.0.0",
             "setuptools_scm>=6.2",
             "wheel",
             "cython==0.29.30",
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..0a7dac94aa
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,14 @@
+#!/usr/bin/env python3
+"""Script to reproduce the IndexError issue in is_fits function."""
+
+from astropy.io.registry import identify_format
+from astropy.table import Table
+
+print("Testing identify_format with empty args...")
+try:
+    result = identify_format("write", Table, "bububu.ecsv", None, [], {})
+    print(f"Success! Result: {result}")
+except IndexError as e:
+    print(f"IndexError caught: {e}")
+except Exception as e:
+    print(f"Other error: {e}")
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..07defbf0a5
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,50 @@
+#!/usr/bin/env python3
+"""Test edge cases for the is_fits function fix."""
+
+from astropy.io.registry import identify_format
+from astropy.table import Table
+from astropy.io.fits import HDUList, TableHDU, BinTableHDU
+
+print("Testing various edge cases...")
+
+# Test 1: Empty args (original issue)
+print("\n1. Testing with empty args:")
+try:
+    result = identify_format("write", Table, "bububu.ecsv", None, [], {})
+    print(f"Success! Result: {result}")
+except Exception as e:
+    print(f"Error: {e}")
+
+# Test 2: Non-empty args but not FITS objects
+print("\n2. Testing with non-empty args (non-FITS objects):")
+try:
+    result = identify_format("write", Table, "bububu.ecsv", None, ["not_a_fits_object"], {})
+    print(f"Success! Result: {result}")
+except Exception as e:
+    print(f"Error: {e}")
+
+# Test 3: FITS file extension
+print("\n3. Testing with FITS file extension:")
+try:
+    result = identify_format("write", Table, "test.fits", None, [], {})
+    print(f"Success! Result: {result}")
+except Exception as e:
+    print(f"Error: {e}")
+
+# Test 4: Compressed FITS file extension
+print("\n4. Testing with compressed FITS file extension:")
+try:
+    result = identify_format("write", Table, "test.fits.gz", None, [], {})
+    print(f"Success! Result: {result}")
+except Exception as e:
+    print(f"Error: {e}")
+
+# Test 5: Non-FITS file extension
+print("\n5. Testing with non-FITS file extension:")
+try:
+    result = identify_format("write", Table, "test.csv", None, [], {})
+    print(f"Success! Result: {result}")
+except Exception as e:
+    print(f"Error: {e}")
+
+print("\nAll tests completed!")
\ No newline at end of file
diff --git a/test_fits_objects.py b/test_fits_objects.py
new file mode 100644
index 0000000000..aa26e3eacf
--- /dev/null
+++ b/test_fits_objects.py
@@ -0,0 +1,40 @@
+#!/usr/bin/env python3
+"""Test that FITS objects in args still work correctly."""
+
+from astropy.io.registry import identify_format
+from astropy.table import Table
+from astropy.io.fits import HDUList, TableHDU, BinTableHDU
+import numpy as np
+
+print("Testing FITS objects in args...")
+
+# Test with HDUList
+print("\n1. Testing with HDUList in args:")
+try:
+    hdul = HDUList()
+    result = identify_format("write", Table, "test.fits", None, [hdul], {})
+    print(f"Success! Result: {result}")
+except Exception as e:
+    print(f"Error: {e}")
+
+# Test with TableHDU
+print("\n2. Testing with TableHDU in args:")
+try:
+    data = np.array([(1, 2.0, 'x'), (2, 3.0, 'y')], 
+                   dtype=[('a', 'i4'), ('b', 'f4'), ('c', 'U1')])
+    table_hdu = TableHDU(data=data)
+    result = identify_format("write", Table, "test.fits", None, [table_hdu], {})
+    print(f"Success! Result: {result}")
+except Exception as e:
+    print(f"Error: {e}")
+
+# Test with BinTableHDU
+print("\n3. Testing with BinTableHDU in args:")
+try:
+    bin_table_hdu = BinTableHDU(data=data)
+    result = identify_format("write", Table, "test.fits", None, [bin_table_hdu], {})
+    print(f"Success! Result: {result}")
+except Exception as e:
+    print(f"Error: {e}")
+
+print("\nAll FITS object tests completed!")
\ No newline at end of file