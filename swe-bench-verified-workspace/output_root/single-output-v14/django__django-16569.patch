diff --git a/django/forms/formsets.py b/django/forms/formsets.py
index 235aaf844c..02d040ee03 100644
--- a/django/forms/formsets.py
+++ b/django/forms/formsets.py
@@ -490,7 +490,7 @@ class BaseFormSet(RenderableFormMixin):
                     required=False,
                     widget=self.get_ordering_widget(),
                 )
-        if self.can_delete and (self.can_delete_extra or index < initial_form_count):
+        if self.can_delete and (self.can_delete_extra or (index is not None and index < initial_form_count)):
             form.fields[DELETION_FIELD_NAME] = BooleanField(
                 label=_("Delete"),
                 required=False,
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..df3c473a5d
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,26 @@
+#!/usr/bin/env python3
+import os
+import django
+from django import forms
+
+class MyForm(forms.Form):
+    my_field = forms.CharField()
+
+if __name__ == "__main__":
+    settings_file = os.path.splitext(os.path.basename(__file__))[0]
+    django.conf.settings.configure(
+        DEBUG=True,
+        MIDDLEWARE_CLASSES=[],
+        ROOT_URLCONF=settings_file,
+    )
+    django.setup()
+
+    MyFormSet = forms.formset_factory(
+        form=MyForm,
+        can_delete=True,
+        can_delete_extra=False,
+    )
+    my_formset = MyFormSet(
+        initial=None,
+    )
+    print(my_formset.empty_form)
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..7221cb6151
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,57 @@
+#!/usr/bin/env python3
+import os
+import django
+from django import forms
+
+class MyForm(forms.Form):
+    my_field = forms.CharField()
+
+def test_case(name, formset_kwargs):
+    print(f"\n=== Testing {name} ===")
+    try:
+        MyFormSet = forms.formset_factory(
+            form=MyForm,
+            **formset_kwargs
+        )
+        my_formset = MyFormSet(initial=None)
+        empty_form = my_formset.empty_form
+        print(f"✓ Success: empty_form created")
+        # Test that deletion field is present when appropriate
+        if formset_kwargs.get('can_delete', False):
+            if 'DELETE' in empty_form.fields:
+                print(f"✓ Deletion field present")
+            else:
+                print(f"✗ Deletion field missing")
+        return True
+    except Exception as e:
+        print(f"✗ Error: {e}")
+        return False
+
+if __name__ == "__main__":
+    settings_file = os.path.splitext(os.path.basename(__file__))[0]
+    django.conf.settings.configure(
+        DEBUG=True,
+        MIDDLEWARE_CLASSES=[],
+        ROOT_URLCONF=settings_file,
+    )
+    django.setup()
+
+    # Test various combinations
+    test_cases = [
+        ("can_delete=True, can_delete_extra=False", {'can_delete': True, 'can_delete_extra': False}),
+        ("can_delete=True, can_delete_extra=True", {'can_delete': True, 'can_delete_extra': True}),
+        ("can_delete=False, can_delete_extra=False", {'can_delete': False, 'can_delete_extra': False}),
+        ("can_delete=False, can_delete_extra=True", {'can_delete': False, 'can_delete_extra': True}),
+        ("can_delete=True, can_order=True", {'can_delete': True, 'can_order': True}),
+    ]
+
+    all_passed = True
+    for name, kwargs in test_cases:
+        passed = test_case(name, kwargs)
+        all_passed = all_passed and passed
+
+    print(f"\n=== Overall Result ===")
+    if all_passed:
+        print("✓ All test cases passed!")
+    else:
+        print("✗ Some test cases failed!")
\ No newline at end of file