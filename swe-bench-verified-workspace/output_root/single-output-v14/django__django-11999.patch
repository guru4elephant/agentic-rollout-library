diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..cff753c19f
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,33 @@
+#!/usr/bin/env python3
+
+import sys
+sys.path.insert(0, './django')
+
+# Import just the necessary parts
+from django.db import models
+
+# Create a test model
+class FooBar(models.Model):
+    foo_bar = models.CharField("foo", choices=[(1, 'foo'), (2, 'bar')])
+    
+    def __str__(self):
+        return self.get_foo_bar_display()  # This should return 'something' but returns 'foo' or 'bar'
+    
+    def get_foo_bar_display(self):
+        return "something"
+
+# Test the issue
+if __name__ == '__main__':
+    # Create an instance
+    instance = FooBar(foo_bar=1)
+    
+    # Test the method
+    result = instance.get_foo_bar_display()
+    print(f"get_foo_bar_display() returned: '{result}'")
+    print(f"Expected: 'something'")
+    
+    if result == "something":
+        print("SUCCESS: Custom method override works!")
+    else:
+        print("FAILURE: Custom method override doesn't work!")
+        print("This confirms the bug described in the GitHub issue.")
\ No newline at end of file
diff --git a/simple_test.py b/simple_test.py
new file mode 100644
index 0000000000..d421bfb92f
--- /dev/null
+++ b/simple_test.py
@@ -0,0 +1,34 @@
+#!/usr/bin/env python3
+
+import sys
+sys.path.insert(0, './django')
+
+from django.db import models
+
+# Test the issue directly by creating a model class
+class TestModel(models.Model):
+    test_field = models.CharField("test", choices=[(1, 'one'), (2, 'two')])
+    
+    def get_test_field_display(self):
+        return "custom_value"
+
+# Check if our custom method exists and works
+print("Testing method creation...")
+
+# Create an instance
+instance = TestModel(test_field=1)
+
+# Check what methods exist
+methods = [method for method in dir(instance) if 'get_' in method and '_display' in method]
+print(f"Available get_*_display methods: {methods}")
+
+# Test the method
+result = instance.get_test_field_display()
+print(f"get_test_field_display() returned: '{result}'")
+print(f"Expected: 'custom_value'")
+
+if result == "custom_value":
+    print("SUCCESS: Custom method override works!")
+else:
+    print("FAILURE: Custom method override doesn't work!")
+    print("This confirms the bug described in the GitHub issue.")
\ No newline at end of file