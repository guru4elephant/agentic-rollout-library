diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 000000000..a6e6c5aae
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,26 @@
+#!/usr/bin/env python3
+
+from sklearn.model_selection import RepeatedKFold, RepeatedStratifiedKFold
+
+# Test the current __repr__ behavior
+rkf = RepeatedKFold()
+rskf = RepeatedStratifiedKFold()
+
+print("RepeatedKFold __repr__:")
+print(repr(rkf))
+print()
+
+print("RepeatedStratifiedKFold __repr__:")
+print(repr(rskf))
+print()
+
+# Test with custom parameters
+rkf_custom = RepeatedKFold(n_splits=3, n_repeats=5, random_state=42)
+rskf_custom = RepeatedStratifiedKFold(n_splits=4, n_repeats=7, random_state=123)
+
+print("RepeatedKFold with custom params __repr__:")
+print(repr(rkf_custom))
+print()
+
+print("RepeatedStratifiedKFold with custom params __repr__:")
+print(repr(rskf_custom))
\ No newline at end of file
diff --git a/sklearn/model_selection/_split.py b/sklearn/model_selection/_split.py
index c49a3ce6a..e98c9008e 100644
--- a/sklearn/model_selection/_split.py
+++ b/sklearn/model_selection/_split.py
@@ -1163,6 +1163,9 @@ class _RepeatedSplits(metaclass=ABCMeta):
                      **self.cvargs)
         return cv.get_n_splits(X, y, groups) * self.n_repeats
 
+    def __repr__(self):
+        return _build_repr(self)
+
 
 class RepeatedKFold(_RepeatedSplits):
     """Repeated K-Fold cross validator.
@@ -1213,6 +1216,7 @@ class RepeatedKFold(_RepeatedSplits):
     RepeatedStratifiedKFold: Repeats Stratified K-Fold n times.
     """
     def __init__(self, n_splits=5, n_repeats=10, random_state=None):
+        self.n_splits = n_splits
         super().__init__(
             KFold, n_repeats, random_state, n_splits=n_splits)
 
@@ -1266,6 +1270,7 @@ class RepeatedStratifiedKFold(_RepeatedSplits):
     RepeatedKFold: Repeats K-Fold n times.
     """
     def __init__(self, n_splits=5, n_repeats=10, random_state=None):
+        self.n_splits = n_splits
         super().__init__(
             StratifiedKFold, n_repeats, random_state, n_splits=n_splits)
 
diff --git a/test_comprehensive.py b/test_comprehensive.py
new file mode 100644
index 000000000..7ccc87aa2
--- /dev/null
+++ b/test_comprehensive.py
@@ -0,0 +1,54 @@
+#!/usr/bin/env python3
+
+from sklearn.model_selection import RepeatedKFold, RepeatedStratifiedKFold
+
+# Test default parameters
+rkf_default = RepeatedKFold()
+rskf_default = RepeatedStratifiedKFold()
+
+print("Default RepeatedKFold:")
+print(repr(rkf_default))
+print("Expected: RepeatedKFold(n_repeats=10, n_splits=5, random_state=None)")
+print()
+
+print("Default RepeatedStratifiedKFold:")
+print(repr(rskf_default))
+print("Expected: RepeatedStratifiedKFold(n_repeats=10, n_splits=5, random_state=None)")
+print()
+
+# Test custom parameters
+rkf_custom = RepeatedKFold(n_splits=3, n_repeats=5, random_state=42)
+rskf_custom = RepeatedStratifiedKFold(n_splits=4, n_repeats=7, random_state=123)
+
+print("Custom RepeatedKFold:")
+print(repr(rkf_custom))
+print("Expected: RepeatedKFold(n_repeats=5, n_splits=3, random_state=42)")
+print()
+
+print("Custom RepeatedStratifiedKFold:")
+print(repr(rskf_custom))
+print("Expected: RepeatedStratifiedKFold(n_repeats=7, n_splits=4, random_state=123)")
+print()
+
+# Test with different parameter combinations
+rkf_minimal = RepeatedKFold(n_splits=2, n_repeats=1)
+rskf_minimal = RepeatedStratifiedKFold(n_splits=2, n_repeats=1)
+
+print("Minimal RepeatedKFold:")
+print(repr(rkf_minimal))
+print("Expected: RepeatedKFold(n_repeats=1, n_splits=2, random_state=None)")
+print()
+
+print("Minimal RepeatedStratifiedKFold:")
+print(repr(rskf_minimal))
+print("Expected: RepeatedStratifiedKFold(n_repeats=1, n_splits=2, random_state=None)")
+print()
+
+# Test that the objects still work functionally
+import numpy as np
+X = np.array([[1, 2], [3, 4], [5, 6], [7, 8]])
+y = np.array([0, 1, 0, 1])
+
+print("Testing functional behavior:")
+print("RepeatedKFold splits:", rkf_minimal.get_n_splits(X, y))
+print("RepeatedStratifiedKFold splits:", rskf_minimal.get_n_splits(X, y))
\ No newline at end of file