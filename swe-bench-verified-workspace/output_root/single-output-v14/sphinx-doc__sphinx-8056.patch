diff --git a/debug_issue.py b/debug_issue.py
new file mode 100644
index 000000000..72b097531
--- /dev/null
+++ b/debug_issue.py
@@ -0,0 +1,31 @@
+#!/usr/bin/env python3
+
+from sphinx.ext.napoleon import NumpyDocstring
+
+# Let's trace through what happens with multiple parameters
+docstring = '''
+Parameters
+----------
+x1, x2 : array_like
+    Input arrays, description of `x1`, `x2`.
+'''
+
+# Let's see what the _consume_fields method returns
+nd = NumpyDocstring.__new__(NumpyDocstring)
+nd._config = type('Config', (), {'napoleon_use_param': True, 'napoleon_type_aliases': None})()
+nd._line_iter = type('ModifyIter', (), {
+    'has_next': lambda: False,
+    'peek': lambda: None
+})()
+
+# Simulate what _consume_field would return
+fields = [('x1, x2', 'array_like', ['Input arrays, description of `x1`, `x2`.'],)]
+
+print("Input fields:", fields)
+print()
+
+# Test the current _format_docutils_params behavior
+result = nd._format_docutils_params(fields)
+print("Current _format_docutils_params output:")
+for line in result:
+    print(repr(line))
\ No newline at end of file
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 000000000..3dca7c1bb
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,55 @@
+#!/usr/bin/env python3
+
+from sphinx.ext.napoleon import NumpyDocstring
+
+# Test case 1: Multiple parameters on same line without "optional"
+docstring1 = '''
+Parameters
+----------
+x1, x2 : array_like
+    Input arrays, description of `x1`, `x2`.
+'''
+
+# Test case 2: Multiple parameters on same line with "optional"  
+docstring2 = '''
+Parameters
+----------
+x1, x2 : array_like, optional
+    Input arrays, description of `x1`, `x2`.
+'''
+
+# Test case 3: Single parameter for comparison
+docstring3 = '''
+Parameters
+----------
+x1 : array_like
+    Input array, description of `x1`.
+'''
+
+# Test case 4: Single parameter with optional for comparison
+docstring4 = '''
+Parameters
+----------
+x1 : array_like, optional
+    Input array, description of `x1`.
+'''
+
+print("=== Test Case 1: Multiple parameters without optional ===")
+result1 = NumpyDocstring(docstring1)
+print(str(result1))
+print()
+
+print("=== Test Case 2: Multiple parameters with optional ===")
+result2 = NumpyDocstring(docstring2)
+print(str(result2))
+print()
+
+print("=== Test Case 3: Single parameter without optional (for comparison) ===")
+result3 = NumpyDocstring(docstring3)
+print(str(result3))
+print()
+
+print("=== Test Case 4: Single parameter with optional (for comparison) ===")
+result4 = NumpyDocstring(docstring4)
+print(str(result4))
+print()
\ No newline at end of file
diff --git a/setup.py b/setup.py
index a404f1fa5..2c6848797 100644
--- a/setup.py
+++ b/setup.py
@@ -15,22 +15,22 @@ if sys.version_info < (3, 5):
     sys.exit(1)
 
 install_requires = [
-    'sphinxcontrib-applehelp',
-    'sphinxcontrib-devhelp',
+    'sphinxcontrib-applehelp<=1.0.7',
+    'sphinxcontrib-devhelp<=1.0.5',
     'sphinxcontrib-jsmath',
-    'sphinxcontrib-htmlhelp',
-    'sphinxcontrib-serializinghtml',
-    'sphinxcontrib-qthelp',
-    'Jinja2>=2.3',
+    'sphinxcontrib-htmlhelp<=2.0.4',
+    'sphinxcontrib-serializinghtml<=1.1.9',
+    'sphinxcontrib-qthelp<=1.0.6',
+    'Jinja2<3.0',
     'Pygments>=2.0',
     'docutils>=0.12',
     'snowballstemmer>=1.1',
     'babel>=1.3',
-    'alabaster>=0.7,<0.8',
+    'alabaster>=0.7,<0.7.12',
     'imagesize',
     'requests>=2.5.0',
     'setuptools',
-    'packaging',
+    'packaging', 'markupsafe<=2.0.1',
 ]
 
 extras_require = {
diff --git a/simple_test.py b/simple_test.py
new file mode 100644
index 000000000..eafd32a69
--- /dev/null
+++ b/simple_test.py
@@ -0,0 +1,17 @@
+#!/usr/bin/env python3
+
+from sphinx.ext.napoleon import NumpyDocstring
+
+# Test the _escape_args_and_kwargs method directly
+nd = NumpyDocstring.__new__(NumpyDocstring)
+nd._config = type('Config', (), {'napoleon_use_param': True, 'napoleon_type_aliases': None})()
+
+# Test the method directly
+result = nd._escape_args_and_kwargs("x1, x2")
+print("_escape_args_and_kwargs('x1, x2'):", repr(result))
+
+# Test with individual parameters
+result1 = nd._escape_args_and_kwargs("x1")
+result2 = nd._escape_args_and_kwargs("x2")
+print("_escape_args_and_kwargs('x1'):", repr(result1))
+print("_escape_args_and_kwargs('x2'):", repr(result2))
\ No newline at end of file
diff --git a/tox.ini b/tox.ini
index bddd822a6..34baee205 100644
--- a/tox.ini
+++ b/tox.ini
@@ -27,7 +27,7 @@ extras =
 setenv =
     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils
 commands=
-    pytest --durations 25 {posargs}
+    pytest -rA --durations 25 {posargs}
 
 [testenv:flake8]
 basepython = python3