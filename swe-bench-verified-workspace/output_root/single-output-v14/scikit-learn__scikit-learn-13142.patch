diff --git a/debug_issue.py b/debug_issue.py
new file mode 100644
index 000000000..ea81e7340
--- /dev/null
+++ b/debug_issue.py
@@ -0,0 +1,28 @@
+from sklearn.mixture import GaussianMixture
+import numpy as np
+
+# Set random seed for reproducibility
+np.random.seed(42)
+X = np.random.randn(1000,5)
+
+print("Testing with n_init=5")
+gm = GaussianMixture(n_components=5, n_init=5, random_state=42)
+
+# First call fit_predict
+c1 = gm.fit_predict(X)
+print("fit_predict completed")
+
+# Then call predict
+c2 = gm.predict(X)
+print("predict completed")
+
+# Check if they are equal
+print("Are results equal?", np.array_equal(c1, c2))
+
+# Check how many are different
+diff_count = np.sum(c1 != c2)
+print(f"Number of different predictions: {diff_count} out of {len(c1)}")
+
+# Let's also check the model parameters to see if they changed
+print("Weights:", gm.weights_[:5])
+print("Means shape:", gm.means_.shape)
\ No newline at end of file
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 000000000..14110d92a
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,15 @@
+from sklearn.mixture import GaussianMixture
+from sklearn.utils.testing import assert_array_equal
+import numpy
+
+X = numpy.random.randn(1000,5)
+print('no n_init')
+gm = GaussianMixture(n_components=5)
+c1 = gm.fit_predict(X)
+c2 = gm.predict(X)
+assert_array_equal(c1,c2)
+print('n_init=5')
+gm = GaussianMixture(n_components=5, n_init=5)
+c1 = gm.fit_predict(X)
+c2 = gm.predict(X)
+assert_array_equal(c1,c2)
\ No newline at end of file