diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 000000000..cc1a27a6b
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,87 @@
+#!/usr/bin/env python3
+"""
+Script to reproduce the issue with :type: and :rtype: ambiguous class lookup warnings.
+"""
+
+import tempfile
+import os
+import shutil
+from sphinx.application import Sphinx
+from sphinx.util.docutils import docutils_namespace
+
+# Create test content
+rst_content = """\
+.. py:class:: mod.A
+.. py:class:: mod.submod.A
+
+.. py:function:: f()
+
+\t- :py:class:`mod.A`
+\t- :py:class:`mod.submod.A`
+
+\t:param mod.A a:
+\t:param mod.submod.A b:
+\t:rtype: mod.A
+\t:rtype: mod.submod.A
+
+.. py:currentmodule:: mod
+
+.. py:function:: f()
+
+\t- :py:class:`A`
+\t- :py:class:`mod.A`
+\t- :py:class:`mod.submod.A`
+
+\t:param A a:
+\t:param mod.A b:
+\t:param mod.submod.A c:
+\t:rtype: A
+\t:rtype: mod.A
+\t:rtype: mod.submod.A
+
+.. py:currentmodule:: mod.submod
+
+.. py:function:: f()
+
+\t- :py:class:`A`
+\t- :py:class:`mod.A`
+\t- :py:class:`mod.submod.A`
+
+\t:param A a: BUG: links to mod.A instead of mod.submod.A
+\t:param mod.A b:
+\t:param mod.submod.A c:
+\t:rtype: A
+\t:rtype: mod.A
+\t:rtype: mod.submod.A
+"""
+
+def test_issue():
+    # Create temporary directory
+    with tempfile.TemporaryDirectory() as tmpdir:
+        srcdir = os.path.join(tmpdir, 'source')
+        outdir = os.path.join(tmpdir, 'build')
+        doctreedir = os.path.join(tmpdir, 'doctrees')
+        
+        os.makedirs(srcdir)
+        
+        # Write index.rst
+        with open(os.path.join(srcdir, 'index.rst'), 'w') as f:
+            f.write(rst_content)
+        
+        # Write conf.py
+        conf_content = """
+extensions = ['sphinx.ext.autodoc']
+"""
+        with open(os.path.join(srcdir, 'conf.py'), 'w') as f:
+            f.write(conf_content)
+        
+        # Build with Sphinx
+        with docutils_namespace():
+            app = Sphinx(srcdir, srcdir, outdir, doctreedir, 'html')
+            app.build()
+            
+        # Check if warnings were generated
+        print("Build completed. Check for warnings about ambiguous class lookup.")
+
+if __name__ == '__main__':
+    test_issue()
\ No newline at end of file
diff --git a/setup.py b/setup.py
index 8d40de1a8..03f325278 100644
--- a/setup.py
+++ b/setup.py
@@ -15,22 +15,22 @@ if sys.version_info < (3, 5):
     sys.exit(1)
 
 install_requires = [
-    'sphinxcontrib-applehelp',
-    'sphinxcontrib-devhelp',
+    'sphinxcontrib-applehelp<=1.0.7',
+    'sphinxcontrib-devhelp<=1.0.5',
     'sphinxcontrib-jsmath',
-    'sphinxcontrib-htmlhelp',
-    'sphinxcontrib-serializinghtml',
-    'sphinxcontrib-qthelp',
-    'Jinja2>=2.3',
+    'sphinxcontrib-htmlhelp<=2.0.4',
+    'sphinxcontrib-serializinghtml<=1.1.9',
+    'sphinxcontrib-qthelp<=1.0.6',
+    'Jinja2<3.0',
     'Pygments>=2.0',
     'docutils>=0.12',
     'snowballstemmer>=1.1',
     'babel>=1.3',
-    'alabaster>=0.7,<0.8',
+    'alabaster>=0.7,<0.7.12',
     'imagesize',
     'requests>=2.5.0',
     'setuptools',
-    'packaging',
+    'packaging', 'markupsafe<=2.0.1',
 ]
 
 extras_require = {
diff --git a/tox.ini b/tox.ini
index dbb705a3a..9f4fc3a32 100644
--- a/tox.ini
+++ b/tox.ini
@@ -28,7 +28,7 @@ setenv =
     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils
     PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:} --color yes
 commands=
-    python -X dev -m pytest --durations 25 {posargs}
+    python -X dev -m pytest -rA --durations 25 {posargs}
 
 [testenv:flake8]
 basepython = python3