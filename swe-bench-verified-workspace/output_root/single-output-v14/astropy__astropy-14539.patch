diff --git a/astropy/io/fits/diff.py b/astropy/io/fits/diff.py
index 100cdf1b8c..c8351e4d0d 100644
--- a/astropy/io/fits/diff.py
+++ b/astropy/io/fits/diff.py
@@ -1449,7 +1449,9 @@ class TableDataDiff(_BaseDiff):
                 arrb.dtype, np.floating
             ):
                 diffs = where_not_allclose(arra, arrb, rtol=self.rtol, atol=self.atol)
-            elif "P" in col.format:
+            elif "P" in col.format or (hasattr(arra, '__class__') and 
+                    arra.__class__.__name__ == '_VLF' and 
+                    arra.__class__.__module__ == 'astropy.io.fits.column'):
                 diffs = (
                     [
                         idx
diff --git a/debug_format.py b/debug_format.py
new file mode 100644
index 0000000000..447116a95f
--- /dev/null
+++ b/debug_format.py
@@ -0,0 +1,14 @@
+from astropy.io import fits
+import numpy as np
+
+# Create the VLA column
+col = fits.Column('a', format='QD', array=[[0], [0, 0]])
+hdu = fits.BinTableHDU.from_columns([col])
+hdu.writeto('diffbug.fits', overwrite=True)
+
+# Load the data to understand column format
+with fits.open('diffbug.fits') as hdul:
+    data = hdul[1].data
+    print("Column format:", hdul[1].columns['a'].format)
+    print("Column data type:", type(data['a']))
+    print("Data is _VLF:", hasattr(data['a'], 'element_dtype'))
\ No newline at end of file
diff --git a/debug_vla.py b/debug_vla.py
new file mode 100644
index 0000000000..385fe4521b
--- /dev/null
+++ b/debug_vla.py
@@ -0,0 +1,22 @@
+from astropy.io import fits
+import numpy as np
+
+# Create the VLA column
+col = fits.Column('a', format='QD', array=[[0], [0, 0]])
+hdu = fits.BinTableHDU.from_columns([col])
+hdu.writeto('diffbug.fits', overwrite=True)
+
+# Load the data to understand its structure
+with fits.open('diffbug.fits') as hdul:
+    data = hdul[1].data
+    print("Column data type:", type(data['a']))
+    print("Column data:", data['a'])
+    print("Data shape:", data['a'].shape)
+    print("First element:", data['a'][0])
+    print("Second element:", data['a'][1])
+    print("First element type:", type(data['a'][0]))
+    print("Second element type:", type(data['a'][1]))
+    
+    # Test the comparison that's failing
+    print("Comparison result:", data['a'] != data['a'])
+    print("Comparison result type:", type(data['a'] != data['a']))
\ No newline at end of file
diff --git a/debug_vlf_detection.py b/debug_vlf_detection.py
new file mode 100644
index 0000000000..2993c53927
--- /dev/null
+++ b/debug_vlf_detection.py
@@ -0,0 +1,25 @@
+from astropy.io import fits
+import numpy as np
+
+# Create the VLA column
+col = fits.Column('a', format='QD', array=[[0], [0, 0]])
+hdu = fits.BinTableHDU.from_columns([col])
+hdu.writeto('diffbug.fits', overwrite=True)
+
+# Load the data to understand how to detect _VLF
+with fits.open('diffbug.fits') as hdul:
+    data = hdul[1].data
+    vlf_data = data['a']
+    
+    print("Data type:", type(vlf_data))
+    print("Data dtype:", vlf_data.dtype)
+    print("Data shape:", vlf_data.shape)
+    print("Has element_dtype:", hasattr(vlf_data, 'element_dtype'))
+    print("Has max:", hasattr(vlf_data, 'max'))
+    print("Module:", vlf_data.__class__.__module__)
+    print("Class name:", vlf_data.__class__.__name__)
+    
+    # Check if it's a _VLF by checking class name and module
+    is_vlf = (vlf_data.__class__.__name__ == '_VLF' and 
+              vlf_data.__class__.__module__ == 'astropy.io.fits.column')
+    print("Is _VLF:", is_vlf)
\ No newline at end of file
diff --git a/diffbug.fits b/diffbug.fits
new file mode 100644
index 0000000000..fb6df78b71
Binary files /dev/null and b/diffbug.fits differ
diff --git a/pyproject.toml b/pyproject.toml
index b4e9ef8387..ff68a7403d 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -1,5 +1,5 @@
 [build-system]
-requires = ["setuptools",
+requires = ["setuptools==68.0.0",
             "setuptools_scm>=6.2",
             "wheel",
             "cython==0.29.30",
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..ba02cf2787
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,10 @@
+from astropy.io import fits
+
+# Reproduce the issue with FITSDiff and VLAs
+col = fits.Column('a', format='QD', array=[[0], [0, 0]])
+hdu = fits.BinTableHDU.from_columns([col])
+hdu.writeto('diffbug.fits', overwrite=True)
+
+print(f"FITSDiff identical: {fits.FITSDiff('diffbug.fits', 'diffbug.fits').identical}")
+print("Running fitsdiff:")
+fits.printdiff('diffbug.fits', 'diffbug.fits')
\ No newline at end of file