diff --git a/django/db/models/query_utils.py b/django/db/models/query_utils.py
index 0caa165e15..6917820604 100644
--- a/django/db/models/query_utils.py
+++ b/django/db/models/query_utils.py
@@ -217,6 +217,7 @@ class RegisterLookupMixin:
         if lookup_name is None:
             lookup_name = lookup.lookup_name
         del cls.class_lookups[lookup_name]
+        cls._clear_cached_lookups()
 
 
 def select_related_descend(field, restricted, requested, load_fields, reverse=False):
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..f50cc2f5a1
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,68 @@
+#!/usr/bin/env python3
+
+"""
+Script to reproduce the issue where _unregister_lookup doesn't clear cache
+"""
+
+import django
+from django.conf import settings
+from django.db import models
+
+# Configure Django settings
+if not settings.configured:
+    settings.configure(
+        DEBUG=True,
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:',
+            }
+        },
+        INSTALLED_APPS=[],
+        USE_TZ=True,
+    )
+
+django.setup()
+
+from django.db.models.query_utils import RegisterLookupMixin
+from django.db.models import Field
+
+# Create a simple test lookup
+class TestLookup(models.Lookup):
+    lookup_name = "test"
+
+    def as_sql(self, compiler, connection):
+        return "test_sql", []
+
+# Test the issue
+def test_unregister_lookup_cache():
+    print("Testing _unregister_lookup cache issue...")
+    
+    # Register the lookup
+    Field.register_lookup(TestLookup)
+    
+    # Get lookups - this will cache the result
+    lookups1 = Field.get_lookups()
+    print(f"Lookups after registration: {list(lookups1.keys())}")
+    
+    # Unregister the lookup
+    Field._unregister_lookup(TestLookup)
+    
+    # Get lookups again - should not contain the test lookup
+    lookups2 = Field.get_lookups()
+    print(f"Lookups after unregistration: {list(lookups2.keys())}")
+    
+    # Check if test lookup is still in the cached result
+    if 'test' in lookups2:
+        print("BUG: Test lookup still found in cache after unregistration!")
+        return False
+    else:
+        print("SUCCESS: Test lookup properly removed from cache")
+        return True
+
+if __name__ == "__main__":
+    success = test_unregister_lookup_cache()
+    if not success:
+        print("\nThe bug is reproduced!")
+    else:
+        print("\nThe bug is NOT reproduced - cache was properly cleared!")
\ No newline at end of file