diff --git a/debug_issue.py b/debug_issue.py
new file mode 100644
index 0000000000..14e48341ea
--- /dev/null
+++ b/debug_issue.py
@@ -0,0 +1,47 @@
+from sympy import *
+from sympy.core.cache import clear_cache
+import traceback
+
+print("Debugging the issue...")
+
+# Test case that fails
+clear_cache()
+x, y, z = symbols('x y z', real=True)
+expr = exp(sinh(Piecewise((x, y > x), (y, True)) / z))
+
+print("Expression:", expr)
+print("Expression type:", type(expr))
+
+# Let's see what happens during substitution step by step
+print("\nTrying substitution...")
+
+try:
+    result = expr.subs({1: 1.0})
+    print("SUCCESS: subs worked")
+except Exception as e:
+    print(f"ERROR: {e}")
+    print("Full traceback:")
+    traceback.print_exc()
+
+# Let's also test the components
+print("\nTesting components:")
+try:
+    piecewise = Piecewise((x, y > x), (y, True))
+    print("Piecewise:", piecewise)
+    sinh_expr = sinh(piecewise / z)
+    print("Sinh expression:", sinh_expr)
+    exp_expr = exp(sinh_expr)
+    print("Exp expression:", exp_expr)
+    
+    # Test substitution on each component
+    print("\nTesting substitution on components:")
+    result1 = piecewise.subs({1: 1.0})
+    print("Piecewise subs:", result1)
+    result2 = sinh_expr.subs({1: 1.0})
+    print("Sinh subs:", result2)
+    result3 = exp_expr.subs({1: 1.0})
+    print("Exp subs:", result3)
+    
+except Exception as e:
+    print(f"Component error: {e}")
+    traceback.print_exc()
\ No newline at end of file
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..68a8265f07
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,32 @@
+from sympy import *
+from sympy.core.cache import clear_cache
+
+print("Testing the issue...")
+
+x, y, z = symbols('x y z')
+
+clear_cache()
+expr = exp(sinh(Piecewise((x, y > x), (y, True)) / z))
+print("Test 1 - without real assumptions:")
+try:
+    result = expr.subs({1: 1.0})
+    print("SUCCESS: subs worked without real assumptions")
+except Exception as e:
+    print(f"ERROR: {e}")
+
+clear_cache()
+x, y, z = symbols('x y z', real=True)
+expr = exp(sinh(Piecewise((x, y > x), (y, True)) / z))
+print("Test 2 - with real assumptions:")
+try:
+    result = expr.subs({1: 1.0})
+    print("SUCCESS: subs worked with real assumptions")
+except Exception as e:
+    print(f"ERROR: {e}")
+
+print("Test 3 - running subs again (should work due to caching):")
+try:
+    result = expr.subs({1: 1.0})
+    print("SUCCESS: subs worked on second attempt")
+except Exception as e:
+    print(f"ERROR: {e}")
\ No newline at end of file