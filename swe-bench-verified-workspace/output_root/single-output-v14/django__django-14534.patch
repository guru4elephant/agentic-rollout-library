diff --git a/django/forms/boundfield.py b/django/forms/boundfield.py
index 2ff8b0ee26..c93959b1e3 100644
--- a/django/forms/boundfield.py
+++ b/django/forms/boundfield.py
@@ -277,7 +277,7 @@ class BoundWidget:
 
     @property
     def id_for_label(self):
-        return 'id_%s_%s' % (self.data['name'], self.data['index'])
+        return self.data['attrs']['id']
 
     @property
     def choice_label(self):
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..93aa8b28de
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,56 @@
+#!/usr/bin/env python3
+"""
+Script to reproduce the BoundWidget.id_for_label issue
+"""
+import os
+import sys
+sys.path.insert(0, '/testbed')
+
+# Configure Django settings
+import django
+from django.conf import settings
+
+if not settings.configured:
+    settings.configure(
+        DEBUG=True,
+        SECRET_KEY='test-secret-key',
+        USE_I18N=True,
+        USE_L10N=True,
+        USE_TZ=True,
+    )
+    django.setup()
+
+from django import forms
+from django.forms.boundfield import BoundWidget
+
+class TestForm(forms.Form):
+    choices = forms.MultipleChoiceField(
+        choices=[('1', 'Option 1'), ('2', 'Option 2')],
+        widget=forms.CheckboxSelectMultiple,
+    )
+
+def test_bound_widget_id_for_label():
+    # Create a form with custom auto_id format
+    form = TestForm(auto_id='custom_%s')
+    
+    # Get the bound field
+    bound_field = form['choices']
+    
+    # Get the subwidgets
+    subwidgets = list(bound_field.subwidgets)
+    
+    print("Testing BoundWidget.id_for_label issue:")
+    print(f"Form auto_id: {form.auto_id}")
+    print(f"BoundField auto_id: {bound_field.auto_id}")
+    print()
+    
+    for i, widget in enumerate(subwidgets):
+        print(f"Subwidget {i}:")
+        print(f"  widget.data: {widget.data}")
+        print(f"  Current id_for_label(): {widget.id_for_label}")
+        print(f"  Expected (from attrs['id']): {widget.data['attrs']['id']}")
+        print(f"  Match: {widget.id_for_label == widget.data['attrs']['id']}")
+        print()
+
+if __name__ == '__main__':
+    test_bound_widget_id_for_label()
\ No newline at end of file