diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..7ceb695bf6
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,42 @@
+#!/usr/bin/env python3
+"""
+Script to reproduce the parse_http_date two-digit year issue
+"""
+from django.utils.http import parse_http_date
+from datetime import datetime
+
+def test_current_behavior():
+    print("Testing current behavior of parse_http_date:")
+    
+    # Test cases that should demonstrate the issue
+    test_cases = [
+        # RFC850 format with two-digit year
+        ('Sunday, 06-Nov-94 08:49:37 GMT', '1994-11-06 08:49:37'),  # Should be 1994
+        ('Sunday, 06-Nov-24 08:49:37 GMT', '2024-11-06 08:49:37'),  # Should be 2024 (current year 2024)
+        ('Sunday, 06-Nov-74 08:49:37 GMT', '1974-11-06 08:49:37'),  # Should be 1974
+        ('Sunday, 06-Nov-99 08:49:37 GMT', '1999-11-06 08:49:37'),  # Should be 1999
+        
+        # Test case from the test file - year 37 should be 2037, not 1937
+        ('Sun Nov  6 08:49:37 0037', '2037-11-06 08:49:37'),
+    ]
+    
+    current_year = datetime.now().year
+    
+    for date_str, expected_str in test_cases:
+        try:
+            timestamp = parse_http_date(date_str)
+            parsed_dt = datetime.utcfromtimestamp(timestamp)
+            actual_str = parsed_dt.strftime('%Y-%m-%d %H:%M:%S')
+            
+            print(f"Input: {date_str}")
+            print(f"Expected: {expected_str}")
+            print(f"Actual: {actual_str}")
+            print(f"Match: {expected_str == actual_str}")
+            print()
+            
+        except Exception as e:
+            print(f"Error parsing {date_str}: {e}")
+            print()
+
+if __name__ == "__main__":
+    test_current_behavior()
\ No newline at end of file