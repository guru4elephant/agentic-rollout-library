diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 000000000..f1bdfcc79
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,55 @@
+#!/usr/bin/env python3
+"""
+Script to reproduce the issue where pytest tries to collect __init__.py files
+"""
+import os
+import tempfile
+import shutil
+import subprocess
+import sys
+
+def test_reproduce_issue():
+    # Create a temporary directory
+    with tempfile.TemporaryDirectory() as tmpdir:
+        # Create a subdirectory with __init__.py that should fail
+        foobar_dir = os.path.join(tmpdir, 'foobar')
+        os.makedirs(foobar_dir)
+        
+        # Create __init__.py with assert False
+        init_py = os.path.join(foobar_dir, '__init__.py')
+        with open(init_py, 'w') as f:
+            f.write('assert False\n')
+        
+        # Create a simple test file
+        test_file = os.path.join(tmpdir, 'test_foo.py')
+        with open(test_file, 'w') as f:
+            f.write('def test_dummy():\n    assert True\n')
+        
+        # Change to the temporary directory
+        original_cwd = os.getcwd()
+        os.chdir(tmpdir)
+        
+        try:
+            # Run pytest and capture the output
+            result = subprocess.run([sys.executable, '-m', 'pytest'], 
+                                  capture_output=True, text=True)
+            
+            print("STDOUT:")
+            print(result.stdout)
+            print("STDERR:")
+            print(result.stderr)
+            print("Return code:", result.returncode)
+            
+            # Check if the error occurred (collecting __init__.py)
+            if 'ERROR collecting foobar/__init__.py' in result.stdout:
+                print("✓ Issue reproduced: pytest is trying to collect __init__.py")
+                return True
+            else:
+                print("✗ Issue not reproduced")
+                return False
+                
+        finally:
+            os.chdir(original_cwd)
+
+if __name__ == '__main__':
+    test_reproduce_issue()
\ No newline at end of file
diff --git a/src/_pytest/python.py b/src/_pytest/python.py
index 306e5f217..4bd8f1fdf 100644
--- a/src/_pytest/python.py
+++ b/src/_pytest/python.py
@@ -178,7 +178,7 @@ def pytest_collect_file(path, parent):
     if ext == ".py":
         if not parent.session.isinitpath(path):
             if not path_matches_patterns(
-                path, parent.config.getini("python_files") + ["__init__.py"]
+                path, parent.config.getini("python_files")
             ):
                 return
         ihook = parent.session.gethookproxy(path)