diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py
index 802fd3c997..ba53e05f4b 100644
--- a/lib/matplotlib/axes/_base.py
+++ b/lib/matplotlib/axes/_base.py
@@ -1192,6 +1192,12 @@ class _AxesBase(martist.Artist):
         xaxis_visible = self.xaxis.get_visible()
         yaxis_visible = self.yaxis.get_visible()
 
+        # stash the current tick label visibility state for shared axes
+        xaxis_label1On = self.xaxis._major_tick_kw.get('label1On', True)
+        xaxis_label2On = self.xaxis._major_tick_kw.get('label2On', False)
+        yaxis_label1On = self.yaxis._major_tick_kw.get('label1On', True)
+        yaxis_label2On = self.yaxis._major_tick_kw.get('label2On', False)
+
         self.xaxis.clear()
         self.yaxis.clear()
 
@@ -1309,6 +1315,14 @@ class _AxesBase(martist.Artist):
             self.yaxis.set_visible(yaxis_visible)
             self.patch.set_visible(patch_visible)
 
+        # restore tick label visibility for shared axes by calling label_outer methods
+        if self._sharex is not None:
+            if hasattr(self, '_label_outer_xaxis'):
+                self._label_outer_xaxis()
+        if self._sharey is not None:
+            if hasattr(self, '_label_outer_yaxis'):
+                self._label_outer_yaxis()
+
         self.stale = True
 
     class ArtistList(MutableSequence):
diff --git a/reproduce_issue.png b/reproduce_issue.png
new file mode 100644
index 0000000000..cd00c4695a
Binary files /dev/null and b/reproduce_issue.png differ
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..d949c1d52f
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,14 @@
+import numpy as np
+import matplotlib.pyplot as plt
+
+fig, axes = plt.subplots(2, 2, sharex=True, sharey=True)
+
+x = np.arange(0.0, 2*np.pi, 0.01)
+y = np.sin(x)
+
+for ax in axes.flatten():
+    ax.clear()
+    ax.plot(x, y)
+
+plt.savefig('reproduce_issue.png')
+plt.show()
\ No newline at end of file
diff --git a/test_fix.py b/test_fix.py
new file mode 100644
index 0000000000..b27c0fb5b8
--- /dev/null
+++ b/test_fix.py
@@ -0,0 +1,66 @@
+import numpy as np
+import matplotlib.pyplot as plt
+
+# Test 1: Basic reproduction case
+fig, axes = plt.subplots(2, 2, sharex=True, sharey=True)
+
+x = np.arange(0.0, 2*np.pi, 0.01)
+y = np.sin(x)
+
+for ax in axes.flatten():
+    ax.clear()
+    ax.plot(x, y)
+
+plt.savefig('test_fix_basic.png')
+plt.close()
+
+# Test 2: Check tick label visibility explicitly
+fig, axes = plt.subplots(2, 2, sharex=True, sharey=True)
+
+# Store initial tick label visibility
+initial_visibility = {}
+for i, ax in enumerate(axes.flatten()):
+    initial_visibility[i] = {
+        'x_label1': ax.xaxis._major_tick_kw.get('label1On', True),
+        'x_label2': ax.xaxis._major_tick_kw.get('label2On', False),
+        'y_label1': ax.yaxis._major_tick_kw.get('label1On', True),
+        'y_label2': ax.yaxis._major_tick_kw.get('label2On', False)
+    }
+
+# Clear and replot
+for ax in axes.flatten():
+    ax.clear()
+    ax.plot(x, y)
+
+# Check final tick label visibility
+final_visibility = {}
+for i, ax in enumerate(axes.flatten()):
+    final_visibility[i] = {
+        'x_label1': ax.xaxis._major_tick_kw.get('label1On', True),
+        'x_label2': ax.xaxis._major_tick_kw.get('label2On', False),
+        'y_label1': ax.yaxis._major_tick_kw.get('label1On', True),
+        'y_label2': ax.yaxis._major_tick_kw.get('label2On', False)
+    }
+
+print("Initial visibility:", initial_visibility)
+print("Final visibility:", final_visibility)
+
+# Test 3: Check if the right axes have hidden labels
+# For shared x-axis, only bottom row should have x labels
+# For shared y-axis, only left column should have y labels
+fig, axes = plt.subplots(2, 2, sharex=True, sharey=True)
+
+for ax in axes.flatten():
+    ax.clear()
+    ax.plot(x, y)
+
+# Check which axes have visible tick labels
+for i, ax in enumerate(axes.flatten()):
+    print(f"Axes {i}:")
+    print(f"  X label1 (bottom): {ax.xaxis._major_tick_kw.get('label1On', True)}")
+    print(f"  X label2 (top): {ax.xaxis._major_tick_kw.get('label2On', False)}")
+    print(f"  Y label1 (left): {ax.yaxis._major_tick_kw.get('label1On', True)}")
+    print(f"  Y label2 (right): {ax.yaxis._major_tick_kw.get('label2On', False)}")
+
+plt.savefig('test_fix_detailed.png')
+plt.close()
\ No newline at end of file
diff --git a/test_fix_basic.png b/test_fix_basic.png
new file mode 100644
index 0000000000..cd00c4695a
Binary files /dev/null and b/test_fix_basic.png differ
diff --git a/test_fix_detailed.png b/test_fix_detailed.png
new file mode 100644
index 0000000000..cd00c4695a
Binary files /dev/null and b/test_fix_detailed.png differ