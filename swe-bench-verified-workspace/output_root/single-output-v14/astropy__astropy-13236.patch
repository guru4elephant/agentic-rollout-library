diff --git a/astropy/table/table.py b/astropy/table/table.py
index 5afe2127a3..26d370131d 100644
--- a/astropy/table/table.py
+++ b/astropy/table/table.py
@@ -1243,6 +1243,14 @@ class Table:
         # mixin class
         if (not isinstance(data, Column) and not data_is_mixin
                 and isinstance(data, np.ndarray) and len(data.dtype) > 1):
+            warnings.warn("Adding a structured array directly to a Table will "
+                          "change in the future. Currently it is automatically "
+                          "converted to an NdarrayMixin, but in astropy 5.2 it "
+                          "will be added as a Column. To keep the future behavior "
+                          "now, wrap the structured array in a Column object "
+                          "before adding it to the table, e.g., "
+                          "table['col'] = Column(structured_array).",
+                          FutureWarning)
             data = data.view(NdarrayMixin)
             data_is_mixin = True
 
diff --git a/pyproject.toml b/pyproject.toml
index 4e84dd196b..3c3d00c32d 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -1,5 +1,5 @@
 [build-system]
-requires = ["setuptools",
+requires = ["setuptools==68.0.0",
             "setuptools_scm>=6.2",
             "wheel",
             "cython==0.29.22",
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..00f1779342
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,24 @@
+#!/usr/bin/env python3
+"""
+Script to reproduce the issue with structured array transformation to NdarrayMixin
+"""
+
+import numpy as np
+from astropy.table import Table
+
+# Create a structured numpy array
+structured_array = np.array([(1, 2.0), (3, 4.0)], dtype=[('a', 'i4'), ('b', 'f8')])
+
+print("Original structured array:")
+print(f"Type: {type(structured_array)}")
+print(f"Data: {structured_array}")
+print(f"Dtype: {structured_array.dtype}")
+
+# Add it to a table
+table = Table()
+table['structured_col'] = structured_array
+
+print("\nAfter adding to table:")
+print(f"Column type: {type(table['structured_col'])}")
+print(f"Column data: {table['structured_col']}")
+print(f"Is NdarrayMixin? {hasattr(table['structured_col'], '__class__') and 'NdarrayMixin' in str(type(table['structured_col']))}")
\ No newline at end of file
diff --git a/test_workaround.py b/test_workaround.py
new file mode 100644
index 0000000000..d6ef249955
--- /dev/null
+++ b/test_workaround.py
@@ -0,0 +1,25 @@
+#!/usr/bin/env python3
+"""
+Test the suggested workaround from the warning message
+"""
+
+import numpy as np
+from astropy.table import Table, Column
+
+# Create a structured numpy array
+structured_array = np.array([(1, 2.0), (3, 4.0)], dtype=[('a', 'i4'), ('b', 'f8')])
+
+print("Original structured array:")
+print(f"Type: {type(structured_array)}")
+print(f"Data: {structured_array}")
+print(f"Dtype: {structured_array.dtype}")
+
+# Test the suggested workaround: wrap in Column before adding to table
+table = Table()
+table['structured_col'] = Column(structured_array)
+
+print("\nAfter adding wrapped in Column:")
+print(f"Column type: {type(table['structured_col'])}")
+print(f"Column data: {table['structured_col']}")
+print(f"Is Column? {isinstance(table['structured_col'], Column)}")
+print(f"Is NdarrayMixin? {hasattr(table['structured_col'], '__class__') and 'NdarrayMixin' in str(type(table['structured_col']))}")
\ No newline at end of file