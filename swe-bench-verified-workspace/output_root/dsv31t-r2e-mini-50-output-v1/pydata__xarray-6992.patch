diff --git a/debug_reproduce.py b/debug_reproduce.py
new file mode 100644
index 00000000..e76e5646
--- /dev/null
+++ b/debug_reproduce.py
@@ -0,0 +1,30 @@
+import xarray as xr
+
+# Reproduce the issue from the GitHub issue
+ds = xr.Dataset(coords={"a": ("x", [1, 2, 3]), "b": ("x", ['a', 'b', 'c'])})
+print("Original dataset:")
+print(f"_variables keys: {list(ds._variables.keys())}")
+print(f"_coord_names: {ds._coord_names}")
+
+# Set index
+ds_indexed = ds.set_index(z=['a', 'b'])
+print("\nAfter set_index:")
+print(f"_variables keys: {list(ds_indexed._variables.keys())}")
+print(f"_coord_names: {ds_indexed._coord_names}")
+
+# Reset index with drop=True
+result = ds_indexed.reset_index("z", drop=True)
+print("\nAfter reset_index with drop=True:")
+print(f"_variables keys: {list(result._variables.keys())}")
+print(f"_coord_names: {result._coord_names}")
+
+# Check DataVariables length
+print(f"\nDataVariables length: {len(result.data_vars)}")
+print(f"Calculation: len(_variables)={len(result._variables)}, len(_coord_names)={len(result._coord_names)}")
+print(f"Result: {len(result._variables)} - {len(result._coord_names)} = {len(result._variables) - len(result._coord_names)}")
+
+# Try to access the repr
+try:
+    print(result)
+except Exception as e:
+    print(f"Error in repr: {e}")
\ No newline at end of file
diff --git a/final_test.py b/final_test.py
new file mode 100644
index 00000000..e68ae12c
--- /dev/null
+++ b/final_test.py
@@ -0,0 +1,24 @@
+import xarray as xr
+
+# Exact reproduction from the GitHub issue
+print("=== Testing exact GitHub issue scenario ===")
+ds = xr.Dataset(coords={"a": ("x", [1, 2, 3]), "b": ("x", ['a', 'b', 'c'])})
+result = ds.set_index(z=['a', 'b']).reset_index("z", drop=True)
+print("Success! No error occurred.")
+print(result)
+
+# Test that the DataVariables length is correct
+print(f"\nDataVariables length: {len(result.data_vars)}")
+
+# Test that we can iterate over data_vars without issues
+print("\nIterating over data_vars:")
+for key in result.data_vars:
+    print(f"  {key}: {result.data_vars[key]}")
+
+# Test that we can check containment without issues
+print(f"\nChecking containment:")
+print(f"  'a' in data_vars: {'a' in result.data_vars}")
+print(f"  'b' in data_vars: {'b' in result.data_vars}")
+print(f"  'nonexistent' in data_vars: {'nonexistent' in result.data_vars}")
+
+print("\n=== All tests passed! ===")
\ No newline at end of file
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 00000000..dff6a883
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,6 @@
+import xarray as xr
+
+# Reproduce the issue from the GitHub issue
+ds = xr.Dataset(coords={"a": ("x", [1, 2, 3]), "b": ("x", ['a', 'b', 'c'])})
+result = ds.set_index(z=['a', 'b']).reset_index("z", drop=True)
+print(result)
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 00000000..88064f8a
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,25 @@
+import xarray as xr
+
+print("=== Edge Case 1: new_variables is empty ===")
+ds1 = xr.Dataset(coords={"a": ("x", [1, 2, 3])})
+ds1_indexed = ds1.set_index(x=['a'])
+result1 = ds1_indexed.reset_index("x", drop=True)
+print(f"Result: {result1}")
+print(f"DataVariables length: {len(result1.data_vars)}")
+
+print("\n=== Edge Case 2: _coord_names contains invalid names ===")
+# Create a dataset with some coordinate that might get filtered out
+ds2 = xr.Dataset(coords={"a": ("x", [1, 2, 3]), "b": ("x", [4, 5, 6])})
+ds2_indexed = ds2.set_index(x=['a', 'b'])
+# Manually modify coord_names to include an invalid name for testing
+ds2_indexed._coord_names.add("invalid_coord")
+result2 = ds2_indexed.reset_index("x", drop=True)
+print(f"Result: {result2}")
+print(f"DataVariables length: {len(result2.data_vars)}")
+
+print("\n=== Edge Case 3: All coordinate names are valid ===")
+ds3 = xr.Dataset(coords={"a": ("x", [1, 2, 3])})
+ds3_indexed = ds3.set_index(x=['a'])
+result3 = ds3_indexed.reset_index("x", drop=False)  # drop=False keeps variables
+print(f"Result: {result3}")
+print(f"DataVariables length: {len(result3.data_vars)}")
\ No newline at end of file
diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py
index 620f32f8..0731976b 100644
--- a/xarray/core/dataset.py
+++ b/xarray/core/dataset.py
@@ -4178,6 +4178,7 @@ class Dataset(
         variables.update(new_variables)
 
         coord_names = set(new_variables) | self._coord_names
+        coord_names = {name for name in coord_names if name in variables}
 
         return self._replace(variables, coord_names=coord_names, indexes=indexes)