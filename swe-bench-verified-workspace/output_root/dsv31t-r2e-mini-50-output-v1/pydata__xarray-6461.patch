diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 00000000..0bb66193
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,31 @@
+import xarray as xr
+
+# Test case from the issue
+try:
+    result = xr.where(xr.DataArray([1, 2, 3]) > 0, 1, 0, keep_attrs=True)
+    print("Success! Result:", result)
+except Exception as e:
+    print("Error:", e)
+    print("Error type:", type(e).__name__)
+
+# Additional test cases to consider
+print("\nTesting with scalar as second argument:")
+try:
+    result = xr.where(xr.DataArray([1, 2, 3]) > 0, 1, xr.DataArray([0, 0, 0]), keep_attrs=True)
+    print("Success! Result:", result)
+except Exception as e:
+    print("Error:", e)
+
+print("\nTesting with scalar as third argument:")
+try:
+    result = xr.where(xr.DataArray([1, 2, 3]) > 0, xr.DataArray([1, 1, 1]), 0, keep_attrs=True)
+    print("Success! Result:", result)
+except Exception as e:
+    print("Error:", e)
+
+print("\nTesting with both DataArrays:")
+try:
+    result = xr.where(xr.DataArray([1, 2, 3]) > 0, xr.DataArray([1, 1, 1]), xr.DataArray([0, 0, 0]), keep_attrs=True)
+    print("Success! Result:", result)
+except Exception as e:
+    print("Error:", e)
\ No newline at end of file
diff --git a/test_comprehensive.py b/test_comprehensive.py
new file mode 100644
index 00000000..385c55a7
--- /dev/null
+++ b/test_comprehensive.py
@@ -0,0 +1,50 @@
+import xarray as xr
+import numpy as np
+
+def test_case(description, test_func):
+    print(f"\n{description}")
+    try:
+        result = test_func()
+        print(f"Success! Result: {result}")
+        return True
+    except Exception as e:
+        print(f"Error: {e}")
+        return False
+
+# Test cases with different combinations of scalars and DataArrays
+print("Testing various combinations with keep_attrs=True:")
+
+# 1. Both x and y are scalars (original issue)
+test_case("Both x and y are scalars", 
+          lambda: xr.where(xr.DataArray([1, 2, 3]) > 0, 1, 0, keep_attrs=True))
+
+# 2. x is scalar, y is DataArray
+test_case("x is scalar, y is DataArray", 
+          lambda: xr.where(xr.DataArray([1, 2, 3]) > 0, 1, xr.DataArray([0, 0, 0]), keep_attrs=True))
+
+# 3. x is DataArray, y is scalar
+test_case("x is DataArray, y is scalar", 
+          lambda: xr.where(xr.DataArray([1, 2, 3]) > 0, xr.DataArray([1, 1, 1]), 0, keep_attrs=True))
+
+# 4. Both x and y are DataArrays
+test_case("Both x and y are DataArrays", 
+          lambda: xr.where(xr.DataArray([1, 2, 3]) > 0, xr.DataArray([1, 1, 1]), xr.DataArray([0, 0, 0]), keep_attrs=True))
+
+# 5. Test with DataArrays that have attributes
+da_with_attrs = xr.DataArray([1, 2, 3], attrs={'test': 'value'})
+test_case("DataArrays with attributes", 
+          lambda: xr.where(xr.DataArray([1, 2, 3]) > 0, da_with_attrs, 0, keep_attrs=True))
+
+# 6. Test with keep_attrs=False (should work regardless)
+test_case("keep_attrs=False with scalars", 
+          lambda: xr.where(xr.DataArray([1, 2, 3]) > 0, 1, 0, keep_attrs=False))
+
+# 7. Test with keep_attrs=None (default behavior)
+test_case("keep_attrs=None with scalars", 
+          lambda: xr.where(xr.DataArray([1, 2, 3]) > 0, 1, 0, keep_attrs=None))
+
+# 8. Test edge case: empty attributes list scenario
+test_case("Complex case with mixed types", 
+          lambda: xr.where(xr.DataArray([True, False]), 42, xr.DataArray([10, 20]), keep_attrs=True))
+
+print("\nAll tests completed!")
\ No newline at end of file
diff --git a/test_original_issue.py b/test_original_issue.py
new file mode 100644
index 00000000..c880f067
--- /dev/null
+++ b/test_original_issue.py
@@ -0,0 +1,26 @@
+import xarray as xr
+
+# Exact test case from the GitHub issue
+print("Testing the exact case from the GitHub issue:")
+try:
+    result = xr.where(xr.DataArray([1, 2, 3]) > 0, 1, 0)
+    print("Success! Result:", result)
+    print("This should work without keep_attrs=True (default behavior)")
+except Exception as e:
+    print("Error:", e)
+
+print("\nTesting the case with keep_attrs=True (the failing case from the issue):")
+try:
+    result = xr.where(xr.DataArray([1, 2, 3]) > 0, 1, 0, keep_attrs=True)
+    print("Success! Result:", result)
+    print("This should now work with our fix")
+except Exception as e:
+    print("Error:", e)
+
+print("\nTesting the workaround mentioned in the issue (keep_attrs=False):")
+try:
+    result = xr.where(xr.DataArray([1, 2, 3]) > 0, 1, 0, keep_attrs=False)
+    print("Success! Result:", result)
+    print("This should continue to work")
+except Exception as e:
+    print("Error:", e)
\ No newline at end of file
diff --git a/xarray/core/computation.py b/xarray/core/computation.py
index 7676d8e5..885c1b51 100644
--- a/xarray/core/computation.py
+++ b/xarray/core/computation.py
@@ -1829,7 +1829,7 @@ def where(cond, x, y, keep_attrs=None):
     if keep_attrs is True:
         # keep the attributes of x, the second parameter, by default to
         # be consistent with the `where` method of `DataArray` and `Dataset`
-        keep_attrs = lambda attrs, context: attrs[1]
+        keep_attrs = lambda attrs, context: attrs[1] if len(attrs) > 1 else {}
 
     # alignment for three arguments is complicated, so don't support it yet
     return apply_ufunc(