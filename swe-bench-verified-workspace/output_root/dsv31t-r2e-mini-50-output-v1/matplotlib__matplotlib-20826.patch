diff --git a/after_fix.png b/after_fix.png
new file mode 100644
index 0000000000..c6d578ddb1
Binary files /dev/null and b/after_fix.png differ
diff --git a/before_fix.png b/before_fix.png
new file mode 100644
index 0000000000..50d9a65d2e
Binary files /dev/null and b/before_fix.png differ
diff --git a/debug_axes_type.py b/debug_axes_type.py
new file mode 100644
index 0000000000..d554cc45dc
--- /dev/null
+++ b/debug_axes_type.py
@@ -0,0 +1,12 @@
+import matplotlib.pyplot as plt
+
+fig, axes = plt.subplots(2, 2, sharex=True, sharey=True)
+
+for i, ax in enumerate(axes.flatten()):
+    print(f"Axis {i+1}: {type(ax)}")
+    print(f"  Has _label_outer_xaxis: {hasattr(ax, '_label_outer_xaxis')}")
+    print(f"  Has _label_outer_yaxis: {hasattr(ax, '_label_outer_yaxis')}")
+    print(f"  Has _subplotspec: {hasattr(ax, '_subplotspec')}")
+    if hasattr(ax, '_subplotspec'):
+        print(f"  _subplotspec: {ax._subplotspec}")
+    print()
\ No newline at end of file
diff --git a/debug_tick_params.py b/debug_tick_params.py
new file mode 100644
index 0000000000..fbc930f206
--- /dev/null
+++ b/debug_tick_params.py
@@ -0,0 +1,9 @@
+import matplotlib.pyplot as plt
+
+fig, axes = plt.subplots(2, 2, sharex=True, sharey=True)
+
+for i, ax in enumerate(axes.flatten()):
+    print(f"Axis {i+1}:")
+    print(f"  xaxis._major_tick_kw: {ax.xaxis._major_tick_kw}")
+    print(f"  yaxis._major_ticK_kw: {ax.yaxis._major_tick_kw}")
+    print()
\ No newline at end of file
diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py
index 802fd3c997..51c86fa9ab 100644
--- a/lib/matplotlib/axes/_base.py
+++ b/lib/matplotlib/axes/_base.py
@@ -1309,6 +1309,19 @@ class _AxesBase(martist.Artist):
             self.yaxis.set_visible(yaxis_visible)
             self.patch.set_visible(patch_visible)
 
+        # Reapply shared axis tick label visibility logic
+        if hasattr(self, '_subplotspec') and self._subplotspec is not None:
+            # Only reapply label outer logic if we have a subplotspec
+            # and the axes are shared (this preserves the original behavior
+            # where only certain axes in a grid show tick labels)
+            ss = self._subplotspec
+            # For x-axis: only show labels on bottom row
+            if not ss.is_last_row():
+                self.xaxis.set_tick_params(which="both", labelbottom=False)
+            # For y-axis: only show labels on first column  
+            if not ss.is_first_col():
+                self.yaxis.set_tick_params(which="both", labelleft=False)
+
         self.stale = True
 
     class ArtistList(MutableSequence):
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..757d93c1a3
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,14 @@
+import numpy as np
+import matplotlib.pyplot as plt
+
+fig, axes = plt.subplots(2, 2, sharex=True, sharey=True)
+
+x = np.arange(0.0, 2*np.pi, 0.01)
+y = np.sin(x)
+
+for ax in axes.flatten():
+    ax.clear()
+    ax.plot(x, y)
+
+plt.savefig('before_fix.png')
+plt.show()
\ No newline at end of file
diff --git a/test_2x2_shared.png b/test_2x2_shared.png
new file mode 100644
index 0000000000..26d61b9ff1
Binary files /dev/null and b/test_2x2_shared.png differ
diff --git a/test_fix_comprehensive.py b/test_fix_comprehensive.py
new file mode 100644
index 0000000000..e07c5e140b
--- /dev/null
+++ b/test_fix_comprehensive.py
@@ -0,0 +1,51 @@
+import numpy as np
+import matplotlib
+matplotlib.use('Agg')
+import matplotlib.pyplot as plt
+
+def test_shared_axes_clear():
+    """Test that clearing shared axes preserves tick label visibility"""
+    print("Testing shared axes clear functionality...")
+    
+    # Test 1: 2x2 grid with shared axes
+    fig, axes = plt.subplots(2, 2, sharex=True, sharey=True)
+    
+    x = np.arange(0.0, 2*np.pi, 0.01)
+    y = np.sin(x)
+    
+    # Clear and replot each axis
+    for i, ax in enumerate(axes.flatten()):
+        ax.clear()
+        ax.plot(x, y)
+        ax.set_title(f'Axis {i+1}')
+    
+    plt.savefig('test_2x2_shared.png')
+    print("Saved test_2x2_shared.png")
+    
+    # Test 2: Check that only bottom and left axes show tick labels
+    fig, axes = plt.subplots(2, 2, sharex=True, sharey=True)
+    
+    # Check initial state
+    print("\nInitial tick label visibility:")
+    for i, ax in enumerate(axes.flatten()):
+        row, col = i // 2, i % 2
+        x_visible = ax.xaxis._major_tick_kw.get('label1On', False)
+        y_visible = ax.yaxis._major_tick_kw.get('label1On', False)
+        print(f"Axis {i+1} (row {row}, col {col}): x_labels={x_visible}, y_labels={y_visible}")
+    
+    # Clear and check again
+    print("\nAfter clear():")
+    for i, ax in enumerate(axes.flatten()):
+        ax.clear()
+        row, col = i // 2, i % 2
+        x_visible = ax.xaxis._major_tick_kw.get('label1On', False)
+        y_visible = ax.yaxis._major_tick_kw.get('label1On', False)
+        print(f"Axis {i+1} (row {row}, col {col}): x_labels={x_visible}, y_labels={y_visible}")
+    
+    plt.savefig('test_visibility_check.png')
+    print("Saved test_visibility_check.png")
+    
+    print("\nTest completed successfully!")
+
+if __name__ == "__main__":
+    test_shared_axes_clear()
\ No newline at end of file
diff --git a/test_visibility_check.png b/test_visibility_check.png
new file mode 100644
index 0000000000..d1ab7e2f0b
Binary files /dev/null and b/test_visibility_check.png differ