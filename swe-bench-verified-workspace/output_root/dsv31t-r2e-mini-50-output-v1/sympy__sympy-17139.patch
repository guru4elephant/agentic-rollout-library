diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..b7112cc775
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,3 @@
+from sympy import *
+x = Symbol('x')
+print(simplify(cos(x)**I))
\ No newline at end of file
diff --git a/sympy/simplify/fu.py b/sympy/simplify/fu.py
index ad1130ef96..c8f8f4c773 100644
--- a/sympy/simplify/fu.py
+++ b/sympy/simplify/fu.py
@@ -501,6 +501,8 @@ def _f(rv):
         if not (rv.is_Pow and rv.base.func == f):
             return rv
 
+        if not rv.exp.is_real:
+            return rv
         if (rv.exp < 0) == True:
             return rv
         if (rv.exp > max) == True:
diff --git a/test_complex_exponent_fix.py b/test_complex_exponent_fix.py
new file mode 100644
index 0000000000..e17167c791
--- /dev/null
+++ b/test_complex_exponent_fix.py
@@ -0,0 +1,48 @@
+from sympy import *
+from sympy.simplify.fu import TR6
+
+x = Symbol('x')
+
+def test_complex_exponent_fix():
+    """Test that complex exponents don't cause TypeError in TR6"""
+    
+    # This should not raise a TypeError anymore
+    try:
+        result1 = TR6(cos(x)**I)
+        print(f"✓ TR6(cos(x)**I) = {result1}")
+    except TypeError as e:
+        print(f"✗ TR6(cos(x)**I) failed: {e}")
+        return False
+    
+    # This should not raise a TypeError anymore  
+    try:
+        result2 = TR6(sin(x)**(2*I))
+        print(f"✓ TR6(sin(x)**(2*I)) = {result2}")
+    except TypeError as e:
+        print(f"✗ TR6(sin(x)**(2*I)) failed: {e}")
+        return False
+    
+    # Real exponents should still work as before
+    try:
+        result3 = TR6(cos(x)**2)
+        print(f"✓ TR6(cos(x)**2) = {result3}")
+    except Exception as e:
+        print(f"✗ TR6(cos(x)**2) failed: {e}")
+        return False
+    
+    # Negative real exponents should still work as before
+    try:
+        result4 = TR6(cos(x)**(-2))
+        print(f"✓ TR6(cos(x)**(-2)) = {result4}")
+    except Exception as e:
+        print(f"✗ TR6(cos(x)**(-2)) failed: {e}")
+        return False
+    
+    return True
+
+if __name__ == "__main__":
+    success = test_complex_exponent_fix()
+    if success:
+        print("\n🎉 All tests passed! The fix works correctly.")
+    else:
+        print("\n❌ Some tests failed.")
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..75f06d4f49
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,27 @@
+from sympy import *
+x = Symbol('x')
+
+# Test case 1: Complex exponent with I
+print("Test 1 - Complex exponent with I:")
+result1 = simplify(cos(x)**I)
+print(f"cos(x)**I -> {result1}")
+
+# Test case 2: Complex exponent with 2*I
+print("\nTest 2 - Complex exponent with 2*I:")
+result2 = simplify(cos(x)**(2*I))
+print(f"cos(x)**(2*I) -> {result2}")
+
+# Test case 3: Real exponent (should still work)
+print("\nTest 3 - Real exponent (should still work):")
+result3 = simplify(cos(x)**2)
+print(f"cos(x)**2 -> {result3}")
+
+# Test case 4: Negative real exponent (should still work)
+print("\nTest 4 - Negative real exponent (should still work):")
+result4 = simplify(cos(x)**(-2))
+print(f"cos(x)**(-2) -> {result4}")
+
+# Test case 5: Complex expression with I
+print("\nTest 5 - Complex expression with I:")
+result5 = simplify(sin(x)**I)
+print(f"sin(x)**I -> {result5}")
\ No newline at end of file