diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 000000000..db0f43dcc
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,27 @@
+#!/usr/bin/env python3
+"""
+Script to reproduce the joblib missing from show_versions issue
+"""
+from sklearn.utils._show_versions import _get_deps_info, show_versions
+
+def test_joblib_in_deps():
+    """Check if joblib is included in dependencies"""
+    deps_info = _get_deps_info()
+    print("Current dependencies:")
+    for dep, version in deps_info.items():
+        print(f"{dep}: {version}")
+    
+    print(f"\nJoblib in dependencies: {'joblib' in deps_info}")
+    return 'joblib' in deps_info
+
+if __name__ == "__main__":
+    print("=== Testing current show_versions behavior ===")
+    result = test_joblib_in_deps()
+    
+    if not result:
+        print("\n❌ Issue confirmed: joblib is missing from show_versions")
+    else:
+        print("\n✅ joblib is already included in show_versions")
+    
+    print("\n=== Full show_versions output ===")
+    show_versions()
\ No newline at end of file
diff --git a/sklearn/utils/_show_versions.py b/sklearn/utils/_show_versions.py
index e5d3141bf..ecba9ec68 100644
--- a/sklearn/utils/_show_versions.py
+++ b/sklearn/utils/_show_versions.py
@@ -48,6 +48,7 @@ def _get_deps_info():
         "Cython",
         "pandas",
         "matplotlib",
+        "joblib",
     ]
 
     def get_version(module):
diff --git a/test_edge_case.py b/test_edge_case.py
new file mode 100644
index 000000000..e2380e9dd
--- /dev/null
+++ b/test_edge_case.py
@@ -0,0 +1,29 @@
+#!/usr/bin/env python3
+"""
+Test edge case: what happens when joblib is not installed
+"""
+import sys
+from sklearn.utils._show_versions import _get_deps_info
+
+# Save original joblib module and remove it from sys.modules
+original_joblib = sys.modules.get('joblib')
+if 'joblib' in sys.modules:
+    del sys.modules['joblib']
+
+try:
+    # Test with joblib not in sys.modules (should trigger import attempt)
+    deps_info = _get_deps_info()
+    print("Dependencies when joblib is not in sys.modules:")
+    for dep, version in deps_info.items():
+        print(f"{dep}: {version}")
+    
+    # Check that joblib is in the dict 
+    if 'joblib' in deps_info:
+        print(f"\n✅ joblib is listed in dependencies: {deps_info['joblib']}")
+    else:
+        print("\n❌ joblib is missing from dependencies")
+
+finally:
+    # Restore joblib module
+    if original_joblib is not None:
+        sys.modules['joblib'] = original_joblib
\ No newline at end of file