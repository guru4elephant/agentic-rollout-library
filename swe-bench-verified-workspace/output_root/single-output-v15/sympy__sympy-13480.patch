diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..b90e0ffdf4
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,16 @@
+#!/usr/bin/env python3
+
+from sympy import *
+x = Symbol('x')
+e = coth(log(tan(x)))
+
+# Test the values mentioned in the issue
+test_values = [2, 3, 5, 6, 8, 9, 11, 12, 13, 15, 18]
+
+print("Testing coth(log(tan(x))) substitution for various values:")
+for val in test_values:
+    try:
+        result = e.subs(x, val)
+        print(f"x = {val}: {result}")
+    except Exception as exc:
+        print(f"x = {val}: ERROR - {type(exc).__name__}: {exc}")
\ No newline at end of file
diff --git a/sympy/functions/elementary/hyperbolic.py b/sympy/functions/elementary/hyperbolic.py
index 2a4555d919..5fbb73c786 100644
--- a/sympy/functions/elementary/hyperbolic.py
+++ b/sympy/functions/elementary/hyperbolic.py
@@ -587,7 +587,7 @@ def eval(cls, arg):
                 x, m = _peeloff_ipi(arg)
                 if m:
                     cothm = coth(m)
-                    if cotm is S.ComplexInfinity:
+                    if cothm is S.ComplexInfinity:
                         return coth(x)
                     else: # cothm == 0
                         return tanh(x)
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..48b22efe6d
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,24 @@
+#!/usr/bin/env python3
+
+from sympy import *
+x = Symbol('x')
+e = coth(log(tan(x)))
+
+# Test some edge cases
+test_values = [0, 1, pi/4, pi/2, pi, 2*pi, -1, -2]
+
+print("Testing coth(log(tan(x))) substitution for edge cases:")
+for val in test_values:
+    try:
+        result = e.subs(x, val)
+        print(f"x = {val}: {result}")
+    except Exception as exc:
+        print(f"x = {val}: ERROR - {type(exc).__name__}: {exc}")
+
+# Test with symbolic evaluation
+print("\nTesting symbolic evaluation:")
+try:
+    result = e.simplify()
+    print(f"Simplified: {result}")
+except Exception as exc:
+    print(f"Simplification ERROR: {type(exc).__name__}: {exc}")
\ No newline at end of file
diff --git a/test_other_hyperbolic.py b/test_other_hyperbolic.py
new file mode 100644
index 0000000000..38f3d72a15
--- /dev/null
+++ b/test_other_hyperbolic.py
@@ -0,0 +1,20 @@
+#!/usr/bin/env python3
+
+from sympy import *
+x = Symbol('x')
+
+# Test other hyperbolic functions to make sure we didn't break anything
+print("Testing other hyperbolic functions:")
+print(f"sinh(x): {sinh(x).subs(x, 1)}")
+print(f"cosh(x): {cosh(x).subs(x, 1)}")
+print(f"tanh(x): {tanh(x).subs(x, 1)}")
+print(f"coth(x): {coth(x).subs(x, 1)}")
+print(f"sech(x): {sech(x).subs(x, 1)}")
+print(f"csch(x): {csch(x).subs(x, 1)}")
+
+# Test with more complex expressions
+print("\nTesting complex hyperbolic expressions:")
+expr1 = sinh(log(x))
+expr2 = cosh(tanh(x))
+print(f"sinh(log(x)) at x=2: {expr1.subs(x, 2)}")
+print(f"cosh(tanh(x)) at x=1: {expr2.subs(x, 1)}")
\ No newline at end of file