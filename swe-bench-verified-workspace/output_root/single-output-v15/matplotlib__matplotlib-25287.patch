diff --git a/check_rcparams.py b/check_rcparams.py
new file mode 100644
index 0000000000..4f342e2ecc
--- /dev/null
+++ b/check_rcparams.py
@@ -0,0 +1,6 @@
+import matplotlib as mpl
+
+print("xtick.color:", mpl.rcParams['xtick.color'])
+print("xtick.labelcolor:", mpl.rcParams['xtick.labelcolor'])
+print("ytick.color:", mpl.rcParams['ytick.color'])
+print("ytick.labelcolor:", mpl.rcParams['ytick.labelcolor'])
\ No newline at end of file
diff --git a/final_test.py b/final_test.py
new file mode 100644
index 0000000000..b2e76a0013
--- /dev/null
+++ b/final_test.py
@@ -0,0 +1,47 @@
+import matplotlib.pyplot as plt
+import matplotlib as mpl
+
+print("Testing the fix for offset text color issue...")
+
+# Test 1: Original issue reproduction (should now work)
+plt.rcParams.update({'ytick.labelcolor': 'red'})
+fig = plt.figure()
+ax = fig.add_subplot(1,1,1)
+ax.plot([1.01e9,1.02e9,1.03e9])
+plt.savefig('final_test_red.png')
+plt.close()
+print("✓ Test 1 completed: ytick.labelcolor set to red")
+
+# Test 2: Test with x-axis as well
+plt.rcParams.update({'xtick.labelcolor': 'blue'})
+fig = plt.figure()
+ax = fig.add_subplot(1,1,1)
+ax.plot([1.01e9,1.02e9,1.03e9])
+plt.savefig('final_test_blue.png')
+plt.close()
+print("✓ Test 2 completed: xtick.labelcolor set to blue")
+
+# Test 3: Test inherit behavior
+plt.rcParams.update({
+    'xtick.labelcolor': 'inherit',
+    'ytick.labelcolor': 'inherit',
+    'xtick.color': 'orange',
+    'ytick.color': 'purple'
+})
+fig = plt.figure()
+ax = fig.add_subplot(1,1,1)
+ax.plot([1.01e9,1.02e9,1.03e9])
+plt.savefig('final_test_inherit.png')
+plt.close()
+print("✓ Test 3 completed: inherit behavior with custom tick colors")
+
+# Test 4: Reset to defaults
+plt.rcParams.update(mpl.rcParamsDefault)
+fig = plt.figure()
+ax = fig.add_subplot(1,1,1)
+ax.plot([1.01e9,1.02e9,1.03e9])
+plt.savefig('final_test_defaults.png')
+plt.close()
+print("✓ Test 4 completed: default settings")
+
+print("\nAll tests completed successfully! The fix appears to be working correctly.")
\ No newline at end of file
diff --git a/final_test_blue.png b/final_test_blue.png
new file mode 100644
index 0000000000..e86cff0279
Binary files /dev/null and b/final_test_blue.png differ
diff --git a/final_test_defaults.png b/final_test_defaults.png
new file mode 100644
index 0000000000..81e9ddc771
Binary files /dev/null and b/final_test_defaults.png differ
diff --git a/final_test_inherit.png b/final_test_inherit.png
new file mode 100644
index 0000000000..ea67cbc6e2
Binary files /dev/null and b/final_test_inherit.png differ
diff --git a/final_test_red.png b/final_test_red.png
new file mode 100644
index 0000000000..a23a6d92f0
Binary files /dev/null and b/final_test_red.png differ
diff --git a/lib/matplotlib/axis.py b/lib/matplotlib/axis.py
index c0e706e2b3..0920063693 100644
--- a/lib/matplotlib/axis.py
+++ b/lib/matplotlib/axis.py
@@ -2255,7 +2255,7 @@ class XAxis(Axis):
             transform=mtransforms.blended_transform_factory(
                 self.axes.transAxes, mtransforms.IdentityTransform()),
             fontsize=mpl.rcParams['xtick.labelsize'],
-            color=mpl.rcParams['xtick.color'],
+            color=mpl.rcParams['xtick.color'] if mpl.rcParams['xtick.labelcolor']=='inherit' else mpl.rcParams['xtick.labelcolor'],
         )
         self.offset_text_position = 'bottom'
 
@@ -2515,7 +2515,7 @@ class YAxis(Axis):
             transform=mtransforms.blended_transform_factory(
                 self.axes.transAxes, mtransforms.IdentityTransform()),
             fontsize=mpl.rcParams['ytick.labelsize'],
-            color=mpl.rcParams['ytick.color'],
+            color=mpl.rcParams['ytick.color'] if mpl.rcParams['ytick.labelcolor']=='inherit' else mpl.rcParams['ytick.labelcolor'],
         )
         self.offset_text_position = 'left'
 
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..adcb2105f0
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,8 @@
+import matplotlib.pyplot as plt
+
+plt.rcParams.update({'ytick.labelcolor': 'red'})
+fig = plt.figure()
+ax = fig.add_subplot(1,1,1)
+ax.plot([1.01e9,1.02e9,1.03e9])
+plt.savefig('test_output.png')
+plt.show()
\ No newline at end of file
diff --git a/test_both_colors.png b/test_both_colors.png
new file mode 100644
index 0000000000..e8a9b208b5
Binary files /dev/null and b/test_both_colors.png differ
diff --git a/test_color_conflict.png b/test_color_conflict.png
new file mode 100644
index 0000000000..070fd84b63
Binary files /dev/null and b/test_color_conflict.png differ
diff --git a/test_defaults.png b/test_defaults.png
new file mode 100644
index 0000000000..81e9ddc771
Binary files /dev/null and b/test_defaults.png differ
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..9b033ef72d
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,23 @@
+import matplotlib.pyplot as plt
+import matplotlib as mpl
+
+# Test edge case: What if tick.color is also changed?
+plt.rcParams.update({
+    'ytick.labelcolor': 'red',
+    'ytick.color': 'blue'  # This should not affect offset text when labelcolor is set
+})
+fig = plt.figure()
+ax = fig.add_subplot(1,1,1)
+ax.plot([1.01e9,1.02e9,1.03e9])
+plt.savefig('test_color_conflict.png')
+plt.close()
+
+# Test edge case: Reset to defaults and check
+plt.rcParams.update(mpl.rcParamsDefault)
+fig = plt.figure()
+ax = fig.add_subplot(1,1,1)
+ax.plot([1.01e9,1.02e9,1.03e9])
+plt.savefig('test_defaults.png')
+plt.close()
+
+print("Edge case tests completed")
\ No newline at end of file
diff --git a/test_fix.py b/test_fix.py
new file mode 100644
index 0000000000..7de9ca7599
--- /dev/null
+++ b/test_fix.py
@@ -0,0 +1,35 @@
+import matplotlib.pyplot as plt
+
+# Test case 1: ytick.labelcolor set to red (should affect offset text)
+plt.rcParams.update({'ytick.labelcolor': 'red'})
+fig = plt.figure()
+ax = fig.add_subplot(1,1,1)
+ax.plot([1.01e9,1.02e9,1.03e9])
+plt.savefig('test_y_red.png')
+plt.close()
+
+# Test case 2: xtick.labelcolor set to blue (should affect offset text)
+plt.rcParams.update({'xtick.labelcolor': 'blue'})
+fig = plt.figure()
+ax = fig.add_subplot(1,1,1)
+ax.plot([1.01e9,1.02e9,1.03e9])
+plt.savefig('test_x_blue.png')
+plt.close()
+
+# Test case 3: Both set to different colors
+plt.rcParams.update({'xtick.labelcolor': 'green', 'ytick.labelcolor': 'purple'})
+fig = plt.figure()
+ax = fig.add_subplot(1,1,1)
+ax.plot([1.01e9,1.02e9,1.03e9])
+plt.savefig('test_both_colors.png')
+plt.close()
+
+# Test case 4: Set to 'inherit' (should use tick.color)
+plt.rcParams.update({'xtick.labelcolor': 'inherit', 'ytick.labelcolor': 'inherit'})
+fig = plt.figure()
+ax = fig.add_subplot(1,1,1)
+ax.plot([1.01e9,1.02e9,1.03e9])
+plt.savefig('test_inherit.png')
+plt.close()
+
+print("Test images generated")
\ No newline at end of file
diff --git a/test_inherit.png b/test_inherit.png
new file mode 100644
index 0000000000..81e9ddc771
Binary files /dev/null and b/test_inherit.png differ
diff --git a/test_output.png b/test_output.png
new file mode 100644
index 0000000000..a23a6d92f0
Binary files /dev/null and b/test_output.png differ
diff --git a/test_x_blue.png b/test_x_blue.png
new file mode 100644
index 0000000000..e86cff0279
Binary files /dev/null and b/test_x_blue.png differ
diff --git a/test_y_red.png b/test_y_red.png
new file mode 100644
index 0000000000..a23a6d92f0
Binary files /dev/null and b/test_y_red.png differ