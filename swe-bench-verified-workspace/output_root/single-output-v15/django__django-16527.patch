diff --git a/django/contrib/admin/templatetags/admin_modify.py b/django/contrib/admin/templatetags/admin_modify.py
index 9df4b7aadb..5b742af46a 100644
--- a/django/contrib/admin/templatetags/admin_modify.py
+++ b/django/contrib/admin/templatetags/admin_modify.py
@@ -100,6 +100,7 @@ def submit_row(context):
                 and context.get("show_delete", True)
             ),
             "show_save_as_new": not is_popup
+            and has_add_permission
             and has_change_permission
             and change
             and save_as,
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..d44a2edd2b
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,86 @@
+#!/usr/bin/env python3
+"""
+Script to reproduce the issue with show_save_as_new not checking has_add_permission
+"""
+
+from django.contrib.admin.templatetags.admin_modify import submit_row
+from django.template.context import Context
+
+def test_show_save_as_new_permission():
+    """Test the current behavior of show_save_as_new"""
+    
+    # Test case 1: User has change permission but no add permission
+    # This should NOT show save_as_new according to the issue
+    context1 = Context({
+        "add": False,
+        "change": True,
+        "is_popup": False,
+        "save_as": True,
+        "has_add_permission": False,
+        "has_change_permission": True,
+        "has_view_permission": True,
+        "has_delete_permission": False,
+        "has_editable_inline_admin_formsets": False,
+        "show_save": True,
+        "show_save_and_add_another": True,
+        "show_save_and_continue": True,
+        "show_delete": True,
+    })
+    
+    result1 = submit_row(context1)
+    print("Test 1 - User has change permission but no add permission:")
+    print(f"show_save_as_new: {result1.get('show_save_as_new')}")
+    print(f"Expected: False (should require add permission)")
+    print(f"Actual: {result1.get('show_save_as_new')}")
+    print()
+    
+    # Test case 2: User has both add and change permission
+    # This SHOULD show save_as_new
+    context2 = Context({
+        "add": False,
+        "change": True,
+        "is_popup": False,
+        "save_as": True,
+        "has_add_permission": True,
+        "has_change_permission": True,
+        "has_view_permission": True,
+        "has_delete_permission": False,
+        "has_editable_inline_admin_formsets": False,
+        "show_save": True,
+        "show_save_and_add_another": True,
+        "show_save_and_continue": True,
+        "show_delete": True,
+    })
+    
+    result2 = submit_row(context2)
+    print("Test 2 - User has both add and change permission:")
+    print(f"show_save_as_new: {result2.get('show_save_as_new')}")
+    print(f"Expected: True (has both permissions)")
+    print(f"Actual: {result2.get('show_save_as_new')}")
+    print()
+    
+    # Test case 3: User has no permissions at all
+    context3 = Context({
+        "add": False,
+        "change": True,
+        "is_popup": False,
+        "save_as": True,
+        "has_add_permission": False,
+        "has_change_permission": False,
+        "has_view_permission": False,
+        "has_delete_permission": False,
+        "has_editable_inline_admin_formsets": False,
+        "show_save": True,
+        "show_save_and_add_another": True,
+        "show_save_and_continue": True,
+        "show_delete": True,
+    })
+    
+    result3 = submit_row(context3)
+    print("Test 3 - User has no permissions:")
+    print(f"show_save_as_new: {result3.get('show_save_as_new')}")
+    print(f"Expected: False (no permissions)")
+    print(f"Actual: {result3.get('show_save_as_new')}")
+
+if __name__ == "__main__":
+    test_show_save_as_new_permission()
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..5b9fc08d12
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,108 @@
+#!/usr/bin/env python3
+"""
+Script to test edge cases for the show_save_as_new fix
+"""
+
+from django.contrib.admin.templatetags.admin_modify import submit_row
+from django.template.context import Context
+
+def test_edge_cases():
+    """Test edge cases for the show_save_as_new fix"""
+    
+    # Edge case 1: is_popup = True (should not show save_as_new)
+    context1 = Context({
+        "add": False,
+        "change": True,
+        "is_popup": True,
+        "save_as": True,
+        "has_add_permission": True,
+        "has_change_permission": True,
+        "has_view_permission": True,
+        "has_delete_permission": False,
+        "has_editable_inline_admin_formsets": False,
+        "show_save": True,
+        "show_save_and_add_another": True,
+        "show_save_and_continue": True,
+        "show_delete": True,
+    })
+    
+    result1 = submit_row(context1)
+    print("Edge case 1 - is_popup = True:")
+    print(f"show_save_as_new: {result1.get('show_save_as_new')}")
+    print(f"Expected: False (is_popup should prevent save_as_new)")
+    print(f"Actual: {result1.get('show_save_as_new')}")
+    print()
+    
+    # Edge case 2: change = False (should not show save_as_new)
+    context2 = Context({
+        "add": False,
+        "change": False,
+        "is_popup": False,
+        "save_as": True,
+        "has_add_permission": True,
+        "has_change_permission": True,
+        "has_view_permission": True,
+        "has_delete_permission": False,
+        "has_editable_inline_admin_formsets": False,
+        "show_save": True,
+        "show_save_and_add_another": True,
+        "show_save_and_continue": True,
+        "show_delete": True,
+    })
+    
+    result2 = submit_row(context2)
+    print("Edge case 2 - change = False:")
+    print(f"show_save_as_new: {result2.get('show_save_as_new')}")
+    print(f"Expected: False (change=False should prevent save_as_new)")
+    print(f"Actual: {result2.get('show_save_as_new')}")
+    print()
+    
+    # Edge case 3: save_as = False (should not show save_as_new)
+    context3 = Context({
+        "add": False,
+        "change": True,
+        "is_popup": False,
+        "save_as": False,
+        "has_add_permission": True,
+        "has_change_permission": True,
+        "has_view_permission": True,
+        "has_delete_permission": False,
+        "has_editable_inline_admin_formsets": False,
+        "show_save": True,
+        "show_save_and_add_another": True,
+        "show_save_and_continue": True,
+        "show_delete": True,
+    })
+    
+    result3 = submit_row(context3)
+    print("Edge case 3 - save_as = False:")
+    print(f"show_save_as_new: {result3.get('show_save_as_new')}")
+    print(f"Expected: False (save_as=False should prevent save_as_new)")
+    print(f"Actual: {result3.get('show_save_as_new')}")
+    print()
+    
+    # Edge case 4: has_change_permission = False (should not show save_as_new)
+    context4 = Context({
+        "add": False,
+        "change": True,
+        "is_popup": False,
+        "save_as": True,
+        "has_add_permission": True,
+        "has_change_permission": False,
+        "has_view_permission": True,
+        "has_delete_permission": False,
+        "has_editable_inline_admin_formsets": False,
+        "show_save": True,
+        "show_save_and_add_another": True,
+        "show_save_and_continue": True,
+        "show_delete": True,
+    })
+    
+    result4 = submit_row(context4)
+    print("Edge case 4 - has_change_permission = False:")
+    print(f"show_save_as_new: {result4.get('show_save_as_new')}")
+    print(f"Expected: False (no change permission should prevent save_as_new)")
+    print(f"Actual: {result4.get('show_save_as_new')}")
+
+if __name__ == "__main__":
+    test_edge_cases()
\ No newline at end of file
diff --git a/test_final_verification.py b/test_final_verification.py
new file mode 100644
index 0000000000..3e283a591a
--- /dev/null
+++ b/test_final_verification.py
@@ -0,0 +1,134 @@
+#!/usr/bin/env python3
+"""
+Final verification test for the show_save_as_new fix
+"""
+
+from django.contrib.admin.templatetags.admin_modify import submit_row
+from django.template.context import Context
+
+def test_comprehensive_scenarios():
+    """Test comprehensive scenarios for the show_save_as_new fix"""
+    
+    test_cases = [
+        {
+            "name": "Normal case - has both permissions",
+            "context": {
+                "add": False,
+                "change": True,
+                "is_popup": False,
+                "save_as": True,
+                "has_add_permission": True,
+                "has_change_permission": True,
+            },
+            "expected": True,
+            "description": "Should show save_as_new when user has both permissions"
+        },
+        {
+            "name": "Missing add permission",
+            "context": {
+                "add": False,
+                "change": True,
+                "is_popup": False,
+                "save_as": True,
+                "has_add_permission": False,
+                "has_change_permission": True,
+            },
+            "expected": False,
+            "description": "Should NOT show save_as_new when user lacks add permission"
+        },
+        {
+            "name": "Missing change permission",
+            "context": {
+                "add": False,
+                "change": True,
+                "is_popup": False,
+                "save_as": True,
+                "has_add_permission": True,
+                "has_change_permission": False,
+            },
+            "expected": False,
+            "description": "Should NOT show save_as_new when user lacks change permission"
+        },
+        {
+            "name": "is_popup = True",
+            "context": {
+                "add": False,
+                "change": True,
+                "is_popup": True,
+                "save_as": True,
+                "has_add_permission": True,
+                "has_change_permission": True,
+            },
+            "expected": False,
+            "description": "Should NOT show save_as_new in popup mode"
+        },
+        {
+            "name": "change = False",
+            "context": {
+                "add": False,
+                "change": False,
+                "is_popup": False,
+                "save_as": True,
+                "has_add_permission": True,
+                "has_change_permission": True,
+            },
+            "expected": False,
+            "description": "Should NOT show save_as_new when not in change mode"
+        },
+        {
+            "name": "save_as = False",
+            "context": {
+                "add": False,
+                "change": True,
+                "is_popup": False,
+                "save_as": False,
+                "has_add_permission": True,
+                "has_change_permission": True,
+            },
+            "expected": False,
+            "description": "Should NOT show save_as_new when save_as is disabled"
+        },
+    ]
+    
+    print("Running comprehensive tests for show_save_as_new fix...")
+    print("=" * 60)
+    
+    all_passed = True
+    
+    for i, test_case in enumerate(test_cases, 1):
+        # Create full context with default values
+        full_context = {
+            "has_view_permission": True,
+            "has_delete_permission": False,
+            "has_editable_inline_admin_formsets": False,
+            "show_save": True,
+            "show_save_and_add_another": True,
+            "show_save_and_continue": True,
+            "show_delete": True,
+        }
+        full_context.update(test_case["context"])
+        
+        result = submit_row(Context(full_context))
+        actual = result.get("show_save_as_new")
+        
+        status = "PASS" if actual == test_case["expected"] else "FAIL"
+        if status == "FAIL":
+            all_passed = False
+            
+        print(f"Test {i}: {test_case['name']}")
+        print(f"  Expected: {test_case['expected']}")
+        print(f"  Actual:   {actual}")
+        print(f"  Status:   {status}")
+        print(f"  Description: {test_case['description']}")
+        print()
+    
+    print("=" * 60)
+    if all_passed:
+        print("✅ ALL TESTS PASSED! The fix is working correctly.")
+    else:
+        print("❌ SOME TESTS FAILED! Please review the implementation.")
+    
+    return all_passed
+
+if __name__ == "__main__":
+    test_comprehensive_scenarios()
\ No newline at end of file