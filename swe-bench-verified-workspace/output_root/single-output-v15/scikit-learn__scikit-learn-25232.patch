diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 000000000..5c7e917a1
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,29 @@
+#!/usr/bin/env python3
+"""
+Reproduce the issue: IterativeImputer has no parameter "fill_value"
+"""
+
+import numpy as np
+from sklearn.experimental import enable_iterative_imputer
+from sklearn.impute import IterativeImputer
+
+# Create test data with missing values
+X = np.array([[1, 2, np.nan], [4, np.nan, 6], [7, 8, 9]])
+
+print("Test data:")
+print(X)
+
+# Try to use IterativeImputer with initial_strategy='constant' and fill_value
+try:
+    imputer = IterativeImputer(
+        initial_strategy='constant',
+        fill_value=999  # This should work but doesn't exist
+    )
+    imputer.fit(X)
+    X_imputed = imputer.transform(X)
+    print("Success: fill_value parameter accepted")
+    print("Imputed data:")
+    print(X_imputed)
+except TypeError as e:
+    print(f"Error: {e}")
+    print("This confirms the issue - fill_value parameter doesn't exist")
\ No newline at end of file
diff --git a/sklearn/impute/_iterative.py b/sklearn/impute/_iterative.py
index 1d918bc0c..4de3c52fa 100644
--- a/sklearn/impute/_iterative.py
+++ b/sklearn/impute/_iterative.py
@@ -281,6 +281,7 @@ class IterativeImputer(_BaseImputer):
         "initial_strategy": [
             StrOptions({"mean", "median", "most_frequent", "constant"})
         ],
+        "fill_value": "no_validation",  # any object is valid
         "imputation_order": [
             StrOptions({"ascending", "descending", "roman", "arabic", "random"})
         ],