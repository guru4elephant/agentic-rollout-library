diff --git a/django/forms/formsets.py b/django/forms/formsets.py
index 235aaf844c..02d040ee03 100644
--- a/django/forms/formsets.py
+++ b/django/forms/formsets.py
@@ -490,7 +490,7 @@ class BaseFormSet(RenderableFormMixin):
                     required=False,
                     widget=self.get_ordering_widget(),
                 )
-        if self.can_delete and (self.can_delete_extra or index < initial_form_count):
+        if self.can_delete and (self.can_delete_extra or (index is not None and index < initial_form_count)):
             form.fields[DELETION_FIELD_NAME] = BooleanField(
                 label=_("Delete"),
                 required=False,
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..df3c473a5d
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,26 @@
+#!/usr/bin/env python3
+import os
+import django
+from django import forms
+
+class MyForm(forms.Form):
+    my_field = forms.CharField()
+
+if __name__ == "__main__":
+    settings_file = os.path.splitext(os.path.basename(__file__))[0]
+    django.conf.settings.configure(
+        DEBUG=True,
+        MIDDLEWARE_CLASSES=[],
+        ROOT_URLCONF=settings_file,
+    )
+    django.setup()
+
+    MyFormSet = forms.formset_factory(
+        form=MyForm,
+        can_delete=True,
+        can_delete_extra=False,
+    )
+    my_formset = MyFormSet(
+        initial=None,
+    )
+    print(my_formset.empty_form)
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..7760bf1a91
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,80 @@
+#!/usr/bin/env python3
+import os
+import django
+from django import forms
+
+class MyForm(forms.Form):
+    my_field = forms.CharField()
+
+def test_edge_cases():
+    settings_file = os.path.splitext(os.path.basename(__file__))[0]
+    django.conf.settings.configure(
+        DEBUG=True,
+        MIDDLEWARE_CLASSES=[],
+        ROOT_URLCONF=settings_file,
+    )
+    django.setup()
+
+    print("Testing edge cases for FormSet add_fields() method...")
+
+    # Test 1: can_delete=True, can_delete_extra=False, index=None
+    print("\n1. Testing can_delete=True, can_delete_extra=False, index=None")
+    MyFormSet1 = forms.formset_factory(
+        form=MyForm,
+        can_delete=True,
+        can_delete_extra=False,
+    )
+    my_formset1 = MyFormSet1(initial=None)
+    try:
+        empty_form = my_formset1.empty_form
+        print("✓ Success: empty_form created without error")
+    except Exception as e:
+        print(f"✗ Error: {e}")
+
+    # Test 2: can_delete=True, can_delete_extra=True, index=None
+    print("\n2. Testing can_delete=True, can_delete_extra=True, index=None")
+    MyFormSet2 = forms.formset_factory(
+        form=MyForm,
+        can_delete=True,
+        can_delete_extra=True,
+    )
+    my_formset2 = MyFormSet2(initial=None)
+    try:
+        empty_form = my_formset2.empty_form
+        print("✓ Success: empty_form created without error")
+    except Exception as e:
+        print(f"✗ Error: {e}")
+
+    # Test 3: can_delete=False, can_delete_extra=False, index=None
+    print("\n3. Testing can_delete=False, can_delete_extra=False, index=None")
+    MyFormSet3 = forms.formset_factory(
+        form=MyForm,
+        can_delete=False,
+        can_delete_extra=False,
+    )
+    my_formset3 = MyFormSet3(initial=None)
+    try:
+        empty_form = my_formset3.empty_form
+        print("✓ Success: empty_form created without error")
+    except Exception as e:
+        print(f"✗ Error: {e}")
+
+    # Test 4: can_delete=True, can_delete_extra=False, index=0 (valid index)
+    print("\n4. Testing can_delete=True, can_delete_extra=False, index=0")
+    MyFormSet4 = forms.formset_factory(
+        form=MyForm,
+        can_delete=True,
+        can_delete_extra=False,
+    )
+    my_formset4 = MyFormSet4(initial=None)
+    try:
+        # Create a form with index=0 to test normal operation
+        form = my_formset4.forms[0] if my_formset4.forms else my_formset4.empty_form
+        print("✓ Success: form with index=0 works")
+    except Exception as e:
+        print(f"✗ Error: {e}")
+
+    print("\nAll edge case tests completed!")
+
+if __name__ == "__main__":
+    test_edge_cases()
\ No newline at end of file
diff --git a/test_fix_validation.py b/test_fix_validation.py
new file mode 100644
index 0000000000..cbfa3b9736
--- /dev/null
+++ b/test_fix_validation.py
@@ -0,0 +1,52 @@
+#!/usr/bin/env python3
+import os
+import django
+from django import forms
+
+class MyForm(forms.Form):
+    my_field = forms.CharField()
+
+def test_fix():
+    """Test that our fix handles the specific issue described in the GitHub issue"""
+    settings_file = os.path.splitext(os.path.basename(__file__))[0]
+    django.conf.settings.configure(
+        DEBUG=True,
+        MIDDLEWARE_CLASSES=[],
+        ROOT_URLCONF=settings_file,
+    )
+    django.setup()
+
+    print("Testing the specific issue from GitHub...")
+    
+    # This is the exact scenario from the GitHub issue
+    MyFormSet = forms.formset_factory(
+        form=MyForm,
+        can_delete=True,
+        can_delete_extra=False,
+    )
+    my_formset = MyFormSet(initial=None)
+    
+    try:
+        # This should work now without throwing TypeError
+        empty_form = my_formset.empty_form
+        print("✓ SUCCESS: empty_form created without TypeError!")
+        print("✓ The fix successfully handles index=None in add_fields() method")
+        return True
+    except TypeError as e:
+        if "'<' not supported between instances of 'NoneType' and 'int'" in str(e):
+            print(f"✗ FAILED: The original issue still exists: {e}")
+            return False
+        else:
+            print(f"✗ FAILED: Unexpected TypeError: {e}")
+            return False
+    except Exception as e:
+        print(f"✗ FAILED: Unexpected error: {e}")
+        return False
+
+if __name__ == "__main__":
+    success = test_fix()
+    if success:
+        print("\n🎉 The fix is working correctly!")
+    else:
+        print("\n❌ The fix needs more work.")
+        exit(1)
\ No newline at end of file